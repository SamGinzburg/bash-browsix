; ModuleID = 'y.tab.c'
source_filename = "y.tab.c"
target datalayout = "e-p:32:32-i64:64-v128:32:128-n32-S128"
target triple = "asmjs-unknown-emscripten"

%struct.BASH_INPUT = type { i32, i8*, %union.INPUT_STREAM, i32 ()*, i32 (i32)* }
%union.INPUT_STREAM = type { %struct._IO_FILE* }
%struct._IO_FILE = type opaque
%struct.stream_saver = type { %struct.stream_saver*, %struct.BASH_INPUT, i32, %struct.BSTREAM* }
%struct.BSTREAM = type { i32, i8*, i32, i32, i32, i32 }
%struct.string_saver = type { %struct.string_saver*, i32, i8*, %struct.alias*, i32, i32, i32, i32 }
%struct.alias = type { i8*, i8*, i8 }
%struct.STRING_INT_ALIST = type { i8*, i32 }
%struct.dstack = type { i8*, i32, i32 }
%struct.redirect = type { %struct.redirect*, %union.REDIRECTEE, i32, i32, i32, %union.REDIRECTEE, i8* }
%union.REDIRECTEE = type { i32 }
%struct.word_desc = type { i8*, i32 }
%struct.user_info = type { i32, i32, i32, i32, i8*, i8*, i8* }
%struct.word_list = type { %struct.word_list*, %struct.word_desc* }
%union.YYSTYPE = type { %struct.element }
%struct.element = type { %struct.word_desc*, %struct.redirect* }
%struct.YYSTACKDATA = type { i32, i16*, i16*, i16*, %union.YYSTYPE*, %union.YYSTYPE* }
%struct.command = type { i32, i32, i32, %struct.redirect*, %union.anon }
%union.anon = type { %struct.for_com* }
%struct.for_com = type { i32, i32, %struct.word_desc*, %struct.word_list*, %struct.command* }
%struct._sh_parser_state_t = type { i32, i32*, i8*, i32, i32, i32, i8**, i32, i32, i32, i32, %struct.array*, i32 (%struct.word_list*)*, i32 (%struct.word_list*)*, i32, i32, i32, i32, [16 x %struct.redirect*] }
%struct.array = type { i32, i64, i32, %struct.array_element* }
%struct.array_element = type { i64, i8*, %struct.array_element*, %struct.array_element* }
%struct.variable = type { i8*, i8*, i8*, %struct.variable* (%struct.variable*)*, %struct.variable* (%struct.variable*, i8*, i64, i8*)*, i32, i32 }
%struct._sh_input_line_state_t = type { i8*, i32, i32, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8* }
%struct.g_list = type { %struct.g_list* }
%struct.__mbstate_t = type { i32, i32 }
%struct.pattern_list = type { %struct.pattern_list*, %struct.word_list*, %struct.command*, i32 }
%struct.simple_com = type { i32, i32, %struct.word_list*, %struct.redirect* }
%struct.cond_com = type { i32, i32, i32, %struct.word_desc*, %struct.cond_com*, %struct.cond_com* }
%struct.builtin = type { i8*, i32 (%struct.word_list*)*, i32, i8**, i8*, i8* }

@.str = private unnamed_addr constant [9 x i8] c"\5Cs-\5Cv\5C$ \00", align 1
@primary_prompt = global i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@secondary_prompt = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), align 4
@prompt_string_pointer = global i8** null, align 4
@expand_aliases = global i32 0, align 4
@promptvars = global i32 1, align 4
@extended_quote = global i32 1, align 4
@EOF_Reached = global i32 0, align 4
@bash_input = common global %struct.BASH_INPUT zeroinitializer, align 4
@.str.2 = private unnamed_addr constant [10 x i8] c"./parse.y\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@current_readline_prompt = global i8* null, align 4
@current_readline_line = global i8* null, align 4
@current_readline_line_index = global i32 0, align 4
@.str.4 = private unnamed_addr constant [15 x i8] c"readline stdin\00", align 1
@line_number = global i32 0, align 4
@line_number_base = global i32 0, align 4
@stream_list = global %struct.stream_saver* null, align 4
@bash_input_fd_changed = external global i32, align 4
@default_buffered_input = external global i32, align 4
@last_read_token = internal global i32 0, align 4
@token_before_that = internal global i32 0, align 4
@two_tokens_ago = internal global i32 0, align 4
@current_token = common global i32 0, align 4
@pushed_string_list = global %struct.string_saver* null, align 4
@shell_input_line = internal global i8* null, align 4
@shell_input_line_index = internal global i32 0, align 4
@ps2_prompt = common global i8* null, align 4
@interactive = external global i32, align 4
@remember_on_history = external global i32, align 4
@parser_state = common global i32 0, align 4
@current_command_line_count = common global i32 0, align 4
@.str.5 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"then\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"elif\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"fi\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"esac\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"until\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"[[\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"]]\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"coproc\00", align 1
@word_token_alist = global [23 x %struct.STRING_INT_ALIST] [%struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 257 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 258 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i32 259 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 260 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i32 261 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 262 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 263 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i32 264 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i32 265 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i32 266 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i32 267 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), i32 268 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i32 269 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i32 275 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i32 270 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 277 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i32 123 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 125 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0), i32 276 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i32 272 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i32 273 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 271 }, %struct.STRING_INT_ALIST zeroinitializer], align 4
@.str.27 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"<&\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c">&\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c";;\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c";&\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c";;&\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"<<-\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"<<<\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"&>\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"&>>\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"<>\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c">|\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"|&\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"EOF\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.47 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.50 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"newline\00", align 1
@other_token_alist = global [31 x %struct.STRING_INT_ALIST] [%struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i32 279 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0), i32 278 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i32 0, i32 0), i32 287 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i32 288 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i32 289 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0), i32 290 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i32 291 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i32 293 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i32 294 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0), i32 295 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i32 296 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i32 297 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i32 292 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i32 0, i32 0), i32 298 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i32 299 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i32 300 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i32 0, i32 0), i32 301 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i32 302 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i32 0, i32 0), i32 303 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i32 62 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.47, i32 0, i32 0), i32 60 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0), i32 45 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i32 123 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 125 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i32 0, i32 0), i32 59 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i32 0, i32 0), i32 40 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i32 0, i32 0), i32 41 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i32 0, i32 0), i32 124 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i32 0, i32 0), i32 38 }, %struct.STRING_INT_ALIST { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 10 }, %struct.STRING_INT_ALIST zeroinitializer], align 4
@dstack = global %struct.dstack zeroinitializer, align 4
@shell_input_line_len = internal global i32 0, align 4
@.str.55 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.56 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@token_to_read = internal global i32 0, align 4
@here_doc_first_line = external global i32, align 4
@need_here_doc = common global i32 0, align 4
@redir_stack = internal global [16 x %struct.redirect*] zeroinitializer, align 4
@open_brace_count = internal global i32 0, align 4
@global_extglob = internal global i32 0, align 4
@extended_glob = external global i32, align 4
@shell_input_line_size = internal global i32 0, align 4
@word_desc_to_read = internal global %struct.word_desc* null, align 4
@eol_ungetc_lookahead = internal global i32 0, align 4
@shell_eof_token = common global i32 0, align 4
@.str.57 = private unnamed_addr constant [21 x i8] c"command substitution\00", align 1
@history_delimiting_chars.last_was_heredoc = internal global i32 0, align 4
@.str.58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@no_semi_successors = internal constant [21 x i32] [i32 10, i32 123, i32 40, i32 41, i32 59, i32 38, i32 124, i32 262, i32 268, i32 259, i32 257, i32 294, i32 295, i32 296, i32 258, i32 267, i32 266, i32 287, i32 288, i32 275, i32 0], align 4
@current_prompt_string = common global i8* null, align 4
@ps1_prompt = common global i8* null, align 4
@posixly_correct = external global i32, align 4
@.str.61 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"%a %b %d\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"%H:%M:%S\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"%I:%M:%S\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"%I:%M %p\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"%H:%M\00", align 1
@no_line_editing = external global i32, align 4
@shell_name = external global i8*, align 4
@dist_version = external global i8*, align 4
@.str.67 = private unnamed_addr constant [6 x i8] c"%s.%d\00", align 1
@patch_level = external global i32, align 4
@.str.68 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@current_user = external global %struct.user_info, align 4
@current_host_name = external global i8*, align 4
@current_command_number = external global i32, align 4
@stdin = external constant %struct._IO_FILE*, align 4
@.str.70 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@temp_dstack = internal global %struct.dstack zeroinitializer, align 4
@last_command_exit_value = external global i32, align 4
@last_command_subst_pid = external global i32, align 4
@ignoreeof = global i32 0, align 4
@eof_encountered = global i32 0, align 4
@eof_encountered_limit = global i32 10, align 4
@history_expansion_inhibited = external global i32, align 4
@shell_input_line_terminator = internal global i32 0, align 4
@echo_input_at_read = external global i32, align 4
@parse_string_error = internal global %struct.word_list zeroinitializer, align 4
@yylval = common global %union.YYSTYPE zeroinitializer, align 4
@interactive_shell = external global i32, align 4
@last_shell_builtin = external global i32 (%struct.word_list*)*, align 4
@this_shell_builtin = external global i32 (%struct.word_list*)*, align 4
@token = internal global i8* null, align 4
@token_buffer_size = internal global i32 0, align 4
@yynerrs = common global i32 0, align 4
@yyerrflag = common global i32 0, align 4
@yychar = common global i32 0, align 4
@yystack = internal global %struct.YYSTACKDATA zeroinitializer, align 4
@yydefred = internal constant [341 x i16] [i16 0, i16 0, i16 146, i16 0, i16 0, i16 0, i16 146, i16 146, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 52, i16 0, i16 0, i16 110, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 2, i16 4, i16 0, i16 0, i16 146, i16 146, i16 0, i16 163, i16 0, i16 155, i16 0, i16 0, i16 0, i16 0, i16 63, i16 67, i16 64, i16 70, i16 71, i16 72, i16 73, i16 62, i16 61, i16 68, i16 69, i16 53, i16 56, i16 0, i16 3, i16 130, i16 0, i16 0, i16 146, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 144, i16 143, i16 145, i16 157, i16 160, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13, i16 22, i16 37, i16 31, i16 46, i16 28, i16 40, i16 34, i16 43, i16 25, i16 49, i16 50, i16 19, i16 16, i16 7, i16 8, i16 0, i16 0, i16 146, i16 146, i16 141, i16 142, i16 1, i16 146, i16 146, i16 0, i16 0, i16 51, i16 57, i16 54, i16 0, i16 158, i16 159, i16 146, i16 147, i16 140, i16 129, i16 0, i16 0, i16 146, i16 0, i16 146, i16 146, i16 146, i16 146, i16 0, i16 146, i16 146, i16 0, i16 0, i16 0, i16 0, i16 111, i16 166, i16 146, i16 15, i16 24, i16 39, i16 33, i16 48, i16 30, i16 42, i16 36, i16 45, i16 27, i16 21, i16 18, i16 11, i16 12, i16 14, i16 23, i16 38, i16 32, i16 47, i16 29, i16 41, i16 35, i16 44, i16 26, i16 20, i16 17, i16 9, i16 10, i16 109, i16 100, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 55, i16 0, i16 146, i16 146, i16 146, i16 146, i16 146, i16 146, i16 0, i16 146, i16 0, i16 146, i16 0, i16 0, i16 0, i16 0, i16 146, i16 0, i16 146, i16 0, i16 0, i16 146, i16 0, i16 97, i16 0, i16 0, i16 0, i16 0, i16 151, i16 152, i16 0, i16 0, i16 146, i16 146, i16 106, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 146, i16 0, i16 0, i16 146, i16 146, i16 0, i16 5, i16 0, i16 146, i16 0, i16 84, i16 85, i16 146, i16 146, i16 146, i16 146, i16 0, i16 0, i16 0, i16 0, i16 65, i16 66, i16 0, i16 0, i16 95, i16 0, i16 0, i16 108, i16 135, i16 136, i16 0, i16 0, i16 0, i16 121, i16 123, i16 125, i16 0, i16 0, i16 94, i16 92, i16 127, i16 0, i16 0, i16 0, i16 0, i16 74, i16 6, i16 146, i16 0, i16 75, i16 0, i16 0, i16 0, i16 0, i16 86, i16 0, i16 146, i16 87, i16 96, i16 107, i16 146, i16 146, i16 146, i16 146, i16 122, i16 124, i16 126, i16 93, i16 0, i16 0, i16 146, i16 76, i16 77, i16 0, i16 146, i16 146, i16 82, i16 83, i16 88, i16 89, i16 0, i16 0, i16 0, i16 0, i16 0, i16 146, i16 128, i16 117, i16 0, i16 146, i16 146, i16 0, i16 0, i16 146, i16 146, i16 146, i16 114, i16 119, i16 0, i16 0, i16 0, i16 80, i16 81, i16 0, i16 0, i16 113, i16 78, i16 79, i16 90, i16 91], align 2
@yysindex = internal constant [341 x i16] [i16 91, i16 25, i16 0, i16 -238, i16 -225, i16 -235, i16 0, i16 0, i16 -224, i16 1447, i16 -208, i16 136, i16 -216, i16 40, i16 0, i16 361, i16 382, i16 0, i16 -195, i16 -184, i16 -41, i16 -182, i16 -39, i16 -181, i16 -176, i16 -170, i16 -167, i16 -166, i16 0, i16 0, i16 -163, i16 -162, i16 0, i16 0, i16 0, i16 0, i16 -93, i16 0, i16 13, i16 62, i16 1298, i16 1264, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 136, i16 0, i16 0, i16 -149, i16 1007, i16 0, i16 36, i16 -7, i16 64, i16 -142, i16 -141, i16 88, i16 282, i16 1298, i16 1264, i16 -144, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -143, i16 89, i16 -145, i16 -139, i16 -37, i16 -138, i16 -35, i16 -137, i16 -135, i16 -132, i16 -131, i16 -130, i16 -128, i16 -126, i16 116, i16 -125, i16 158, i16 -124, i16 -123, i16 -122, i16 -118, i16 -117, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 39, i16 96, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1402, i16 1402, i16 0, i16 0, i16 0, i16 1264, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -8, i16 3, i16 0, i16 84, i16 0, i16 0, i16 0, i16 0, i16 101, i16 0, i16 0, i16 128, i16 9, i16 1264, i16 1264, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1083, i16 1083, i16 1007, i16 1007, i16 -249, i16 -249, i16 0, i16 -171, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -1, i16 0, i16 4, i16 0, i16 -99, i16 46, i16 1, i16 24, i16 0, i16 -108, i16 0, i16 -96, i16 -95, i16 0, i16 1264, i16 0, i16 1264, i16 9, i16 -93, i16 -93, i16 0, i16 0, i16 1402, i16 1402, i16 0, i16 0, i16 0, i16 -86, i16 1007, i16 1007, i16 1007, i16 1007, i16 1007, i16 -203, i16 0, i16 -85, i16 -3, i16 0, i16 0, i16 -92, i16 0, i16 6, i16 0, i16 54, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -89, i16 1007, i16 6, i16 56, i16 0, i16 0, i16 9, i16 1264, i16 0, i16 -76, i16 -72, i16 0, i16 0, i16 0, i16 -229, i16 -229, i16 -229, i16 0, i16 0, i16 0, i16 -188, i16 7, i16 0, i16 0, i16 0, i16 -91, i16 -9, i16 -82, i16 63, i16 0, i16 0, i16 0, i16 59, i16 0, i16 -79, i16 66, i16 -70, i16 68, i16 0, i16 -8, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 16, i16 -83, i16 0, i16 0, i16 0, i16 60, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 61, i16 -193, i16 1007, i16 1007, i16 1007, i16 0, i16 0, i16 0, i16 1007, i16 0, i16 0, i16 -68, i16 77, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1007, i16 -65, i16 83, i16 0, i16 0, i16 -59, i16 86, i16 0, i16 0, i16 0, i16 0, i16 0], align 2
@yycheck = internal constant [1749 x i16] [i16 6, i16 7, i16 10, i16 10, i16 45, i16 10, i16 45, i16 10, i16 45, i16 10, i16 45, i16 10, i16 10, i16 10, i16 10, i16 10, i16 10, i16 10, i16 69, i16 10, i16 0, i16 9, i16 40, i16 10, i16 10, i16 10, i16 32, i16 33, i16 10, i16 214, i16 38, i16 124, i16 41, i16 38, i16 10, i16 10, i16 41, i16 40, i16 287, i16 288, i16 38, i16 263, i16 280, i16 38, i16 263, i16 280, i16 205, i16 40, i16 207, i16 40, i16 68, i16 59, i16 59, i16 10, i16 59, i16 280, i16 280, i16 41, i16 287, i16 288, i16 285, i16 59, i16 278, i16 59, i16 59, i16 59, i16 259, i16 260, i16 253, i16 10, i16 10, i16 10, i16 294, i16 295, i16 296, i16 294, i16 295, i16 296, i16 286, i16 67, i16 40, i16 38, i16 183, i16 184, i16 41, i16 280, i16 245, i16 246, i16 259, i16 260, i16 261, i16 294, i16 295, i16 296, i16 10, i16 59, i16 280, i16 148, i16 280, i16 280, i16 38, i16 10, i16 59, i16 60, i16 280, i16 62, i16 294, i16 295, i16 296, i16 258, i16 280, i16 10, i16 10, i16 280, i16 280, i16 124, i16 123, i16 280, i16 280, i16 124, i16 125, i16 59, i16 123, i16 59, i16 123, i16 131, i16 268, i16 268, i16 40, i16 273, i16 41, i16 40, i16 123, i16 139, i16 140, i16 280, i16 279, i16 41, i16 144, i16 145, i16 124, i16 280, i16 280, i16 280, i16 124, i16 280, i16 10, i16 123, i16 280, i16 280, i16 280, i16 60, i16 280, i16 62, i16 280, i16 280, i16 280, i16 280, i16 280, i16 147, i16 211, i16 45, i16 280, i16 280, i16 125, i16 324, i16 325, i16 124, i16 125, i16 41, i16 269, i16 125, i16 280, i16 269, i16 269, i16 261, i16 40, i16 269, i16 263, i16 125, i16 269, i16 125, i16 123, i16 123, i16 123, i16 261, i16 258, i16 269, i16 125, i16 280, i16 269, i16 125, i16 198, i16 125, i16 200, i16 59, i16 60, i16 280, i16 62, i16 269, i16 10, i16 269, i16 125, i16 45, i16 269, i16 185, i16 186, i16 123, i16 125, i16 302, i16 269, i16 125, i16 261, i16 263, i16 123, i16 221, i16 222, i16 263, i16 9, i16 272, i16 231, i16 -1, i16 312, i16 206, i16 123, i16 123, i16 214, i16 -1, i16 234, i16 235, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 243, i16 244, i16 280, i16 220, i16 280, i16 283, i16 280, i16 283, i16 280, i16 283, i16 -1, i16 283, i16 59, i16 60, i16 10, i16 62, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 123, i16 263, i16 268, i16 -1, i16 268, i16 269, i16 253, i16 257, i16 268, i16 -1, i16 268, i16 263, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 280, i16 275, i16 287, i16 288, i16 272, i16 287, i16 288, i16 280, i16 291, i16 280, i16 280, i16 -1, i16 294, i16 295, i16 296, i16 268, i16 284, i16 -1, i16 301, i16 303, i16 302, i16 303, i16 305, i16 306, i16 258, i16 259, i16 260, i16 261, i16 303, i16 263, i16 303, i16 303, i16 303, i16 316, i16 268, i16 269, i16 123, i16 320, i16 321, i16 303, i16 303, i16 303, i16 -1, i16 326, i16 303, i16 40, i16 280, i16 281, i16 282, i16 283, i16 268, i16 268, i16 268, i16 287, i16 288, i16 289, i16 290, i16 291, i16 292, i16 293, i16 294, i16 295, i16 296, i16 297, i16 298, i16 299, i16 300, i16 301, i16 302, i16 303, i16 256, i16 257, i16 287, i16 288, i16 -1, i16 268, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 275, i16 -1, i16 270, i16 271, i16 272, i16 123, i16 -1, i16 -1, i16 276, i16 277, i16 268, i16 268, i16 280, i16 281, i16 282, i16 283, i16 284, i16 275, i16 275, i16 55, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 62, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 257, i16 303, i16 -1, i16 280, i16 -1, i16 262, i16 283, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 123, i16 270, i16 271, i16 272, i16 -1, i16 -1, i16 -1, i16 276, i16 277, i16 -1, i16 41, i16 280, i16 281, i16 282, i16 283, i16 284, i16 60, i16 -1, i16 62, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 280, i16 303, i16 -1, i16 283, i16 60, i16 -1, i16 62, i16 10, i16 -1, i16 257, i16 -1, i16 -1, i16 -1, i16 -1, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 270, i16 271, i16 272, i16 -1, i16 -1, i16 -1, i16 276, i16 277, i16 41, i16 -1, i16 280, i16 281, i16 282, i16 283, i16 284, i16 40, i16 -1, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 10, i16 303, i16 59, i16 60, i16 69, i16 62, i16 257, i16 125, i16 -1, i16 -1, i16 -1, i16 262, i16 10, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 -1, i16 -1, i16 272, i16 225, i16 226, i16 227, i16 228, i16 229, i16 -1, i16 38, i16 -1, i16 199, i16 41, i16 -1, i16 284, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 -1, i16 248, i16 -1, i16 257, i16 -1, i16 59, i16 -1, i16 -1, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 10, i16 -1, i16 -1, i16 59, i16 272, i16 128, i16 -1, i16 -1, i16 123, i16 -1, i16 -1, i16 238, i16 10, i16 -1, i16 -1, i16 -1, i16 284, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 249, i16 -1, i16 -1, i16 148, i16 149, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 -1, i16 -1, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 -1, i16 -1, i16 -1, i16 11, i16 -1, i16 59, i16 -1, i16 -1, i16 313, i16 314, i16 315, i16 -1, i16 124, i16 125, i16 10, i16 -1, i16 -1, i16 59, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 124, i16 125, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 38, i16 263, i16 211, i16 41, i16 213, i16 55, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 59, i16 297, i16 10, i16 -1, i16 300, i16 301, i16 -1, i16 124, i16 125, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 289, i16 290, i16 291, i16 292, i16 293, i16 124, i16 125, i16 -1, i16 297, i16 -1, i16 254, i16 300, i16 301, i16 -1, i16 -1, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 -1, i16 257, i16 -1, i16 -1, i16 -1, i16 -1, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 270, i16 271, i16 272, i16 59, i16 123, i16 124, i16 276, i16 277, i16 -1, i16 -1, i16 280, i16 281, i16 282, i16 283, i16 284, i16 -1, i16 -1, i16 124, i16 125, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 10, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 -1, i16 303, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 38, i16 -1, i16 -1, i16 41, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 287, i16 288, i16 185, i16 186, i16 124, i16 125, i16 -1, i16 294, i16 295, i16 296, i16 59, i16 -1, i16 287, i16 288, i16 -1, i16 302, i16 303, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 302, i16 303, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 219, i16 220, i16 41, i16 268, i16 269, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 287, i16 288, i16 -1, i16 -1, i16 -1, i16 10, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 287, i16 288, i16 -1, i16 302, i16 303, i16 124, i16 125, i16 294, i16 295, i16 296, i16 10, i16 -1, i16 -1, i16 -1, i16 -1, i16 302, i16 303, i16 258, i16 259, i16 260, i16 261, i16 38, i16 263, i16 -1, i16 41, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 59, i16 -1, i16 -1, i16 -1, i16 287, i16 288, i16 -1, i16 -1, i16 -1, i16 -1, i16 125, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 -1, i16 59, i16 -1, i16 302, i16 303, i16 -1, i16 -1, i16 10, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 10, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 287, i16 288, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 124, i16 125, i16 -1, i16 -1, i16 -1, i16 302, i16 303, i16 59, i16 38, i16 -1, i16 -1, i16 41, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 124, i16 125, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 10, i16 -1, i16 41, i16 59, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 38, i16 -1, i16 -1, i16 41, i16 -1, i16 -1, i16 -1, i16 287, i16 288, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 10, i16 -1, i16 125, i16 -1, i16 59, i16 302, i16 303, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 125, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 40, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 125, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 -1, i16 -1, i16 60, i16 -1, i16 62, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 125, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 10, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 287, i16 288, i16 -1, i16 -1, i16 -1, i16 -1, i16 41, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 -1, i16 -1, i16 40, i16 302, i16 303, i16 287, i16 288, i16 -1, i16 -1, i16 123, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 10, i16 -1, i16 -1, i16 -1, i16 302, i16 303, i16 60, i16 -1, i16 62, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 38, i16 -1, i16 10, i16 41, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 287, i16 288, i16 -1, i16 268, i16 269, i16 59, i16 10, i16 294, i16 295, i16 296, i16 258, i16 259, i16 260, i16 261, i16 38, i16 263, i16 303, i16 41, i16 125, i16 -1, i16 268, i16 269, i16 287, i16 288, i16 -1, i16 123, i16 -1, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 38, i16 59, i16 -1, i16 41, i16 303, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 294, i16 295, i16 296, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 59, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 287, i16 288, i16 -1, i16 125, i16 -1, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 257, i16 303, i16 -1, i16 -1, i16 -1, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 270, i16 271, i16 272, i16 -1, i16 -1, i16 125, i16 276, i16 277, i16 -1, i16 -1, i16 280, i16 281, i16 282, i16 283, i16 284, i16 -1, i16 -1, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 125, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 60, i16 -1, i16 62, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 257, i16 -1, i16 268, i16 269, i16 -1, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 270, i16 271, i16 272, i16 -1, i16 -1, i16 60, i16 -1, i16 62, i16 -1, i16 -1, i16 280, i16 281, i16 282, i16 283, i16 284, i16 294, i16 295, i16 296, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 -1, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 60, i16 61, i16 -1, i16 63, i16 -1, i16 -1, i16 66, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 294, i16 295, i16 296, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 258, i16 259, i16 260, i16 261, i16 -1, i16 263, i16 -1, i16 40, i16 -1, i16 -1, i16 268, i16 269, i16 -1, i16 -1, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 116, i16 117, i16 -1, i16 -1, i16 -1, i16 121, i16 122, i16 -1, i16 60, i16 -1, i16 62, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 294, i16 295, i16 296, i16 -1, i16 137, i16 -1, i16 -1, i16 -1, i16 141, i16 142, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 40, i16 -1, i16 -1, i16 152, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 60, i16 -1, i16 62, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 123, i16 -1, i16 -1, i16 -1, i16 191, i16 192, i16 193, i16 194, i16 195, i16 196, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 205, i16 -1, i16 207, i16 282, i16 283, i16 210, i16 -1, i16 -1, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 -1, i16 -1, i16 -1, i16 231, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 239, i16 280, i16 281, i16 282, i16 283, i16 -1, i16 245, i16 246, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 278, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 287, i16 -1, i16 -1, i16 -1, i16 -1, i16 292, i16 293, i16 294, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 301, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 316, i16 -1, i16 -1, i16 -1, i16 -1, i16 257, i16 -1, i16 -1, i16 324, i16 325, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 270, i16 271, i16 272, i16 -1, i16 -1, i16 -1, i16 276, i16 277, i16 -1, i16 -1, i16 280, i16 281, i16 282, i16 283, i16 284, i16 -1, i16 -1, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301, i16 257, i16 -1, i16 -1, i16 -1, i16 -1, i16 262, i16 -1, i16 264, i16 265, i16 266, i16 267, i16 -1, i16 -1, i16 -1, i16 -1, i16 272, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 280, i16 281, i16 282, i16 283, i16 284, i16 -1, i16 -1, i16 -1, i16 -1, i16 289, i16 290, i16 291, i16 292, i16 293, i16 -1, i16 -1, i16 -1, i16 297, i16 298, i16 299, i16 300, i16 301], align 2
@yytable = internal constant [1749 x i16] [i16 64, i16 65, i16 195, i16 72, i16 102, i16 58, i16 106, i16 132, i16 157, i16 132, i16 161, i16 132, i16 153, i16 132, i16 72, i16 154, i16 72, i16 132, i16 149, i16 132, i16 39, i16 69, i16 126, i16 118, i16 148, i16 149, i16 114, i16 115, i16 150, i16 255, i16 193, i16 117, i16 301, i16 58, i16 132, i16 56, i16 58, i16 272, i16 121, i16 122, i16 153, i16 118, i16 60, i16 154, i16 120, i16 63, i16 247, i16 272, i16 250, i16 33, i16 126, i16 194, i16 71, i16 51, i16 58, i16 61, i16 66, i16 316, i16 191, i16 192, i16 62, i16 153, i16 76, i16 71, i16 154, i16 71, i16 326, i16 222, i16 289, i16 132, i16 132, i16 132, i16 118, i16 118, i16 118, i16 120, i16 120, i16 120, i16 70, i16 148, i16 77, i16 51, i16 215, i16 216, i16 51, i16 98, i16 283, i16 284, i16 221, i16 222, i16 223, i16 264, i16 265, i16 266, i16 132, i16 137, i16 99, i16 213, i16 103, i16 107, i16 123, i16 28, i16 51, i16 51, i16 108, i16 51, i16 295, i16 296, i16 297, i16 131, i16 109, i16 132, i16 146, i16 110, i16 111, i16 300, i16 140, i16 112, i16 113, i16 58, i16 58, i16 124, i16 235, i16 142, i16 244, i16 190, i16 144, i16 145, i16 146, i16 150, i16 152, i16 33, i16 32, i16 201, i16 202, i16 153, i16 151, i16 182, i16 208, i16 209, i16 300, i16 154, i16 158, i16 162, i16 188, i16 163, i16 72, i16 246, i16 164, i16 165, i16 166, i16 31, i16 167, i16 30, i16 168, i16 172, i16 176, i16 177, i16 178, i16 211, i16 254, i16 171, i16 179, i16 180, i16 181, i16 334, i16 335, i16 51, i16 51, i16 210, i16 241, i16 242, i16 237, i16 251, i16 252, i16 258, i16 33, i16 276, i16 269, i16 280, i16 285, i16 288, i16 306, i16 321, i16 325, i16 290, i16 291, i16 302, i16 303, i16 271, i16 307, i16 308, i16 236, i16 310, i16 240, i16 71, i16 31, i16 317, i16 30, i16 309, i16 164, i16 332, i16 333, i16 175, i16 337, i16 217, i16 218, i16 200, i16 338, i16 116, i16 339, i16 340, i16 112, i16 115, i16 32, i16 256, i16 257, i16 116, i16 68, i16 299, i16 267, i16 0, i16 327, i16 249, i16 207, i16 146, i16 211, i16 0, i16 274, i16 275, i16 164, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 281, i16 282, i16 100, i16 188, i16 104, i16 101, i16 155, i16 105, i16 159, i16 156, i16 0, i16 160, i16 164, i16 164, i16 146, i16 164, i16 58, i16 58, i16 58, i16 58, i16 0, i16 58, i16 32, i16 270, i16 139, i16 0, i16 58, i16 58, i16 211, i16 2, i16 234, i16 0, i16 243, i16 298, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 271, i16 196, i16 191, i16 192, i16 10, i16 58, i16 58, i16 237, i16 312, i16 277, i16 271, i16 0, i16 58, i16 58, i16 58, i16 245, i16 17, i16 0, i16 318, i16 73, i16 58, i16 58, i16 322, i16 323, i16 51, i16 51, i16 51, i16 51, i16 153, i16 51, i16 73, i16 154, i16 73, i16 328, i16 51, i16 51, i16 164, i16 330, i16 331, i16 119, i16 148, i16 149, i16 0, i16 336, i16 150, i16 33, i16 51, i16 51, i16 51, i16 51, i16 305, i16 320, i16 324, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 51, i16 1, i16 2, i16 121, i16 122, i16 0, i16 198, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 199, i16 0, i16 8, i16 9, i16 10, i16 146, i16 0, i16 0, i16 11, i16 12, i16 205, i16 146, i16 13, i16 14, i16 15, i16 16, i16 17, i16 206, i16 146, i16 130, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 141, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 2, i16 29, i16 0, i16 169, i16 0, i16 3, i16 170, i16 4, i16 5, i16 6, i16 7, i16 0, i16 32, i16 8, i16 9, i16 10, i16 0, i16 0, i16 0, i16 11, i16 12, i16 0, i16 131, i16 13, i16 14, i16 15, i16 16, i16 17, i16 87, i16 0, i16 86, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 173, i16 73, i16 0, i16 174, i16 97, i16 0, i16 96, i16 165, i16 0, i16 164, i16 0, i16 0, i16 0, i16 0, i16 164, i16 0, i16 164, i16 164, i16 164, i16 164, i16 0, i16 0, i16 164, i16 164, i16 164, i16 0, i16 0, i16 0, i16 164, i16 164, i16 127, i16 0, i16 164, i16 164, i16 164, i16 164, i16 164, i16 165, i16 0, i16 0, i16 0, i16 164, i16 164, i16 164, i16 164, i16 164, i16 0, i16 0, i16 0, i16 164, i16 164, i16 164, i16 164, i16 164, i16 59, i16 164, i16 165, i16 165, i16 127, i16 165, i16 146, i16 131, i16 0, i16 0, i16 0, i16 146, i16 105, i16 146, i16 146, i16 146, i16 146, i16 0, i16 0, i16 0, i16 0, i16 146, i16 259, i16 260, i16 261, i16 262, i16 263, i16 0, i16 59, i16 0, i16 239, i16 59, i16 0, i16 146, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 105, i16 0, i16 0, i16 105, i16 0, i16 286, i16 0, i16 2, i16 0, i16 59, i16 0, i16 0, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 101, i16 0, i16 0, i16 105, i16 10, i16 189, i16 0, i16 0, i16 165, i16 0, i16 0, i16 278, i16 60, i16 0, i16 0, i16 0, i16 17, i16 0, i16 0, i16 0, i16 0, i16 0, i16 287, i16 0, i16 0, i16 127, i16 189, i16 0, i16 101, i16 0, i16 0, i16 101, i16 0, i16 0, i16 0, i16 0, i16 37, i16 0, i16 0, i16 0, i16 60, i16 0, i16 0, i16 60, i16 0, i16 0, i16 0, i16 74, i16 0, i16 101, i16 0, i16 0, i16 261, i16 262, i16 263, i16 0, i16 59, i16 59, i16 103, i16 0, i16 0, i16 60, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 105, i16 105, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 131, i16 131, i16 131, i16 131, i16 103, i16 131, i16 127, i16 103, i16 189, i16 129, i16 131, i16 131, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 78, i16 79, i16 80, i16 81, i16 82, i16 0, i16 0, i16 103, i16 83, i16 102, i16 0, i16 84, i16 85, i16 0, i16 101, i16 101, i16 0, i16 0, i16 131, i16 131, i16 131, i16 88, i16 89, i16 90, i16 91, i16 92, i16 60, i16 60, i16 0, i16 93, i16 0, i16 189, i16 94, i16 95, i16 0, i16 0, i16 0, i16 102, i16 0, i16 0, i16 102, i16 0, i16 165, i16 0, i16 0, i16 0, i16 0, i16 165, i16 0, i16 165, i16 165, i16 165, i16 165, i16 0, i16 0, i16 165, i16 165, i16 165, i16 102, i16 37, i16 37, i16 165, i16 165, i16 0, i16 0, i16 165, i16 165, i16 165, i16 165, i16 165, i16 0, i16 0, i16 103, i16 103, i16 165, i16 165, i16 165, i16 165, i16 165, i16 0, i16 98, i16 0, i16 165, i16 165, i16 165, i16 165, i16 165, i16 0, i16 165, i16 0, i16 59, i16 59, i16 59, i16 59, i16 0, i16 59, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 105, i16 105, i16 105, i16 105, i16 0, i16 105, i16 98, i16 0, i16 0, i16 98, i16 105, i16 105, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 59, i16 37, i16 37, i16 102, i16 102, i16 0, i16 59, i16 59, i16 59, i16 98, i16 0, i16 105, i16 105, i16 0, i16 59, i16 59, i16 0, i16 0, i16 105, i16 105, i16 105, i16 0, i16 0, i16 0, i16 0, i16 0, i16 105, i16 105, i16 101, i16 101, i16 101, i16 101, i16 0, i16 101, i16 0, i16 37, i16 37, i16 133, i16 101, i16 101, i16 60, i16 60, i16 60, i16 60, i16 0, i16 60, i16 0, i16 0, i16 0, i16 0, i16 60, i16 60, i16 0, i16 0, i16 0, i16 0, i16 0, i16 101, i16 101, i16 0, i16 0, i16 0, i16 104, i16 0, i16 101, i16 101, i16 101, i16 0, i16 0, i16 60, i16 60, i16 0, i16 101, i16 101, i16 98, i16 98, i16 60, i16 60, i16 60, i16 99, i16 0, i16 0, i16 0, i16 0, i16 60, i16 60, i16 103, i16 103, i16 103, i16 103, i16 104, i16 103, i16 0, i16 104, i16 0, i16 0, i16 103, i16 103, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 99, i16 0, i16 0, i16 99, i16 104, i16 0, i16 0, i16 0, i16 103, i16 103, i16 0, i16 0, i16 0, i16 0, i16 133, i16 103, i16 103, i16 103, i16 0, i16 0, i16 0, i16 99, i16 0, i16 103, i16 103, i16 0, i16 0, i16 156, i16 0, i16 0, i16 102, i16 102, i16 102, i16 102, i16 0, i16 102, i16 0, i16 0, i16 0, i16 0, i16 102, i16 102, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 162, i16 0, i16 0, i16 0, i16 0, i16 0, i16 156, i16 0, i16 0, i16 156, i16 102, i16 102, i16 0, i16 0, i16 0, i16 0, i16 0, i16 102, i16 102, i16 102, i16 104, i16 104, i16 0, i16 0, i16 0, i16 102, i16 102, i16 156, i16 162, i16 0, i16 0, i16 162, i16 0, i16 0, i16 0, i16 0, i16 0, i16 99, i16 99, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 161, i16 0, i16 134, i16 162, i16 0, i16 0, i16 98, i16 98, i16 98, i16 98, i16 0, i16 98, i16 0, i16 0, i16 0, i16 0, i16 98, i16 98, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 161, i16 0, i16 0, i16 161, i16 0, i16 0, i16 0, i16 98, i16 98, i16 0, i16 0, i16 0, i16 0, i16 0, i16 98, i16 98, i16 98, i16 132, i16 0, i16 156, i16 0, i16 161, i16 98, i16 98, i16 133, i16 133, i16 133, i16 133, i16 0, i16 133, i16 0, i16 0, i16 0, i16 0, i16 133, i16 133, i16 0, i16 0, i16 0, i16 0, i16 0, i16 162, i16 0, i16 0, i16 0, i16 0, i16 0, i16 33, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 134, i16 0, i16 133, i16 133, i16 133, i16 0, i16 0, i16 0, i16 0, i16 31, i16 0, i16 30, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 104, i16 104, i16 104, i16 104, i16 0, i16 104, i16 0, i16 161, i16 0, i16 0, i16 104, i16 104, i16 0, i16 132, i16 0, i16 0, i16 0, i16 99, i16 99, i16 99, i16 99, i16 0, i16 99, i16 0, i16 0, i16 0, i16 0, i16 99, i16 99, i16 104, i16 104, i16 0, i16 0, i16 0, i16 0, i16 132, i16 104, i16 104, i16 104, i16 0, i16 0, i16 0, i16 0, i16 33, i16 104, i16 104, i16 99, i16 99, i16 0, i16 0, i16 32, i16 0, i16 0, i16 99, i16 99, i16 99, i16 0, i16 137, i16 0, i16 0, i16 0, i16 99, i16 99, i16 31, i16 0, i16 30, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 156, i16 156, i16 156, i16 156, i16 0, i16 156, i16 0, i16 0, i16 0, i16 0, i16 156, i16 156, i16 0, i16 137, i16 0, i16 138, i16 137, i16 0, i16 0, i16 0, i16 0, i16 0, i16 162, i16 162, i16 162, i16 162, i16 0, i16 162, i16 0, i16 156, i16 156, i16 0, i16 162, i16 162, i16 137, i16 139, i16 156, i16 156, i16 156, i16 134, i16 134, i16 134, i16 134, i16 138, i16 134, i16 156, i16 138, i16 132, i16 0, i16 134, i16 134, i16 162, i16 162, i16 0, i16 32, i16 0, i16 0, i16 0, i16 162, i16 162, i16 162, i16 0, i16 0, i16 139, i16 138, i16 0, i16 139, i16 162, i16 161, i16 161, i16 161, i16 161, i16 0, i16 161, i16 0, i16 134, i16 134, i16 134, i16 161, i16 161, i16 0, i16 0, i16 0, i16 0, i16 139, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 161, i16 161, i16 0, i16 137, i16 0, i16 0, i16 0, i16 161, i16 161, i16 161, i16 0, i16 0, i16 0, i16 0, i16 0, i16 2, i16 161, i16 0, i16 0, i16 0, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 0, i16 0, i16 8, i16 9, i16 10, i16 0, i16 0, i16 138, i16 11, i16 12, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 0, i16 0, i16 0, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 139, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 31, i16 0, i16 30, i16 0, i16 0, i16 0, i16 0, i16 0, i16 132, i16 132, i16 132, i16 132, i16 0, i16 132, i16 0, i16 0, i16 2, i16 0, i16 132, i16 132, i16 0, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 0, i16 0, i16 8, i16 9, i16 10, i16 0, i16 0, i16 31, i16 0, i16 30, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 132, i16 132, i16 132, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 137, i16 137, i16 137, i16 137, i16 0, i16 137, i16 0, i16 0, i16 0, i16 0, i16 137, i16 137, i16 0, i16 136, i16 138, i16 0, i16 143, i16 0, i16 0, i16 147, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 138, i16 138, i16 138, i16 138, i16 0, i16 138, i16 137, i16 137, i16 137, i16 0, i16 138, i16 138, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 139, i16 139, i16 139, i16 139, i16 0, i16 139, i16 0, i16 33, i16 0, i16 0, i16 139, i16 139, i16 0, i16 0, i16 0, i16 0, i16 138, i16 138, i16 138, i16 183, i16 184, i16 0, i16 0, i16 0, i16 185, i16 186, i16 0, i16 31, i16 0, i16 30, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 139, i16 139, i16 139, i16 0, i16 197, i16 0, i16 0, i16 0, i16 203, i16 204, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 33, i16 0, i16 0, i16 214, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 31, i16 0, i16 30, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 0, i16 0, i16 0, i16 225, i16 226, i16 227, i16 228, i16 229, i16 233, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 248, i16 0, i16 248, i16 15, i16 16, i16 253, i16 0, i16 0, i16 0, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 268, i16 32, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 279, i16 125, i16 14, i16 15, i16 16, i16 0, i16 248, i16 248, i16 0, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 304, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 311, i16 0, i16 0, i16 0, i16 0, i16 313, i16 314, i16 315, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 319, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 329, i16 0, i16 0, i16 0, i16 0, i16 2, i16 0, i16 0, i16 248, i16 248, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 0, i16 0, i16 8, i16 9, i16 10, i16 0, i16 0, i16 0, i16 11, i16 12, i16 0, i16 0, i16 13, i16 14, i16 15, i16 16, i16 17, i16 0, i16 0, i16 0, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27, i16 2, i16 0, i16 0, i16 0, i16 0, i16 3, i16 0, i16 4, i16 5, i16 6, i16 7, i16 0, i16 0, i16 0, i16 0, i16 10, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 67, i16 14, i16 15, i16 16, i16 17, i16 0, i16 0, i16 0, i16 0, i16 18, i16 19, i16 20, i16 21, i16 22, i16 0, i16 0, i16 0, i16 23, i16 24, i16 25, i16 26, i16 27], align 2
@yyrindex = internal constant [341 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 190, i16 43, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 894, i16 0, i16 0, i16 14, i16 -5, i16 482, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 102, i16 0, i16 102, i16 0, i16 0, i16 241, i16 43, i16 494, i16 540, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 435, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 15, i16 18, i16 0, i16 0, i16 0, i16 552, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 374, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 598, i16 649, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 2, i16 5, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 720, i16 0, i16 822, i16 0, i16 916, i16 962, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 766, i16 933, i16 1074, i16 -50, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 839, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1127, i16 1157, i16 1177, i16 0, i16 0, i16 0, i16 -46, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -49, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -222, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -219, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0], align 2
@.str.71 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@yylen = internal constant [167 x i16] [i16 2, i16 2, i16 1, i16 2, i16 1, i16 1, i16 2, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 3, i16 3, i16 2, i16 2, i16 1, i16 1, i16 1, i16 1, i16 2, i16 1, i16 2, i16 1, i16 1, i16 2, i16 1, i16 1, i16 1, i16 1, i16 5, i16 5, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 6, i16 6, i16 7, i16 7, i16 10, i16 10, i16 9, i16 9, i16 7, i16 7, i16 5, i16 5, i16 6, i16 6, i16 7, i16 7, i16 10, i16 10, i16 6, i16 7, i16 6, i16 5, i16 6, i16 4, i16 1, i16 2, i16 3, i16 2, i16 3, i16 3, i16 4, i16 2, i16 5, i16 7, i16 6, i16 3, i16 1, i16 3, i16 4, i16 6, i16 5, i16 1, i16 2, i16 4, i16 4, i16 5, i16 5, i16 2, i16 3, i16 2, i16 3, i16 2, i16 3, i16 1, i16 3, i16 2, i16 1, i16 2, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 2, i16 1, i16 2, i16 2, i16 4, i16 4, i16 3, i16 3, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 4, i16 4, i16 1, i16 1, i16 2, i16 3], align 2
@yyval = common global %union.YYSTYPE zeroinitializer, align 4
@global_command = external global %struct.command*, align 4
@parse_and_execute_level = external global i32, align 4
@source = internal global %union.REDIRECTEE zeroinitializer, align 4
@redir = internal global %union.REDIRECTEE zeroinitializer, align 4
@.str.72 = private unnamed_addr constant [5 x i8] c"\22$@\22\00", align 1
@word_lineno = internal global [129 x i32] zeroinitializer, align 4
@word_top = internal global i32 -1, align 4
@arith_for_lineno = internal global i32 0, align 4
@function_dstart = internal global i32 0, align 4
@function_bstart = internal global i32 0, align 4
@.str.73 = private unnamed_addr constant [7 x i8] c"COPROC\00", align 1
@yylhs = internal constant [167 x i16] [i16 -1, i16 0, i16 0, i16 0, i16 0, i16 28, i16 28, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 25, i16 27, i16 27, i16 27, i16 26, i16 26, i16 10, i16 10, i16 1, i16 1, i16 1, i16 1, i16 1, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 11, i16 12, i16 12, i16 12, i16 12, i16 12, i16 12, i16 12, i16 12, i16 18, i16 18, i16 18, i16 18, i16 13, i16 13, i16 13, i16 13, i16 13, i16 13, i16 14, i16 14, i16 14, i16 20, i16 20, i16 20, i16 21, i16 21, i16 24, i16 19, i16 19, i16 19, i16 19, i16 19, i16 22, i16 22, i16 22, i16 15, i16 16, i16 17, i16 23, i16 23, i16 23, i16 32, i16 32, i16 30, i16 30, i16 30, i16 30, i16 31, i16 31, i16 31, i16 31, i16 31, i16 31, i16 29, i16 29, i16 4, i16 7, i16 7, i16 5, i16 5, i16 5, i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 35, i16 35, i16 34, i16 34, i16 34, i16 36, i16 36, i16 8, i16 8, i16 8, i16 9, i16 9, i16 9, i16 9, i16 9, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 2, i16 33, i16 33, i16 33], align 2
@yygindex = internal constant [37 x i16] [i16 0, i16 0, i16 -101, i16 586, i16 -159, i16 0, i16 289, i16 -6, i16 0, i16 20, i16 209, i16 12, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -185, i16 0, i16 -90, i16 0, i16 427, i16 -51, i16 -18, i16 17, i16 -53, i16 -11, i16 0, i16 0, i16 0, i16 323, i16 0, i16 1338], align 2
@yydgoto = internal constant [37 x i16] [i16 34, i16 35, i16 36, i16 133, i16 57, i16 134, i16 135, i16 58, i16 38, i16 187, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 212, i16 51, i16 224, i16 52, i16 53, i16 128, i16 54, i16 238, i16 273, i16 230, i16 231, i16 232, i16 55, i16 75, i16 120, i16 59], align 2
@.str.74 = private unnamed_addr constant [20 x i8] c"yacc stack overflow\00", align 1
@ps0_prompt = common global i8* null, align 4
@saved_command_line_count = common global i32 0, align 4
@yydebug = common global i32 0, align 4
@bash_readline_initialized = external global i32, align 4
@terminating_signal = external global i32, align 4
@read_a_line.line_buffer = internal global i8* null, align 4
@read_a_line.buffer_size = internal global i32 0, align 4
@interrupt_state = external global i32, align 4
@stderr = external constant %struct._IO_FILE*, align 4
@.str.75 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@current_decoded_prompt = internal global i8* null, align 4
@.str.76 = private unnamed_addr constant [4 x i8] c"PS1\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"PS2\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"PS0\00", align 1
@.str.79 = private unnamed_addr constant [40 x i8] c"syntax error near unexpected token `%s'\00", align 1
@.str.80 = private unnamed_addr constant [23 x i8] c"syntax error near `%s'\00", align 1
@.str.81 = private unnamed_addr constant [37 x i8] c"syntax error: unexpected end of file\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c" ; \00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c" \0A\09;|&\00", align 1
@cond_lineno = internal global i32 0, align 4
@cond_token = internal global i32 0, align 4
@sh_syntaxtab = external global [0 x i32], align 4
@interactive_comments = external global i32, align 4
@shell_input_line_property = internal global i8* null, align 4
@.str.85 = private unnamed_addr constant [36 x i8] c"unexpected token `%s', expected `)'\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"expected `)'\00", align 1
@.str.87 = private unnamed_addr constant [55 x i8] c"unexpected argument `%s' to conditional unary operator\00", align 1
@.str.88 = private unnamed_addr constant [50 x i8] c"unexpected argument to conditional unary operator\00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"=~\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"-n\00", align 1
@.str.91 = private unnamed_addr constant [60 x i8] c"unexpected token `%s', conditional binary operator expected\00", align 1
@.str.92 = private unnamed_addr constant [37 x i8] c"conditional binary operator expected\00", align 1
@.str.93 = private unnamed_addr constant [56 x i8] c"unexpected argument `%s' to conditional binary operator\00", align 1
@.str.94 = private unnamed_addr constant [51 x i8] c"unexpected argument to conditional binary operator\00", align 1
@.str.95 = private unnamed_addr constant [45 x i8] c"unexpected token `%c' in conditional command\00", align 1
@.str.96 = private unnamed_addr constant [45 x i8] c"unexpected token `%s' in conditional command\00", align 1
@.str.97 = private unnamed_addr constant [43 x i8] c"unexpected token %d in conditional command\00", align 1
@.str.98 = private unnamed_addr constant [38 x i8] c"unexpected EOF while looking for `]]'\00", align 1
@.str.99 = private unnamed_addr constant [62 x i8] c"syntax error in conditional expression: unexpected token `%s'\00", align 1
@.str.100 = private unnamed_addr constant [39 x i8] c"syntax error in conditional expression\00", align 1
@sigwinch_received = external global i32, align 4
@.str.101 = private unnamed_addr constant [79 x i8] c"shell_getc: shell_input_line_size (%zu) exceeds SIZE_MAX (%lu): line truncated\00", align 1
@.str.102 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@matched_pair_error = internal global i8 0, align 1
@.str.103 = private unnamed_addr constant [47 x i8] c"unexpected EOF while looking for matching `%c'\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"#%^,~:-=?+/\00", align 1
@shell_compatibility_level = external global i32, align 4
@.str.105 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.107 = private unnamed_addr constant [46 x i8] c"unexpected EOF while looking for matching `)'\00", align 1
@esacs_needed_count = internal global i32 0, align 4
@.str.108 = private unnamed_addr constant [30 x i8] c"Use \22%s\22 to leave the shell.\0A\00", align 1
@login_shell = external global i32, align 4
@.str.109 = private unnamed_addr constant [7 x i8] c"logout\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.111 = private unnamed_addr constant [37 x i8] c"maximum here-document count exceeded\00", align 1

; Function Attrs: noinline nounwind
define i32 @return_EOF() #0 {
entry:
  ret i32 -1
}

; Function Attrs: noinline nounwind
define void @initialize_bash_input() #0 {
entry:
  store i32 0, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %1 = load i8*, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  call void @sh_xfree(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1347)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  store i8* null, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2, i32 0), align 4
  store i8* null, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  store i32 ()* null, i32 ()** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 3), align 4
  store i32 (i32)* null, i32 (i32)** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 4), align 4
  ret void
}

declare void @sh_xfree(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define void @init_yy_io(i32 ()* %get, i32 (i32)* %unget, i32 %type, i8* %name, %union.INPUT_STREAM* byval align 4 %location) #0 {
entry:
  %get.addr = alloca i32 ()*, align 4
  %unget.addr = alloca i32 (i32)*, align 4
  %type.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  store i32 ()* %get, i32 ()** %get.addr, align 4
  store i32 (i32)* %unget, i32 (i32)** %unget.addr, align 4
  store i32 %type, i32* %type.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load i32, i32* %type.addr, align 4
  store i32 %0, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %2 = load i8*, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  call void @sh_xfree(i8* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1366)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %3 = load i8*, i8** %name.addr, align 4
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %4 = load i8*, i8** %name.addr, align 4
  %call = call i32 @strlen(i8* %4)
  %add = add i32 1, %call
  %call2 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1367)
  %5 = load i8*, i8** %name.addr, align 4
  %call3 = call i8* @strcpy(i8* %call2, i8* %5)
  br label %cond.end

cond.false:                                       ; preds = %do.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call3, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  %6 = bitcast %union.INPUT_STREAM* %location to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8*), i8* %6, i32 4, i32 4, i1 false)
  %7 = load i32 ()*, i32 ()** %get.addr, align 4
  store i32 ()* %7, i32 ()** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 3), align 4
  %8 = load i32 (i32)*, i32 (i32)** %unget.addr, align 4
  store i32 (i32)* %8, i32 (i32)** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 4), align 4
  ret void
}

declare i8* @strcpy(i8*, i8*) #1

declare i8* @sh_xmalloc(i32, i8*, i32) #1

declare i32 @strlen(i8*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i32, i1) #2

; Function Attrs: noinline nounwind
define i8* @yy_input_name() #0 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), %cond.false ]
  ret i8* %cond
}

; Function Attrs: noinline nounwind
define void @with_input_from_stdin() #0 {
entry:
  %location = alloca %union.INPUT_STREAM, align 4
  %0 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp = icmp ne i32 %0, 1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = call i32 @stream_on_stack(i32 1)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %1 = load i8*, i8** @current_readline_line, align 4
  %string = bitcast %union.INPUT_STREAM* %location to i8**
  store i8* %1, i8** %string, align 4
  call void @init_yy_io(i32 ()* @yy_readline_get, i32 (i32)* @yy_readline_unget, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), %union.INPUT_STREAM* byval align 4 %location)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void
}

; Function Attrs: noinline nounwind
define i32 @stream_on_stack(i32 %type) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %s = alloca %struct.stream_saver*, align 4
  store i32 %type, i32* %type.addr, align 4
  %0 = load %struct.stream_saver*, %struct.stream_saver** @stream_list, align 4
  store %struct.stream_saver* %0, %struct.stream_saver** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.stream_saver*, %struct.stream_saver** %s, align 4
  %tobool = icmp ne %struct.stream_saver* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.stream_saver*, %struct.stream_saver** %s, align 4
  %bash_input = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %2, i32 0, i32 1
  %type1 = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input, i32 0, i32 0
  %3 = load i32, i32* %type1, align 4
  %4 = load i32, i32* %type.addr, align 4
  %cmp = icmp eq i32 %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load %struct.stream_saver*, %struct.stream_saver** %s, align 4
  %next = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %5, i32 0, i32 0
  %6 = load %struct.stream_saver*, %struct.stream_saver** %next, align 4
  store %struct.stream_saver* %6, %struct.stream_saver** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %7 = load i32, i32* %retval, align 4
  ret i32 %7
}

; Function Attrs: noinline nounwind
define internal i32 @yy_readline_get() #0 {
entry:
  %retval = alloca i32, align 4
  %old_sigint = alloca void (i32)*, align 4
  %line_len = alloca i32, align 4
  %c = alloca i8, align 1
  %0 = load i8*, i8** @current_readline_line, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end25

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @bash_readline_initialized, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  call void @initialize_readline()
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  store void (i32)* bitcast (void ()* @initialize_traps to void (i32)*), void (i32)** %old_sigint, align 4
  %call = call i32 @signal_is_ignored(i32 2)
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call void (i32)* @signal(i32 2, void (i32)* @sigint_sighandler)
  store void (i32)* %call5, void (i32)** %old_sigint, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %2 = load i8*, i8** @current_readline_prompt, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end6
  %3 = load i8*, i8** @current_readline_prompt, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end6
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.55, i32 0, i32 0), %cond.false ]
  %call7 = call i8* @readline(i8* %cond)
  store i8* %call7, i8** @current_readline_line, align 4
  br label %do.body

do.body:                                          ; preds = %cond.end
  %4 = load volatile i32, i32* @terminating_signal, align 4
  %tobool8 = icmp ne i32 %4, 0
  br i1 %tobool8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %do.body
  %5 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %5)
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end10
  %call11 = call i32 @signal_is_ignored(i32 2)
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.then13, label %if.end18

if.then13:                                        ; preds = %do.end
  %6 = load void (i32)*, void (i32)** %old_sigint, align 4
  %cmp14 = icmp ne void (i32)* %6, bitcast (void ()* @initialize_traps to void (i32)*)
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.then13
  %7 = load void (i32)*, void (i32)** %old_sigint, align 4
  %call16 = call void (i32)* @signal(i32 2, void (i32)* %7)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.then13
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %do.end
  %8 = load i8*, i8** @current_readline_line, align 4
  %cmp19 = icmp eq i8* %8, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  store i32 -1, i32* %retval, align 4
  br label %return

if.end21:                                         ; preds = %if.end18
  store i32 0, i32* @current_readline_line_index, align 4
  %9 = load i8*, i8** @current_readline_line, align 4
  %call22 = call i32 @strlen(i8* %9)
  store i32 %call22, i32* %line_len, align 4
  %10 = load i8*, i8** @current_readline_line, align 4
  %11 = load i32, i32* %line_len, align 4
  %add = add nsw i32 2, %11
  %call23 = call i8* @sh_xrealloc(i8* %10, i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1477)
  store i8* %call23, i8** @current_readline_line, align 4
  %12 = load i8*, i8** @current_readline_line, align 4
  %13 = load i32, i32* %line_len, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %line_len, align 4
  %arrayidx = getelementptr inbounds i8, i8* %12, i32 %13
  store i8 10, i8* %arrayidx, align 1
  %14 = load i8*, i8** @current_readline_line, align 4
  %15 = load i32, i32* %line_len, align 4
  %arrayidx24 = getelementptr inbounds i8, i8* %14, i32 %15
  store i8 0, i8* %arrayidx24, align 1
  br label %if.end25

if.end25:                                         ; preds = %if.end21, %entry
  %16 = load i8*, i8** @current_readline_line, align 4
  %17 = load i32, i32* @current_readline_line_index, align 4
  %arrayidx26 = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8, i8* %arrayidx26, align 1
  %conv = sext i8 %18 to i32
  %cmp27 = icmp eq i32 %conv, 0
  br i1 %cmp27, label %if.then29, label %if.else

if.then29:                                        ; preds = %if.end25
  %19 = load i8*, i8** @current_readline_line, align 4
  call void @sh_xfree(i8* %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1484)
  store i8* null, i8** @current_readline_line, align 4
  %call30 = call i32 @yy_readline_get()
  store i32 %call30, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end25
  %20 = load i8*, i8** @current_readline_line, align 4
  %21 = load i32, i32* @current_readline_line_index, align 4
  %inc31 = add nsw i32 %21, 1
  store i32 %inc31, i32* @current_readline_line_index, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %arrayidx32, align 1
  store i8 %22, i8* %c, align 1
  %23 = load i8, i8* %c, align 1
  %conv33 = zext i8 %23 to i32
  store i32 %conv33, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then29, %if.then20
  %24 = load i32, i32* %retval, align 4
  ret i32 %24
}

; Function Attrs: noinline nounwind
define internal i32 @yy_readline_unget(i32 %c) #0 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32, i32* @current_readline_line_index, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** @current_readline_line, align 4
  %tobool1 = icmp ne i8* %1, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4
  %conv = trunc i32 %2 to i8
  %3 = load i8*, i8** @current_readline_line, align 4
  %4 = load i32, i32* @current_readline_line_index, align 4
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* @current_readline_line_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 %dec
  store i8 %conv, i8* %arrayidx, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i32, i32* %c.addr, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind
define void @with_input_from_string(i8* %string, i8* %name) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %name.addr = alloca i8*, align 4
  %location = alloca %union.INPUT_STREAM, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %string1 = bitcast %union.INPUT_STREAM* %location to i8**
  store i8* %0, i8** %string1, align 4
  %1 = load i8*, i8** %name.addr, align 4
  call void @init_yy_io(i32 ()* @yy_string_get, i32 (i32)* @yy_string_unget, i32 3, i8* %1, %union.INPUT_STREAM* byval align 4 %location)
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @yy_string_get() #0 {
entry:
  %retval = alloca i32, align 4
  %string = alloca i8*, align 4
  %c = alloca i8, align 1
  %0 = load i8*, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  store i8* %0, i8** %string, align 4
  %1 = load i8*, i8** %string, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %string, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8*, i8** %string, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %string, align 4
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %c, align 1
  %6 = load i8*, i8** %string, align 4
  store i8* %6, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  %7 = load i8, i8* %c, align 1
  %conv2 = zext i8 %7 to i32
  store i32 %conv2, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define internal i32 @yy_string_unget(i32 %c) #0 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %conv = trunc i32 %0 to i8
  %1 = load i8*, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 -1
  store i8* %incdec.ptr, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  store i8 %conv, i8* %incdec.ptr, align 1
  %2 = load i32, i32* %c.addr, align 4
  ret i32 %2
}

; Function Attrs: noinline nounwind
define void @with_input_from_stream(%struct._IO_FILE* %stream, i8* %name) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 4
  %name.addr = alloca i8*, align 4
  %location = alloca %union.INPUT_STREAM, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 4
  %file = bitcast %union.INPUT_STREAM* %location to %struct._IO_FILE**
  store %struct._IO_FILE* %0, %struct._IO_FILE** %file, align 4
  %1 = load i8*, i8** %name.addr, align 4
  call void @init_yy_io(i32 ()* @yy_stream_get, i32 (i32)* @yy_stream_unget, i32 2, i8* %1, %union.INPUT_STREAM* byval align 4 %location)
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @yy_stream_get() #0 {
entry:
  %result = alloca i32, align 4
  store i32 -1, i32* %result, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2, i32 0), align 4
  %tobool = icmp ne %struct._IO_FILE* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2, i32 0), align 4
  %call = call i32 @getc_with_restart(%struct._IO_FILE* %1)
  store i32 %call, i32* %result, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %result, align 4
  ret i32 %2
}

; Function Attrs: noinline nounwind
define internal i32 @yy_stream_unget(i32 %c) #0 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2, i32 0), align 4
  %call = call i32 @ungetc_with_restart(i32 %0, %struct._IO_FILE* %1)
  ret i32 %call
}

; Function Attrs: noinline nounwind
define void @push_stream(i32 %reset_lineno) #0 {
entry:
  %reset_lineno.addr = alloca i32, align 4
  %saver = alloca %struct.stream_saver*, align 4
  store i32 %reset_lineno, i32* %reset_lineno.addr, align 4
  %call = call i8* @sh_xmalloc(i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1678)
  %0 = bitcast i8* %call to %struct.stream_saver*
  store %struct.stream_saver* %0, %struct.stream_saver** %saver, align 4
  %1 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %1, i32 0, i32 1
  %2 = bitcast %struct.BASH_INPUT* %bash_input to i8*
  call void @xbcopy(i8* bitcast (%struct.BASH_INPUT* @bash_input to i8*), i8* %2, i32 20)
  %3 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bstream = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %3, i32 0, i32 3
  store %struct.BSTREAM* null, %struct.BSTREAM** %bstream, align 4
  %4 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp = icmp eq i32 %4, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i32*), align 4
  %cmp1 = icmp sge i32 %5, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i32*), align 4
  %call2 = call %struct.BSTREAM* @set_buffered_stream(i32 %6, %struct.BSTREAM* null)
  %7 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bstream3 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %7, i32 0, i32 3
  store %struct.BSTREAM* %call2, %struct.BSTREAM** %bstream3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* @line_number, align 4
  %9 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %line = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %9, i32 0, i32 2
  store i32 %8, i32* %line, align 4
  store i8* null, i8** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 1), align 4
  %10 = load %struct.stream_saver*, %struct.stream_saver** @stream_list, align 4
  %11 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %next = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %11, i32 0, i32 0
  store %struct.stream_saver* %10, %struct.stream_saver** %next, align 4
  %12 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  store %struct.stream_saver* %12, %struct.stream_saver** @stream_list, align 4
  store i32 0, i32* @EOF_Reached, align 4
  %13 = load i32, i32* %reset_lineno.addr, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store i32 0, i32* @line_number, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  ret void
}

declare void @xbcopy(i8*, i8*, i32) #1

declare %struct.BSTREAM* @set_buffered_stream(i32, %struct.BSTREAM*) #1

; Function Attrs: noinline nounwind
define void @pop_stream() #0 {
entry:
  %saver = alloca %struct.stream_saver*, align 4
  %0 = load %struct.stream_saver*, %struct.stream_saver** @stream_list, align 4
  %tobool = icmp ne %struct.stream_saver* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* @EOF_Reached, align 4
  br label %if.end22

if.else:                                          ; preds = %entry
  %1 = load %struct.stream_saver*, %struct.stream_saver** @stream_list, align 4
  store %struct.stream_saver* %1, %struct.stream_saver** %saver, align 4
  store i32 0, i32* @EOF_Reached, align 4
  %2 = load %struct.stream_saver*, %struct.stream_saver** @stream_list, align 4
  %next = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %2, i32 0, i32 0
  %3 = load %struct.stream_saver*, %struct.stream_saver** %next, align 4
  store %struct.stream_saver* %3, %struct.stream_saver** @stream_list, align 4
  %4 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %4, i32 0, i32 1
  %getter = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input, i32 0, i32 3
  %5 = load i32 ()*, i32 ()** %getter, align 4
  %6 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input1 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %6, i32 0, i32 1
  %ungetter = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input1, i32 0, i32 4
  %7 = load i32 (i32)*, i32 (i32)** %ungetter, align 4
  %8 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input2 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %8, i32 0, i32 1
  %type = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input2, i32 0, i32 0
  %9 = load i32, i32* %type, align 4
  %10 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input3 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %10, i32 0, i32 1
  %name = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input3, i32 0, i32 1
  %11 = load i8*, i8** %name, align 4
  %12 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input4 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %12, i32 0, i32 1
  %location = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input4, i32 0, i32 2
  call void @init_yy_io(i32 ()* %5, i32 (i32)* %7, i32 %9, i8* %11, %union.INPUT_STREAM* byval align 4 %location)
  %13 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp = icmp eq i32 %13, 4
  br i1 %cmp, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %if.else
  %14 = load i32, i32* bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i32*), align 4
  %cmp5 = icmp sge i32 %14, 0
  br i1 %cmp5, label %if.then6, label %if.end14

if.then6:                                         ; preds = %land.lhs.true
  %15 = load i32, i32* @bash_input_fd_changed, align 4
  %tobool7 = icmp ne i32 %15, 0
  br i1 %tobool7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %if.then6
  store i32 0, i32* @bash_input_fd_changed, align 4
  %16 = load i32, i32* @default_buffered_input, align 4
  %cmp9 = icmp sge i32 %16, 0
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then8
  %17 = load i32, i32* @default_buffered_input, align 4
  store i32 %17, i32* bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i32*), align 4
  %18 = load i32, i32* @default_buffered_input, align 4
  %19 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bstream = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %19, i32 0, i32 3
  %20 = load %struct.BSTREAM*, %struct.BSTREAM** %bstream, align 4
  %b_fd = getelementptr inbounds %struct.BSTREAM, %struct.BSTREAM* %20, i32 0, i32 0
  store i32 %18, i32* %b_fd, align 4
  %21 = load i32, i32* @default_buffered_input, align 4
  %call = call i32 (i32, i32, ...) @fcntl(i32 %21, i32 2, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then8
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then6
  %22 = load i32, i32* bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i32*), align 4
  %23 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bstream12 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %23, i32 0, i32 3
  %24 = load %struct.BSTREAM*, %struct.BSTREAM** %bstream12, align 4
  %call13 = call %struct.BSTREAM* @set_buffered_stream(i32 %22, %struct.BSTREAM* %24)
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %land.lhs.true, %if.else
  %25 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %line = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %25, i32 0, i32 2
  %26 = load i32, i32* %line, align 4
  store i32 %26, i32* @line_number, align 4
  br label %do.body

do.body:                                          ; preds = %if.end14
  %27 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input15 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %27, i32 0, i32 1
  %name16 = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input15, i32 0, i32 1
  %28 = load i8*, i8** %name16, align 4
  %tobool17 = icmp ne i8* %28, null
  br i1 %tobool17, label %if.then18, label %if.end21

if.then18:                                        ; preds = %do.body
  %29 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %bash_input19 = getelementptr inbounds %struct.stream_saver, %struct.stream_saver* %29, i32 0, i32 1
  %name20 = getelementptr inbounds %struct.BASH_INPUT, %struct.BASH_INPUT* %bash_input19, i32 0, i32 1
  %30 = load i8*, i8** %name20, align 4
  call void @sh_xfree(i8* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1741)
  br label %if.end21

if.end21:                                         ; preds = %if.then18, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end21
  %31 = load %struct.stream_saver*, %struct.stream_saver** %saver, align 4
  %32 = bitcast %struct.stream_saver* %31 to i8*
  call void @sh_xfree(i8* %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1742)
  br label %if.end22

if.end22:                                         ; preds = %do.end, %if.then
  ret void
}

declare i32 @fcntl(i32, i32, ...) #1

; Function Attrs: noinline nounwind
define i32* @save_token_state() #0 {
entry:
  %ret = alloca i32*, align 4
  %call = call i8* @sh_xmalloc(i32 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1765)
  %0 = bitcast i8* %call to i32*
  store i32* %0, i32** %ret, align 4
  %1 = load i32, i32* @last_read_token, align 4
  %2 = load i32*, i32** %ret, align 4
  %arrayidx = getelementptr inbounds i32, i32* %2, i32 0
  store i32 %1, i32* %arrayidx, align 4
  %3 = load i32, i32* @token_before_that, align 4
  %4 = load i32*, i32** %ret, align 4
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i32 1
  store i32 %3, i32* %arrayidx1, align 4
  %5 = load i32, i32* @two_tokens_ago, align 4
  %6 = load i32*, i32** %ret, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i32 2
  store i32 %5, i32* %arrayidx2, align 4
  %7 = load i32, i32* @current_token, align 4
  %8 = load i32*, i32** %ret, align 4
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i32 3
  store i32 %7, i32* %arrayidx3, align 4
  %9 = load i32*, i32** %ret, align 4
  ret i32* %9
}

; Function Attrs: noinline nounwind
define void @restore_token_state(i32* %ts) #0 {
entry:
  %ts.addr = alloca i32*, align 4
  store i32* %ts, i32** %ts.addr, align 4
  %0 = load i32*, i32** %ts.addr, align 4
  %cmp = icmp eq i32* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32*, i32** %ts.addr, align 4
  %arrayidx = getelementptr inbounds i32, i32* %1, i32 0
  %2 = load i32, i32* %arrayidx, align 4
  store i32 %2, i32* @last_read_token, align 4
  %3 = load i32*, i32** %ts.addr, align 4
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i32 1
  %4 = load i32, i32* %arrayidx1, align 4
  store i32 %4, i32* @token_before_that, align 4
  %5 = load i32*, i32** %ts.addr, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i32 2
  %6 = load i32, i32* %arrayidx2, align 4
  store i32 %6, i32* @two_tokens_ago, align 4
  %7 = load i32*, i32** %ts.addr, align 4
  %arrayidx3 = getelementptr inbounds i32, i32* %7, i32 3
  %8 = load i32, i32* %arrayidx3, align 4
  store i32 %8, i32* @current_token, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @free_pushed_string_input() #0 {
entry:
  call void @free_string_list()
  ret void
}

; Function Attrs: noinline nounwind
define internal void @free_string_list() #0 {
entry:
  %t = alloca %struct.string_saver*, align 4
  %t1 = alloca %struct.string_saver*, align 4
  %0 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  store %struct.string_saver* %0, %struct.string_saver** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end7, %entry
  %1 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %tobool = icmp ne %struct.string_saver* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %next = getelementptr inbounds %struct.string_saver, %struct.string_saver* %2, i32 0, i32 0
  %3 = load %struct.string_saver*, %struct.string_saver** %next, align 4
  store %struct.string_saver* %3, %struct.string_saver** %t1, align 4
  br label %do.body

do.body:                                          ; preds = %for.body
  %4 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %saved_line = getelementptr inbounds %struct.string_saver, %struct.string_saver* %4, i32 0, i32 2
  %5 = load i8*, i8** %saved_line, align 4
  %tobool1 = icmp ne i8* %5, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %6 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %saved_line2 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %6, i32 0, i32 2
  %7 = load i8*, i8** %saved_line2, align 4
  call void @sh_xfree(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1914)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %8 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %expander = getelementptr inbounds %struct.string_saver, %struct.string_saver* %8, i32 0, i32 3
  %9 = load %struct.alias*, %struct.alias** %expander, align 4
  %tobool3 = icmp ne %struct.alias* %9, null
  br i1 %tobool3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %do.end
  %10 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %expander5 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %10, i32 0, i32 3
  %11 = load %struct.alias*, %struct.alias** %expander5, align 4
  %flags = getelementptr inbounds %struct.alias, %struct.alias* %11, i32 0, i32 2
  %12 = load i8, i8* %flags, align 4
  %conv = sext i8 %12 to i32
  %and = and i32 %conv, -3
  %conv6 = trunc i32 %and to i8
  store i8 %conv6, i8* %flags, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %do.end
  %13 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %14 = bitcast %struct.string_saver* %13 to i8*
  call void @sh_xfree(i8* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1919)
  %15 = load %struct.string_saver*, %struct.string_saver** %t1, align 4
  store %struct.string_saver* %15, %struct.string_saver** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.string_saver* null, %struct.string_saver** @pushed_string_list, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i32 @parser_expanding_alias() #0 {
entry:
  %0 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool = icmp ne %struct.string_saver* %0, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %1 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %expander = getelementptr inbounds %struct.string_saver, %struct.string_saver* %1, i32 0, i32 3
  %2 = load %struct.alias*, %struct.alias** %expander, align 4
  %tobool1 = icmp ne %struct.alias* %2, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  ret i32 %land.ext
}

; Function Attrs: noinline nounwind
define void @parser_save_alias() #0 {
entry:
  call void @push_string(i8* null, i32 0, %struct.alias* null)
  %0 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %flags = getelementptr inbounds %struct.string_saver, %struct.string_saver* %0, i32 0, i32 7
  store i32 4, i32* %flags, align 4
  ret void
}

; Function Attrs: noinline nounwind
define internal void @push_string(i8* %s, i32 %expand, %struct.alias* %ap) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %expand.addr = alloca i32, align 4
  %ap.addr = alloca %struct.alias*, align 4
  %temp = alloca %struct.string_saver*, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 %expand, i32* %expand.addr, align 4
  store %struct.alias* %ap, %struct.alias** %ap.addr, align 4
  %call = call i8* @sh_xmalloc(i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1839)
  %0 = bitcast i8* %call to %struct.string_saver*
  store %struct.string_saver* %0, %struct.string_saver** %temp, align 4
  %1 = load i32, i32* %expand.addr, align 4
  %2 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %expand_alias = getelementptr inbounds %struct.string_saver, %struct.string_saver* %2, i32 0, i32 1
  store i32 %1, i32* %expand_alias, align 4
  %3 = load i8*, i8** @shell_input_line, align 4
  %4 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %saved_line = getelementptr inbounds %struct.string_saver, %struct.string_saver* %4, i32 0, i32 2
  store i8* %3, i8** %saved_line, align 4
  %5 = load i32, i32* @shell_input_line_size, align 4
  %6 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %saved_line_size = getelementptr inbounds %struct.string_saver, %struct.string_saver* %6, i32 0, i32 4
  store i32 %5, i32* %saved_line_size, align 4
  %7 = load i32, i32* @shell_input_line_index, align 4
  %8 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %saved_line_index = getelementptr inbounds %struct.string_saver, %struct.string_saver* %8, i32 0, i32 5
  store i32 %7, i32* %saved_line_index, align 4
  %9 = load i32, i32* @shell_input_line_terminator, align 4
  %10 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %saved_line_terminator = getelementptr inbounds %struct.string_saver, %struct.string_saver* %10, i32 0, i32 6
  store i32 %9, i32* %saved_line_terminator, align 4
  %11 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %flags = getelementptr inbounds %struct.string_saver, %struct.string_saver* %11, i32 0, i32 7
  store i32 0, i32* %flags, align 4
  %12 = load %struct.alias*, %struct.alias** %ap.addr, align 4
  %13 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %expander = getelementptr inbounds %struct.string_saver, %struct.string_saver* %13, i32 0, i32 3
  store %struct.alias* %12, %struct.alias** %expander, align 4
  %14 = load %struct.alias*, %struct.alias** %ap.addr, align 4
  %tobool = icmp ne %struct.alias* %14, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %15 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %flags1 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %15, i32 0, i32 7
  store i32 1, i32* %flags1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %17 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  %next = getelementptr inbounds %struct.string_saver, %struct.string_saver* %17, i32 0, i32 0
  store %struct.string_saver* %16, %struct.string_saver** %next, align 4
  %18 = load %struct.string_saver*, %struct.string_saver** %temp, align 4
  store %struct.string_saver* %18, %struct.string_saver** @pushed_string_list, align 4
  %19 = load %struct.alias*, %struct.alias** %ap.addr, align 4
  %tobool2 = icmp ne %struct.alias* %19, null
  br i1 %tobool2, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %20 = load %struct.alias*, %struct.alias** %ap.addr, align 4
  %flags4 = getelementptr inbounds %struct.alias, %struct.alias* %20, i32 0, i32 2
  %21 = load i8, i8* %flags4, align 4
  %conv = sext i8 %21 to i32
  %or = or i32 %conv, 2
  %conv5 = trunc i32 %or to i8
  store i8 %conv5, i8* %flags4, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end
  %22 = load i8*, i8** %s.addr, align 4
  store i8* %22, i8** @shell_input_line, align 4
  %23 = load i8*, i8** %s.addr, align 4
  %tobool7 = icmp ne i8* %23, null
  br i1 %tobool7, label %land.lhs.true, label %cond.false22

land.lhs.true:                                    ; preds = %if.end6
  %24 = load i8*, i8** %s.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %24, i32 0
  %25 = load i8, i8* %arrayidx, align 1
  %conv8 = sext i8 %25 to i32
  %tobool9 = icmp ne i32 %conv8, 0
  br i1 %tobool9, label %cond.true, label %cond.false22

cond.true:                                        ; preds = %land.lhs.true
  %26 = load i8*, i8** %s.addr, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %26, i32 1
  %27 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %27 to i32
  %tobool12 = icmp ne i32 %conv11, 0
  br i1 %tobool12, label %cond.true13, label %cond.false19

cond.true13:                                      ; preds = %cond.true
  %28 = load i8*, i8** %s.addr, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %28, i32 2
  %29 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %29 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  br i1 %tobool16, label %cond.true17, label %cond.false

cond.true17:                                      ; preds = %cond.true13
  %30 = load i8*, i8** %s.addr, align 4
  %call18 = call i32 @strlen(i8* %30)
  br label %cond.end

cond.false:                                       ; preds = %cond.true13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true17
  %cond = phi i32 [ %call18, %cond.true17 ], [ 2, %cond.false ]
  br label %cond.end20

cond.false19:                                     ; preds = %cond.true
  br label %cond.end20

cond.end20:                                       ; preds = %cond.false19, %cond.end
  %cond21 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false19 ]
  br label %cond.end23

cond.false22:                                     ; preds = %land.lhs.true, %if.end6
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false22, %cond.end20
  %cond24 = phi i32 [ %cond21, %cond.end20 ], [ 0, %cond.false22 ]
  store i32 %cond24, i32* @shell_input_line_size, align 4
  store i32 0, i32* @shell_input_line_index, align 4
  store i32 0, i32* @shell_input_line_terminator, align 4
  call void @set_line_mbstate()
  ret void
}

; Function Attrs: noinline nounwind
define void @parser_restore_alias() #0 {
entry:
  %0 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool = icmp ne %struct.string_saver* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @pop_string()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind
define internal void @pop_string() #0 {
entry:
  %t = alloca %struct.string_saver*, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** @shell_input_line, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %1 = load i8*, i8** @shell_input_line, align 4
  call void @sh_xfree(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1882)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %2 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %saved_line = getelementptr inbounds %struct.string_saver, %struct.string_saver* %2, i32 0, i32 2
  %3 = load i8*, i8** %saved_line, align 4
  store i8* %3, i8** @shell_input_line, align 4
  %4 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %saved_line_index = getelementptr inbounds %struct.string_saver, %struct.string_saver* %4, i32 0, i32 5
  %5 = load i32, i32* %saved_line_index, align 4
  store i32 %5, i32* @shell_input_line_index, align 4
  %6 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %saved_line_size = getelementptr inbounds %struct.string_saver, %struct.string_saver* %6, i32 0, i32 4
  %7 = load i32, i32* %saved_line_size, align 4
  store i32 %7, i32* @shell_input_line_size, align 4
  %8 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %saved_line_terminator = getelementptr inbounds %struct.string_saver, %struct.string_saver* %8, i32 0, i32 6
  %9 = load i32, i32* %saved_line_terminator, align 4
  store i32 %9, i32* @shell_input_line_terminator, align 4
  %10 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %expand_alias = getelementptr inbounds %struct.string_saver, %struct.string_saver* %10, i32 0, i32 1
  %11 = load i32, i32* %expand_alias, align 4
  %tobool1 = icmp ne i32 %11, 0
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %do.end
  %12 = load i32, i32* @parser_state, align 4
  %or = or i32 %12, 2
  store i32 %or, i32* @parser_state, align 4
  br label %if.end3

if.else:                                          ; preds = %do.end
  %13 = load i32, i32* @parser_state, align 4
  %and = and i32 %13, -3
  store i32 %and, i32* @parser_state, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  %14 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  store %struct.string_saver* %14, %struct.string_saver** %t, align 4
  %15 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %next = getelementptr inbounds %struct.string_saver, %struct.string_saver* %15, i32 0, i32 0
  %16 = load %struct.string_saver*, %struct.string_saver** %next, align 4
  store %struct.string_saver* %16, %struct.string_saver** @pushed_string_list, align 4
  %17 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %expander = getelementptr inbounds %struct.string_saver, %struct.string_saver* %17, i32 0, i32 3
  %18 = load %struct.alias*, %struct.alias** %expander, align 4
  %tobool4 = icmp ne %struct.alias* %18, null
  br i1 %tobool4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end3
  %19 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %expander6 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %19, i32 0, i32 3
  %20 = load %struct.alias*, %struct.alias** %expander6, align 4
  %flags = getelementptr inbounds %struct.alias, %struct.alias* %20, i32 0, i32 2
  %21 = load i8, i8* %flags, align 4
  %conv = sext i8 %21 to i32
  %and7 = and i32 %conv, -3
  %conv8 = trunc i32 %and7 to i8
  store i8 %conv8, i8* %flags, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end3
  %22 = load %struct.string_saver*, %struct.string_saver** %t, align 4
  %23 = bitcast %struct.string_saver* %22 to i8*
  call void @sh_xfree(i8* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 1901)
  call void @set_line_mbstate()
  ret void
}

; Function Attrs: noinline nounwind
define void @clear_shell_input_line() #0 {
entry:
  %0 = load i8*, i8** @shell_input_line, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @shell_input_line, align 4
  store i32 0, i32* @shell_input_line_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 0
  store i8 0, i8* %arrayidx, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind
define i8* @read_secondary_line(i32 %remove_quoted_newline) #0 {
entry:
  %remove_quoted_newline.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %n = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %remove_quoted_newline, i32* %remove_quoted_newline.addr, align 4
  store i8** @ps2_prompt, i8*** @prompt_string_pointer, align 4
  %0 = load i32, i32* @interactive, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp1 = icmp eq i32 %2, 2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @prompt_again()
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %3 = load i32, i32* %remove_quoted_newline.addr, align 4
  %call = call i8* @read_a_line(i32 %3)
  store i8* %call, i8** %ret, align 4
  %4 = load i8*, i8** %ret, align 4
  %tobool2 = icmp ne i8* %4, null
  br i1 %tobool2, label %land.lhs.true3, label %if.end8

land.lhs.true3:                                   ; preds = %if.end
  %5 = load i32, i32* @remember_on_history, align 4
  %tobool4 = icmp ne i32 %5, 0
  br i1 %tobool4, label %land.lhs.true5, label %if.end8

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %6 = load i32, i32* @parser_state, align 4
  %and = and i32 %6, 131072
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %land.lhs.true5
  %7 = load i32, i32* @current_command_line_count, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* @current_command_line_count, align 4
  %8 = load i8*, i8** %ret, align 4
  call void @maybe_add_history(i8* %8)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %land.lhs.true5, %land.lhs.true3, %if.end
  %9 = load i8*, i8** %ret, align 4
  ret i8* %9
}

; Function Attrs: noinline nounwind
define internal void @prompt_again() #0 {
entry:
  %temp_prompt = alloca i8*, align 4
  %0 = load i32, i32* @interactive, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool = icmp ne %struct.string_saver* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %expander = getelementptr inbounds %struct.string_saver, %struct.string_saver* %2, i32 0, i32 3
  %3 = load %struct.alias*, %struct.alias** %expander, align 4
  %tobool1 = icmp ne %struct.alias* %3, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %if.end23

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %call = call i8* @get_string_value(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0))
  store i8* %call, i8** @ps1_prompt, align 4
  %call2 = call i8* @get_string_value(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0))
  store i8* %call2, i8** @ps2_prompt, align 4
  %call3 = call i8* @get_string_value(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i32 0, i32 0))
  store i8* %call3, i8** @ps0_prompt, align 4
  %4 = load i8**, i8*** @prompt_string_pointer, align 4
  %tobool4 = icmp ne i8** %4, null
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  store i8** @ps1_prompt, i8*** @prompt_string_pointer, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %5 = load i8**, i8*** @prompt_string_pointer, align 4
  %6 = load i8*, i8** %5, align 4
  %tobool7 = icmp ne i8* %6, null
  br i1 %tobool7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end6
  %7 = load i8**, i8*** @prompt_string_pointer, align 4
  %8 = load i8*, i8** %7, align 4
  %call8 = call i8* @decode_prompt_string(i8* %8)
  br label %cond.end

cond.false:                                       ; preds = %if.end6
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call8, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %temp_prompt, align 4
  %9 = load i8*, i8** %temp_prompt, align 4
  %cmp9 = icmp eq i8* %9, null
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %cond.end
  %call11 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5378)
  store i8* %call11, i8** %temp_prompt, align 4
  %10 = load i8*, i8** %temp_prompt, align 4
  %arrayidx = getelementptr inbounds i8, i8* %10, i32 0
  store i8 0, i8* %arrayidx, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %cond.end
  %11 = load i8**, i8*** @prompt_string_pointer, align 4
  %12 = load i8*, i8** %11, align 4
  store i8* %12, i8** @current_prompt_string, align 4
  store i8** @ps2_prompt, i8*** @prompt_string_pointer, align 4
  %13 = load i32, i32* @no_line_editing, align 4
  %tobool13 = icmp ne i32 %13, 0
  br i1 %tobool13, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end12
  br label %do.body

do.body:                                          ; preds = %if.then14
  %14 = load i8*, i8** @current_readline_prompt, align 4
  %tobool15 = icmp ne i8* %14, null
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %do.body
  %15 = load i8*, i8** @current_readline_prompt, align 4
  call void @sh_xfree(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5388)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end17
  %16 = load i8*, i8** %temp_prompt, align 4
  store i8* %16, i8** @current_readline_prompt, align 4
  br label %if.end23

if.else:                                          ; preds = %if.end12
  br label %do.body18

do.body18:                                        ; preds = %if.else
  %17 = load i8*, i8** @current_decoded_prompt, align 4
  %tobool19 = icmp ne i8* %17, null
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %do.body18
  %18 = load i8*, i8** @current_decoded_prompt, align 4
  call void @sh_xfree(i8* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5394)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %do.body18
  br label %do.end22

do.end22:                                         ; preds = %if.end21
  %19 = load i8*, i8** %temp_prompt, align 4
  store i8* %19, i8** @current_decoded_prompt, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then, %do.end22, %do.end
  ret void
}

; Function Attrs: noinline nounwind
define internal i8* @read_a_line(i32 %remove_quoted_newline) #0 {
entry:
  %retval = alloca i8*, align 4
  %remove_quoted_newline.addr = alloca i32, align 4
  %indx = alloca i32, align 4
  %c = alloca i32, align 4
  %peekc = alloca i32, align 4
  %pass_next = alloca i32, align 4
  store i32 %remove_quoted_newline, i32* %remove_quoted_newline.addr, align 4
  %0 = load i32, i32* @no_line_editing, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @interactive, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %3 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp3 = icmp eq i32 %3, 2
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true2
  call void @print_prompt()
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %land.lhs.true, %entry
  store i32 0, i32* %indx, align 4
  store i32 0, i32* %pass_next, align 4
  br label %while.body

while.body:                                       ; preds = %if.end, %if.then11, %if.then53, %if.end71
  br label %do.body

do.body:                                          ; preds = %while.body
  %4 = load volatile i32, i32* @terminating_signal, align 4
  %tobool4 = icmp ne i32 %4, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %do.body
  %5 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %5)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %do.body
  %6 = load volatile i32, i32* @interrupt_state, align 4
  %tobool7 = icmp ne i32 %6, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  call void @throw_to_top_level()
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end6
  br label %do.end

do.end:                                           ; preds = %if.end9
  %call = call i32 @yy_getc()
  store i32 %call, i32* %c, align 4
  %7 = load i32, i32* %c, align 4
  %cmp10 = icmp eq i32 %7, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %do.end
  br label %while.body

if.end12:                                         ; preds = %do.end
  %8 = load i32, i32* %c, align 4
  %cmp13 = icmp eq i32 %8, -1
  br i1 %cmp13, label %if.then14, label %if.end23

if.then14:                                        ; preds = %if.end12
  %9 = load i32, i32* @interactive, align 4
  %tobool15 = icmp ne i32 %9, 0
  br i1 %tobool15, label %land.lhs.true16, label %if.end19

land.lhs.true16:                                  ; preds = %if.then14
  %10 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp17 = icmp eq i32 %10, 2
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %land.lhs.true16
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 4
  call void @clearerr(%struct._IO_FILE* %11)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %land.lhs.true16, %if.then14
  %12 = load i32, i32* %indx, align 4
  %cmp20 = icmp eq i32 %12, 0
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end19
  store i8* null, i8** %retval, align 4
  br label %return

if.end22:                                         ; preds = %if.end19
  store i32 10, i32* %c, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end12
  br label %do.body24

do.body24:                                        ; preds = %if.end23
  %13 = load i32, i32* %indx, align 4
  %add = add nsw i32 %13, 2
  %14 = load i32, i32* @read_a_line.buffer_size, align 4
  %cmp25 = icmp sge i32 %add, %14
  br i1 %cmp25, label %if.then26, label %if.end33

if.then26:                                        ; preds = %do.body24
  br label %while.cond27

while.cond27:                                     ; preds = %while.body30, %if.then26
  %15 = load i32, i32* %indx, align 4
  %add28 = add nsw i32 %15, 2
  %16 = load i32, i32* @read_a_line.buffer_size, align 4
  %cmp29 = icmp sge i32 %add28, %16
  br i1 %cmp29, label %while.body30, label %while.end

while.body30:                                     ; preds = %while.cond27
  %17 = load i32, i32* @read_a_line.buffer_size, align 4
  %add31 = add nsw i32 %17, 128
  store i32 %add31, i32* @read_a_line.buffer_size, align 4
  br label %while.cond27

while.end:                                        ; preds = %while.cond27
  %18 = load i8*, i8** @read_a_line.line_buffer, align 4
  %19 = load i32, i32* @read_a_line.buffer_size, align 4
  %call32 = call i8* @sh_xrealloc(i8* %18, i32 %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2017)
  store i8* %call32, i8** @read_a_line.line_buffer, align 4
  br label %if.end33

if.end33:                                         ; preds = %while.end, %do.body24
  br label %do.end34

do.end34:                                         ; preds = %if.end33
  %20 = load i32, i32* %pass_next, align 4
  %tobool35 = icmp ne i32 %20, 0
  br i1 %tobool35, label %if.then36, label %if.else

if.then36:                                        ; preds = %do.end34
  %21 = load i32, i32* %c, align 4
  %conv = trunc i32 %21 to i8
  %22 = load i8*, i8** @read_a_line.line_buffer, align 4
  %23 = load i32, i32* %indx, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %indx, align 4
  %arrayidx = getelementptr inbounds i8, i8* %22, i32 %23
  store i8 %conv, i8* %arrayidx, align 1
  store i32 0, i32* %pass_next, align 4
  br label %if.end66

if.else:                                          ; preds = %do.end34
  %24 = load i32, i32* %c, align 4
  %cmp37 = icmp eq i32 %24, 92
  br i1 %cmp37, label %land.lhs.true39, label %if.else61

land.lhs.true39:                                  ; preds = %if.else
  %25 = load i32, i32* %remove_quoted_newline.addr, align 4
  %tobool40 = icmp ne i32 %25, 0
  br i1 %tobool40, label %if.then41, label %if.else61

if.then41:                                        ; preds = %land.lhs.true39
  br label %do.body42

do.body42:                                        ; preds = %if.then41
  %26 = load volatile i32, i32* @terminating_signal, align 4
  %tobool43 = icmp ne i32 %26, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %do.body42
  %27 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %27)
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %do.body42
  %28 = load volatile i32, i32* @interrupt_state, align 4
  %tobool46 = icmp ne i32 %28, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end45
  call void @throw_to_top_level()
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end45
  br label %do.end49

do.end49:                                         ; preds = %if.end48
  %call50 = call i32 @yy_getc()
  store i32 %call50, i32* %peekc, align 4
  %29 = load i32, i32* %peekc, align 4
  %cmp51 = icmp eq i32 %29, 10
  br i1 %cmp51, label %if.then53, label %if.else55

if.then53:                                        ; preds = %do.end49
  %30 = load i32, i32* @line_number, align 4
  %inc54 = add nsw i32 %30, 1
  store i32 %inc54, i32* @line_number, align 4
  br label %while.body

if.else55:                                        ; preds = %do.end49
  %31 = load i32, i32* %peekc, align 4
  %call56 = call i32 @yy_ungetc(i32 %31)
  store i32 1, i32* %pass_next, align 4
  %32 = load i32, i32* %c, align 4
  %conv57 = trunc i32 %32 to i8
  %33 = load i8*, i8** @read_a_line.line_buffer, align 4
  %34 = load i32, i32* %indx, align 4
  %inc58 = add nsw i32 %34, 1
  store i32 %inc58, i32* %indx, align 4
  %arrayidx59 = getelementptr inbounds i8, i8* %33, i32 %34
  store i8 %conv57, i8* %arrayidx59, align 1
  br label %if.end60

if.end60:                                         ; preds = %if.else55
  br label %if.end65

if.else61:                                        ; preds = %land.lhs.true39, %if.else
  %35 = load i32, i32* %c, align 4
  %conv62 = trunc i32 %35 to i8
  %36 = load i8*, i8** @read_a_line.line_buffer, align 4
  %37 = load i32, i32* %indx, align 4
  %inc63 = add nsw i32 %37, 1
  store i32 %inc63, i32* %indx, align 4
  %arrayidx64 = getelementptr inbounds i8, i8* %36, i32 %37
  store i8 %conv62, i8* %arrayidx64, align 1
  br label %if.end65

if.end65:                                         ; preds = %if.else61, %if.end60
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then36
  %38 = load i32, i32* %c, align 4
  %cmp67 = icmp eq i32 %38, 10
  br i1 %cmp67, label %if.then69, label %if.end71

if.then69:                                        ; preds = %if.end66
  %39 = load i8*, i8** @read_a_line.line_buffer, align 4
  %40 = load i32, i32* %indx, align 4
  %arrayidx70 = getelementptr inbounds i8, i8* %39, i32 %40
  store i8 0, i8* %arrayidx70, align 1
  %41 = load i8*, i8** @read_a_line.line_buffer, align 4
  store i8* %41, i8** %retval, align 4
  br label %return

if.end71:                                         ; preds = %if.end66
  br label %while.body

return:                                           ; preds = %if.then69, %if.then21
  %42 = load i8*, i8** %retval, align 4
  ret i8* %42
}

declare void @maybe_add_history(i8*) #1

; Function Attrs: noinline nounwind
define i8* @parser_remaining_input() #0 {
entry:
  %retval = alloca i8*, align 4
  %0 = load i8*, i8** @shell_input_line, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @shell_input_line_index, align 4
  %cmp1 = icmp ult i32 %1, 0
  br i1 %cmp1, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i32, i32* @shell_input_line_index, align 4
  %3 = load i32, i32* @shell_input_line_len, align 4
  %cmp2 = icmp uge i32 %2, %3
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.55, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** @shell_input_line, align 4
  %5 = load i32, i32* @shell_input_line_index, align 4
  %add.ptr = getelementptr inbounds i8, i8* %4, i32 %5
  store i8* %add.ptr, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %6 = load i8*, i8** %retval, align 4
  ret i8* %6
}

; Function Attrs: noinline nounwind
define void @execute_variable_command(i8* %command, i8* %vname) #0 {
entry:
  %command.addr = alloca i8*, align 4
  %vname.addr = alloca i8*, align 4
  %last_lastarg = alloca i8*, align 4
  %ps = alloca %struct._sh_parser_state_t, align 4
  store i8* %command, i8** %command.addr, align 4
  store i8* %vname, i8** %vname.addr, align 4
  %call = call %struct._sh_parser_state_t* @save_parser_state(%struct._sh_parser_state_t* %ps)
  %call1 = call i8* @get_string_value(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i32 0, i32 0))
  store i8* %call1, i8** %last_lastarg, align 4
  %0 = load i8*, i8** %last_lastarg, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %last_lastarg, align 4
  %call2 = call i32 @strlen(i8* %1)
  %add = add i32 1, %call2
  %call3 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2612)
  %2 = load i8*, i8** %last_lastarg, align 4
  %call4 = call i8* @strcpy(i8* %call3, i8* %2)
  store i8* %call4, i8** %last_lastarg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %command.addr, align 4
  %call5 = call i32 @strlen(i8* %3)
  %add6 = add i32 1, %call5
  %call7 = call i8* @sh_xmalloc(i32 %add6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2614)
  %4 = load i8*, i8** %command.addr, align 4
  %call8 = call i8* @strcpy(i8* %call7, i8* %4)
  %5 = load i8*, i8** %vname.addr, align 4
  %call9 = call i32 @parse_and_execute(i8* %call8, i8* %5, i32 5)
  call void @restore_parser_state(%struct._sh_parser_state_t* %ps)
  %6 = load i8*, i8** %last_lastarg, align 4
  %call10 = call %struct.variable* @bind_variable(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i32 0, i32 0), i8* %6, i32 0)
  br label %do.body

do.body:                                          ; preds = %if.end
  %7 = load i8*, i8** %last_lastarg, align 4
  %tobool11 = icmp ne i8* %7, null
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %do.body
  %8 = load i8*, i8** %last_lastarg, align 4
  call void @sh_xfree(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2618)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end13
  %9 = load i32, i32* @token_to_read, align 4
  %cmp = icmp eq i32 %9, 10
  br i1 %cmp, label %if.then14, label %if.end15

if.then14:                                        ; preds = %do.end
  store i32 0, i32* @token_to_read, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %do.end
  ret void
}

; Function Attrs: noinline nounwind
define %struct._sh_parser_state_t* @save_parser_state(%struct._sh_parser_state_t* %ps) #0 {
entry:
  %retval = alloca %struct._sh_parser_state_t*, align 4
  %ps.addr = alloca %struct._sh_parser_state_t*, align 4
  %i = alloca i32, align 4
  store %struct._sh_parser_state_t* %ps, %struct._sh_parser_state_t** %ps.addr, align 4
  %0 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %cmp = icmp eq %struct._sh_parser_state_t* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i8* @sh_xmalloc(i32 136, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6302)
  %1 = bitcast i8* %call to %struct._sh_parser_state_t*
  store %struct._sh_parser_state_t* %1, %struct._sh_parser_state_t** %ps.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %cmp1 = icmp eq %struct._sh_parser_state_t* %2, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store %struct._sh_parser_state_t* null, %struct._sh_parser_state_t** %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %3 = load i32, i32* @parser_state, align 4
  %4 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %parser_state = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %4, i32 0, i32 0
  store i32 %3, i32* %parser_state, align 4
  %call4 = call i32* @save_token_state()
  %5 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token_state = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %5, i32 0, i32 1
  store i32* %call4, i32** %token_state, align 4
  %6 = load i32, i32* @shell_input_line_terminator, align 4
  %7 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %input_line_terminator = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %7, i32 0, i32 4
  store i32 %6, i32* %input_line_terminator, align 4
  %8 = load i32, i32* @eof_encountered, align 4
  %9 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %eof_encountered = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %9, i32 0, i32 5
  store i32 %8, i32* %eof_encountered, align 4
  %10 = load i8**, i8*** @prompt_string_pointer, align 4
  %11 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %prompt_string_pointer = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %11, i32 0, i32 6
  store i8** %10, i8*** %prompt_string_pointer, align 4
  %12 = load i32, i32* @current_command_line_count, align 4
  %13 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %current_command_line_count = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %13, i32 0, i32 7
  store i32 %12, i32* %current_command_line_count, align 4
  %14 = load i32, i32* @remember_on_history, align 4
  %15 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %remember_on_history = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %15, i32 0, i32 8
  store i32 %14, i32* %remember_on_history, align 4
  %16 = load i32, i32* @history_expansion_inhibited, align 4
  %17 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %history_expansion_inhibited = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %17, i32 0, i32 9
  store i32 %16, i32* %history_expansion_inhibited, align 4
  %18 = load i32, i32* @last_command_exit_value, align 4
  %19 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %last_command_exit_value = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %19, i32 0, i32 10
  store i32 %18, i32* %last_command_exit_value, align 4
  %call5 = call %struct.array* @save_pipestatus_array()
  %20 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %pipestatus = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %20, i32 0, i32 11
  store %struct.array* %call5, %struct.array** %pipestatus, align 4
  %21 = load i32 (%struct.word_list*)*, i32 (%struct.word_list*)** @last_shell_builtin, align 4
  %22 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %last_shell_builtin = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %22, i32 0, i32 12
  store i32 (%struct.word_list*)* %21, i32 (%struct.word_list*)** %last_shell_builtin, align 4
  %23 = load i32 (%struct.word_list*)*, i32 (%struct.word_list*)** @this_shell_builtin, align 4
  %24 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %this_shell_builtin = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %24, i32 0, i32 13
  store i32 (%struct.word_list*)* %23, i32 (%struct.word_list*)** %this_shell_builtin, align 4
  %25 = load i32, i32* @expand_aliases, align 4
  %26 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %expand_aliases = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %26, i32 0, i32 14
  store i32 %25, i32* %expand_aliases, align 4
  %27 = load i32, i32* @echo_input_at_read, align 4
  %28 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %echo_input_at_read = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %28, i32 0, i32 15
  store i32 %27, i32* %echo_input_at_read, align 4
  %29 = load i32, i32* @need_here_doc, align 4
  %30 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %need_here_doc = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %30, i32 0, i32 16
  store i32 %29, i32* %need_here_doc, align 4
  %31 = load i32, i32* @here_doc_first_line, align 4
  %32 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %here_doc_first_line = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %32, i32 0, i32 17
  store i32 %31, i32* %here_doc_first_line, align 4
  %33 = load i32, i32* @need_here_doc, align 4
  %cmp6 = icmp eq i32 %33, 0
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end3
  %34 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %redir_stack = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %34, i32 0, i32 18
  %arrayidx = getelementptr inbounds [16 x %struct.redirect*], [16 x %struct.redirect*]* %redir_stack, i32 0, i32 0
  store %struct.redirect* null, %struct.redirect** %arrayidx, align 4
  br label %if.end9

if.else:                                          ; preds = %if.end3
  %35 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %redir_stack8 = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %35, i32 0, i32 18
  %arraydecay = getelementptr inbounds [16 x %struct.redirect*], [16 x %struct.redirect*]* %redir_stack8, i32 0, i32 0
  %36 = bitcast %struct.redirect** %arraydecay to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %36, i8* bitcast ([16 x %struct.redirect*]* @redir_stack to i8*), i32 64, i32 4, i1 false)
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  %37 = load i8*, i8** @token, align 4
  %38 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %38, i32 0, i32 2
  store i8* %37, i8** %token, align 4
  %39 = load i32, i32* @token_buffer_size, align 4
  %40 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token_buffer_size = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %40, i32 0, i32 3
  store i32 %39, i32* %token_buffer_size, align 4
  store i8* null, i8** @token, align 4
  store i32 0, i32* @token_buffer_size, align 4
  %41 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  store %struct._sh_parser_state_t* %41, %struct._sh_parser_state_t** %retval, align 4
  br label %return

return:                                           ; preds = %if.end9, %if.then2
  %42 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %retval, align 4
  ret %struct._sh_parser_state_t* %42
}

declare i8* @get_string_value(i8*) #1

declare i32 @parse_and_execute(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define void @restore_parser_state(%struct._sh_parser_state_t* %ps) #0 {
entry:
  %ps.addr = alloca %struct._sh_parser_state_t*, align 4
  %i = alloca i32, align 4
  store %struct._sh_parser_state_t* %ps, %struct._sh_parser_state_t** %ps.addr, align 4
  %0 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %cmp = icmp eq %struct._sh_parser_state_t* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %parser_state = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %1, i32 0, i32 0
  %2 = load i32, i32* %parser_state, align 4
  store i32 %2, i32* @parser_state, align 4
  %3 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token_state = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %3, i32 0, i32 1
  %4 = load i32*, i32** %token_state, align 4
  %tobool = icmp ne i32* %4, null
  br i1 %tobool, label %if.then1, label %if.end4

if.then1:                                         ; preds = %if.end
  %5 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token_state2 = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %5, i32 0, i32 1
  %6 = load i32*, i32** %token_state2, align 4
  call void @restore_token_state(i32* %6)
  %7 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token_state3 = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %7, i32 0, i32 1
  %8 = load i32*, i32** %token_state3, align 4
  %9 = bitcast i32* %8 to i8*
  call void @sh_xfree(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6368)
  br label %if.end4

if.end4:                                          ; preds = %if.then1, %if.end
  %10 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %input_line_terminator = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %10, i32 0, i32 4
  %11 = load i32, i32* %input_line_terminator, align 4
  store i32 %11, i32* @shell_input_line_terminator, align 4
  %12 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %eof_encountered = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %12, i32 0, i32 5
  %13 = load i32, i32* %eof_encountered, align 4
  store i32 %13, i32* @eof_encountered, align 4
  %14 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %prompt_string_pointer = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %14, i32 0, i32 6
  %15 = load i8**, i8*** %prompt_string_pointer, align 4
  store i8** %15, i8*** @prompt_string_pointer, align 4
  %16 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %current_command_line_count = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %16, i32 0, i32 7
  %17 = load i32, i32* %current_command_line_count, align 4
  store i32 %17, i32* @current_command_line_count, align 4
  %18 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %remember_on_history = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %18, i32 0, i32 8
  %19 = load i32, i32* %remember_on_history, align 4
  store i32 %19, i32* @remember_on_history, align 4
  %20 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %history_expansion_inhibited = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %20, i32 0, i32 9
  %21 = load i32, i32* %history_expansion_inhibited, align 4
  store i32 %21, i32* @history_expansion_inhibited, align 4
  %22 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %last_command_exit_value = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %22, i32 0, i32 10
  %23 = load i32, i32* %last_command_exit_value, align 4
  store i32 %23, i32* @last_command_exit_value, align 4
  %24 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %pipestatus = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %24, i32 0, i32 11
  %25 = load %struct.array*, %struct.array** %pipestatus, align 4
  call void @restore_pipestatus_array(%struct.array* %25)
  %26 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %last_shell_builtin = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %26, i32 0, i32 12
  %27 = load i32 (%struct.word_list*)*, i32 (%struct.word_list*)** %last_shell_builtin, align 4
  store i32 (%struct.word_list*)* %27, i32 (%struct.word_list*)** @last_shell_builtin, align 4
  %28 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %this_shell_builtin = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %28, i32 0, i32 13
  %29 = load i32 (%struct.word_list*)*, i32 (%struct.word_list*)** %this_shell_builtin, align 4
  store i32 (%struct.word_list*)* %29, i32 (%struct.word_list*)** @this_shell_builtin, align 4
  %30 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %expand_aliases = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %30, i32 0, i32 14
  %31 = load i32, i32* %expand_aliases, align 4
  store i32 %31, i32* @expand_aliases, align 4
  %32 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %echo_input_at_read = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %32, i32 0, i32 15
  %33 = load i32, i32* %echo_input_at_read, align 4
  store i32 %33, i32* @echo_input_at_read, align 4
  %34 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %need_here_doc = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %34, i32 0, i32 16
  %35 = load i32, i32* %need_here_doc, align 4
  store i32 %35, i32* @need_here_doc, align 4
  %36 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %here_doc_first_line = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %36, i32 0, i32 17
  %37 = load i32, i32* %here_doc_first_line, align 4
  store i32 %37, i32* @here_doc_first_line, align 4
  %38 = load i32, i32* @need_here_doc, align 4
  %cmp5 = icmp eq i32 %38, 0
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end4
  store %struct.redirect* null, %struct.redirect** getelementptr inbounds ([16 x %struct.redirect*], [16 x %struct.redirect*]* @redir_stack, i32 0, i32 0), align 4
  br label %if.end7

if.else:                                          ; preds = %if.end4
  %39 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %redir_stack = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %39, i32 0, i32 18
  %arraydecay = getelementptr inbounds [16 x %struct.redirect*], [16 x %struct.redirect*]* %redir_stack, i32 0, i32 0
  %40 = bitcast %struct.redirect** %arraydecay to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast ([16 x %struct.redirect*]* @redir_stack to i8*), i8* %40, i32 64, i32 4, i1 false)
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %do.body

do.body:                                          ; preds = %if.end7
  %41 = load i8*, i8** @token, align 4
  %tobool8 = icmp ne i8* %41, null
  br i1 %tobool8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %do.body
  %42 = load i8*, i8** @token, align 4
  call void @sh_xfree(i8* %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6408)
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end10
  %43 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %43, i32 0, i32 2
  %44 = load i8*, i8** %token, align 4
  store i8* %44, i8** @token, align 4
  %45 = load %struct._sh_parser_state_t*, %struct._sh_parser_state_t** %ps.addr, align 4
  %token_buffer_size = getelementptr inbounds %struct._sh_parser_state_t, %struct._sh_parser_state_t* %45, i32 0, i32 3
  %46 = load i32, i32* %token_buffer_size, align 4
  store i32 %46, i32* @token_buffer_size, align 4
  br label %return

return:                                           ; preds = %do.end, %if.then
  ret void
}

declare %struct.variable* @bind_variable(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define void @push_token(i32 %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* @token_before_that, align 4
  store i32 %0, i32* @two_tokens_ago, align 4
  %1 = load i32, i32* @last_read_token, align 4
  store i32 %1, i32* @token_before_that, align 4
  %2 = load i32, i32* @current_token, align 4
  store i32 %2, i32* @last_read_token, align 4
  %3 = load i32, i32* %x.addr, align 4
  store i32 %3, i32* @current_token, align 4
  ret void
}

; Function Attrs: noinline nounwind
define void @gather_here_documents() #0 {
entry:
  %r = alloca i32, align 4
  store i32 0, i32* %r, align 4
  store i32 1, i32* @here_doc_first_line, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* @need_here_doc, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* @parser_state, align 4
  %or = or i32 %1, 131072
  store i32 %or, i32* @parser_state, align 4
  %2 = load i32, i32* %r, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %r, align 4
  %arrayidx = getelementptr inbounds [16 x %struct.redirect*], [16 x %struct.redirect*]* @redir_stack, i32 0, i32 %2
  %3 = load %struct.redirect*, %struct.redirect** %arrayidx, align 4
  %4 = load i32, i32* @line_number, align 4
  call void @make_here_document(%struct.redirect* %3, i32 %4)
  %5 = load i32, i32* @parser_state, align 4
  %and = and i32 %5, -131073
  store i32 %and, i32* @parser_state, align 4
  %6 = load i32, i32* @need_here_doc, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* @need_here_doc, align 4
  %7 = load i32, i32* %r, align 4
  %sub = sub nsw i32 %7, 1
  %arrayidx1 = getelementptr inbounds [16 x %struct.redirect*], [16 x %struct.redirect*]* @redir_stack, i32 0, i32 %sub
  store %struct.redirect* null, %struct.redirect** %arrayidx1, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* @here_doc_first_line, align 4
  ret void
}

declare void @make_here_document(%struct.redirect*, i32) #1

; Function Attrs: noinline nounwind
define void @reset_parser() #0 {
entry:
  store i32 0, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  store i32 0, i32* @open_brace_count, align 4
  %0 = load i32, i32* @parser_state, align 4
  %and = and i32 %0, 4096
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @global_extglob, align 4
  store i32 %1, i32* @extended_glob, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* @parser_state, align 4
  store i32 0, i32* @here_doc_first_line, align 4
  %2 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool1 = icmp ne %struct.string_saver* %2, null
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @free_string_list()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load i8*, i8** @shell_input_line, align 4
  %tobool4 = icmp ne i8* %3, null
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %4 = load i8*, i8** @shell_input_line, align 4
  call void @sh_xfree(i8* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3047)
  store i8* null, i8** @shell_input_line, align 4
  store i32 0, i32* @shell_input_line_index, align 4
  store i32 0, i32* @shell_input_line_size, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end3
  br label %do.body

do.body:                                          ; preds = %if.end6
  %5 = load %struct.word_desc*, %struct.word_desc** @word_desc_to_read, align 4
  %tobool7 = icmp ne %struct.word_desc* %5, null
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %do.body
  %6 = load %struct.word_desc*, %struct.word_desc** @word_desc_to_read, align 4
  %7 = bitcast %struct.word_desc* %6 to i8*
  call void @sh_xfree(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3052)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end9
  store %struct.word_desc* null, %struct.word_desc** @word_desc_to_read, align 4
  store i32 0, i32* @eol_ungetc_lookahead, align 4
  store i32 10, i32* @current_token, align 4
  store i32 10, i32* @last_read_token, align 4
  store i32 10, i32* @token_to_read, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i8* @xparse_dolparen(i8* %base, i8* %string, i32* %indp, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %base.addr = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %indp.addr = alloca i32*, align 4
  %flags.addr = alloca i32, align 4
  %ps = alloca %struct._sh_parser_state_t, align 4
  %ls = alloca %struct._sh_input_line_state_t, align 4
  %orig_ind = alloca i32, align 4
  %nc = alloca i32, align 4
  %sflags = alloca i32, align 4
  %orig_eof_token = alloca i32, align 4
  %ret = alloca i8*, align 4
  %s = alloca i8*, align 4
  %ep = alloca i8*, align 4
  %ostring = alloca i8*, align 4
  store i8* %base, i8** %base.addr, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %indp, i32** %indp.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32*, i32** %indp.addr, align 4
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %orig_ind, align 4
  %2 = load i8*, i8** %string.addr, align 4
  store i8* %2, i8** %ostring, align 4
  store i32 13, i32* %sflags, align 4
  %3 = load i32, i32* %flags.addr, align 4
  %and = and i32 %3, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %sflags, align 4
  %or = or i32 %4, 64
  store i32 %or, i32* %sflags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call = call %struct._sh_parser_state_t* @save_parser_state(%struct._sh_parser_state_t* %ps)
  %call1 = call %struct._sh_input_line_state_t* @save_input_line_state(%struct._sh_input_line_state_t* %ls)
  %5 = load i32, i32* @shell_eof_token, align 4
  store i32 %5, i32* %orig_eof_token, align 4
  %6 = load i32, i32* @parser_state, align 4
  %or2 = or i32 %6, 32832
  store i32 %or2, i32* @parser_state, align 4
  store i32 41, i32* @shell_eof_token, align 4
  %7 = load i8*, i8** %string.addr, align 4
  %8 = load i32, i32* %sflags, align 4
  %call3 = call i32 @parse_string(i8* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i32 0, i32 0), i32 %8, i8** %ep)
  store i32 %call3, i32* %nc, align 4
  %9 = load i32, i32* %orig_eof_token, align 4
  store i32 %9, i32* @shell_eof_token, align 4
  call void @restore_parser_state(%struct._sh_parser_state_t* %ps)
  call void @reset_parser()
  call void @restore_input_line_state(%struct._sh_input_line_state_t* %ls)
  store i32 0, i32* @token_to_read, align 4
  %10 = load i32, i32* %nc, align 4
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %11 = load i32, i32* %nc, align 4
  %sub = sub nsw i32 0, %11
  call void @jump_to_top_level(i32 %sub) #5
  unreachable

if.end5:                                          ; preds = %if.end
  %12 = load i8*, i8** %ep, align 4
  %arrayidx = getelementptr inbounds i8, i8* %12, i32 -1
  %13 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %13 to i32
  %cmp6 = icmp ne i32 %conv, 41
  br i1 %cmp6, label %if.then8, label %if.end15

if.then8:                                         ; preds = %if.end5
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then8
  %14 = load i8*, i8** %ep, align 4
  %15 = load i8*, i8** %ostring, align 4
  %cmp9 = icmp ugt i8* %14, %15
  br i1 %cmp9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %16 = load i8*, i8** %ep, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %16, i32 -1
  %17 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %17 to i32
  %cmp13 = icmp eq i32 %conv12, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp13, %land.rhs ]
  br i1 %18, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %19 = load i8*, i8** %ep, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 -1
  store i8* %incdec.ptr, i8** %ep, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end15

if.end15:                                         ; preds = %while.end, %if.end5
  %20 = load i8*, i8** %ep, align 4
  %21 = load i8*, i8** %ostring, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %21 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i32 %sub.ptr.sub, i32* %nc, align 4
  %22 = load i8*, i8** %ep, align 4
  %23 = load i8*, i8** %base.addr, align 4
  %sub.ptr.lhs.cast16 = ptrtoint i8* %22 to i32
  %sub.ptr.rhs.cast17 = ptrtoint i8* %23 to i32
  %sub.ptr.sub18 = sub i32 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17
  %sub19 = sub nsw i32 %sub.ptr.sub18, 1
  %24 = load i32*, i32** %indp.addr, align 4
  store i32 %sub19, i32* %24, align 4
  %25 = load i32, i32* %flags.addr, align 4
  %and20 = and i32 %25, 1
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end15
  store i8* null, i8** %retval, align 4
  br label %return

if.end23:                                         ; preds = %if.end15
  %26 = load i32, i32* %nc, align 4
  %cmp24 = icmp eq i32 %26, 0
  br i1 %cmp24, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end23
  %call27 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4278)
  store i8* %call27, i8** %ret, align 4
  %27 = load i8*, i8** %ret, align 4
  %arrayidx28 = getelementptr inbounds i8, i8* %27, i32 0
  store i8 0, i8* %arrayidx28, align 1
  br label %if.end31

if.else:                                          ; preds = %if.end23
  %28 = load i8*, i8** %ostring, align 4
  %29 = load i32, i32* %nc, align 4
  %sub29 = sub nsw i32 %29, 1
  %call30 = call i8* @substring(i8* %28, i32 0, i32 %sub29)
  store i8* %call30, i8** %ret, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then26
  %30 = load i8*, i8** %ret, align 4
  store i8* %30, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end31, %if.then22
  %31 = load i8*, i8** %retval, align 4
  ret i8* %31
}

; Function Attrs: noinline nounwind
define %struct._sh_input_line_state_t* @save_input_line_state(%struct._sh_input_line_state_t* %ls) #0 {
entry:
  %retval = alloca %struct._sh_input_line_state_t*, align 4
  %ls.addr = alloca %struct._sh_input_line_state_t*, align 4
  store %struct._sh_input_line_state_t* %ls, %struct._sh_input_line_state_t** %ls.addr, align 4
  %0 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %cmp = icmp eq %struct._sh_input_line_state_t* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i8* @sh_xmalloc(i32 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6418)
  %1 = bitcast i8* %call to %struct._sh_input_line_state_t*
  store %struct._sh_input_line_state_t* %1, %struct._sh_input_line_state_t** %ls.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %cmp1 = icmp eq %struct._sh_input_line_state_t* %2, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store %struct._sh_input_line_state_t* null, %struct._sh_input_line_state_t** %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %3 = load i8*, i8** @shell_input_line, align 4
  %4 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %4, i32 0, i32 0
  store i8* %3, i8** %input_line, align 4
  %5 = load i32, i32* @shell_input_line_size, align 4
  %6 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line_size = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %6, i32 0, i32 2
  store i32 %5, i32* %input_line_size, align 4
  %7 = load i32, i32* @shell_input_line_len, align 4
  %8 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line_len = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %8, i32 0, i32 3
  store i32 %7, i32* %input_line_len, align 4
  %9 = load i32, i32* @shell_input_line_index, align 4
  %10 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line_index = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %10, i32 0, i32 1
  store i32 %9, i32* %input_line_index, align 4
  store i8* null, i8** @shell_input_line, align 4
  store i32 0, i32* @shell_input_line_index, align 4
  store i32 0, i32* @shell_input_line_len, align 4
  store i32 0, i32* @shell_input_line_size, align 4
  %11 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  store %struct._sh_input_line_state_t* %11, %struct._sh_input_line_state_t** %retval, align 4
  br label %return

return:                                           ; preds = %if.end3, %if.then2
  %12 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %retval, align 4
  ret %struct._sh_input_line_state_t* %12
}

declare i32 @parse_string(i8*, i8*, i32, i8**) #1

; Function Attrs: noinline nounwind
define void @restore_input_line_state(%struct._sh_input_line_state_t* %ls) #0 {
entry:
  %ls.addr = alloca %struct._sh_input_line_state_t*, align 4
  store %struct._sh_input_line_state_t* %ls, %struct._sh_input_line_state_t** %ls.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i8*, i8** @shell_input_line, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %1 = load i8*, i8** @shell_input_line, align 4
  call void @sh_xfree(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6438)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %2 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %2, i32 0, i32 0
  %3 = load i8*, i8** %input_line, align 4
  store i8* %3, i8** @shell_input_line, align 4
  %4 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line_size = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %4, i32 0, i32 2
  %5 = load i32, i32* %input_line_size, align 4
  store i32 %5, i32* @shell_input_line_size, align 4
  %6 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line_len = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %6, i32 0, i32 3
  %7 = load i32, i32* %input_line_len, align 4
  store i32 %7, i32* @shell_input_line_len, align 4
  %8 = load %struct._sh_input_line_state_t*, %struct._sh_input_line_state_t** %ls.addr, align 4
  %input_line_index = getelementptr inbounds %struct._sh_input_line_state_t, %struct._sh_input_line_state_t* %8, i32 0, i32 1
  %9 = load i32, i32* %input_line_index, align 4
  store i32 %9, i32* @shell_input_line_index, align 4
  call void @set_line_mbstate()
  ret void
}

; Function Attrs: noreturn
declare void @jump_to_top_level(i32) #3

declare i8* @substring(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define i32 @find_reserved_word(i8* %tokstr) #0 {
entry:
  %retval = alloca i32, align 4
  %tokstr.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %tokstr, i8** %tokstr.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %0
  %word = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx, i32 0, i32 0
  %1 = load i8*, i8** %word, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx1, align 1
  %conv = sext i8 %3 to i32
  %4 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %4
  %word3 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx2, i32 0, i32 0
  %5 = load i8*, i8** %word3, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %5, i32 0
  %6 = load i8, i8* %arrayidx4, align 1
  %conv5 = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv, %conv5
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %7 = load i8*, i8** %tokstr.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %8
  %word8 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx7, i32 0, i32 0
  %9 = load i8*, i8** %word8, align 4
  %call = call i32 @strcmp(i8* %7, i8* %9)
  %cmp9 = icmp eq i32 %call, 0
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %10 = load i32, i32* %i, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %12 = load i32, i32* %retval, align 4
  ret i32 %12
}

declare i32 @strcmp(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @parser_in_command_position() #0 {
entry:
  %0 = load i32, i32* @last_read_token, align 4
  %cmp = icmp eq i32 %0, 281
  br i1 %cmp, label %lor.end29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @parser_state, align 4
  %and = and i32 %1, 524288
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %lor.rhs22

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i32, i32* @last_read_token, align 4
  %cmp1 = icmp eq i32 %2, 60
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* @last_read_token, align 4
  %cmp3 = icmp eq i32 %3, 62
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %4 = load i32, i32* @last_read_token, align 4
  %cmp5 = icmp eq i32 %4, 289
  br i1 %cmp5, label %lor.end, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %5 = load i32, i32* @last_read_token, align 4
  %cmp7 = icmp eq i32 %5, 301
  br i1 %cmp7, label %lor.end, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %6 = load i32, i32* @last_read_token, align 4
  %cmp9 = icmp eq i32 %6, 300
  br i1 %cmp9, label %lor.end, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %7 = load i32, i32* @last_read_token, align 4
  %cmp11 = icmp eq i32 %7, 297
  br i1 %cmp11, label %lor.end, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %8 = load i32, i32* @last_read_token, align 4
  %cmp13 = icmp eq i32 %8, 290
  br i1 %cmp13, label %lor.end, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %9 = load i32, i32* @last_read_token, align 4
  %cmp15 = icmp eq i32 %9, 292
  br i1 %cmp15, label %lor.end, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %lor.lhs.false14
  %10 = load i32, i32* @last_read_token, align 4
  %cmp17 = icmp eq i32 %10, 291
  br i1 %cmp17, label %lor.end, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %lor.lhs.false16
  %11 = load i32, i32* @last_read_token, align 4
  %cmp19 = icmp eq i32 %11, 293
  br i1 %cmp19, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false18
  %12 = load i32, i32* @last_read_token, align 4
  %cmp20 = icmp eq i32 %12, 298
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false18, %lor.lhs.false16, %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %land.lhs.true
  %13 = phi i1 [ true, %lor.lhs.false18 ], [ true, %lor.lhs.false16 ], [ true, %lor.lhs.false14 ], [ true, %lor.lhs.false12 ], [ true, %lor.lhs.false10 ], [ true, %lor.lhs.false8 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %land.lhs.true ], [ %cmp20, %lor.rhs ]
  %lor.ext = zext i1 %13 to i32
  %cmp21 = icmp eq i32 %lor.ext, 0
  br i1 %cmp21, label %lor.end29, label %lor.rhs22

lor.rhs22:                                        ; preds = %lor.end, %lor.lhs.false
  %14 = load i32, i32* @last_read_token, align 4
  %cmp23 = icmp ne i32 %14, 294
  br i1 %cmp23, label %land.lhs.true24, label %land.end

land.lhs.true24:                                  ; preds = %lor.rhs22
  %15 = load i32, i32* @last_read_token, align 4
  %cmp25 = icmp ne i32 %15, 295
  br i1 %cmp25, label %land.lhs.true26, label %land.end

land.lhs.true26:                                  ; preds = %land.lhs.true24
  %16 = load i32, i32* @last_read_token, align 4
  %cmp27 = icmp ne i32 %16, 296
  br i1 %cmp27, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true26
  %17 = load i32, i32* @last_read_token, align 4
  %call = call i32 @reserved_word_acceptable(i32 %17)
  %tobool28 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true26, %land.lhs.true24, %lor.rhs22
  %18 = phi i1 [ false, %land.lhs.true26 ], [ false, %land.lhs.true24 ], [ false, %lor.rhs22 ], [ %tobool28, %land.rhs ]
  br label %lor.end29

lor.end29:                                        ; preds = %land.end, %lor.end, %entry
  %19 = phi i1 [ true, %lor.end ], [ true, %entry ], [ %18, %land.end ]
  %lor.ext30 = zext i1 %19 to i32
  ret i32 %lor.ext30
}

; Function Attrs: noinline nounwind
define internal i32 @reserved_word_acceptable(i32 %toksym) #0 {
entry:
  %retval = alloca i32, align 4
  %toksym.addr = alloca i32, align 4
  store i32 %toksym, i32* %toksym.addr, align 4
  %0 = load i32, i32* %toksym.addr, align 4
  switch i32 %0, label %sw.default [
    i32 10, label %sw.bb
    i32 59, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 124, label %sw.bb
    i32 38, label %sw.bb
    i32 123, label %sw.bb
    i32 125, label %sw.bb
    i32 287, label %sw.bb
    i32 276, label %sw.bb
    i32 302, label %sw.bb
    i32 268, label %sw.bb
    i32 269, label %sw.bb
    i32 260, label %sw.bb
    i32 259, label %sw.bb
    i32 263, label %sw.bb
    i32 261, label %sw.bb
    i32 257, label %sw.bb
    i32 288, label %sw.bb
    i32 294, label %sw.bb
    i32 295, label %sw.bb
    i32 296, label %sw.bb
    i32 258, label %sw.bb
    i32 277, label %sw.bb
    i32 278, label %sw.bb
    i32 279, label %sw.bb
    i32 271, label %sw.bb
    i32 267, label %sw.bb
    i32 266, label %sw.bb
    i32 0, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %retval, align 4
  br label %return

sw.default:                                       ; preds = %entry
  %1 = load i32, i32* @last_read_token, align 4
  %cmp = icmp eq i32 %1, 280
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.default
  %2 = load i32, i32* @token_before_that, align 4
  %cmp1 = icmp eq i32 %2, 271
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.default
  %3 = load i32, i32* @last_read_token, align 4
  %cmp2 = icmp eq i32 %3, 280
  br i1 %cmp2, label %land.lhs.true3, label %if.end6

land.lhs.true3:                                   ; preds = %if.end
  %4 = load i32, i32* @token_before_that, align 4
  %cmp4 = icmp eq i32 %4, 270
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true3
  store i32 1, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end6, %if.then5, %if.then, %sw.bb
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind
define i8* @history_delimiting_chars(i8* %line) #0 {
entry:
  %retval = alloca i8*, align 4
  %line.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %line, i8** %line.addr, align 4
  %0 = load i32, i32* @parser_state, align 4
  %and = and i32 %0, 131072
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @history_delimiting_chars.last_was_heredoc, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %cmp1 = icmp ne i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  %2 = load i32, i32* @parser_state, align 4
  %and4 = and i32 %2, 131072
  %tobool = icmp ne i32 %and4, 0
  br i1 %tobool, label %if.then5, label %if.end10

if.then5:                                         ; preds = %if.end3
  %3 = load i32, i32* @history_delimiting_chars.last_was_heredoc, align 4
  %tobool6 = icmp ne i32 %3, 0
  br i1 %tobool6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.then5
  store i32 0, i32* @history_delimiting_chars.last_was_heredoc, align 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end8:                                          ; preds = %if.then5
  %4 = load i32, i32* @here_doc_first_line, align 4
  %tobool9 = icmp ne i32 %4, 0
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.55, i32 0, i32 0)
  store i8* %cond, i8** %retval, align 4
  br label %return

if.end10:                                         ; preds = %if.end3
  %5 = load i32, i32* @parser_state, align 4
  %and11 = and i32 %5, 8192
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end10
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.end10
  %6 = load i32, i32* @token_before_that, align 4
  %cmp15 = icmp eq i32 %6, 41
  br i1 %cmp15, label %if.then16, label %if.else23

if.then16:                                        ; preds = %if.end14
  %7 = load i32, i32* @two_tokens_ago, align 4
  %cmp17 = icmp eq i32 %7, 40
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.then16
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then16
  %8 = load i32, i32* @parser_state, align 4
  %and19 = and i32 %8, 128
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %if.else22

if.then21:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else22:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else23:                                        ; preds = %if.end14
  %9 = load i32, i32* @token_before_that, align 4
  %cmp24 = icmp eq i32 %9, 280
  br i1 %cmp24, label %land.lhs.true, label %if.else27

land.lhs.true:                                    ; preds = %if.else23
  %10 = load i32, i32* @two_tokens_ago, align 4
  %cmp25 = icmp eq i32 %10, 270
  br i1 %cmp25, label %if.then26, label %if.else27

if.then26:                                        ; preds = %land.lhs.true
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else27:                                        ; preds = %land.lhs.true, %if.else23
  %11 = load i32, i32* @parser_state, align 4
  %and28 = and i32 %11, 131072
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %land.lhs.true30, label %if.else37

land.lhs.true30:                                  ; preds = %if.else27
  %12 = load i32, i32* @current_command_line_count, align 4
  %cmp31 = icmp sgt i32 %12, 1
  br i1 %cmp31, label %land.lhs.true32, label %if.else37

land.lhs.true32:                                  ; preds = %land.lhs.true30
  %13 = load i32, i32* @last_read_token, align 4
  %cmp33 = icmp eq i32 %13, 10
  br i1 %cmp33, label %land.lhs.true34, label %if.else37

land.lhs.true34:                                  ; preds = %land.lhs.true32
  %14 = load i8*, i8** %line.addr, align 4
  %call = call i8* @strstr(i8* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i32 0, i32 0))
  %tobool35 = icmp ne i8* %call, null
  br i1 %tobool35, label %if.then36, label %if.else37

if.then36:                                        ; preds = %land.lhs.true34
  store i32 1, i32* @history_delimiting_chars.last_was_heredoc, align 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else37:                                        ; preds = %land.lhs.true34, %land.lhs.true32, %land.lhs.true30, %if.else27
  %15 = load i32, i32* @parser_state, align 4
  %and38 = and i32 %15, 131072
  %cmp39 = icmp eq i32 %and38, 0
  br i1 %cmp39, label %land.lhs.true40, label %if.else45

land.lhs.true40:                                  ; preds = %if.else37
  %16 = load i32, i32* @current_command_line_count, align 4
  %cmp41 = icmp sgt i32 %16, 1
  br i1 %cmp41, label %land.lhs.true42, label %if.else45

land.lhs.true42:                                  ; preds = %land.lhs.true40
  %17 = load i32, i32* @need_here_doc, align 4
  %cmp43 = icmp sgt i32 %17, 0
  br i1 %cmp43, label %if.then44, label %if.else45

if.then44:                                        ; preds = %land.lhs.true42
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else45:                                        ; preds = %land.lhs.true42, %land.lhs.true40, %if.else37
  %18 = load i32, i32* @token_before_that, align 4
  %cmp46 = icmp eq i32 %18, 280
  br i1 %cmp46, label %land.lhs.true47, label %if.else71

land.lhs.true47:                                  ; preds = %if.else45
  %19 = load i32, i32* @two_tokens_ago, align 4
  %cmp48 = icmp eq i32 %19, 264
  br i1 %cmp48, label %if.then49, label %if.else71

if.then49:                                        ; preds = %land.lhs.true47
  %20 = load i32, i32* @shell_input_line_index, align 4
  store i32 %20, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then49
  %21 = load i8*, i8** @shell_input_line, align 4
  %22 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %21, i32 %22
  %23 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %23 to i32
  %cmp50 = icmp eq i32 %conv, 32
  br i1 %cmp50, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.cond
  %24 = load i8*, i8** @shell_input_line, align 4
  %25 = load i32, i32* %i, align 4
  %arrayidx52 = getelementptr inbounds i8, i8* %24, i32 %25
  %26 = load i8, i8* %arrayidx52, align 1
  %conv53 = sext i8 %26 to i32
  %cmp54 = icmp eq i32 %conv53, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %27 = phi i1 [ true, %for.cond ], [ %cmp54, %lor.rhs ]
  br i1 %27, label %for.body, label %for.end

for.body:                                         ; preds = %lor.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %28 = load i32, i32* %i, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %lor.end
  %29 = load i8*, i8** @shell_input_line, align 4
  %30 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %29, i32 %30
  %31 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %31 to i32
  %tobool58 = icmp ne i32 %conv57, 0
  br i1 %tobool58, label %land.lhs.true59, label %if.end70

land.lhs.true59:                                  ; preds = %for.end
  %32 = load i8*, i8** @shell_input_line, align 4
  %33 = load i32, i32* %i, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %32, i32 %33
  %34 = load i8, i8* %arrayidx60, align 1
  %conv61 = sext i8 %34 to i32
  %cmp62 = icmp eq i32 %conv61, 105
  br i1 %cmp62, label %land.lhs.true64, label %if.end70

land.lhs.true64:                                  ; preds = %land.lhs.true59
  %35 = load i8*, i8** @shell_input_line, align 4
  %36 = load i32, i32* %i, align 4
  %add = add nsw i32 %36, 1
  %arrayidx65 = getelementptr inbounds i8, i8* %35, i32 %add
  %37 = load i8, i8* %arrayidx65, align 1
  %conv66 = sext i8 %37 to i32
  %cmp67 = icmp eq i32 %conv66, 110
  br i1 %cmp67, label %if.then69, label %if.end70

if.then69:                                        ; preds = %land.lhs.true64
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end70:                                         ; preds = %land.lhs.true64, %land.lhs.true59, %for.end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.else71:                                        ; preds = %land.lhs.true47, %if.else45
  %38 = load i32, i32* @two_tokens_ago, align 4
  %cmp72 = icmp eq i32 %38, 262
  br i1 %cmp72, label %land.lhs.true74, label %if.end81

land.lhs.true74:                                  ; preds = %if.else71
  %39 = load i32, i32* @token_before_that, align 4
  %cmp75 = icmp eq i32 %39, 280
  br i1 %cmp75, label %land.lhs.true77, label %if.end81

land.lhs.true77:                                  ; preds = %land.lhs.true74
  %40 = load i32, i32* @parser_state, align 4
  %and78 = and i32 %40, 128
  %tobool79 = icmp ne i32 %and78, 0
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %land.lhs.true77
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end81:                                         ; preds = %land.lhs.true77, %land.lhs.true74, %if.else71
  br label %if.end82

if.end82:                                         ; preds = %if.end81
  br label %if.end83

if.end83:                                         ; preds = %if.end82
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  br label %if.end85

if.end85:                                         ; preds = %if.end84
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  store i32 0, i32* %i, align 4
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc96, %if.end86
  %41 = load i32, i32* %i, align 4
  %arrayidx88 = getelementptr inbounds [21 x i32], [21 x i32]* @no_semi_successors, i32 0, i32 %41
  %42 = load i32, i32* %arrayidx88, align 4
  %tobool89 = icmp ne i32 %42, 0
  br i1 %tobool89, label %for.body90, label %for.end98

for.body90:                                       ; preds = %for.cond87
  %43 = load i32, i32* @token_before_that, align 4
  %44 = load i32, i32* %i, align 4
  %arrayidx91 = getelementptr inbounds [21 x i32], [21 x i32]* @no_semi_successors, i32 0, i32 %44
  %45 = load i32, i32* %arrayidx91, align 4
  %cmp92 = icmp eq i32 %43, %45
  br i1 %cmp92, label %if.then94, label %if.end95

if.then94:                                        ; preds = %for.body90
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i32 0, i32 0), i8** %retval, align 4
  br label %return

if.end95:                                         ; preds = %for.body90
  br label %for.inc96

for.inc96:                                        ; preds = %if.end95
  %46 = load i32, i32* %i, align 4
  %inc97 = add nsw i32 %46, 1
  store i32 %inc97, i32* %i, align 4
  br label %for.cond87

for.end98:                                        ; preds = %for.cond87
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i8** %retval, align 4
  br label %return

return:                                           ; preds = %for.end98, %if.then94, %if.then80, %if.end70, %if.then69, %if.then44, %if.then36, %if.then26, %if.else22, %if.then21, %if.then18, %if.then13, %if.end8, %if.then7, %if.then2
  %47 = load i8*, i8** %retval, align 4
  ret i8* %47
}

declare i8* @strstr(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i32 @get_current_prompt_level() #0 {
entry:
  %0 = load i8*, i8** @current_prompt_string, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** @current_prompt_string, align 4
  %2 = load i8*, i8** @ps2_prompt, align 4
  %cmp = icmp eq i8* %1, %2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %cond = select i1 %3, i32 2, i32 1
  ret i32 %cond
}

; Function Attrs: noinline nounwind
define void @set_current_prompt_level(i32 %x) #0 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  %0 = load i32, i32* %x.addr, align 4
  %cmp = icmp eq i32 %0, 2
  %cond = select i1 %cmp, i8** @ps2_prompt, i8** @ps1_prompt
  store i8** %cond, i8*** @prompt_string_pointer, align 4
  %1 = load i8**, i8*** @prompt_string_pointer, align 4
  %2 = load i8*, i8** %1, align 4
  store i8* %2, i8** @current_prompt_string, align 4
  ret void
}

; Function Attrs: noinline nounwind
define i8* @decode_prompt_string(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %list = alloca %struct.word_list*, align 4
  %result = alloca i8*, align 4
  %t = alloca i8*, align 4
  %save_dstack = alloca %struct.dstack, align 4
  %last_exit_value = alloca i32, align 4
  %last_comsub_pid = alloca i32, align 4
  %result_size = alloca i32, align 4
  %result_index = alloca i32, align 4
  %c = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i8*, align 4
  %t_host = alloca i8*, align 4
  %octal_string = alloca [4 x i8], align 1
  %tm = alloca %struct.tm*, align 4
  %the_time = alloca i32, align 4
  %timebuf = alloca [128 x i8], align 1
  %timefmt = alloca i8*, align 4
  %t_string = alloca [4096 x i8], align 1
  %tlen = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 48, i32* %result_size, align 4
  %call = call i8* @sh_xmalloc(i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5470)
  store i8* %call, i8** %result, align 4
  %0 = load i8*, i8** %result, align 4
  store i32 0, i32* %result_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 0
  store i8 0, i8* %arrayidx, align 1
  store i8* null, i8** %temp, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end453, %entry
  %1 = load i8*, i8** %string.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1
  store i8* %incdec.ptr, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  store i32 %conv, i32* %c, align 4
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %while.body, label %while.end454

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* @posixly_correct, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %4 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %4, 33
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv3 = sext i8 %6 to i32
  %cmp4 = icmp eq i32 %conv3, 33
  br i1 %cmp4, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %call7 = call i8* @sh_xmalloc(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5480)
  %call8 = call i8* @strcpy(i8* %call7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i32 0, i32 0))
  store i8* %call8, i8** %temp, align 4
  br label %add_string

if.else:                                          ; preds = %if.then
  %call9 = call i32 @history_number()
  %conv10 = sext i32 %call9 to i64
  %call11 = call i8* @itos(i64 %conv10)
  store i8* %call11, i8** %temp, align 4
  %7 = load i8*, i8** %string.addr, align 4
  %incdec.ptr12 = getelementptr inbounds i8, i8* %7, i32 -1
  store i8* %incdec.ptr12, i8** %string.addr, align 4
  br label %add_string

if.end:                                           ; preds = %land.lhs.true, %while.body
  %8 = load i32, i32* %c, align 4
  %cmp13 = icmp eq i32 %8, 92
  br i1 %cmp13, label %if.then15, label %if.else427

if.then15:                                        ; preds = %if.end
  %9 = load i8*, i8** %string.addr, align 4
  %10 = load i8, i8* %9, align 1
  %conv16 = sext i8 %10 to i32
  store i32 %conv16, i32* %c, align 4
  %11 = load i32, i32* %c, align 4
  switch i32 %11, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 100, label %sw.bb57
    i32 116, label %sw.bb57
    i32 84, label %sw.bb57
    i32 64, label %sw.bb57
    i32 65, label %sw.bb57
    i32 68, label %sw.bb106
    i32 110, label %sw.bb163
    i32 115, label %sw.bb173
    i32 118, label %sw.bb186
    i32 86, label %sw.bb186
    i32 119, label %sw.bb195
    i32 87, label %sw.bb195
    i32 117, label %sw.bb306
    i32 104, label %sw.bb315
    i32 72, label %sw.bb315
    i32 35, label %sw.bb338
    i32 33, label %sw.bb341
    i32 36, label %sw.bb345
    i32 108, label %sw.bb361
    i32 91, label %sw.bb371
    i32 93, label %sw.bb371
    i32 92, label %sw.bb393
    i32 97, label %sw.bb393
    i32 101, label %sw.bb393
    i32 114, label %sw.bb393
  ]

sw.bb:                                            ; preds = %if.then15, %if.then15, %if.then15, %if.then15, %if.then15, %if.then15, %if.then15, %if.then15
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %octal_string, i32 0, i32 0
  %12 = load i8*, i8** %string.addr, align 4
  %call17 = call i8* @strncpy(i8* %arraydecay, i8* %12, i32 3)
  %arrayidx18 = getelementptr inbounds [4 x i8], [4 x i8]* %octal_string, i32 0, i32 3
  store i8 0, i8* %arrayidx18, align 1
  %arraydecay19 = getelementptr inbounds [4 x i8], [4 x i8]* %octal_string, i32 0, i32 0
  %call20 = call i32 @read_octal(i8* %arraydecay19)
  store i32 %call20, i32* %n, align 4
  %call21 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5512)
  store i8* %call21, i8** %temp, align 4
  %13 = load i32, i32* %n, align 4
  %cmp22 = icmp eq i32 %13, 1
  br i1 %cmp22, label %if.then26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %14 = load i32, i32* %n, align 4
  %cmp24 = icmp eq i32 %14, 127
  br i1 %cmp24, label %if.then26, label %if.else31

if.then26:                                        ; preds = %lor.lhs.false, %sw.bb
  %15 = load i8*, i8** %temp, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %15, i32 0
  store i8 1, i8* %arrayidx27, align 1
  %16 = load i32, i32* %n, align 4
  %conv28 = trunc i32 %16 to i8
  %17 = load i8*, i8** %temp, align 4
  %arrayidx29 = getelementptr inbounds i8, i8* %17, i32 1
  store i8 %conv28, i8* %arrayidx29, align 1
  %18 = load i8*, i8** %temp, align 4
  %arrayidx30 = getelementptr inbounds i8, i8* %18, i32 2
  store i8 0, i8* %arrayidx30, align 1
  br label %if.end42

if.else31:                                        ; preds = %lor.lhs.false
  %19 = load i32, i32* %n, align 4
  %cmp32 = icmp eq i32 %19, -1
  br i1 %cmp32, label %if.then34, label %if.else37

if.then34:                                        ; preds = %if.else31
  %20 = load i8*, i8** %temp, align 4
  %arrayidx35 = getelementptr inbounds i8, i8* %20, i32 0
  store i8 92, i8* %arrayidx35, align 1
  %21 = load i8*, i8** %temp, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %21, i32 1
  store i8 0, i8* %arrayidx36, align 1
  br label %if.end41

if.else37:                                        ; preds = %if.else31
  %22 = load i32, i32* %n, align 4
  %conv38 = trunc i32 %22 to i8
  %23 = load i8*, i8** %temp, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %23, i32 0
  store i8 %conv38, i8* %arrayidx39, align 1
  %24 = load i8*, i8** %temp, align 4
  %arrayidx40 = getelementptr inbounds i8, i8* %24, i32 1
  store i8 0, i8* %arrayidx40, align 1
  br label %if.end41

if.end41:                                         ; preds = %if.else37, %if.then34
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then26
  store i32 0, i32* %c, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end42
  %25 = load i32, i32* %n, align 4
  %cmp43 = icmp ne i32 %25, -1
  br i1 %cmp43, label %land.lhs.true45, label %land.end55

land.lhs.true45:                                  ; preds = %for.cond
  %26 = load i32, i32* %c, align 4
  %cmp46 = icmp slt i32 %26, 3
  br i1 %cmp46, label %land.rhs, label %land.end55

land.rhs:                                         ; preds = %land.lhs.true45
  %27 = load i8*, i8** %string.addr, align 4
  %28 = load i8, i8* %27, align 1
  %conv48 = sext i8 %28 to i32
  %cmp49 = icmp sge i32 %conv48, 48
  br i1 %cmp49, label %land.rhs51, label %land.end

land.rhs51:                                       ; preds = %land.rhs
  %29 = load i8*, i8** %string.addr, align 4
  %30 = load i8, i8* %29, align 1
  %conv52 = sext i8 %30 to i32
  %cmp53 = icmp sle i32 %conv52, 55
  br label %land.end

land.end:                                         ; preds = %land.rhs51, %land.rhs
  %31 = phi i1 [ false, %land.rhs ], [ %cmp53, %land.rhs51 ]
  br label %land.end55

land.end55:                                       ; preds = %land.end, %land.lhs.true45, %for.cond
  %32 = phi i1 [ false, %land.lhs.true45 ], [ false, %for.cond ], [ %31, %land.end ]
  br i1 %32, label %for.body, label %for.end

for.body:                                         ; preds = %land.end55
  %33 = load i8*, i8** %string.addr, align 4
  %incdec.ptr56 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr56, i8** %string.addr, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %c, align 4
  %inc = add nsw i32 %34, 1
  store i32 %inc, i32* %c, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end55
  store i32 0, i32* %c, align 4
  br label %add_string

sw.bb57:                                          ; preds = %if.then15, %if.then15, %if.then15, %if.then15, %if.then15
  %call58 = call i32 @time(i32* %the_time)
  call void @sv_tz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0))
  %call59 = call %struct.tm* @localtime(i32* %the_time)
  store %struct.tm* %call59, %struct.tm** %tm, align 4
  %35 = load i32, i32* %c, align 4
  %cmp60 = icmp eq i32 %35, 100
  br i1 %cmp60, label %if.then62, label %if.else65

if.then62:                                        ; preds = %sw.bb57
  %arraydecay63 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %36 = load %struct.tm*, %struct.tm** %tm, align 4
  %call64 = call i32 @strftime(i8* %arraydecay63, i32 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), %struct.tm* %36)
  store i32 %call64, i32* %n, align 4
  br label %if.end93

if.else65:                                        ; preds = %sw.bb57
  %37 = load i32, i32* %c, align 4
  %cmp66 = icmp eq i32 %37, 116
  br i1 %cmp66, label %if.then68, label %if.else71

if.then68:                                        ; preds = %if.else65
  %arraydecay69 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %38 = load %struct.tm*, %struct.tm** %tm, align 4
  %call70 = call i32 @strftime(i8* %arraydecay69, i32 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), %struct.tm* %38)
  store i32 %call70, i32* %n, align 4
  br label %if.end92

if.else71:                                        ; preds = %if.else65
  %39 = load i32, i32* %c, align 4
  %cmp72 = icmp eq i32 %39, 84
  br i1 %cmp72, label %if.then74, label %if.else77

if.then74:                                        ; preds = %if.else71
  %arraydecay75 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %40 = load %struct.tm*, %struct.tm** %tm, align 4
  %call76 = call i32 @strftime(i8* %arraydecay75, i32 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), %struct.tm* %40)
  store i32 %call76, i32* %n, align 4
  br label %if.end91

if.else77:                                        ; preds = %if.else71
  %41 = load i32, i32* %c, align 4
  %cmp78 = icmp eq i32 %41, 64
  br i1 %cmp78, label %if.then80, label %if.else83

if.then80:                                        ; preds = %if.else77
  %arraydecay81 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %42 = load %struct.tm*, %struct.tm** %tm, align 4
  %call82 = call i32 @strftime(i8* %arraydecay81, i32 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), %struct.tm* %42)
  store i32 %call82, i32* %n, align 4
  br label %if.end90

if.else83:                                        ; preds = %if.else77
  %43 = load i32, i32* %c, align 4
  %cmp84 = icmp eq i32 %43, 65
  br i1 %cmp84, label %if.then86, label %if.end89

if.then86:                                        ; preds = %if.else83
  %arraydecay87 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %44 = load %struct.tm*, %struct.tm** %tm, align 4
  %call88 = call i32 @strftime(i8* %arraydecay87, i32 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), %struct.tm* %44)
  store i32 %call88, i32* %n, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.then86, %if.else83
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then80
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then74
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then68
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then62
  %45 = load i32, i32* %n, align 4
  %cmp94 = icmp eq i32 %45, 0
  br i1 %cmp94, label %if.then96, label %if.else98

if.then96:                                        ; preds = %if.end93
  %arrayidx97 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  store i8 0, i8* %arrayidx97, align 1
  br label %if.end100

if.else98:                                        ; preds = %if.end93
  %arrayidx99 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 127
  store i8 0, i8* %arrayidx99, align 1
  br label %if.end100

if.end100:                                        ; preds = %if.else98, %if.then96
  %arraydecay101 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %call102 = call i32 @strlen(i8* %arraydecay101)
  %add = add i32 1, %call102
  %call103 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5565)
  %arraydecay104 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %call105 = call i8* @strcpy(i8* %call103, i8* %arraydecay104)
  store i8* %call105, i8** %temp, align 4
  br label %add_string

sw.bb106:                                         ; preds = %if.then15
  %46 = load i8*, i8** %string.addr, align 4
  %arrayidx107 = getelementptr inbounds i8, i8* %46, i32 1
  %47 = load i8, i8* %arrayidx107, align 1
  %conv108 = sext i8 %47 to i32
  %cmp109 = icmp ne i32 %conv108, 123
  br i1 %cmp109, label %if.then111, label %if.end112

if.then111:                                       ; preds = %sw.bb106
  br label %not_escape

if.end112:                                        ; preds = %sw.bb106
  %call113 = call i32 @time(i32* %the_time)
  %call114 = call %struct.tm* @localtime(i32* %the_time)
  store %struct.tm* %call114, %struct.tm** %tm, align 4
  %48 = load i8*, i8** %string.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %48, i32 2
  store i8* %add.ptr, i8** %string.addr, align 4
  %49 = load i8*, i8** %string.addr, align 4
  %call115 = call i32 @strlen(i8* %49)
  %add116 = add i32 %call115, 3
  %call117 = call i8* @sh_xmalloc(i32 %add116, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5575)
  store i8* %call117, i8** %timefmt, align 4
  %50 = load i8*, i8** %timefmt, align 4
  store i8* %50, i8** %t, align 4
  br label %for.cond118

for.cond118:                                      ; preds = %for.body126, %if.end112
  %51 = load i8*, i8** %string.addr, align 4
  %52 = load i8, i8* %51, align 1
  %conv119 = sext i8 %52 to i32
  %tobool120 = icmp ne i32 %conv119, 0
  br i1 %tobool120, label %land.rhs121, label %land.end125

land.rhs121:                                      ; preds = %for.cond118
  %53 = load i8*, i8** %string.addr, align 4
  %54 = load i8, i8* %53, align 1
  %conv122 = sext i8 %54 to i32
  %cmp123 = icmp ne i32 %conv122, 125
  br label %land.end125

land.end125:                                      ; preds = %land.rhs121, %for.cond118
  %55 = phi i1 [ false, %for.cond118 ], [ %cmp123, %land.rhs121 ]
  br i1 %55, label %for.body126, label %for.end129

for.body126:                                      ; preds = %land.end125
  %56 = load i8*, i8** %string.addr, align 4
  %incdec.ptr127 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %incdec.ptr127, i8** %string.addr, align 4
  %57 = load i8, i8* %56, align 1
  %58 = load i8*, i8** %t, align 4
  %incdec.ptr128 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr128, i8** %t, align 4
  store i8 %57, i8* %58, align 1
  br label %for.cond118

for.end129:                                       ; preds = %land.end125
  %59 = load i8*, i8** %t, align 4
  store i8 0, i8* %59, align 1
  %60 = load i8*, i8** %string.addr, align 4
  %61 = load i8, i8* %60, align 1
  %conv130 = sext i8 %61 to i32
  store i32 %conv130, i32* %c, align 4
  %62 = load i8*, i8** %timefmt, align 4
  %arrayidx131 = getelementptr inbounds i8, i8* %62, i32 0
  %63 = load i8, i8* %arrayidx131, align 1
  %conv132 = sext i8 %63 to i32
  %cmp133 = icmp eq i32 %conv132, 0
  br i1 %cmp133, label %if.then135, label %if.end139

if.then135:                                       ; preds = %for.end129
  %64 = load i8*, i8** %timefmt, align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %64, i32 0
  store i8 37, i8* %arrayidx136, align 1
  %65 = load i8*, i8** %timefmt, align 4
  %arrayidx137 = getelementptr inbounds i8, i8* %65, i32 1
  store i8 88, i8* %arrayidx137, align 1
  %66 = load i8*, i8** %timefmt, align 4
  %arrayidx138 = getelementptr inbounds i8, i8* %66, i32 2
  store i8 0, i8* %arrayidx138, align 1
  br label %if.end139

if.end139:                                        ; preds = %if.then135, %for.end129
  %arraydecay140 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %67 = load i8*, i8** %timefmt, align 4
  %68 = load %struct.tm*, %struct.tm** %tm, align 4
  %call141 = call i32 @strftime(i8* %arraydecay140, i32 128, i8* %67, %struct.tm* %68)
  store i32 %call141, i32* %n, align 4
  %69 = load i8*, i8** %timefmt, align 4
  call void @sh_xfree(i8* %69, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5587)
  %70 = load i32, i32* %n, align 4
  %cmp142 = icmp eq i32 %70, 0
  br i1 %cmp142, label %if.then144, label %if.else146

if.then144:                                       ; preds = %if.end139
  %arrayidx145 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  store i8 0, i8* %arrayidx145, align 1
  br label %if.end148

if.else146:                                       ; preds = %if.end139
  %arrayidx147 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 127
  store i8 0, i8* %arrayidx147, align 1
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then144
  %71 = load i32, i32* @promptvars, align 4
  %tobool149 = icmp ne i32 %71, 0
  br i1 %tobool149, label %if.then152, label %lor.lhs.false150

lor.lhs.false150:                                 ; preds = %if.end148
  %72 = load i32, i32* @posixly_correct, align 4
  %tobool151 = icmp ne i32 %72, 0
  br i1 %tobool151, label %if.then152, label %if.else155

if.then152:                                       ; preds = %lor.lhs.false150, %if.end148
  %arraydecay153 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %call154 = call i8* @sh_backslash_quote_for_double_quotes(i8* %arraydecay153)
  store i8* %call154, i8** %temp, align 4
  br label %if.end162

if.else155:                                       ; preds = %lor.lhs.false150
  %arraydecay156 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %call157 = call i32 @strlen(i8* %arraydecay156)
  %add158 = add i32 1, %call157
  %call159 = call i8* @sh_xmalloc(i32 %add158, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5600)
  %arraydecay160 = getelementptr inbounds [128 x i8], [128 x i8]* %timebuf, i32 0, i32 0
  %call161 = call i8* @strcpy(i8* %call159, i8* %arraydecay160)
  store i8* %call161, i8** %temp, align 4
  br label %if.end162

if.end162:                                        ; preds = %if.else155, %if.then152
  br label %add_string

sw.bb163:                                         ; preds = %if.then15
  %call164 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5604)
  store i8* %call164, i8** %temp, align 4
  %73 = load i32, i32* @no_line_editing, align 4
  %tobool165 = icmp ne i32 %73, 0
  %cond = select i1 %tobool165, i32 10, i32 13
  %conv166 = trunc i32 %cond to i8
  %74 = load i8*, i8** %temp, align 4
  %arrayidx167 = getelementptr inbounds i8, i8* %74, i32 0
  store i8 %conv166, i8* %arrayidx167, align 1
  %75 = load i32, i32* @no_line_editing, align 4
  %tobool168 = icmp ne i32 %75, 0
  %cond169 = select i1 %tobool168, i32 0, i32 10
  %conv170 = trunc i32 %cond169 to i8
  %76 = load i8*, i8** %temp, align 4
  %arrayidx171 = getelementptr inbounds i8, i8* %76, i32 1
  store i8 %conv170, i8* %arrayidx171, align 1
  %77 = load i8*, i8** %temp, align 4
  %arrayidx172 = getelementptr inbounds i8, i8* %77, i32 2
  store i8 0, i8* %arrayidx172, align 1
  br label %add_string

sw.bb173:                                         ; preds = %if.then15
  %78 = load i8*, i8** @shell_name, align 4
  %call174 = call i8* @base_pathname(i8* %78)
  store i8* %call174, i8** %temp, align 4
  %79 = load i32, i32* @promptvars, align 4
  %tobool175 = icmp ne i32 %79, 0
  br i1 %tobool175, label %if.then178, label %lor.lhs.false176

lor.lhs.false176:                                 ; preds = %sw.bb173
  %80 = load i32, i32* @posixly_correct, align 4
  %tobool177 = icmp ne i32 %80, 0
  br i1 %tobool177, label %if.then178, label %if.else180

if.then178:                                       ; preds = %lor.lhs.false176, %sw.bb173
  %81 = load i8*, i8** %temp, align 4
  %call179 = call i8* @sh_backslash_quote_for_double_quotes(i8* %81)
  store i8* %call179, i8** %temp, align 4
  br label %if.end185

if.else180:                                       ; preds = %lor.lhs.false176
  %82 = load i8*, i8** %temp, align 4
  %call181 = call i32 @strlen(i8* %82)
  %add182 = add i32 1, %call181
  %call183 = call i8* @sh_xmalloc(i32 %add182, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5616)
  %83 = load i8*, i8** %temp, align 4
  %call184 = call i8* @strcpy(i8* %call183, i8* %83)
  store i8* %call184, i8** %temp, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.else180, %if.then178
  br label %add_string

sw.bb186:                                         ; preds = %if.then15, %if.then15
  %call187 = call i8* @sh_xmalloc(i32 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5621)
  store i8* %call187, i8** %temp, align 4
  %84 = load i32, i32* %c, align 4
  %cmp188 = icmp eq i32 %84, 118
  br i1 %cmp188, label %if.then190, label %if.else192

if.then190:                                       ; preds = %sw.bb186
  %85 = load i8*, i8** %temp, align 4
  %86 = load i8*, i8** @dist_version, align 4
  %call191 = call i8* @strcpy(i8* %85, i8* %86)
  br label %if.end194

if.else192:                                       ; preds = %sw.bb186
  %87 = load i8*, i8** %temp, align 4
  %88 = load i8*, i8** @dist_version, align 4
  %89 = load i32, i32* @patch_level, align 4
  %call193 = call i32 (i8*, i8*, ...) @sprintf(i8* %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i32 0, i32 0), i8* %88, i32 %89)
  br label %if.end194

if.end194:                                        ; preds = %if.else192, %if.then190
  br label %add_string

sw.bb195:                                         ; preds = %if.then15, %if.then15
  %call196 = call i8* @get_string_value(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0))
  store i8* %call196, i8** %temp, align 4
  %90 = load i8*, i8** %temp, align 4
  %cmp197 = icmp eq i8* %90, null
  br i1 %cmp197, label %if.then199, label %if.else210

if.then199:                                       ; preds = %sw.bb195
  %arraydecay200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call201 = call i8* @getcwd(i8* %arraydecay200, i32 4096)
  %cmp202 = icmp eq i8* %call201, null
  br i1 %cmp202, label %if.then204, label %if.else206

if.then204:                                       ; preds = %if.then199
  %arrayidx205 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  store i8 46, i8* %arrayidx205, align 1
  store i32 1, i32* %tlen, align 4
  br label %if.end209

if.else206:                                       ; preds = %if.then199
  %arraydecay207 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call208 = call i32 @strlen(i8* %arraydecay207)
  store i32 %call208, i32* %tlen, align 4
  br label %if.end209

if.end209:                                        ; preds = %if.else206, %if.then204
  br label %if.end213

if.else210:                                       ; preds = %sw.bb195
  store i32 4095, i32* %tlen, align 4
  %arraydecay211 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %91 = load i8*, i8** %temp, align 4
  %92 = load i32, i32* %tlen, align 4
  %call212 = call i8* @strncpy(i8* %arraydecay211, i8* %91, i32 %92)
  br label %if.end213

if.end213:                                        ; preds = %if.else210, %if.end209
  %93 = load i32, i32* %tlen, align 4
  %arrayidx214 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 %93
  store i8 0, i8* %arrayidx214, align 1
  %94 = load i32, i32* %c, align 4
  %cmp215 = icmp eq i32 %94, 87
  br i1 %cmp215, label %land.lhs.true217, label %if.else279

land.lhs.true217:                                 ; preds = %if.end213
  %call218 = call i8* @get_string_value(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0))
  store i8* %call218, i8** %t, align 4
  %cmp219 = icmp eq i8* %call218, null
  br i1 %cmp219, label %if.then236, label %lor.lhs.false221

lor.lhs.false221:                                 ; preds = %land.lhs.true217
  %95 = load i8*, i8** %t, align 4
  %arrayidx222 = getelementptr inbounds i8, i8* %95, i32 0
  %96 = load i8, i8* %arrayidx222, align 1
  %conv223 = sext i8 %96 to i32
  %arrayidx224 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %97 = load i8, i8* %arrayidx224, align 1
  %conv225 = sext i8 %97 to i32
  %cmp226 = icmp eq i32 %conv223, %conv225
  br i1 %cmp226, label %land.rhs228, label %land.end233

land.rhs228:                                      ; preds = %lor.lhs.false221
  %98 = load i8*, i8** %t, align 4
  %arraydecay229 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call230 = call i32 @strcmp(i8* %98, i8* %arraydecay229)
  %cmp231 = icmp eq i32 %call230, 0
  br label %land.end233

land.end233:                                      ; preds = %land.rhs228, %lor.lhs.false221
  %99 = phi i1 [ false, %lor.lhs.false221 ], [ %cmp231, %land.rhs228 ]
  %land.ext = zext i1 %99 to i32
  %cmp234 = icmp eq i32 %land.ext, 0
  br i1 %cmp234, label %if.then236, label %if.else279

if.then236:                                       ; preds = %land.end233, %land.lhs.true217
  %arrayidx237 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %100 = load i8, i8* %arrayidx237, align 1
  %conv238 = sext i8 %100 to i32
  %cmp239 = icmp eq i32 %conv238, 47
  br i1 %cmp239, label %land.rhs241, label %land.end246

land.rhs241:                                      ; preds = %if.then236
  %arrayidx242 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 1
  %101 = load i8, i8* %arrayidx242, align 1
  %conv243 = sext i8 %101 to i32
  %cmp244 = icmp eq i32 %conv243, 0
  br label %land.end246

land.end246:                                      ; preds = %land.rhs241, %if.then236
  %102 = phi i1 [ false, %if.then236 ], [ %cmp244, %land.rhs241 ]
  %land.ext247 = zext i1 %102 to i32
  %cmp248 = icmp eq i32 %land.ext247, 0
  br i1 %cmp248, label %land.lhs.true250, label %if.end278

land.lhs.true250:                                 ; preds = %land.end246
  %arrayidx251 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %103 = load i8, i8* %arrayidx251, align 1
  %conv252 = sext i8 %103 to i32
  %cmp253 = icmp eq i32 %conv252, 47
  br i1 %cmp253, label %land.lhs.true255, label %land.end265

land.lhs.true255:                                 ; preds = %land.lhs.true250
  %arrayidx256 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 1
  %104 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %104 to i32
  %cmp258 = icmp eq i32 %conv257, 47
  br i1 %cmp258, label %land.rhs260, label %land.end265

land.rhs260:                                      ; preds = %land.lhs.true255
  %arrayidx261 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 2
  %105 = load i8, i8* %arrayidx261, align 1
  %conv262 = sext i8 %105 to i32
  %cmp263 = icmp eq i32 %conv262, 0
  br label %land.end265

land.end265:                                      ; preds = %land.rhs260, %land.lhs.true255, %land.lhs.true250
  %106 = phi i1 [ false, %land.lhs.true255 ], [ false, %land.lhs.true250 ], [ %cmp263, %land.rhs260 ]
  %land.ext266 = zext i1 %106 to i32
  %cmp267 = icmp eq i32 %land.ext266, 0
  br i1 %cmp267, label %if.then269, label %if.end278

if.then269:                                       ; preds = %land.end265
  %arraydecay270 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call271 = call i8* @strrchr(i8* %arraydecay270, i32 47)
  store i8* %call271, i8** %t, align 4
  %107 = load i8*, i8** %t, align 4
  %tobool272 = icmp ne i8* %107, null
  br i1 %tobool272, label %if.then273, label %if.end277

if.then273:                                       ; preds = %if.then269
  %arraydecay274 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %108 = load i8*, i8** %t, align 4
  %add.ptr275 = getelementptr inbounds i8, i8* %108, i32 1
  %109 = load i8*, i8** %t, align 4
  %call276 = call i32 @strlen(i8* %109)
  call void @llvm.memmove.p0i8.p0i8.i32(i8* %arraydecay274, i8* %add.ptr275, i32 %call276, i32 1, i1 false)
  br label %if.end277

if.end277:                                        ; preds = %if.then273, %if.then269
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %land.end265, %land.end246
  br label %if.end289

if.else279:                                       ; preds = %land.end233, %if.end213
  %arraydecay280 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call281 = call i8* @polite_directory_format(i8* %arraydecay280)
  store i8* %call281, i8** %temp, align 4
  %110 = load i8*, i8** %temp, align 4
  %arraydecay282 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %cmp283 = icmp ne i8* %110, %arraydecay282
  br i1 %cmp283, label %if.then285, label %if.end288

if.then285:                                       ; preds = %if.else279
  %arraydecay286 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %111 = load i8*, i8** %temp, align 4
  %call287 = call i8* @strcpy(i8* %arraydecay286, i8* %111)
  br label %if.end288

if.end288:                                        ; preds = %if.then285, %if.else279
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end278
  %arraydecay290 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call291 = call i8* @trim_pathname(i8* %arraydecay290, i32 4095)
  store i8* %call291, i8** %temp, align 4
  %112 = load i32, i32* @promptvars, align 4
  %tobool292 = icmp ne i32 %112, 0
  br i1 %tobool292, label %if.then295, label %lor.lhs.false293

lor.lhs.false293:                                 ; preds = %if.end289
  %113 = load i32, i32* @posixly_correct, align 4
  %tobool294 = icmp ne i32 %113, 0
  br i1 %tobool294, label %if.then295, label %if.else298

if.then295:                                       ; preds = %lor.lhs.false293, %if.end289
  %arraydecay296 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call297 = call i8* @sh_backslash_quote_for_double_quotes(i8* %arraydecay296)
  store i8* %call297, i8** %temp, align 4
  br label %if.end305

if.else298:                                       ; preds = %lor.lhs.false293
  %arraydecay299 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call300 = call i32 @strlen(i8* %arraydecay299)
  %add301 = add i32 1, %call300
  %call302 = call i8* @sh_xmalloc(i32 %add301, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5693)
  %arraydecay303 = getelementptr inbounds [4096 x i8], [4096 x i8]* %t_string, i32 0, i32 0
  %call304 = call i8* @strcpy(i8* %call302, i8* %arraydecay303)
  store i8* %call304, i8** %temp, align 4
  br label %if.end305

if.end305:                                        ; preds = %if.else298, %if.then295
  br label %add_string

sw.bb306:                                         ; preds = %if.then15
  %114 = load i8*, i8** getelementptr inbounds (%struct.user_info, %struct.user_info* @current_user, i32 0, i32 4), align 4
  %cmp307 = icmp eq i8* %114, null
  br i1 %cmp307, label %if.then309, label %if.end310

if.then309:                                       ; preds = %sw.bb306
  call void @get_current_user_info()
  br label %if.end310

if.end310:                                        ; preds = %if.then309, %sw.bb306
  %115 = load i8*, i8** getelementptr inbounds (%struct.user_info, %struct.user_info* @current_user, i32 0, i32 4), align 4
  %call311 = call i32 @strlen(i8* %115)
  %add312 = add i32 1, %call311
  %call313 = call i8* @sh_xmalloc(i32 %add312, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5701)
  %116 = load i8*, i8** getelementptr inbounds (%struct.user_info, %struct.user_info* @current_user, i32 0, i32 4), align 4
  %call314 = call i8* @strcpy(i8* %call313, i8* %116)
  store i8* %call314, i8** %temp, align 4
  br label %add_string

sw.bb315:                                         ; preds = %if.then15, %if.then15
  %117 = load i8*, i8** @current_host_name, align 4
  %call316 = call i32 @strlen(i8* %117)
  %add317 = add i32 1, %call316
  %call318 = call i8* @sh_xmalloc(i32 %add317, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5706)
  %118 = load i8*, i8** @current_host_name, align 4
  %call319 = call i8* @strcpy(i8* %call318, i8* %118)
  store i8* %call319, i8** %t_host, align 4
  %119 = load i32, i32* %c, align 4
  %cmp320 = icmp eq i32 %119, 104
  br i1 %cmp320, label %land.lhs.true322, label %if.end326

land.lhs.true322:                                 ; preds = %sw.bb315
  %120 = load i8*, i8** %t_host, align 4
  %call323 = call i8* @strchr(i8* %120, i32 46)
  store i8* %call323, i8** %t, align 4
  %tobool324 = icmp ne i8* %call323, null
  br i1 %tobool324, label %if.then325, label %if.end326

if.then325:                                       ; preds = %land.lhs.true322
  %121 = load i8*, i8** %t, align 4
  store i8 0, i8* %121, align 1
  br label %if.end326

if.end326:                                        ; preds = %if.then325, %land.lhs.true322, %sw.bb315
  %122 = load i32, i32* @promptvars, align 4
  %tobool327 = icmp ne i32 %122, 0
  br i1 %tobool327, label %if.then330, label %lor.lhs.false328

lor.lhs.false328:                                 ; preds = %if.end326
  %123 = load i32, i32* @posixly_correct, align 4
  %tobool329 = icmp ne i32 %123, 0
  br i1 %tobool329, label %if.then330, label %if.else332

if.then330:                                       ; preds = %lor.lhs.false328, %if.end326
  %124 = load i8*, i8** %t_host, align 4
  %call331 = call i8* @sh_backslash_quote_for_double_quotes(i8* %124)
  store i8* %call331, i8** %temp, align 4
  br label %if.end337

if.else332:                                       ; preds = %lor.lhs.false328
  %125 = load i8*, i8** %t_host, align 4
  %call333 = call i32 @strlen(i8* %125)
  %add334 = add i32 1, %call333
  %call335 = call i8* @sh_xmalloc(i32 %add334, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5715)
  %126 = load i8*, i8** %t_host, align 4
  %call336 = call i8* @strcpy(i8* %call335, i8* %126)
  store i8* %call336, i8** %temp, align 4
  br label %if.end337

if.end337:                                        ; preds = %if.else332, %if.then330
  %127 = load i8*, i8** %t_host, align 4
  call void @sh_xfree(i8* %127, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5716)
  br label %add_string

sw.bb338:                                         ; preds = %if.then15
  %128 = load i32, i32* @current_command_number, align 4
  %conv339 = sext i32 %128 to i64
  %call340 = call i8* @itos(i64 %conv339)
  store i8* %call340, i8** %temp, align 4
  br label %add_string

sw.bb341:                                         ; preds = %if.then15
  %call342 = call i32 @history_number()
  %conv343 = sext i32 %call342 to i64
  %call344 = call i8* @itos(i64 %conv343)
  store i8* %call344, i8** %temp, align 4
  br label %add_string

sw.bb345:                                         ; preds = %if.then15
  %call346 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5732)
  store i8* %call346, i8** %temp, align 4
  store i8* %call346, i8** %t, align 4
  %129 = load i32, i32* @promptvars, align 4
  %tobool347 = icmp ne i32 %129, 0
  br i1 %tobool347, label %land.lhs.true350, label %lor.lhs.false348

lor.lhs.false348:                                 ; preds = %sw.bb345
  %130 = load i32, i32* @posixly_correct, align 4
  %tobool349 = icmp ne i32 %130, 0
  br i1 %tobool349, label %land.lhs.true350, label %if.end355

land.lhs.true350:                                 ; preds = %lor.lhs.false348, %sw.bb345
  %131 = load i32, i32* getelementptr inbounds (%struct.user_info, %struct.user_info* @current_user, i32 0, i32 1), align 4
  %cmp351 = icmp ne i32 %131, 0
  br i1 %cmp351, label %if.then353, label %if.end355

if.then353:                                       ; preds = %land.lhs.true350
  %132 = load i8*, i8** %t, align 4
  %incdec.ptr354 = getelementptr inbounds i8, i8* %132, i32 1
  store i8* %incdec.ptr354, i8** %t, align 4
  store i8 92, i8* %132, align 1
  br label %if.end355

if.end355:                                        ; preds = %if.then353, %land.lhs.true350, %lor.lhs.false348
  %133 = load i32, i32* getelementptr inbounds (%struct.user_info, %struct.user_info* @current_user, i32 0, i32 1), align 4
  %cmp356 = icmp eq i32 %133, 0
  %cond358 = select i1 %cmp356, i32 35, i32 36
  %conv359 = trunc i32 %cond358 to i8
  %134 = load i8*, i8** %t, align 4
  %incdec.ptr360 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %incdec.ptr360, i8** %t, align 4
  store i8 %conv359, i8* %134, align 1
  %135 = load i8*, i8** %t, align 4
  store i8 0, i8* %135, align 1
  br label %add_string

sw.bb361:                                         ; preds = %if.then15
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 4
  %call362 = call i32 @fileno(%struct._IO_FILE* %136)
  %call363 = call i8* @ttyname(i32 %call362)
  store i8* %call363, i8** %temp, align 4
  %137 = load i8*, i8** %temp, align 4
  %tobool364 = icmp ne i8* %137, null
  br i1 %tobool364, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb361
  %138 = load i8*, i8** %temp, align 4
  %call365 = call i8* @base_pathname(i8* %138)
  br label %cond.end

cond.false:                                       ; preds = %sw.bb361
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond366 = phi i8* [ %call365, %cond.true ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), %cond.false ]
  store i8* %cond366, i8** %t, align 4
  %139 = load i8*, i8** %t, align 4
  %call367 = call i32 @strlen(i8* %139)
  %add368 = add i32 1, %call367
  %call369 = call i8* @sh_xmalloc(i32 %add368, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5742)
  %140 = load i8*, i8** %t, align 4
  %call370 = call i8* @strcpy(i8* %call369, i8* %140)
  store i8* %call370, i8** %temp, align 4
  br label %add_string

sw.bb371:                                         ; preds = %if.then15, %if.then15
  %141 = load i32, i32* @no_line_editing, align 4
  %tobool372 = icmp ne i32 %141, 0
  br i1 %tobool372, label %if.then373, label %if.end375

if.then373:                                       ; preds = %sw.bb371
  %142 = load i8*, i8** %string.addr, align 4
  %incdec.ptr374 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr374, i8** %string.addr, align 4
  br label %sw.epilog

if.end375:                                        ; preds = %sw.bb371
  %call376 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5756)
  store i8* %call376, i8** %temp, align 4
  %143 = load i32, i32* %c, align 4
  %cmp377 = icmp eq i32 %143, 91
  %cond379 = select i1 %cmp377, i32 1, i32 2
  store i32 %cond379, i32* %n, align 4
  store i32 0, i32* %i, align 4
  %144 = load i32, i32* %n, align 4
  %cmp380 = icmp eq i32 %144, 1
  br i1 %cmp380, label %if.then385, label %lor.lhs.false382

lor.lhs.false382:                                 ; preds = %if.end375
  %145 = load i32, i32* %n, align 4
  %cmp383 = icmp eq i32 %145, 127
  br i1 %cmp383, label %if.then385, label %if.end388

if.then385:                                       ; preds = %lor.lhs.false382, %if.end375
  %146 = load i8*, i8** %temp, align 4
  %147 = load i32, i32* %i, align 4
  %inc386 = add nsw i32 %147, 1
  store i32 %inc386, i32* %i, align 4
  %arrayidx387 = getelementptr inbounds i8, i8* %146, i32 %147
  store i8 1, i8* %arrayidx387, align 1
  br label %if.end388

if.end388:                                        ; preds = %if.then385, %lor.lhs.false382
  %148 = load i32, i32* %n, align 4
  %conv389 = trunc i32 %148 to i8
  %149 = load i8*, i8** %temp, align 4
  %150 = load i32, i32* %i, align 4
  %inc390 = add nsw i32 %150, 1
  store i32 %inc390, i32* %i, align 4
  %arrayidx391 = getelementptr inbounds i8, i8* %149, i32 %150
  store i8 %conv389, i8* %arrayidx391, align 1
  %151 = load i8*, i8** %temp, align 4
  %152 = load i32, i32* %i, align 4
  %arrayidx392 = getelementptr inbounds i8, i8* %151, i32 %152
  store i8 0, i8* %arrayidx392, align 1
  br label %add_string

sw.bb393:                                         ; preds = %if.then15, %if.then15, %if.then15, %if.then15
  %call394 = call i8* @sh_xmalloc(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5770)
  store i8* %call394, i8** %temp, align 4
  %153 = load i32, i32* %c, align 4
  %cmp395 = icmp eq i32 %153, 97
  br i1 %cmp395, label %if.then397, label %if.else399

if.then397:                                       ; preds = %sw.bb393
  %154 = load i8*, i8** %temp, align 4
  %arrayidx398 = getelementptr inbounds i8, i8* %154, i32 0
  store i8 7, i8* %arrayidx398, align 1
  br label %if.end414

if.else399:                                       ; preds = %sw.bb393
  %155 = load i32, i32* %c, align 4
  %cmp400 = icmp eq i32 %155, 101
  br i1 %cmp400, label %if.then402, label %if.else404

if.then402:                                       ; preds = %if.else399
  %156 = load i8*, i8** %temp, align 4
  %arrayidx403 = getelementptr inbounds i8, i8* %156, i32 0
  store i8 27, i8* %arrayidx403, align 1
  br label %if.end413

if.else404:                                       ; preds = %if.else399
  %157 = load i32, i32* %c, align 4
  %cmp405 = icmp eq i32 %157, 114
  br i1 %cmp405, label %if.then407, label %if.else409

if.then407:                                       ; preds = %if.else404
  %158 = load i8*, i8** %temp, align 4
  %arrayidx408 = getelementptr inbounds i8, i8* %158, i32 0
  store i8 13, i8* %arrayidx408, align 1
  br label %if.end412

if.else409:                                       ; preds = %if.else404
  %159 = load i32, i32* %c, align 4
  %conv410 = trunc i32 %159 to i8
  %160 = load i8*, i8** %temp, align 4
  %arrayidx411 = getelementptr inbounds i8, i8* %160, i32 0
  store i8 %conv410, i8* %arrayidx411, align 1
  br label %if.end412

if.end412:                                        ; preds = %if.else409, %if.then407
  br label %if.end413

if.end413:                                        ; preds = %if.end412, %if.then402
  br label %if.end414

if.end414:                                        ; preds = %if.end413, %if.then397
  %161 = load i8*, i8** %temp, align 4
  %arrayidx415 = getelementptr inbounds i8, i8* %161, i32 1
  store i8 0, i8* %arrayidx415, align 1
  br label %add_string

sw.default:                                       ; preds = %if.then15
  br label %not_escape

not_escape:                                       ; preds = %sw.default, %if.then111
  %call416 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5784)
  store i8* %call416, i8** %temp, align 4
  %162 = load i8*, i8** %temp, align 4
  %arrayidx417 = getelementptr inbounds i8, i8* %162, i32 0
  store i8 92, i8* %arrayidx417, align 1
  %163 = load i32, i32* %c, align 4
  %conv418 = trunc i32 %163 to i8
  %164 = load i8*, i8** %temp, align 4
  %arrayidx419 = getelementptr inbounds i8, i8* %164, i32 1
  store i8 %conv418, i8* %arrayidx419, align 1
  %165 = load i8*, i8** %temp, align 4
  %arrayidx420 = getelementptr inbounds i8, i8* %165, i32 2
  store i8 0, i8* %arrayidx420, align 1
  br label %add_string

add_string:                                       ; preds = %not_escape, %if.end414, %if.end388, %cond.end, %if.end355, %sw.bb341, %sw.bb338, %if.end337, %if.end310, %if.end305, %if.end194, %if.end185, %sw.bb163, %if.end162, %if.end100, %for.end, %if.else, %if.then6
  %166 = load i32, i32* %c, align 4
  %tobool421 = icmp ne i32 %166, 0
  br i1 %tobool421, label %if.then422, label %if.end424

if.then422:                                       ; preds = %add_string
  %167 = load i8*, i8** %string.addr, align 4
  %incdec.ptr423 = getelementptr inbounds i8, i8* %167, i32 1
  store i8* %incdec.ptr423, i8** %string.addr, align 4
  br label %if.end424

if.end424:                                        ; preds = %if.then422, %add_string
  %168 = load i8*, i8** %temp, align 4
  %169 = load i8*, i8** %result, align 4
  %call425 = call i8* @sub_append_string(i8* %168, i8* %169, i32* %result_index, i32* %result_size)
  store i8* %call425, i8** %result, align 4
  store i8* null, i8** %temp, align 4
  %170 = load i8*, i8** %result, align 4
  %171 = load i32, i32* %result_index, align 4
  %arrayidx426 = getelementptr inbounds i8, i8* %170, i32 %171
  store i8 0, i8* %arrayidx426, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end424, %if.then373
  br label %if.end453

if.else427:                                       ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.else427
  %172 = load i32, i32* %result_index, align 4
  %add428 = add nsw i32 %172, 3
  %173 = load i32, i32* %result_size, align 4
  %cmp429 = icmp uge i32 %add428, %173
  br i1 %cmp429, label %if.then431, label %if.end439

if.then431:                                       ; preds = %do.body
  br label %while.cond432

while.cond432:                                    ; preds = %while.body436, %if.then431
  %174 = load i32, i32* %result_index, align 4
  %add433 = add nsw i32 %174, 3
  %175 = load i32, i32* %result_size, align 4
  %cmp434 = icmp uge i32 %add433, %175
  br i1 %cmp434, label %while.body436, label %while.end

while.body436:                                    ; preds = %while.cond432
  %176 = load i32, i32* %result_size, align 4
  %add437 = add i32 %176, 48
  store i32 %add437, i32* %result_size, align 4
  br label %while.cond432

while.end:                                        ; preds = %while.cond432
  %177 = load i8*, i8** %result, align 4
  %178 = load i32, i32* %result_size, align 4
  %call438 = call i8* @sh_xrealloc(i8* %177, i32 %178, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5801)
  store i8* %call438, i8** %result, align 4
  br label %if.end439

if.end439:                                        ; preds = %while.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end439
  %179 = load i32, i32* %c, align 4
  %cmp440 = icmp eq i32 %179, 1
  br i1 %cmp440, label %if.then445, label %lor.lhs.false442

lor.lhs.false442:                                 ; preds = %do.end
  %180 = load i32, i32* %c, align 4
  %cmp443 = icmp eq i32 %180, 127
  br i1 %cmp443, label %if.then445, label %if.end448

if.then445:                                       ; preds = %lor.lhs.false442, %do.end
  %181 = load i8*, i8** %result, align 4
  %182 = load i32, i32* %result_index, align 4
  %inc446 = add nsw i32 %182, 1
  store i32 %inc446, i32* %result_index, align 4
  %arrayidx447 = getelementptr inbounds i8, i8* %181, i32 %182
  store i8 1, i8* %arrayidx447, align 1
  br label %if.end448

if.end448:                                        ; preds = %if.then445, %lor.lhs.false442
  %183 = load i32, i32* %c, align 4
  %conv449 = trunc i32 %183 to i8
  %184 = load i8*, i8** %result, align 4
  %185 = load i32, i32* %result_index, align 4
  %inc450 = add nsw i32 %185, 1
  store i32 %inc450, i32* %result_index, align 4
  %arrayidx451 = getelementptr inbounds i8, i8* %184, i32 %185
  store i8 %conv449, i8* %arrayidx451, align 1
  %186 = load i8*, i8** %result, align 4
  %187 = load i32, i32* %result_index, align 4
  %arrayidx452 = getelementptr inbounds i8, i8* %186, i32 %187
  store i8 0, i8* %arrayidx452, align 1
  br label %if.end453

if.end453:                                        ; preds = %if.end448, %sw.epilog
  br label %while.cond

while.end454:                                     ; preds = %while.cond
  %188 = bitcast %struct.dstack* %save_dstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %188, i8* bitcast (%struct.dstack* @dstack to i8*), i32 12, i32 4, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast (%struct.dstack* @dstack to i8*), i8* bitcast (%struct.dstack* @temp_dstack to i8*), i32 12, i32 4, i1 false)
  store i32 0, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %189 = load i32, i32* @promptvars, align 4
  %tobool455 = icmp ne i32 %189, 0
  br i1 %tobool455, label %if.then458, label %lor.lhs.false456

lor.lhs.false456:                                 ; preds = %while.end454
  %190 = load i32, i32* @posixly_correct, align 4
  %tobool457 = icmp ne i32 %190, 0
  br i1 %tobool457, label %if.then458, label %if.else461

if.then458:                                       ; preds = %lor.lhs.false456, %while.end454
  %191 = load i32, i32* @last_command_exit_value, align 4
  store i32 %191, i32* %last_exit_value, align 4
  %192 = load i32, i32* @last_command_subst_pid, align 4
  store i32 %192, i32* %last_comsub_pid, align 4
  %193 = load i8*, i8** %result, align 4
  %call459 = call %struct.word_list* @expand_prompt_string(i8* %193, i32 1, i32 0)
  store %struct.word_list* %call459, %struct.word_list** %list, align 4
  %194 = load i8*, i8** %result, align 4
  call void @sh_xfree(i8* %194, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5828)
  %195 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call460 = call i8* @string_list(%struct.word_list* %195)
  store i8* %call460, i8** %result, align 4
  %196 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %196)
  %197 = load i32, i32* %last_exit_value, align 4
  store i32 %197, i32* @last_command_exit_value, align 4
  %198 = load i32, i32* %last_comsub_pid, align 4
  store i32 %198, i32* @last_command_subst_pid, align 4
  br label %if.end463

if.else461:                                       ; preds = %lor.lhs.false456
  %199 = load i8*, i8** %result, align 4
  %call462 = call i8* @dequote_string(i8* %199)
  store i8* %call462, i8** %t, align 4
  %200 = load i8*, i8** %result, align 4
  call void @sh_xfree(i8* %200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5837)
  %201 = load i8*, i8** %t, align 4
  store i8* %201, i8** %result, align 4
  br label %if.end463

if.end463:                                        ; preds = %if.else461, %if.then458
  %202 = bitcast %struct.dstack* %save_dstack to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast (%struct.dstack* @dstack to i8*), i8* %202, i32 12, i32 4, i1 false)
  %203 = load i8*, i8** %result, align 4
  ret i8* %203
}

declare i8* @itos(i64) #1

declare i32 @history_number() #1

declare i8* @strncpy(i8*, i8*, i32) #1

declare i32 @read_octal(i8*) #1

declare i32 @time(i32*) #1

declare void @sv_tz(i8*) #1

declare %struct.tm* @localtime(i32*) #1

declare i32 @strftime(i8*, i32, i8*, %struct.tm*) #1

declare i8* @sh_backslash_quote_for_double_quotes(i8*) #1

declare i8* @base_pathname(i8*) #1

declare i32 @sprintf(i8*, i8*, ...) #1

declare i8* @getcwd(i8*, i32) #1

declare i8* @strrchr(i8*, i32) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2

declare i8* @polite_directory_format(i8*) #1

declare i8* @trim_pathname(i8*, i32) #1

declare void @get_current_user_info() #1

declare i8* @strchr(i8*, i32) #1

declare i8* @ttyname(i32) #1

declare i32 @fileno(%struct._IO_FILE*) #1

declare i8* @sub_append_string(i8*, i8*, i32*, i32*) #1

declare i8* @sh_xrealloc(i8*, i32, i8*, i32) #1

declare %struct.word_list* @expand_prompt_string(i8*, i32, i32) #1

declare i8* @string_list(%struct.word_list*) #1

declare void @dispose_words(%struct.word_list*) #1

declare i8* @dequote_string(i8*) #1

; Function Attrs: noinline nounwind
define i32 @yyerror(i8* %msg) #0 {
entry:
  %msg.addr = alloca i8*, align 4
  store i8* %msg, i8** %msg.addr, align 4
  call void @report_syntax_error(i8* null)
  call void @reset_parser()
  ret i32 0
}

; Function Attrs: noinline nounwind
define internal void @report_syntax_error(i8* %message) #0 {
entry:
  %message.addr = alloca i8*, align 4
  %msg = alloca i8*, align 4
  %p = alloca i8*, align 4
  store i8* %message, i8** %message.addr, align 4
  %0 = load i8*, i8** %message.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @line_number, align 4
  %2 = load i8*, i8** %message.addr, align 4
  call void (i32, i8*, ...) @parser_error(i32 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* %2)
  %3 = load i32, i32* @interactive, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* @EOF_Reached, align 4
  %tobool2 = icmp ne i32 %4, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %land.lhs.true
  store i32 0, i32* @EOF_Reached, align 4
  br label %if.end

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  %5 = load i32, i32* @parse_and_execute_level, align 4
  %tobool4 = icmp ne i32 %5, 0
  %cond = select i1 %tobool4, i32 257, i32 2
  store i32 %cond, i32* @last_command_exit_value, align 4
  br label %return

if.end5:                                          ; preds = %entry
  %6 = load i32, i32* @current_token, align 4
  %cmp = icmp ne i32 %6, 0
  br i1 %cmp, label %land.lhs.true6, label %if.end22

land.lhs.true6:                                   ; preds = %if.end5
  %7 = load i32, i32* @EOF_Reached, align 4
  %cmp7 = icmp eq i32 %7, 0
  br i1 %cmp7, label %land.lhs.true8, label %if.end22

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %8 = load i32, i32* @current_token, align 4
  %call = call i8* @error_token_from_token(i32 %8)
  store i8* %call, i8** %msg, align 4
  %tobool9 = icmp ne i8* %call, null
  br i1 %tobool9, label %if.then10, label %if.end22

if.then10:                                        ; preds = %land.lhs.true8
  %9 = load i8*, i8** %msg, align 4
  %call11 = call i32 @ansic_shouldquote(i8* %9)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.then10
  %10 = load i8*, i8** %msg, align 4
  %call14 = call i8* @ansic_quote(i8* %10, i32 0, i32* null)
  store i8* %call14, i8** %p, align 4
  %11 = load i8*, i8** %msg, align 4
  call void @sh_xfree(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5987)
  %12 = load i8*, i8** %p, align 4
  store i8* %12, i8** %msg, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.then10
  %13 = load i32, i32* @line_number, align 4
  %call16 = call i8* @libintl_gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.79, i32 0, i32 0))
  %14 = load i8*, i8** %msg, align 4
  call void (i32, i8*, ...) @parser_error(i32 %13, i8* %call16, i8* %14)
  %15 = load i8*, i8** %msg, align 4
  call void @sh_xfree(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5991)
  %16 = load i32, i32* @interactive, align 4
  %cmp17 = icmp eq i32 %16, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end15
  call void @print_offending_line()
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end15
  %17 = load i32, i32* @parse_and_execute_level, align 4
  %tobool20 = icmp ne i32 %17, 0
  %cond21 = select i1 %tobool20, i32 257, i32 2
  store i32 %cond21, i32* @last_command_exit_value, align 4
  br label %return

if.end22:                                         ; preds = %land.lhs.true8, %land.lhs.true6, %if.end5
  %18 = load i8*, i8** @shell_input_line, align 4
  %tobool23 = icmp ne i8* %18, null
  br i1 %tobool23, label %land.lhs.true24, label %if.else

land.lhs.true24:                                  ; preds = %if.end22
  %19 = load i8*, i8** @shell_input_line, align 4
  %20 = load i8, i8* %19, align 1
  %conv = sext i8 %20 to i32
  %tobool25 = icmp ne i32 %conv, 0
  br i1 %tobool25, label %if.then26, label %if.else

if.then26:                                        ; preds = %land.lhs.true24
  %call27 = call i8* @error_token_from_text()
  store i8* %call27, i8** %msg, align 4
  %21 = load i8*, i8** %msg, align 4
  %tobool28 = icmp ne i8* %21, null
  br i1 %tobool28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.then26
  %22 = load i32, i32* @line_number, align 4
  %call30 = call i8* @libintl_gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80, i32 0, i32 0))
  %23 = load i8*, i8** %msg, align 4
  call void (i32, i8*, ...) @parser_error(i32 %22, i8* %call30, i8* %23)
  %24 = load i8*, i8** %msg, align 4
  call void @sh_xfree(i8* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6009)
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.then26
  %25 = load i32, i32* @interactive, align 4
  %cmp32 = icmp eq i32 %25, 0
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end31
  call void @print_offending_line()
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end31
  br label %if.end45

if.else:                                          ; preds = %land.lhs.true24, %if.end22
  %26 = load i32, i32* @EOF_Reached, align 4
  %tobool36 = icmp ne i32 %26, 0
  br i1 %tobool36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %call37 = call i8* @libintl_gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.81, i32 0, i32 0))
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %call38 = call i8* @libintl_gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i32 0, i32 0))
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond39 = phi i8* [ %call37, %cond.true ], [ %call38, %cond.false ]
  store i8* %cond39, i8** %msg, align 4
  %27 = load i32, i32* @line_number, align 4
  %28 = load i8*, i8** %msg, align 4
  call void (i32, i8*, ...) @parser_error(i32 %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* %28)
  %29 = load i32, i32* @interactive, align 4
  %tobool40 = icmp ne i32 %29, 0
  br i1 %tobool40, label %land.lhs.true41, label %if.end44

land.lhs.true41:                                  ; preds = %cond.end
  %30 = load i32, i32* @EOF_Reached, align 4
  %tobool42 = icmp ne i32 %30, 0
  br i1 %tobool42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %land.lhs.true41
  store i32 0, i32* @EOF_Reached, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %land.lhs.true41, %cond.end
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end35
  %31 = load i32, i32* @parse_and_execute_level, align 4
  %tobool46 = icmp ne i32 %31, 0
  %cond47 = select i1 %tobool46, i32 257, i32 2
  store i32 %cond47, i32* @last_command_exit_value, align 4
  br label %return

return:                                           ; preds = %if.end45, %if.end19, %if.end
  ret void
}

; Function Attrs: noinline nounwind
define %struct.word_list* @parse_string_to_word_list(i8* %s, i32 %flags, i8* %whom) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %whom.addr = alloca i8*, align 4
  %wl = alloca %struct.word_list*, align 4
  %tok = alloca i32, align 4
  %orig_current_token = alloca i32, align 4
  %orig_line_number = alloca i32, align 4
  %orig_input_terminator = alloca i32, align 4
  %orig_line_count = alloca i32, align 4
  %old_echo_input = alloca i32, align 4
  %old_expand_aliases = alloca i32, align 4
  %old_remember_on_history = alloca i32, align 4
  %old_history_expansion_inhibited = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store i8* %whom, i8** %whom.addr, align 4
  %0 = load i32, i32* @remember_on_history, align 4
  store i32 %0, i32* %old_remember_on_history, align 4
  %1 = load i32, i32* @history_expansion_inhibited, align 4
  store i32 %1, i32* %old_history_expansion_inhibited, align 4
  call void @bash_history_disable()
  %2 = load i32, i32* @line_number, align 4
  store i32 %2, i32* %orig_line_number, align 4
  %3 = load i32, i32* @current_command_line_count, align 4
  store i32 %3, i32* %orig_line_count, align 4
  %4 = load i32, i32* @shell_input_line_terminator, align 4
  store i32 %4, i32* %orig_input_terminator, align 4
  %5 = load i32, i32* @echo_input_at_read, align 4
  store i32 %5, i32* %old_echo_input, align 4
  %6 = load i32, i32* @expand_aliases, align 4
  store i32 %6, i32* %old_expand_aliases, align 4
  call void @push_stream(i32 1)
  store i32 280, i32* @last_read_token, align 4
  store i32 0, i32* @current_command_line_count, align 4
  store i32 0, i32* @expand_aliases, align 4
  store i32 0, i32* @echo_input_at_read, align 4
  %7 = load i8*, i8** %s.addr, align 4
  %8 = load i8*, i8** %whom.addr, align 4
  call void @with_input_from_string(i8* %7, i8* %8)
  store %struct.word_list* null, %struct.word_list** %wl, align 4
  %9 = load i32, i32* %flags.addr, align 4
  %and = and i32 %9, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* @parser_state, align 4
  %or = or i32 %10, 270336
  store i32 %or, i32* @parser_state, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end20, %if.then8, %if.end
  %call = call i32 @read_token(i32 0)
  store i32 %call, i32* %tok, align 4
  %cmp = icmp ne i32 %call, 303
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %tok, align 4
  %cmp1 = icmp eq i32 %11, 10
  br i1 %cmp1, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %while.body
  %12 = load i8*, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  %13 = load i8, i8* %12, align 1
  %conv = sext i8 %13 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  br label %while.end

if.end5:                                          ; preds = %land.lhs.true, %while.body
  %14 = load i32, i32* %tok, align 4
  %cmp6 = icmp eq i32 %14, 10
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end5
  br label %while.cond

if.end9:                                          ; preds = %if.end5
  %15 = load i32, i32* %tok, align 4
  %cmp10 = icmp ne i32 %15, 280
  br i1 %cmp10, label %land.lhs.true12, label %if.end20

land.lhs.true12:                                  ; preds = %if.end9
  %16 = load i32, i32* %tok, align 4
  %cmp13 = icmp ne i32 %16, 281
  br i1 %cmp13, label %if.then15, label %if.end20

if.then15:                                        ; preds = %land.lhs.true12
  %17 = load i32, i32* %orig_line_number, align 4
  %18 = load i32, i32* @line_number, align 4
  %add = add nsw i32 %17, %18
  %sub = sub nsw i32 %add, 1
  store i32 %sub, i32* @line_number, align 4
  %19 = load i32, i32* @current_token, align 4
  store i32 %19, i32* %orig_current_token, align 4
  %20 = load i32, i32* %tok, align 4
  store i32 %20, i32* @current_token, align 4
  %call16 = call i32 @yyerror(i8* null)
  %21 = load i32, i32* %orig_current_token, align 4
  store i32 %21, i32* @current_token, align 4
  %22 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %tobool17 = icmp ne %struct.word_list* %22, null
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then15
  %23 = load %struct.word_list*, %struct.word_list** %wl, align 4
  call void @dispose_words(%struct.word_list* %23)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then15
  store %struct.word_list* @parse_string_error, %struct.word_list** %wl, align 4
  br label %while.end

if.end20:                                         ; preds = %land.lhs.true12, %if.end9
  %24 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %25 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %call21 = call %struct.word_list* @make_word_list(%struct.word_desc* %24, %struct.word_list* %25)
  store %struct.word_list* %call21, %struct.word_list** %wl, align 4
  br label %while.cond

while.end:                                        ; preds = %if.end19, %if.then4, %while.cond
  store i32 10, i32* @last_read_token, align 4
  call void @pop_stream()
  %26 = load i32, i32* %old_remember_on_history, align 4
  store i32 %26, i32* @remember_on_history, align 4
  %27 = load i32, i32* %old_history_expansion_inhibited, align 4
  store i32 %27, i32* @history_expansion_inhibited, align 4
  %28 = load i32, i32* %old_echo_input, align 4
  store i32 %28, i32* @echo_input_at_read, align 4
  %29 = load i32, i32* %old_expand_aliases, align 4
  store i32 %29, i32* @expand_aliases, align 4
  %30 = load i32, i32* %orig_line_count, align 4
  store i32 %30, i32* @current_command_line_count, align 4
  %31 = load i32, i32* %orig_input_terminator, align 4
  store i32 %31, i32* @shell_input_line_terminator, align 4
  %32 = load i32, i32* %flags.addr, align 4
  %and22 = and i32 %32, 1
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %while.end
  %33 = load i32, i32* @parser_state, align 4
  %and25 = and i32 %33, -270337
  store i32 %and25, i32* @parser_state, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %while.end
  %34 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %cmp27 = icmp eq %struct.word_list* %34, @parse_string_error
  br i1 %cmp27, label %if.then29, label %if.end35

if.then29:                                        ; preds = %if.end26
  store i32 1, i32* @last_command_exit_value, align 4
  %35 = load i32, i32* @interactive_shell, align 4
  %cmp30 = icmp eq i32 %35, 0
  br i1 %cmp30, label %land.lhs.true32, label %if.else

land.lhs.true32:                                  ; preds = %if.then29
  %36 = load i32, i32* @posixly_correct, align 4
  %tobool33 = icmp ne i32 %36, 0
  br i1 %tobool33, label %if.then34, label %if.else

if.then34:                                        ; preds = %land.lhs.true32
  call void @jump_to_top_level(i32 1) #5
  unreachable

if.else:                                          ; preds = %land.lhs.true32, %if.then29
  call void @jump_to_top_level(i32 2) #5
  unreachable

if.end35:                                         ; preds = %if.end26
  %37 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %tobool36 = icmp ne %struct.word_list* %37, null
  br i1 %tobool36, label %land.lhs.true37, label %cond.false

land.lhs.true37:                                  ; preds = %if.end35
  %38 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %38, i32 0, i32 0
  %39 = load %struct.word_list*, %struct.word_list** %next, align 4
  %tobool38 = icmp ne %struct.word_list* %39, null
  br i1 %tobool38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true37
  %40 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %41 = bitcast %struct.word_list* %40 to %struct.g_list*
  %call39 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %41)
  %42 = bitcast %struct.g_list* %call39 to %struct.word_list*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true37, %if.end35
  %43 = load %struct.word_list*, %struct.word_list** %wl, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %42, %cond.true ], [ %43, %cond.false ]
  ret %struct.word_list* %cond
}

declare void @bash_history_disable() #1

; Function Attrs: noinline nounwind
define internal i32 @read_token(i32 %command) #0 {
entry:
  %retval = alloca i32, align 4
  %command.addr = alloca i32, align 4
  %character = alloca i32, align 4
  %peek_char = alloca i32, align 4
  %result = alloca i32, align 4
  store i32 %command, i32* %command.addr, align 4
  %0 = load i32, i32* %command.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @reset_parser()
  store i32 10, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @token_to_read, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then1, label %if.end6

if.then1:                                         ; preds = %if.end
  %2 = load i32, i32* @token_to_read, align 4
  store i32 %2, i32* %result, align 4
  %3 = load i32, i32* @token_to_read, align 4
  %cmp2 = icmp eq i32 %3, 280
  br i1 %cmp2, label %if.then4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then1
  %4 = load i32, i32* @token_to_read, align 4
  %cmp3 = icmp eq i32 %4, 281
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %lor.lhs.false, %if.then1
  %5 = load %struct.word_desc*, %struct.word_desc** @word_desc_to_read, align 4
  store %struct.word_desc* %5, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  store %struct.word_desc* null, %struct.word_desc** @word_desc_to_read, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %lor.lhs.false
  store i32 0, i32* @token_to_read, align 4
  %6 = load i32, i32* %result, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end
  %7 = load i32, i32* @parser_state, align 4
  %and = and i32 %7, 768
  %cmp7 = icmp eq i32 %and, 256
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end6
  %8 = load i32, i32* @line_number, align 4
  store i32 %8, i32* @cond_lineno, align 4
  %9 = load i32, i32* @parser_state, align 4
  %or = or i32 %9, 512
  store i32 %or, i32* @parser_state, align 4
  %call = call %struct.command* @parse_cond_command()
  store %struct.command* %call, %struct.command** bitcast (%union.YYSTYPE* @yylval to %struct.command**), align 4
  %10 = load i32, i32* @cond_token, align 4
  %cmp9 = icmp ne i32 %10, 273
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  call void @cond_error()
  store i32 -1, i32* %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.then8
  store i32 273, i32* @token_to_read, align 4
  %11 = load i32, i32* @parser_state, align 4
  %and12 = and i32 %11, -769
  store i32 %and12, i32* @parser_state, align 4
  store i32 286, i32* %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end6
  br label %re_read_token

re_read_token:                                    ; preds = %if.then397, %if.end13
  br label %while.cond

while.cond:                                       ; preds = %while.body, %re_read_token
  %call14 = call i32 @shell_getc(i32 1)
  store i32 %call14, i32* %character, align 4
  %cmp15 = icmp ne i32 %call14, -1
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %12 = load i32, i32* %character, align 4
  %conv = trunc i32 %12 to i8
  %idxprom = zext i8 %conv to i32
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %and16 = and i32 %13, 8192
  %tobool17 = icmp ne i32 %and16, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool17, %land.rhs ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %while.cond

while.end:                                        ; preds = %land.end
  %15 = load i32, i32* %character, align 4
  %cmp18 = icmp eq i32 %15, -1
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %while.end
  store i32 1, i32* @EOF_Reached, align 4
  store i32 303, i32* %retval, align 4
  br label %return

if.end21:                                         ; preds = %while.end
  %16 = load i32, i32* %character, align 4
  %cmp22 = icmp eq i32 %16, 35
  br i1 %cmp22, label %land.lhs.true, label %if.end35

land.lhs.true:                                    ; preds = %if.end21
  %17 = load i32, i32* @interactive, align 4
  %tobool24 = icmp ne i32 %17, 0
  br i1 %tobool24, label %lor.lhs.false25, label %land.lhs.true27

lor.lhs.false25:                                  ; preds = %land.lhs.true
  %18 = load i32, i32* @interactive_comments, align 4
  %tobool26 = icmp ne i32 %18, 0
  br i1 %tobool26, label %land.lhs.true27, label %if.end35

land.lhs.true27:                                  ; preds = %lor.lhs.false25, %land.lhs.true
  %19 = load i32, i32* @shell_input_line_index, align 4
  %cmp28 = icmp ugt i32 %19, 1
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true27
  %20 = load i8*, i8** @shell_input_line_property, align 4
  %21 = load i32, i32* @shell_input_line_index, align 4
  %sub = sub i32 %21, 1
  %arrayidx30 = getelementptr inbounds i8, i8* %20, i32 %sub
  %22 = load i8, i8* %arrayidx30, align 1
  %conv31 = sext i8 %22 to i32
  %tobool32 = icmp ne i32 %conv31, 0
  br i1 %tobool32, label %if.then33, label %if.end35

cond.false:                                       ; preds = %land.lhs.true27
  br i1 true, label %if.then33, label %if.end35

if.then33:                                        ; preds = %cond.false, %cond.true
  call void @discard_until(i32 10)
  %call34 = call i32 @shell_getc(i32 0)
  store i32 10, i32* %character, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %cond.false, %cond.true, %lor.lhs.false25, %if.end21
  %23 = load i32, i32* %character, align 4
  %cmp36 = icmp eq i32 %23, 10
  br i1 %cmp36, label %if.then38, label %if.end44

if.then38:                                        ; preds = %if.end35
  %24 = load i32, i32* @need_here_doc, align 4
  %tobool39 = icmp ne i32 %24, 0
  br i1 %tobool39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.then38
  call void @gather_here_documents()
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.then38
  %25 = load i32, i32* @parser_state, align 4
  %and42 = and i32 %25, -3
  store i32 %and42, i32* @parser_state, align 4
  %26 = load i32, i32* @parser_state, align 4
  %and43 = and i32 %26, -16385
  store i32 %and43, i32* @parser_state, align 4
  %27 = load i32, i32* %character, align 4
  store i32 %27, i32* %retval, align 4
  br label %return

if.end44:                                         ; preds = %if.end35
  %28 = load i32, i32* @parser_state, align 4
  %and45 = and i32 %28, 65536
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end44
  br label %tokword

if.end48:                                         ; preds = %if.end44
  %29 = load i32, i32* %character, align 4
  %conv49 = trunc i32 %29 to i8
  %idxprom50 = zext i8 %conv49 to i32
  %arrayidx51 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom50
  %30 = load i32, i32* %arrayidx51, align 4
  %and52 = and i32 %30, 1
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %land.lhs.true54, label %if.end374

land.lhs.true54:                                  ; preds = %if.end48
  %31 = load i32, i32* @parser_state, align 4
  %and55 = and i32 %31, 16
  %cmp56 = icmp eq i32 %and55, 0
  br i1 %cmp56, label %land.lhs.true58, label %if.end374

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %32 = load i32, i32* @shell_input_line_index, align 4
  %cmp59 = icmp ugt i32 %32, 1
  br i1 %cmp59, label %cond.true61, label %cond.false66

cond.true61:                                      ; preds = %land.lhs.true58
  %33 = load i8*, i8** @shell_input_line_property, align 4
  %34 = load i32, i32* @shell_input_line_index, align 4
  %sub62 = sub i32 %34, 1
  %arrayidx63 = getelementptr inbounds i8, i8* %33, i32 %sub62
  %35 = load i8, i8* %arrayidx63, align 1
  %conv64 = sext i8 %35 to i32
  %tobool65 = icmp ne i32 %conv64, 0
  br i1 %tobool65, label %if.then67, label %if.end374

cond.false66:                                     ; preds = %land.lhs.true58
  br i1 true, label %if.then67, label %if.end374

if.then67:                                        ; preds = %cond.false66, %cond.true61
  %36 = load i32, i32* %character, align 4
  %cmp68 = icmp eq i32 %36, 60
  br i1 %cmp68, label %if.then73, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %if.then67
  %37 = load i32, i32* %character, align 4
  %cmp71 = icmp eq i32 %37, 62
  br i1 %cmp71, label %if.then73, label %if.end75

if.then73:                                        ; preds = %lor.lhs.false70, %if.then67
  %38 = load i32, i32* @parser_state, align 4
  %and74 = and i32 %38, -3
  store i32 %and74, i32* @parser_state, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %lor.lhs.false70
  %39 = load i32, i32* @parser_state, align 4
  %and76 = and i32 %39, -16385
  store i32 %and76, i32* @parser_state, align 4
  %40 = load i32, i32* @parser_state, align 4
  %and77 = and i32 %40, 64
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %land.lhs.true79, label %if.else

land.lhs.true79:                                  ; preds = %if.end75
  %41 = load i32, i32* %character, align 4
  %42 = load i32, i32* @shell_eof_token, align 4
  %cmp80 = icmp eq i32 %41, %42
  br i1 %cmp80, label %if.then82, label %if.else

if.then82:                                        ; preds = %land.lhs.true79
  %call83 = call i32 @shell_getc(i32 0)
  store i32 %call83, i32* %peek_char, align 4
  br label %if.end85

if.else:                                          ; preds = %land.lhs.true79, %if.end75
  %call84 = call i32 @shell_getc(i32 1)
  store i32 %call84, i32* %peek_char, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.else, %if.then82
  %43 = load i32, i32* %character, align 4
  %44 = load i32, i32* %peek_char, align 4
  %cmp86 = icmp eq i32 %43, %44
  br i1 %cmp86, label %if.then88, label %if.else142

if.then88:                                        ; preds = %if.end85
  %45 = load i32, i32* %character, align 4
  switch i32 %45, label %sw.epilog [
    i32 60, label %sw.bb
    i32 62, label %sw.bb116
    i32 59, label %sw.bb117
    i32 38, label %sw.bb134
    i32 124, label %sw.bb135
    i32 40, label %sw.bb136
  ]

sw.bb:                                            ; preds = %if.then88
  %call89 = call i32 @shell_getc(i32 1)
  store i32 %call89, i32* %peek_char, align 4
  %46 = load i32, i32* %peek_char, align 4
  %cmp90 = icmp eq i32 %46, 45
  br i1 %cmp90, label %land.lhs.true92, label %if.else102

land.lhs.true92:                                  ; preds = %sw.bb
  %47 = load i32, i32* @shell_input_line_index, align 4
  %cmp93 = icmp ugt i32 %47, 1
  br i1 %cmp93, label %cond.true95, label %cond.false100

cond.true95:                                      ; preds = %land.lhs.true92
  %48 = load i8*, i8** @shell_input_line_property, align 4
  %49 = load i32, i32* @shell_input_line_index, align 4
  %sub96 = sub i32 %49, 1
  %arrayidx97 = getelementptr inbounds i8, i8* %48, i32 %sub96
  %50 = load i8, i8* %arrayidx97, align 1
  %conv98 = sext i8 %50 to i32
  %tobool99 = icmp ne i32 %conv98, 0
  br i1 %tobool99, label %if.then101, label %if.else102

cond.false100:                                    ; preds = %land.lhs.true92
  br i1 true, label %if.then101, label %if.else102

if.then101:                                       ; preds = %cond.false100, %cond.true95
  store i32 297, i32* %retval, align 4
  br label %return

if.else102:                                       ; preds = %cond.false100, %cond.true95, %sw.bb
  %51 = load i32, i32* %peek_char, align 4
  %cmp103 = icmp eq i32 %51, 60
  br i1 %cmp103, label %land.lhs.true105, label %if.else115

land.lhs.true105:                                 ; preds = %if.else102
  %52 = load i32, i32* @shell_input_line_index, align 4
  %cmp106 = icmp ugt i32 %52, 1
  br i1 %cmp106, label %cond.true108, label %cond.false113

cond.true108:                                     ; preds = %land.lhs.true105
  %53 = load i8*, i8** @shell_input_line_property, align 4
  %54 = load i32, i32* @shell_input_line_index, align 4
  %sub109 = sub i32 %54, 1
  %arrayidx110 = getelementptr inbounds i8, i8* %53, i32 %sub109
  %55 = load i8, i8* %arrayidx110, align 1
  %conv111 = sext i8 %55 to i32
  %tobool112 = icmp ne i32 %conv111, 0
  br i1 %tobool112, label %if.then114, label %if.else115

cond.false113:                                    ; preds = %land.lhs.true105
  br i1 true, label %if.then114, label %if.else115

if.then114:                                       ; preds = %cond.false113, %cond.true108
  store i32 292, i32* %retval, align 4
  br label %return

if.else115:                                       ; preds = %cond.false113, %cond.true108, %if.else102
  %56 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %56)
  store i32 290, i32* %retval, align 4
  br label %return

sw.bb116:                                         ; preds = %if.then88
  store i32 289, i32* %retval, align 4
  br label %return

sw.bb117:                                         ; preds = %if.then88
  %57 = load i32, i32* @parser_state, align 4
  %or118 = or i32 %57, 1
  store i32 %or118, i32* @parser_state, align 4
  %58 = load i32, i32* @parser_state, align 4
  %and119 = and i32 %58, -3
  store i32 %and119, i32* @parser_state, align 4
  %call120 = call i32 @shell_getc(i32 1)
  store i32 %call120, i32* %peek_char, align 4
  %59 = load i32, i32* %peek_char, align 4
  %cmp121 = icmp eq i32 %59, 38
  br i1 %cmp121, label %land.lhs.true123, label %if.else133

land.lhs.true123:                                 ; preds = %sw.bb117
  %60 = load i32, i32* @shell_input_line_index, align 4
  %cmp124 = icmp ugt i32 %60, 1
  br i1 %cmp124, label %cond.true126, label %cond.false131

cond.true126:                                     ; preds = %land.lhs.true123
  %61 = load i8*, i8** @shell_input_line_property, align 4
  %62 = load i32, i32* @shell_input_line_index, align 4
  %sub127 = sub i32 %62, 1
  %arrayidx128 = getelementptr inbounds i8, i8* %61, i32 %sub127
  %63 = load i8, i8* %arrayidx128, align 1
  %conv129 = sext i8 %63 to i32
  %tobool130 = icmp ne i32 %conv129, 0
  br i1 %tobool130, label %if.then132, label %if.else133

cond.false131:                                    ; preds = %land.lhs.true123
  br i1 true, label %if.then132, label %if.else133

if.then132:                                       ; preds = %cond.false131, %cond.true126
  store i32 296, i32* %retval, align 4
  br label %return

if.else133:                                       ; preds = %cond.false131, %cond.true126, %sw.bb117
  %64 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %64)
  store i32 294, i32* %retval, align 4
  br label %return

sw.bb134:                                         ; preds = %if.then88
  store i32 287, i32* %retval, align 4
  br label %return

sw.bb135:                                         ; preds = %if.then88
  store i32 288, i32* %retval, align 4
  br label %return

sw.bb136:                                         ; preds = %if.then88
  %65 = load i32, i32* %character, align 4
  %call137 = call i32 @parse_dparen(i32 %65)
  store i32 %call137, i32* %result, align 4
  %66 = load i32, i32* %result, align 4
  %cmp138 = icmp eq i32 %66, -2
  br i1 %cmp138, label %if.then140, label %if.else141

if.then140:                                       ; preds = %sw.bb136
  br label %sw.epilog

if.else141:                                       ; preds = %sw.bb136
  %67 = load i32, i32* %result, align 4
  store i32 %67, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %if.then88, %if.then140
  br label %if.end277

if.else142:                                       ; preds = %if.end85
  %68 = load i32, i32* %character, align 4
  %cmp143 = icmp eq i32 %68, 60
  br i1 %cmp143, label %land.lhs.true145, label %if.else158

land.lhs.true145:                                 ; preds = %if.else142
  %69 = load i32, i32* %peek_char, align 4
  %cmp146 = icmp eq i32 %69, 38
  br i1 %cmp146, label %land.lhs.true148, label %if.else158

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %70 = load i32, i32* @shell_input_line_index, align 4
  %cmp149 = icmp ugt i32 %70, 1
  br i1 %cmp149, label %cond.true151, label %cond.false156

cond.true151:                                     ; preds = %land.lhs.true148
  %71 = load i8*, i8** @shell_input_line_property, align 4
  %72 = load i32, i32* @shell_input_line_index, align 4
  %sub152 = sub i32 %72, 1
  %arrayidx153 = getelementptr inbounds i8, i8* %71, i32 %sub152
  %73 = load i8, i8* %arrayidx153, align 1
  %conv154 = sext i8 %73 to i32
  %tobool155 = icmp ne i32 %conv154, 0
  br i1 %tobool155, label %if.then157, label %if.else158

cond.false156:                                    ; preds = %land.lhs.true148
  br i1 true, label %if.then157, label %if.else158

if.then157:                                       ; preds = %cond.false156, %cond.true151
  store i32 291, i32* %retval, align 4
  br label %return

if.else158:                                       ; preds = %cond.false156, %cond.true151, %land.lhs.true145, %if.else142
  %74 = load i32, i32* %character, align 4
  %cmp159 = icmp eq i32 %74, 62
  br i1 %cmp159, label %land.lhs.true161, label %if.else174

land.lhs.true161:                                 ; preds = %if.else158
  %75 = load i32, i32* %peek_char, align 4
  %cmp162 = icmp eq i32 %75, 38
  br i1 %cmp162, label %land.lhs.true164, label %if.else174

land.lhs.true164:                                 ; preds = %land.lhs.true161
  %76 = load i32, i32* @shell_input_line_index, align 4
  %cmp165 = icmp ugt i32 %76, 1
  br i1 %cmp165, label %cond.true167, label %cond.false172

cond.true167:                                     ; preds = %land.lhs.true164
  %77 = load i8*, i8** @shell_input_line_property, align 4
  %78 = load i32, i32* @shell_input_line_index, align 4
  %sub168 = sub i32 %78, 1
  %arrayidx169 = getelementptr inbounds i8, i8* %77, i32 %sub168
  %79 = load i8, i8* %arrayidx169, align 1
  %conv170 = sext i8 %79 to i32
  %tobool171 = icmp ne i32 %conv170, 0
  br i1 %tobool171, label %if.then173, label %if.else174

cond.false172:                                    ; preds = %land.lhs.true164
  br i1 true, label %if.then173, label %if.else174

if.then173:                                       ; preds = %cond.false172, %cond.true167
  store i32 293, i32* %retval, align 4
  br label %return

if.else174:                                       ; preds = %cond.false172, %cond.true167, %land.lhs.true161, %if.else158
  %80 = load i32, i32* %character, align 4
  %cmp175 = icmp eq i32 %80, 60
  br i1 %cmp175, label %land.lhs.true177, label %if.else190

land.lhs.true177:                                 ; preds = %if.else174
  %81 = load i32, i32* %peek_char, align 4
  %cmp178 = icmp eq i32 %81, 62
  br i1 %cmp178, label %land.lhs.true180, label %if.else190

land.lhs.true180:                                 ; preds = %land.lhs.true177
  %82 = load i32, i32* @shell_input_line_index, align 4
  %cmp181 = icmp ugt i32 %82, 1
  br i1 %cmp181, label %cond.true183, label %cond.false188

cond.true183:                                     ; preds = %land.lhs.true180
  %83 = load i8*, i8** @shell_input_line_property, align 4
  %84 = load i32, i32* @shell_input_line_index, align 4
  %sub184 = sub i32 %84, 1
  %arrayidx185 = getelementptr inbounds i8, i8* %83, i32 %sub184
  %85 = load i8, i8* %arrayidx185, align 1
  %conv186 = sext i8 %85 to i32
  %tobool187 = icmp ne i32 %conv186, 0
  br i1 %tobool187, label %if.then189, label %if.else190

cond.false188:                                    ; preds = %land.lhs.true180
  br i1 true, label %if.then189, label %if.else190

if.then189:                                       ; preds = %cond.false188, %cond.true183
  store i32 300, i32* %retval, align 4
  br label %return

if.else190:                                       ; preds = %cond.false188, %cond.true183, %land.lhs.true177, %if.else174
  %86 = load i32, i32* %character, align 4
  %cmp191 = icmp eq i32 %86, 62
  br i1 %cmp191, label %land.lhs.true193, label %if.else206

land.lhs.true193:                                 ; preds = %if.else190
  %87 = load i32, i32* %peek_char, align 4
  %cmp194 = icmp eq i32 %87, 124
  br i1 %cmp194, label %land.lhs.true196, label %if.else206

land.lhs.true196:                                 ; preds = %land.lhs.true193
  %88 = load i32, i32* @shell_input_line_index, align 4
  %cmp197 = icmp ugt i32 %88, 1
  br i1 %cmp197, label %cond.true199, label %cond.false204

cond.true199:                                     ; preds = %land.lhs.true196
  %89 = load i8*, i8** @shell_input_line_property, align 4
  %90 = load i32, i32* @shell_input_line_index, align 4
  %sub200 = sub i32 %90, 1
  %arrayidx201 = getelementptr inbounds i8, i8* %89, i32 %sub200
  %91 = load i8, i8* %arrayidx201, align 1
  %conv202 = sext i8 %91 to i32
  %tobool203 = icmp ne i32 %conv202, 0
  br i1 %tobool203, label %if.then205, label %if.else206

cond.false204:                                    ; preds = %land.lhs.true196
  br i1 true, label %if.then205, label %if.else206

if.then205:                                       ; preds = %cond.false204, %cond.true199
  store i32 301, i32* %retval, align 4
  br label %return

if.else206:                                       ; preds = %cond.false204, %cond.true199, %land.lhs.true193, %if.else190
  %92 = load i32, i32* %character, align 4
  %cmp207 = icmp eq i32 %92, 38
  br i1 %cmp207, label %land.lhs.true209, label %if.else236

land.lhs.true209:                                 ; preds = %if.else206
  %93 = load i32, i32* %peek_char, align 4
  %cmp210 = icmp eq i32 %93, 62
  br i1 %cmp210, label %land.lhs.true212, label %if.else236

land.lhs.true212:                                 ; preds = %land.lhs.true209
  %94 = load i32, i32* @shell_input_line_index, align 4
  %cmp213 = icmp ugt i32 %94, 1
  br i1 %cmp213, label %cond.true215, label %cond.false220

cond.true215:                                     ; preds = %land.lhs.true212
  %95 = load i8*, i8** @shell_input_line_property, align 4
  %96 = load i32, i32* @shell_input_line_index, align 4
  %sub216 = sub i32 %96, 1
  %arrayidx217 = getelementptr inbounds i8, i8* %95, i32 %sub216
  %97 = load i8, i8* %arrayidx217, align 1
  %conv218 = sext i8 %97 to i32
  %tobool219 = icmp ne i32 %conv218, 0
  br i1 %tobool219, label %if.then221, label %if.else236

cond.false220:                                    ; preds = %land.lhs.true212
  br i1 true, label %if.then221, label %if.else236

if.then221:                                       ; preds = %cond.false220, %cond.true215
  %call222 = call i32 @shell_getc(i32 1)
  store i32 %call222, i32* %peek_char, align 4
  %98 = load i32, i32* %peek_char, align 4
  %cmp223 = icmp eq i32 %98, 62
  br i1 %cmp223, label %land.lhs.true225, label %if.else235

land.lhs.true225:                                 ; preds = %if.then221
  %99 = load i32, i32* @shell_input_line_index, align 4
  %cmp226 = icmp ugt i32 %99, 1
  br i1 %cmp226, label %cond.true228, label %cond.false233

cond.true228:                                     ; preds = %land.lhs.true225
  %100 = load i8*, i8** @shell_input_line_property, align 4
  %101 = load i32, i32* @shell_input_line_index, align 4
  %sub229 = sub i32 %101, 1
  %arrayidx230 = getelementptr inbounds i8, i8* %100, i32 %sub229
  %102 = load i8, i8* %arrayidx230, align 1
  %conv231 = sext i8 %102 to i32
  %tobool232 = icmp ne i32 %conv231, 0
  br i1 %tobool232, label %if.then234, label %if.else235

cond.false233:                                    ; preds = %land.lhs.true225
  br i1 true, label %if.then234, label %if.else235

if.then234:                                       ; preds = %cond.false233, %cond.true228
  store i32 299, i32* %retval, align 4
  br label %return

if.else235:                                       ; preds = %cond.false233, %cond.true228, %if.then221
  %103 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %103)
  store i32 298, i32* %retval, align 4
  br label %return

if.else236:                                       ; preds = %cond.false220, %cond.true215, %land.lhs.true209, %if.else206
  %104 = load i32, i32* %character, align 4
  %cmp237 = icmp eq i32 %104, 124
  br i1 %cmp237, label %land.lhs.true239, label %if.else252

land.lhs.true239:                                 ; preds = %if.else236
  %105 = load i32, i32* %peek_char, align 4
  %cmp240 = icmp eq i32 %105, 38
  br i1 %cmp240, label %land.lhs.true242, label %if.else252

land.lhs.true242:                                 ; preds = %land.lhs.true239
  %106 = load i32, i32* @shell_input_line_index, align 4
  %cmp243 = icmp ugt i32 %106, 1
  br i1 %cmp243, label %cond.true245, label %cond.false250

cond.true245:                                     ; preds = %land.lhs.true242
  %107 = load i8*, i8** @shell_input_line_property, align 4
  %108 = load i32, i32* @shell_input_line_index, align 4
  %sub246 = sub i32 %108, 1
  %arrayidx247 = getelementptr inbounds i8, i8* %107, i32 %sub246
  %109 = load i8, i8* %arrayidx247, align 1
  %conv248 = sext i8 %109 to i32
  %tobool249 = icmp ne i32 %conv248, 0
  br i1 %tobool249, label %if.then251, label %if.else252

cond.false250:                                    ; preds = %land.lhs.true242
  br i1 true, label %if.then251, label %if.else252

if.then251:                                       ; preds = %cond.false250, %cond.true245
  store i32 302, i32* %retval, align 4
  br label %return

if.else252:                                       ; preds = %cond.false250, %cond.true245, %land.lhs.true239, %if.else236
  %110 = load i32, i32* %character, align 4
  %cmp253 = icmp eq i32 %110, 59
  br i1 %cmp253, label %land.lhs.true255, label %if.end270

land.lhs.true255:                                 ; preds = %if.else252
  %111 = load i32, i32* %peek_char, align 4
  %cmp256 = icmp eq i32 %111, 38
  br i1 %cmp256, label %land.lhs.true258, label %if.end270

land.lhs.true258:                                 ; preds = %land.lhs.true255
  %112 = load i32, i32* @shell_input_line_index, align 4
  %cmp259 = icmp ugt i32 %112, 1
  br i1 %cmp259, label %cond.true261, label %cond.false266

cond.true261:                                     ; preds = %land.lhs.true258
  %113 = load i8*, i8** @shell_input_line_property, align 4
  %114 = load i32, i32* @shell_input_line_index, align 4
  %sub262 = sub i32 %114, 1
  %arrayidx263 = getelementptr inbounds i8, i8* %113, i32 %sub262
  %115 = load i8, i8* %arrayidx263, align 1
  %conv264 = sext i8 %115 to i32
  %tobool265 = icmp ne i32 %conv264, 0
  br i1 %tobool265, label %if.then267, label %if.end270

cond.false266:                                    ; preds = %land.lhs.true258
  br i1 true, label %if.then267, label %if.end270

if.then267:                                       ; preds = %cond.false266, %cond.true261
  %116 = load i32, i32* @parser_state, align 4
  %or268 = or i32 %116, 1
  store i32 %or268, i32* @parser_state, align 4
  %117 = load i32, i32* @parser_state, align 4
  %and269 = and i32 %117, -3
  store i32 %and269, i32* @parser_state, align 4
  store i32 295, i32* %retval, align 4
  br label %return

if.end270:                                        ; preds = %cond.false266, %cond.true261, %land.lhs.true255, %if.else252
  br label %if.end271

if.end271:                                        ; preds = %if.end270
  br label %if.end272

if.end272:                                        ; preds = %if.end271
  br label %if.end273

if.end273:                                        ; preds = %if.end272
  br label %if.end274

if.end274:                                        ; preds = %if.end273
  br label %if.end275

if.end275:                                        ; preds = %if.end274
  br label %if.end276

if.end276:                                        ; preds = %if.end275
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %sw.epilog
  %118 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %118)
  %119 = load i32, i32* %character, align 4
  %cmp278 = icmp eq i32 %119, 41
  br i1 %cmp278, label %land.lhs.true280, label %if.end298

land.lhs.true280:                                 ; preds = %if.end277
  %120 = load i32, i32* @last_read_token, align 4
  %cmp281 = icmp eq i32 %120, 40
  br i1 %cmp281, label %land.lhs.true283, label %if.end298

land.lhs.true283:                                 ; preds = %land.lhs.true280
  %121 = load i32, i32* @token_before_that, align 4
  %cmp284 = icmp eq i32 %121, 280
  br i1 %cmp284, label %land.lhs.true286, label %if.end298

land.lhs.true286:                                 ; preds = %land.lhs.true283
  %122 = load i32, i32* @shell_input_line_index, align 4
  %cmp287 = icmp ugt i32 %122, 1
  br i1 %cmp287, label %cond.true289, label %cond.false294

cond.true289:                                     ; preds = %land.lhs.true286
  %123 = load i8*, i8** @shell_input_line_property, align 4
  %124 = load i32, i32* @shell_input_line_index, align 4
  %sub290 = sub i32 %124, 1
  %arrayidx291 = getelementptr inbounds i8, i8* %123, i32 %sub290
  %125 = load i8, i8* %arrayidx291, align 1
  %conv292 = sext i8 %125 to i32
  %tobool293 = icmp ne i32 %conv292, 0
  br i1 %tobool293, label %if.then295, label %if.end298

cond.false294:                                    ; preds = %land.lhs.true286
  br i1 true, label %if.then295, label %if.end298

if.then295:                                       ; preds = %cond.false294, %cond.true289
  %126 = load i32, i32* @parser_state, align 4
  %or296 = or i32 %126, 4
  store i32 %or296, i32* @parser_state, align 4
  %127 = load i32, i32* @parser_state, align 4
  %and297 = and i32 %127, -3
  store i32 %and297, i32* @parser_state, align 4
  %128 = load i32, i32* @line_number, align 4
  store i32 %128, i32* @function_dstart, align 4
  br label %if.end298

if.end298:                                        ; preds = %if.then295, %cond.false294, %cond.true289, %land.lhs.true283, %land.lhs.true280, %if.end277
  %129 = load i32, i32* %character, align 4
  %cmp299 = icmp eq i32 %129, 40
  br i1 %cmp299, label %land.lhs.true301, label %if.else316

land.lhs.true301:                                 ; preds = %if.end298
  %130 = load i32, i32* @parser_state, align 4
  %and302 = and i32 %130, 1
  %cmp303 = icmp eq i32 %and302, 0
  br i1 %cmp303, label %land.lhs.true305, label %if.else316

land.lhs.true305:                                 ; preds = %land.lhs.true301
  %131 = load i32, i32* @shell_input_line_index, align 4
  %cmp306 = icmp ugt i32 %131, 1
  br i1 %cmp306, label %cond.true308, label %cond.false313

cond.true308:                                     ; preds = %land.lhs.true305
  %132 = load i8*, i8** @shell_input_line_property, align 4
  %133 = load i32, i32* @shell_input_line_index, align 4
  %sub309 = sub i32 %133, 1
  %arrayidx310 = getelementptr inbounds i8, i8* %132, i32 %sub309
  %134 = load i8, i8* %arrayidx310, align 1
  %conv311 = sext i8 %134 to i32
  %tobool312 = icmp ne i32 %conv311, 0
  br i1 %tobool312, label %if.then314, label %if.else316

cond.false313:                                    ; preds = %land.lhs.true305
  br i1 true, label %if.then314, label %if.else316

if.then314:                                       ; preds = %cond.false313, %cond.true308
  %135 = load i32, i32* @parser_state, align 4
  %or315 = or i32 %135, 32
  store i32 %or315, i32* @parser_state, align 4
  br label %if.end352

if.else316:                                       ; preds = %cond.false313, %cond.true308, %land.lhs.true301, %if.end298
  %136 = load i32, i32* @parser_state, align 4
  %and317 = and i32 %136, 1
  %tobool318 = icmp ne i32 %and317, 0
  br i1 %tobool318, label %land.lhs.true319, label %if.else333

land.lhs.true319:                                 ; preds = %if.else316
  %137 = load i32, i32* %character, align 4
  %cmp320 = icmp eq i32 %137, 41
  br i1 %cmp320, label %land.lhs.true322, label %if.else333

land.lhs.true322:                                 ; preds = %land.lhs.true319
  %138 = load i32, i32* @shell_input_line_index, align 4
  %cmp323 = icmp ugt i32 %138, 1
  br i1 %cmp323, label %cond.true325, label %cond.false330

cond.true325:                                     ; preds = %land.lhs.true322
  %139 = load i8*, i8** @shell_input_line_property, align 4
  %140 = load i32, i32* @shell_input_line_index, align 4
  %sub326 = sub i32 %140, 1
  %arrayidx327 = getelementptr inbounds i8, i8* %139, i32 %sub326
  %141 = load i8, i8* %arrayidx327, align 1
  %conv328 = sext i8 %141 to i32
  %tobool329 = icmp ne i32 %conv328, 0
  br i1 %tobool329, label %if.then331, label %if.else333

cond.false330:                                    ; preds = %land.lhs.true322
  br i1 true, label %if.then331, label %if.else333

if.then331:                                       ; preds = %cond.false330, %cond.true325
  %142 = load i32, i32* @parser_state, align 4
  %and332 = and i32 %142, -2
  store i32 %and332, i32* @parser_state, align 4
  br label %if.end351

if.else333:                                       ; preds = %cond.false330, %cond.true325, %land.lhs.true319, %if.else316
  %143 = load i32, i32* @parser_state, align 4
  %and334 = and i32 %143, 32
  %tobool335 = icmp ne i32 %and334, 0
  br i1 %tobool335, label %land.lhs.true336, label %if.end350

land.lhs.true336:                                 ; preds = %if.else333
  %144 = load i32, i32* %character, align 4
  %cmp337 = icmp eq i32 %144, 41
  br i1 %cmp337, label %land.lhs.true339, label %if.end350

land.lhs.true339:                                 ; preds = %land.lhs.true336
  %145 = load i32, i32* @shell_input_line_index, align 4
  %cmp340 = icmp ugt i32 %145, 1
  br i1 %cmp340, label %cond.true342, label %cond.false347

cond.true342:                                     ; preds = %land.lhs.true339
  %146 = load i8*, i8** @shell_input_line_property, align 4
  %147 = load i32, i32* @shell_input_line_index, align 4
  %sub343 = sub i32 %147, 1
  %arrayidx344 = getelementptr inbounds i8, i8* %146, i32 %sub343
  %148 = load i8, i8* %arrayidx344, align 1
  %conv345 = sext i8 %148 to i32
  %tobool346 = icmp ne i32 %conv345, 0
  br i1 %tobool346, label %if.then348, label %if.end350

cond.false347:                                    ; preds = %land.lhs.true339
  br i1 true, label %if.then348, label %if.end350

if.then348:                                       ; preds = %cond.false347, %cond.true342
  %149 = load i32, i32* @parser_state, align 4
  %and349 = and i32 %149, -33
  store i32 %and349, i32* @parser_state, align 4
  br label %if.end350

if.end350:                                        ; preds = %if.then348, %cond.false347, %cond.true342, %land.lhs.true336, %if.else333
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.then331
  br label %if.end352

if.end352:                                        ; preds = %if.end351, %if.then314
  %150 = load i32, i32* @posixly_correct, align 4
  %tobool353 = icmp ne i32 %150, 0
  br i1 %tobool353, label %land.lhs.true363, label %lor.lhs.false354

lor.lhs.false354:                                 ; preds = %if.end352
  %151 = load i32, i32* %character, align 4
  %cmp355 = icmp ne i32 %151, 62
  br i1 %cmp355, label %land.lhs.true357, label %lor.lhs.false360

land.lhs.true357:                                 ; preds = %lor.lhs.false354
  %152 = load i32, i32* %character, align 4
  %cmp358 = icmp ne i32 %152, 60
  br i1 %cmp358, label %land.lhs.true363, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %land.lhs.true357, %lor.lhs.false354
  %153 = load i32, i32* %peek_char, align 4
  %cmp361 = icmp ne i32 %153, 40
  br i1 %cmp361, label %land.lhs.true363, label %if.end373

land.lhs.true363:                                 ; preds = %lor.lhs.false360, %land.lhs.true357, %if.end352
  %154 = load i32, i32* @shell_input_line_index, align 4
  %cmp364 = icmp ugt i32 %154, 1
  br i1 %cmp364, label %cond.true366, label %cond.false371

cond.true366:                                     ; preds = %land.lhs.true363
  %155 = load i8*, i8** @shell_input_line_property, align 4
  %156 = load i32, i32* @shell_input_line_index, align 4
  %sub367 = sub i32 %156, 1
  %arrayidx368 = getelementptr inbounds i8, i8* %155, i32 %sub367
  %157 = load i8, i8* %arrayidx368, align 1
  %conv369 = sext i8 %157 to i32
  %tobool370 = icmp ne i32 %conv369, 0
  br i1 %tobool370, label %if.then372, label %if.end373

cond.false371:                                    ; preds = %land.lhs.true363
  br i1 true, label %if.then372, label %if.end373

if.then372:                                       ; preds = %cond.false371, %cond.true366
  %158 = load i32, i32* %character, align 4
  store i32 %158, i32* %retval, align 4
  br label %return

if.end373:                                        ; preds = %cond.false371, %cond.true366, %lor.lhs.false360
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %cond.false66, %cond.true61, %land.lhs.true54, %if.end48
  %159 = load i32, i32* %character, align 4
  %cmp375 = icmp eq i32 %159, 45
  br i1 %cmp375, label %land.lhs.true377, label %if.end393

land.lhs.true377:                                 ; preds = %if.end374
  %160 = load i32, i32* @last_read_token, align 4
  %cmp378 = icmp eq i32 %160, 291
  br i1 %cmp378, label %land.lhs.true383, label %lor.lhs.false380

lor.lhs.false380:                                 ; preds = %land.lhs.true377
  %161 = load i32, i32* @last_read_token, align 4
  %cmp381 = icmp eq i32 %161, 293
  br i1 %cmp381, label %land.lhs.true383, label %if.end393

land.lhs.true383:                                 ; preds = %lor.lhs.false380, %land.lhs.true377
  %162 = load i32, i32* @shell_input_line_index, align 4
  %cmp384 = icmp ugt i32 %162, 1
  br i1 %cmp384, label %cond.true386, label %cond.false391

cond.true386:                                     ; preds = %land.lhs.true383
  %163 = load i8*, i8** @shell_input_line_property, align 4
  %164 = load i32, i32* @shell_input_line_index, align 4
  %sub387 = sub i32 %164, 1
  %arrayidx388 = getelementptr inbounds i8, i8* %163, i32 %sub387
  %165 = load i8, i8* %arrayidx388, align 1
  %conv389 = sext i8 %165 to i32
  %tobool390 = icmp ne i32 %conv389, 0
  br i1 %tobool390, label %if.then392, label %if.end393

cond.false391:                                    ; preds = %land.lhs.true383
  br i1 true, label %if.then392, label %if.end393

if.then392:                                       ; preds = %cond.false391, %cond.true386
  %166 = load i32, i32* %character, align 4
  store i32 %166, i32* %retval, align 4
  br label %return

if.end393:                                        ; preds = %cond.false391, %cond.true386, %lor.lhs.false380, %if.end374
  br label %tokword

tokword:                                          ; preds = %if.end393, %if.then47
  %167 = load i32, i32* %character, align 4
  %call394 = call i32 @read_token_word(i32 %167)
  store i32 %call394, i32* %result, align 4
  %168 = load i32, i32* %result, align 4
  %cmp395 = icmp eq i32 %168, -99
  br i1 %cmp395, label %if.then397, label %if.end398

if.then397:                                       ; preds = %tokword
  br label %re_read_token

if.end398:                                        ; preds = %tokword
  %169 = load i32, i32* %result, align 4
  store i32 %169, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end398, %if.then392, %if.then372, %if.then267, %if.then251, %if.else235, %if.then234, %if.then205, %if.then189, %if.then173, %if.then157, %if.else141, %sw.bb135, %sw.bb134, %if.else133, %if.then132, %sw.bb116, %if.else115, %if.then114, %if.then101, %if.end41, %if.then20, %if.end11, %if.then10, %if.end5, %if.then
  %170 = load i32, i32* %retval, align 4
  ret i32 %170
}

declare %struct.word_list* @make_word_list(%struct.word_desc*, %struct.word_list*) #1

declare %struct.g_list* @list_reverse(...) #1

declare %struct.array* @save_pipestatus_array() #1

declare void @restore_pipestatus_array(%struct.array*) #1

; Function Attrs: noinline nounwind
define internal void @set_line_mbstate() #0 {
entry:
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %previ = alloca i32, align 4
  %len = alloca i32, align 4
  %mbs = alloca %struct.__mbstate_t, align 4
  %prevs = alloca %struct.__mbstate_t, align 4
  %mbclen = alloca i32, align 4
  %j = alloca i32, align 4
  %j29 = alloca i32, align 4
  %0 = load i8*, i8** @shell_input_line, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end45

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** @shell_input_line, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %len, align 4
  %2 = load i8*, i8** @shell_input_line_property, align 4
  %3 = load i32, i32* %len, align 4
  %add = add i32 %3, 1
  %call1 = call i8* @sh_xrealloc(i8* %2, i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6465)
  store i8* %call1, i8** @shell_input_line_property, align 4
  %4 = bitcast %struct.__mbstate_t* %prevs to i8*
  call void @llvm.memset.p0i8.i32(i8* %4, i8 0, i32 8, i32 4, i1 false)
  store i32 0, i32* %previ, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc43, %if.end
  %5 = load i32, i32* %i, align 4
  %6 = load i32, i32* %len, align 4
  %cmp2 = icmp ult i32 %5, %6
  br i1 %cmp2, label %for.body, label %for.end45

for.body:                                         ; preds = %for.cond
  %7 = bitcast %struct.__mbstate_t* %mbs to i8*
  %8 = bitcast %struct.__mbstate_t* %prevs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %7, i8* %8, i32 8, i32 4, i1 false)
  %9 = load i8*, i8** @shell_input_line, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %9, i32 %10
  %11 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %11 to i32
  store i32 %conv, i32* %c, align 4
  %12 = load i32, i32* %c, align 4
  %cmp3 = icmp eq i32 %12, -1
  br i1 %cmp3, label %if.then5, label %if.end11

if.then5:                                         ; preds = %for.body
  %13 = load i32, i32* %i, align 4
  store i32 %13, i32* %j, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %if.then5
  %14 = load i32, i32* %j, align 4
  %15 = load i32, i32* %len, align 4
  %cmp7 = icmp ult i32 %14, %15
  br i1 %cmp7, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond6
  %16 = load i8*, i8** @shell_input_line_property, align 4
  %17 = load i32, i32* %j, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %16, i32 %17
  store i8 1, i8* %arrayidx10, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %18 = load i32, i32* %j, align 4
  %inc = add i32 %18, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  br label %for.end45

if.end11:                                         ; preds = %for.body
  %19 = load i8*, i8** @shell_input_line, align 4
  %20 = load i32, i32* %previ, align 4
  %add.ptr = getelementptr inbounds i8, i8* %19, i32 %20
  %21 = load i32, i32* %i, align 4
  %22 = load i32, i32* %previ, align 4
  %sub = sub i32 %21, %22
  %add12 = add i32 %sub, 1
  %call13 = call i32 @mbrlen(i8* %add.ptr, i32 %add12, %struct.__mbstate_t* %mbs)
  store i32 %call13, i32* %mbclen, align 4
  %23 = load i32, i32* %mbclen, align 4
  %cmp14 = icmp eq i32 %23, 1
  br i1 %cmp14, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end11
  %24 = load i32, i32* %mbclen, align 4
  %cmp16 = icmp eq i32 %24, -1
  br i1 %cmp16, label %if.then18, label %if.else

if.then18:                                        ; preds = %lor.lhs.false, %if.end11
  store i32 1, i32* %mbclen, align 4
  %25 = load i32, i32* %i, align 4
  %add19 = add i32 %25, 1
  store i32 %add19, i32* %previ, align 4
  br label %if.end40

if.else:                                          ; preds = %lor.lhs.false
  %26 = load i32, i32* %mbclen, align 4
  %cmp20 = icmp eq i32 %26, -2
  br i1 %cmp20, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.else
  store i32 0, i32* %mbclen, align 4
  br label %if.end39

if.else23:                                        ; preds = %if.else
  %27 = load i32, i32* %mbclen, align 4
  %cmp24 = icmp ugt i32 %27, 1
  br i1 %cmp24, label %if.then26, label %if.else28

if.then26:                                        ; preds = %if.else23
  store i32 0, i32* %mbclen, align 4
  %28 = load i32, i32* %i, align 4
  %add27 = add i32 %28, 1
  store i32 %add27, i32* %previ, align 4
  %29 = bitcast %struct.__mbstate_t* %prevs to i8*
  %30 = bitcast %struct.__mbstate_t* %mbs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %29, i8* %30, i32 8, i32 4, i1 false)
  br label %if.end38

if.else28:                                        ; preds = %if.else23
  %31 = load i32, i32* %i, align 4
  store i32 %31, i32* %j29, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc35, %if.else28
  %32 = load i32, i32* %j29, align 4
  %33 = load i32, i32* %len, align 4
  %cmp31 = icmp ult i32 %32, %33
  br i1 %cmp31, label %for.body33, label %for.end37

for.body33:                                       ; preds = %for.cond30
  %34 = load i8*, i8** @shell_input_line_property, align 4
  %35 = load i32, i32* %j29, align 4
  %arrayidx34 = getelementptr inbounds i8, i8* %34, i32 %35
  store i8 1, i8* %arrayidx34, align 1
  br label %for.inc35

for.inc35:                                        ; preds = %for.body33
  %36 = load i32, i32* %j29, align 4
  %inc36 = add i32 %36, 1
  store i32 %inc36, i32* %j29, align 4
  br label %for.cond30

for.end37:                                        ; preds = %for.cond30
  br label %for.end45

if.end38:                                         ; preds = %if.then26
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then22
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then18
  %37 = load i32, i32* %mbclen, align 4
  %conv41 = trunc i32 %37 to i8
  %38 = load i8*, i8** @shell_input_line_property, align 4
  %39 = load i32, i32* %i, align 4
  %arrayidx42 = getelementptr inbounds i8, i8* %38, i32 %39
  store i8 %conv41, i8* %arrayidx42, align 1
  br label %for.inc43

for.inc43:                                        ; preds = %if.end40
  %40 = load i32, i32* %i, align 4
  %inc44 = add i32 %40, 1
  store i32 %inc44, i32* %i, align 4
  br label %for.cond

for.end45:                                        ; preds = %if.then, %for.end37, %for.end, %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define i32 @yyparse() #0 {
entry:
  %retval = alloca i32, align 4
  %yym = alloca i32, align 4
  %yyn = alloca i32, align 4
  %yystate = alloca i32, align 4
  %t = alloca %struct.redirect*, align 4
  %tc = alloca %struct.command*, align 4
  %t417 = alloca %struct.redirect*, align 4
  %tc828 = alloca %struct.command*, align 4
  %t834 = alloca %struct.redirect*, align 4
  %tc865 = alloca %struct.command*, align 4
  %t871 = alloca %struct.redirect*, align 4
  %tc903 = alloca %struct.command*, align 4
  %t909 = alloca %struct.redirect*, align 4
  %x = alloca %struct.element, align 4
  %x1302 = alloca %struct.element, align 4
  %tc1327 = alloca %struct.command*, align 4
  %rd = alloca %union.REDIRECTEE, align 4
  %sd = alloca %union.REDIRECTEE, align 4
  %r = alloca %struct.redirect*, align 4
  %t1346 = alloca %struct.redirect*, align 4
  store i32 0, i32* %yym, align 4
  store i32 0, i32* %yyn, align 4
  store i32 0, i32* @yynerrs, align 4
  store i32 0, i32* @yyerrflag, align 4
  store i32 -1, i32* @yychar, align 4
  store i32 0, i32* %yystate, align 4
  %0 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 1), align 4
  %cmp = icmp eq i16* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call = call i32 @yygrowstack(%struct.YYSTACKDATA* @yystack)
  %cmp1 = icmp eq i32 %call, -2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %yyoverflow

if.end:                                           ; preds = %land.lhs.true, %entry
  %1 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 1), align 4
  store i16* %1, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %2 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 4), align 4
  store %union.YYSTYPE* %2, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  store i32 0, i32* %yystate, align 4
  %3 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  store i16 0, i16* %3, align 2
  br label %yyloop

yyloop:                                           ; preds = %if.end1429, %if.end1395, %if.end121, %if.end104, %if.end48, %if.end
  %4 = load i32, i32* %yystate, align 4
  %arrayidx = getelementptr inbounds [341 x i16], [341 x i16]* @yydefred, i32 0, i32 %4
  %5 = load i16, i16* %arrayidx, align 2
  %conv = sext i16 %5 to i32
  store i32 %conv, i32* %yyn, align 4
  %cmp2 = icmp ne i32 %conv, 0
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %yyloop
  br label %yyreduce

if.end5:                                          ; preds = %yyloop
  %6 = load i32, i32* @yychar, align 4
  %cmp6 = icmp slt i32 %6, 0
  br i1 %cmp6, label %if.then8, label %if.end14

if.then8:                                         ; preds = %if.end5
  %call9 = call i32 @yylex()
  store i32 %call9, i32* @yychar, align 4
  %7 = load i32, i32* @yychar, align 4
  %cmp10 = icmp slt i32 %7, 0
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then8
  store i32 0, i32* @yychar, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.then8
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end5
  %8 = load i32, i32* %yystate, align 4
  %arrayidx15 = getelementptr inbounds [341 x i16], [341 x i16]* @yysindex, i32 0, i32 %8
  %9 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %9 to i32
  store i32 %conv16, i32* %yyn, align 4
  %cmp17 = icmp ne i32 %conv16, 0
  br i1 %cmp17, label %land.lhs.true19, label %if.end49

land.lhs.true19:                                  ; preds = %if.end14
  %10 = load i32, i32* @yychar, align 4
  %11 = load i32, i32* %yyn, align 4
  %add = add nsw i32 %11, %10
  store i32 %add, i32* %yyn, align 4
  %cmp20 = icmp sge i32 %add, 0
  br i1 %cmp20, label %land.lhs.true22, label %if.end49

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %12 = load i32, i32* %yyn, align 4
  %cmp23 = icmp sle i32 %12, 1748
  br i1 %cmp23, label %land.lhs.true25, label %if.end49

land.lhs.true25:                                  ; preds = %land.lhs.true22
  %13 = load i32, i32* %yyn, align 4
  %arrayidx26 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yycheck, i32 0, i32 %13
  %14 = load i16, i16* %arrayidx26, align 2
  %conv27 = sext i16 %14 to i32
  %15 = load i32, i32* @yychar, align 4
  %conv28 = trunc i32 %15 to i16
  %conv29 = sext i16 %conv28 to i32
  %cmp30 = icmp eq i32 %conv27, %conv29
  br i1 %cmp30, label %if.then32, label %if.end49

if.then32:                                        ; preds = %land.lhs.true25
  %16 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %17 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 3), align 4
  %cmp33 = icmp uge i16* %16, %17
  br i1 %cmp33, label %land.lhs.true35, label %if.end40

land.lhs.true35:                                  ; preds = %if.then32
  %call36 = call i32 @yygrowstack(%struct.YYSTACKDATA* @yystack)
  %cmp37 = icmp eq i32 %call36, -2
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %land.lhs.true35
  br label %yyoverflow

if.end40:                                         ; preds = %land.lhs.true35, %if.then32
  %18 = load i32, i32* %yyn, align 4
  %arrayidx41 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yytable, i32 0, i32 %18
  %19 = load i16, i16* %arrayidx41, align 2
  %conv42 = sext i16 %19 to i32
  store i32 %conv42, i32* %yystate, align 4
  %20 = load i32, i32* %yyn, align 4
  %arrayidx43 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yytable, i32 0, i32 %20
  %21 = load i16, i16* %arrayidx43, align 2
  %22 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %incdec.ptr = getelementptr inbounds i16, i16* %22, i32 1
  store i16* %incdec.ptr, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  store i16 %21, i16* %incdec.ptr, align 2
  %23 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %incdec.ptr44 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %23, i32 1
  store %union.YYSTYPE* %incdec.ptr44, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %24 = bitcast %union.YYSTYPE* %incdec.ptr44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %24, i8* bitcast (%union.YYSTYPE* @yylval to i8*), i32 8, i32 4, i1 false)
  store i32 -1, i32* @yychar, align 4
  %25 = load i32, i32* @yyerrflag, align 4
  %cmp45 = icmp sgt i32 %25, 0
  br i1 %cmp45, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end40
  %26 = load i32, i32* @yyerrflag, align 4
  %dec = add nsw i32 %26, -1
  store i32 %dec, i32* @yyerrflag, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end40
  br label %yyloop

if.end49:                                         ; preds = %land.lhs.true25, %land.lhs.true22, %land.lhs.true19, %if.end14
  %27 = load i32, i32* %yystate, align 4
  %arrayidx50 = getelementptr inbounds [341 x i16], [341 x i16]* @yyrindex, i32 0, i32 %27
  %28 = load i16, i16* %arrayidx50, align 2
  %conv51 = sext i16 %28 to i32
  store i32 %conv51, i32* %yyn, align 4
  %cmp52 = icmp ne i32 %conv51, 0
  br i1 %cmp52, label %land.lhs.true54, label %if.end71

land.lhs.true54:                                  ; preds = %if.end49
  %29 = load i32, i32* @yychar, align 4
  %30 = load i32, i32* %yyn, align 4
  %add55 = add nsw i32 %30, %29
  store i32 %add55, i32* %yyn, align 4
  %cmp56 = icmp sge i32 %add55, 0
  br i1 %cmp56, label %land.lhs.true58, label %if.end71

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %31 = load i32, i32* %yyn, align 4
  %cmp59 = icmp sle i32 %31, 1748
  br i1 %cmp59, label %land.lhs.true61, label %if.end71

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %32 = load i32, i32* %yyn, align 4
  %arrayidx62 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yycheck, i32 0, i32 %32
  %33 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %33 to i32
  %34 = load i32, i32* @yychar, align 4
  %conv64 = trunc i32 %34 to i16
  %conv65 = sext i16 %conv64 to i32
  %cmp66 = icmp eq i32 %conv63, %conv65
  br i1 %cmp66, label %if.then68, label %if.end71

if.then68:                                        ; preds = %land.lhs.true61
  %35 = load i32, i32* %yyn, align 4
  %arrayidx69 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yytable, i32 0, i32 %35
  %36 = load i16, i16* %arrayidx69, align 2
  %conv70 = sext i16 %36 to i32
  store i32 %conv70, i32* %yyn, align 4
  br label %yyreduce

if.end71:                                         ; preds = %land.lhs.true61, %land.lhs.true58, %land.lhs.true54, %if.end49
  %37 = load i32, i32* @yyerrflag, align 4
  %cmp72 = icmp ne i32 %37, 0
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %if.end71
  br label %yyinrecovery

if.end75:                                         ; preds = %if.end71
  %call76 = call i32 @yyerror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i32 0, i32 0))
  br label %yyerrlab

yyerrlab:                                         ; preds = %if.end75
  %38 = load i32, i32* @yynerrs, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* @yynerrs, align 4
  br label %yyinrecovery

yyinrecovery:                                     ; preds = %yyerrlab, %if.then74
  %39 = load i32, i32* @yyerrflag, align 4
  %cmp77 = icmp slt i32 %39, 3
  br i1 %cmp77, label %if.then79, label %if.else117

if.then79:                                        ; preds = %yyinrecovery
  store i32 3, i32* @yyerrflag, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end116, %if.then79
  %40 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %41 = load i16, i16* %40, align 2
  %idxprom = sext i16 %41 to i32
  %arrayidx80 = getelementptr inbounds [341 x i16], [341 x i16]* @yysindex, i32 0, i32 %idxprom
  %42 = load i16, i16* %arrayidx80, align 2
  %conv81 = sext i16 %42 to i32
  store i32 %conv81, i32* %yyn, align 4
  %cmp82 = icmp ne i32 %conv81, 0
  br i1 %cmp82, label %land.lhs.true84, label %if.else

land.lhs.true84:                                  ; preds = %for.cond
  %43 = load i32, i32* %yyn, align 4
  %add85 = add nsw i32 %43, 256
  store i32 %add85, i32* %yyn, align 4
  %cmp86 = icmp sge i32 %add85, 0
  br i1 %cmp86, label %land.lhs.true88, label %if.else

land.lhs.true88:                                  ; preds = %land.lhs.true84
  %44 = load i32, i32* %yyn, align 4
  %cmp89 = icmp sle i32 %44, 1748
  br i1 %cmp89, label %land.lhs.true91, label %if.else

land.lhs.true91:                                  ; preds = %land.lhs.true88
  %45 = load i32, i32* %yyn, align 4
  %arrayidx92 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yycheck, i32 0, i32 %45
  %46 = load i16, i16* %arrayidx92, align 2
  %conv93 = sext i16 %46 to i32
  %cmp94 = icmp eq i32 %conv93, 256
  br i1 %cmp94, label %if.then96, label %if.else

if.then96:                                        ; preds = %land.lhs.true91
  %47 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %48 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 3), align 4
  %cmp97 = icmp uge i16* %47, %48
  br i1 %cmp97, label %land.lhs.true99, label %if.end104

land.lhs.true99:                                  ; preds = %if.then96
  %call100 = call i32 @yygrowstack(%struct.YYSTACKDATA* @yystack)
  %cmp101 = icmp eq i32 %call100, -2
  br i1 %cmp101, label %if.then103, label %if.end104

if.then103:                                       ; preds = %land.lhs.true99
  br label %yyoverflow

if.end104:                                        ; preds = %land.lhs.true99, %if.then96
  %49 = load i32, i32* %yyn, align 4
  %arrayidx105 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yytable, i32 0, i32 %49
  %50 = load i16, i16* %arrayidx105, align 2
  %conv106 = sext i16 %50 to i32
  store i32 %conv106, i32* %yystate, align 4
  %51 = load i32, i32* %yyn, align 4
  %arrayidx107 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yytable, i32 0, i32 %51
  %52 = load i16, i16* %arrayidx107, align 2
  %53 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %incdec.ptr108 = getelementptr inbounds i16, i16* %53, i32 1
  store i16* %incdec.ptr108, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  store i16 %52, i16* %incdec.ptr108, align 2
  %54 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %incdec.ptr109 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %54, i32 1
  store %union.YYSTYPE* %incdec.ptr109, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %55 = bitcast %union.YYSTYPE* %incdec.ptr109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %55, i8* bitcast (%union.YYSTYPE* @yylval to i8*), i32 8, i32 4, i1 false)
  br label %yyloop

if.else:                                          ; preds = %land.lhs.true91, %land.lhs.true88, %land.lhs.true84, %for.cond
  %56 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %57 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 1), align 4
  %cmp110 = icmp ule i16* %56, %57
  br i1 %cmp110, label %if.then112, label %if.end113

if.then112:                                       ; preds = %if.else
  br label %yyabort

if.end113:                                        ; preds = %if.else
  %58 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %incdec.ptr114 = getelementptr inbounds i16, i16* %58, i32 -1
  store i16* %incdec.ptr114, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %59 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %incdec.ptr115 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %59, i32 -1
  store %union.YYSTYPE* %incdec.ptr115, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  br label %if.end116

if.end116:                                        ; preds = %if.end113
  br label %for.cond

if.else117:                                       ; preds = %yyinrecovery
  %60 = load i32, i32* @yychar, align 4
  %cmp118 = icmp eq i32 %60, 0
  br i1 %cmp118, label %if.then120, label %if.end121

if.then120:                                       ; preds = %if.else117
  br label %yyabort

if.end121:                                        ; preds = %if.else117
  store i32 -1, i32* @yychar, align 4
  br label %yyloop

yyreduce:                                         ; preds = %if.then68, %if.then4
  %61 = load i32, i32* %yyn, align 4
  %arrayidx122 = getelementptr inbounds [167 x i16], [167 x i16]* @yylen, i32 0, i32 %61
  %62 = load i16, i16* %arrayidx122, align 2
  %conv123 = sext i16 %62 to i32
  store i32 %conv123, i32* %yym, align 4
  %63 = load i32, i32* %yym, align 4
  %cmp124 = icmp sgt i32 %63, 0
  br i1 %cmp124, label %if.then126, label %if.else128

if.then126:                                       ; preds = %yyreduce
  %64 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %65 = load i32, i32* %yym, align 4
  %sub = sub nsw i32 1, %65
  %arrayidx127 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %64, i32 %sub
  %66 = bitcast %union.YYSTYPE* %arrayidx127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* bitcast (%union.YYSTYPE* @yyval to i8*), i8* %66, i32 8, i32 4, i1 false)
  br label %if.end129

if.else128:                                       ; preds = %yyreduce
  call void @llvm.memset.p0i8.i32(i8* bitcast (%union.YYSTYPE* @yyval to i8*), i8 0, i32 8, i32 4, i1 false)
  br label %if.end129

if.end129:                                        ; preds = %if.else128, %if.then126
  %67 = load i32, i32* %yyn, align 4
  switch i32 %67, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb133
    i32 3, label %sw.bb139
    i32 4, label %sw.bb146
    i32 5, label %sw.bb147
    i32 6, label %sw.bb150
    i32 7, label %sw.bb155
    i32 8, label %sw.bb159
    i32 9, label %sw.bb163
    i32 10, label %sw.bb168
    i32 11, label %sw.bb174
    i32 12, label %sw.bb180
    i32 13, label %sw.bb186
    i32 14, label %sw.bb190
    i32 15, label %sw.bb196
    i32 16, label %sw.bb202
    i32 17, label %sw.bb206
    i32 18, label %sw.bb212
    i32 19, label %sw.bb218
    i32 20, label %sw.bb222
    i32 21, label %sw.bb228
    i32 22, label %sw.bb234
    i32 23, label %sw.bb238
    i32 24, label %sw.bb244
    i32 25, label %sw.bb250
    i32 26, label %sw.bb254
    i32 27, label %sw.bb260
    i32 28, label %sw.bb266
    i32 29, label %sw.bb270
    i32 30, label %sw.bb276
    i32 31, label %sw.bb282
    i32 32, label %sw.bb286
    i32 33, label %sw.bb292
    i32 34, label %sw.bb298
    i32 35, label %sw.bb302
    i32 36, label %sw.bb308
    i32 37, label %sw.bb314
    i32 38, label %sw.bb318
    i32 39, label %sw.bb324
    i32 40, label %sw.bb330
    i32 41, label %sw.bb334
    i32 42, label %sw.bb340
    i32 43, label %sw.bb346
    i32 44, label %sw.bb348
    i32 45, label %sw.bb352
    i32 46, label %sw.bb356
    i32 47, label %sw.bb358
    i32 48, label %sw.bb362
    i32 49, label %sw.bb366
    i32 50, label %sw.bb370
    i32 51, label %sw.bb374
    i32 52, label %sw.bb377
    i32 53, label %sw.bb380
    i32 54, label %sw.bb382
    i32 55, label %sw.bb385
    i32 56, label %sw.bb396
    i32 57, label %sw.bb399
    i32 58, label %sw.bb405
    i32 59, label %sw.bb409
    i32 60, label %sw.bb412
    i32 61, label %sw.bb436
    i32 62, label %sw.bb439
    i32 63, label %sw.bb442
    i32 64, label %sw.bb445
    i32 65, label %sw.bb448
    i32 66, label %sw.bb454
    i32 67, label %sw.bb460
    i32 68, label %sw.bb463
    i32 69, label %sw.bb466
    i32 70, label %sw.bb469
    i32 71, label %sw.bb472
    i32 72, label %sw.bb475
    i32 73, label %sw.bb478
    i32 74, label %sw.bb481
    i32 75, label %sw.bb495
    i32 76, label %sw.bb509
    i32 77, label %sw.bb523
    i32 78, label %sw.bb537
    i32 79, label %sw.bb562
    i32 80, label %sw.bb591
    i32 81, label %sw.bb603
    i32 82, label %sw.bb615
    i32 83, label %sw.bb626
    i32 84, label %sw.bb637
    i32 85, label %sw.bb648
    i32 86, label %sw.bb659
    i32 87, label %sw.bb673
    i32 88, label %sw.bb687
    i32 89, label %sw.bb701
    i32 90, label %sw.bb715
    i32 91, label %sw.bb744
    i32 92, label %sw.bb773
    i32 93, label %sw.bb783
    i32 94, label %sw.bb794
    i32 95, label %sw.bb806
    i32 96, label %sw.bb812
    i32 97, label %sw.bb818
    i32 98, label %sw.bb824
    i32 99, label %sw.bb827
    i32 100, label %sw.bb853
    i32 101, label %sw.bb858
    i32 102, label %sw.bb864
    i32 103, label %sw.bb893
    i32 104, label %sw.bb902
    i32 105, label %sw.bb934
    i32 106, label %sw.bb941
    i32 107, label %sw.bb947
    i32 108, label %sw.bb955
    i32 109, label %sw.bb963
    i32 110, label %sw.bb967
    i32 111, label %sw.bb971
    i32 112, label %sw.bb974
    i32 113, label %sw.bb980
    i32 114, label %sw.bb988
    i32 116, label %sw.bb996
    i32 117, label %sw.bb1004
    i32 118, label %sw.bb1010
    i32 119, label %sw.bb1014
    i32 120, label %sw.bb1020
    i32 121, label %sw.bb1024
    i32 122, label %sw.bb1027
    i32 123, label %sw.bb1035
    i32 124, label %sw.bb1042
    i32 125, label %sw.bb1054
    i32 126, label %sw.bb1061
    i32 127, label %sw.bb1073
    i32 128, label %sw.bb1077
    i32 129, label %sw.bb1083
    i32 131, label %sw.bb1089
    i32 133, label %sw.bb1092
    i32 135, label %sw.bb1106
    i32 136, label %sw.bb1112
    i32 137, label %sw.bb1118
    i32 138, label %sw.bb1137
    i32 139, label %sw.bb1143
    i32 140, label %sw.bb1149
    i32 143, label %sw.bb1152
    i32 144, label %sw.bb1153
    i32 145, label %sw.bb1154
    i32 148, label %sw.bb1155
    i32 149, label %sw.bb1170
    i32 150, label %sw.bb1197
    i32 151, label %sw.bb1212
    i32 152, label %sw.bb1218
    i32 153, label %sw.bb1224
    i32 154, label %sw.bb1243
    i32 155, label %sw.bb1249
    i32 156, label %sw.bb1252
    i32 157, label %sw.bb1255
    i32 158, label %sw.bb1266
    i32 159, label %sw.bb1280
    i32 160, label %sw.bb1301
    i32 161, label %sw.bb1320
    i32 162, label %sw.bb1326
    i32 163, label %sw.bb1364
    i32 164, label %sw.bb1367
    i32 165, label %sw.bb1368
    i32 166, label %sw.bb1369
  ]

sw.bb:                                            ; preds = %if.end129
  %68 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx130 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %68, i32 -1
  %command = bitcast %union.YYSTYPE* %arrayidx130 to %struct.command**
  %69 = load %struct.command*, %struct.command** %command, align 4
  store %struct.command* %69, %struct.command** @global_command, align 4
  store i32 0, i32* @eof_encountered, align 4
  %70 = load i32, i32* @parser_state, align 4
  %and = and i32 %70, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then131, label %if.end132

if.then131:                                       ; preds = %sw.bb
  %71 = load i32, i32* @parser_state, align 4
  %or = or i32 %71, 32768
  store i32 %or, i32* @parser_state, align 4
  br label %if.end132

if.end132:                                        ; preds = %if.then131, %sw.bb
  br label %yyaccept

sw.bb133:                                         ; preds = %if.end129
  store %struct.command* null, %struct.command** @global_command, align 4
  %72 = load i32, i32* @parser_state, align 4
  %and134 = and i32 %72, 64
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %if.then136, label %if.end138

if.then136:                                       ; preds = %sw.bb133
  %73 = load i32, i32* @parser_state, align 4
  %or137 = or i32 %73, 32768
  store i32 %or137, i32* @parser_state, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %sw.bb133
  br label %yyaccept

sw.bb139:                                         ; preds = %if.end129
  store %struct.command* null, %struct.command** @global_command, align 4
  store i32 0, i32* @eof_encountered, align 4
  %74 = load i32, i32* @interactive, align 4
  %tobool140 = icmp ne i32 %74, 0
  br i1 %tobool140, label %land.lhs.true141, label %if.else145

land.lhs.true141:                                 ; preds = %sw.bb139
  %75 = load i32, i32* @parse_and_execute_level, align 4
  %cmp142 = icmp eq i32 %75, 0
  br i1 %cmp142, label %if.then144, label %if.else145

if.then144:                                       ; preds = %land.lhs.true141
  br label %yyaccept

if.else145:                                       ; preds = %land.lhs.true141, %sw.bb139
  br label %yyabort

sw.bb146:                                         ; preds = %if.end129
  store %struct.command* null, %struct.command** @global_command, align 4
  call void @handle_eof_input_unit()
  br label %yyaccept

sw.bb147:                                         ; preds = %if.end129
  %76 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx148 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %76, i32 0
  %word = bitcast %union.YYSTYPE* %arrayidx148 to %struct.word_desc**
  %77 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %call149 = call %struct.word_list* @make_word_list(%struct.word_desc* %77, %struct.word_list* null)
  store %struct.word_list* %call149, %struct.word_list** bitcast (%union.YYSTYPE* @yyval to %struct.word_list**), align 4
  br label %sw.epilog

sw.bb150:                                         ; preds = %if.end129
  %78 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx151 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %78, i32 0
  %word152 = bitcast %union.YYSTYPE* %arrayidx151 to %struct.word_desc**
  %79 = load %struct.word_desc*, %struct.word_desc** %word152, align 4
  %80 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx153 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %80, i32 -1
  %word_list = bitcast %union.YYSTYPE* %arrayidx153 to %struct.word_list**
  %81 = load %struct.word_list*, %struct.word_list** %word_list, align 4
  %call154 = call %struct.word_list* @make_word_list(%struct.word_desc* %79, %struct.word_list* %81)
  store %struct.word_list* %call154, %struct.word_list** bitcast (%union.YYSTYPE* @yyval to %struct.word_list**), align 4
  br label %sw.epilog

sw.bb155:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %82 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx156 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %82, i32 0
  %word157 = bitcast %union.YYSTYPE* %arrayidx156 to %struct.word_desc**
  %83 = load %struct.word_desc*, %struct.word_desc** %word157, align 4
  store %struct.word_desc* %83, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call158 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 0, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call158, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb159:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %84 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx160 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %84, i32 0
  %word161 = bitcast %union.YYSTYPE* %arrayidx160 to %struct.word_desc**
  %85 = load %struct.word_desc*, %struct.word_desc** %word161, align 4
  store %struct.word_desc* %85, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call162 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 1, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call162, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb163:                                         ; preds = %if.end129
  %86 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx164 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %86, i32 -2
  %number = bitcast %union.YYSTYPE* %arrayidx164 to i32*
  %87 = load i32, i32* %number, align 4
  store i32 %87, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %88 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx165 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %88, i32 0
  %word166 = bitcast %union.YYSTYPE* %arrayidx165 to %struct.word_desc**
  %89 = load %struct.word_desc*, %struct.word_desc** %word166, align 4
  store %struct.word_desc* %89, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call167 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 0, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call167, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb168:                                         ; preds = %if.end129
  %90 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx169 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %90, i32 -2
  %number170 = bitcast %union.YYSTYPE* %arrayidx169 to i32*
  %91 = load i32, i32* %number170, align 4
  store i32 %91, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %92 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx171 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %92, i32 0
  %word172 = bitcast %union.YYSTYPE* %arrayidx171 to %struct.word_desc**
  %93 = load %struct.word_desc*, %struct.word_desc** %word172, align 4
  store %struct.word_desc* %93, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call173 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 1, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call173, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb174:                                         ; preds = %if.end129
  %94 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx175 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %94, i32 -2
  %word176 = bitcast %union.YYSTYPE* %arrayidx175 to %struct.word_desc**
  %95 = load %struct.word_desc*, %struct.word_desc** %word176, align 4
  store %struct.word_desc* %95, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %96 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx177 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %96, i32 0
  %word178 = bitcast %union.YYSTYPE* %arrayidx177 to %struct.word_desc**
  %97 = load %struct.word_desc*, %struct.word_desc** %word178, align 4
  store %struct.word_desc* %97, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call179 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 0, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call179, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb180:                                         ; preds = %if.end129
  %98 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx181 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %98, i32 -2
  %word182 = bitcast %union.YYSTYPE* %arrayidx181 to %struct.word_desc**
  %99 = load %struct.word_desc*, %struct.word_desc** %word182, align 4
  store %struct.word_desc* %99, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %100 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx183 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %100, i32 0
  %word184 = bitcast %union.YYSTYPE* %arrayidx183 to %struct.word_desc**
  %101 = load %struct.word_desc*, %struct.word_desc** %word184, align 4
  store %struct.word_desc* %101, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call185 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 1, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call185, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb186:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %102 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx187 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %102, i32 0
  %word188 = bitcast %union.YYSTYPE* %arrayidx187 to %struct.word_desc**
  %103 = load %struct.word_desc*, %struct.word_desc** %word188, align 4
  store %struct.word_desc* %103, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call189 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 3, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call189, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb190:                                         ; preds = %if.end129
  %104 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx191 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %104, i32 -2
  %number192 = bitcast %union.YYSTYPE* %arrayidx191 to i32*
  %105 = load i32, i32* %number192, align 4
  store i32 %105, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %106 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx193 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %106, i32 0
  %word194 = bitcast %union.YYSTYPE* %arrayidx193 to %struct.word_desc**
  %107 = load %struct.word_desc*, %struct.word_desc** %word194, align 4
  store %struct.word_desc* %107, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call195 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 3, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call195, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb196:                                         ; preds = %if.end129
  %108 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx197 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %108, i32 -2
  %word198 = bitcast %union.YYSTYPE* %arrayidx197 to %struct.word_desc**
  %109 = load %struct.word_desc*, %struct.word_desc** %word198, align 4
  store %struct.word_desc* %109, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %110 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx199 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %110, i32 0
  %word200 = bitcast %union.YYSTYPE* %arrayidx199 to %struct.word_desc**
  %111 = load %struct.word_desc*, %struct.word_desc** %word200, align 4
  store %struct.word_desc* %111, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call201 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 3, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call201, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb202:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %112 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx203 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %112, i32 0
  %word204 = bitcast %union.YYSTYPE* %arrayidx203 to %struct.word_desc**
  %113 = load %struct.word_desc*, %struct.word_desc** %word204, align 4
  store %struct.word_desc* %113, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call205 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 12, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call205, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb206:                                         ; preds = %if.end129
  %114 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx207 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %114, i32 -2
  %number208 = bitcast %union.YYSTYPE* %arrayidx207 to i32*
  %115 = load i32, i32* %number208, align 4
  store i32 %115, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %116 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx209 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %116, i32 0
  %word210 = bitcast %union.YYSTYPE* %arrayidx209 to %struct.word_desc**
  %117 = load %struct.word_desc*, %struct.word_desc** %word210, align 4
  store %struct.word_desc* %117, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call211 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 12, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call211, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb212:                                         ; preds = %if.end129
  %118 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx213 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %118, i32 -2
  %word214 = bitcast %union.YYSTYPE* %arrayidx213 to %struct.word_desc**
  %119 = load %struct.word_desc*, %struct.word_desc** %word214, align 4
  store %struct.word_desc* %119, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %120 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx215 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %120, i32 0
  %word216 = bitcast %union.YYSTYPE* %arrayidx215 to %struct.word_desc**
  %121 = load %struct.word_desc*, %struct.word_desc** %word216, align 4
  store %struct.word_desc* %121, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call217 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 12, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call217, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb218:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %122 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx219 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %122, i32 0
  %word220 = bitcast %union.YYSTYPE* %arrayidx219 to %struct.word_desc**
  %123 = load %struct.word_desc*, %struct.word_desc** %word220, align 4
  store %struct.word_desc* %123, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call221 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 11, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call221, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb222:                                         ; preds = %if.end129
  %124 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx223 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %124, i32 -2
  %number224 = bitcast %union.YYSTYPE* %arrayidx223 to i32*
  %125 = load i32, i32* %number224, align 4
  store i32 %125, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %126 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx225 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %126, i32 0
  %word226 = bitcast %union.YYSTYPE* %arrayidx225 to %struct.word_desc**
  %127 = load %struct.word_desc*, %struct.word_desc** %word226, align 4
  store %struct.word_desc* %127, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call227 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 11, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call227, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb228:                                         ; preds = %if.end129
  %128 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx229 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %128, i32 -2
  %word230 = bitcast %union.YYSTYPE* %arrayidx229 to %struct.word_desc**
  %129 = load %struct.word_desc*, %struct.word_desc** %word230, align 4
  store %struct.word_desc* %129, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %130 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx231 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %130, i32 0
  %word232 = bitcast %union.YYSTYPE* %arrayidx231 to %struct.word_desc**
  %131 = load %struct.word_desc*, %struct.word_desc** %word232, align 4
  store %struct.word_desc* %131, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call233 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 11, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call233, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb234:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %132 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx235 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %132, i32 0
  %word236 = bitcast %union.YYSTYPE* %arrayidx235 to %struct.word_desc**
  %133 = load %struct.word_desc*, %struct.word_desc** %word236, align 4
  store %struct.word_desc* %133, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call237 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 4, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call237, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  %134 = load %struct.redirect*, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  call void @push_heredoc(%struct.redirect* %134)
  br label %sw.epilog

sw.bb238:                                         ; preds = %if.end129
  %135 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx239 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %135, i32 -2
  %number240 = bitcast %union.YYSTYPE* %arrayidx239 to i32*
  %136 = load i32, i32* %number240, align 4
  store i32 %136, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %137 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx241 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %137, i32 0
  %word242 = bitcast %union.YYSTYPE* %arrayidx241 to %struct.word_desc**
  %138 = load %struct.word_desc*, %struct.word_desc** %word242, align 4
  store %struct.word_desc* %138, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call243 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 4, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call243, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  %139 = load %struct.redirect*, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  call void @push_heredoc(%struct.redirect* %139)
  br label %sw.epilog

sw.bb244:                                         ; preds = %if.end129
  %140 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx245 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %140, i32 -2
  %word246 = bitcast %union.YYSTYPE* %arrayidx245 to %struct.word_desc**
  %141 = load %struct.word_desc*, %struct.word_desc** %word246, align 4
  store %struct.word_desc* %141, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %142 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx247 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %142, i32 0
  %word248 = bitcast %union.YYSTYPE* %arrayidx247 to %struct.word_desc**
  %143 = load %struct.word_desc*, %struct.word_desc** %word248, align 4
  store %struct.word_desc* %143, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call249 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 4, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call249, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  %144 = load %struct.redirect*, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  call void @push_heredoc(%struct.redirect* %144)
  br label %sw.epilog

sw.bb250:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %145 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx251 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %145, i32 0
  %word252 = bitcast %union.YYSTYPE* %arrayidx251 to %struct.word_desc**
  %146 = load %struct.word_desc*, %struct.word_desc** %word252, align 4
  store %struct.word_desc* %146, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call253 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 8, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call253, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  %147 = load %struct.redirect*, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  call void @push_heredoc(%struct.redirect* %147)
  br label %sw.epilog

sw.bb254:                                         ; preds = %if.end129
  %148 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx255 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %148, i32 -2
  %number256 = bitcast %union.YYSTYPE* %arrayidx255 to i32*
  %149 = load i32, i32* %number256, align 4
  store i32 %149, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %150 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx257 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %150, i32 0
  %word258 = bitcast %union.YYSTYPE* %arrayidx257 to %struct.word_desc**
  %151 = load %struct.word_desc*, %struct.word_desc** %word258, align 4
  store %struct.word_desc* %151, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call259 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 8, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call259, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  %152 = load %struct.redirect*, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  call void @push_heredoc(%struct.redirect* %152)
  br label %sw.epilog

sw.bb260:                                         ; preds = %if.end129
  %153 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx261 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %153, i32 -2
  %word262 = bitcast %union.YYSTYPE* %arrayidx261 to %struct.word_desc**
  %154 = load %struct.word_desc*, %struct.word_desc** %word262, align 4
  store %struct.word_desc* %154, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %155 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx263 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %155, i32 0
  %word264 = bitcast %union.YYSTYPE* %arrayidx263 to %struct.word_desc**
  %156 = load %struct.word_desc*, %struct.word_desc** %word264, align 4
  store %struct.word_desc* %156, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call265 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 8, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call265, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  %157 = load %struct.redirect*, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  call void @push_heredoc(%struct.redirect* %157)
  br label %sw.epilog

sw.bb266:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %158 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx267 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %158, i32 0
  %word268 = bitcast %union.YYSTYPE* %arrayidx267 to %struct.word_desc**
  %159 = load %struct.word_desc*, %struct.word_desc** %word268, align 4
  store %struct.word_desc* %159, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call269 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 5, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call269, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb270:                                         ; preds = %if.end129
  %160 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx271 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %160, i32 -2
  %number272 = bitcast %union.YYSTYPE* %arrayidx271 to i32*
  %161 = load i32, i32* %number272, align 4
  store i32 %161, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %162 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx273 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %162, i32 0
  %word274 = bitcast %union.YYSTYPE* %arrayidx273 to %struct.word_desc**
  %163 = load %struct.word_desc*, %struct.word_desc** %word274, align 4
  store %struct.word_desc* %163, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call275 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 5, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call275, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb276:                                         ; preds = %if.end129
  %164 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx277 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %164, i32 -2
  %word278 = bitcast %union.YYSTYPE* %arrayidx277 to %struct.word_desc**
  %165 = load %struct.word_desc*, %struct.word_desc** %word278, align 4
  store %struct.word_desc* %165, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %166 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx279 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %166, i32 0
  %word280 = bitcast %union.YYSTYPE* %arrayidx279 to %struct.word_desc**
  %167 = load %struct.word_desc*, %struct.word_desc** %word280, align 4
  store %struct.word_desc* %167, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call281 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 5, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call281, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb282:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %168 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx283 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %168, i32 0
  %number284 = bitcast %union.YYSTYPE* %arrayidx283 to i32*
  %169 = load i32, i32* %number284, align 4
  store i32 %169, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call285 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 6, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call285, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb286:                                         ; preds = %if.end129
  %170 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx287 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %170, i32 -2
  %number288 = bitcast %union.YYSTYPE* %arrayidx287 to i32*
  %171 = load i32, i32* %number288, align 4
  store i32 %171, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %172 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx289 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %172, i32 0
  %number290 = bitcast %union.YYSTYPE* %arrayidx289 to i32*
  %173 = load i32, i32* %number290, align 4
  store i32 %173, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call291 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 6, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call291, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb292:                                         ; preds = %if.end129
  %174 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx293 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %174, i32 -2
  %word294 = bitcast %union.YYSTYPE* %arrayidx293 to %struct.word_desc**
  %175 = load %struct.word_desc*, %struct.word_desc** %word294, align 4
  store %struct.word_desc* %175, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %176 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx295 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %176, i32 0
  %number296 = bitcast %union.YYSTYPE* %arrayidx295 to i32*
  %177 = load i32, i32* %number296, align 4
  store i32 %177, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call297 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 6, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call297, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb298:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %178 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx299 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %178, i32 0
  %number300 = bitcast %union.YYSTYPE* %arrayidx299 to i32*
  %179 = load i32, i32* %number300, align 4
  store i32 %179, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call301 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 7, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call301, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb302:                                         ; preds = %if.end129
  %180 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx303 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %180, i32 -2
  %number304 = bitcast %union.YYSTYPE* %arrayidx303 to i32*
  %181 = load i32, i32* %number304, align 4
  store i32 %181, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %182 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx305 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %182, i32 0
  %number306 = bitcast %union.YYSTYPE* %arrayidx305 to i32*
  %183 = load i32, i32* %number306, align 4
  store i32 %183, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call307 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 7, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call307, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb308:                                         ; preds = %if.end129
  %184 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx309 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %184, i32 -2
  %word310 = bitcast %union.YYSTYPE* %arrayidx309 to %struct.word_desc**
  %185 = load %struct.word_desc*, %struct.word_desc** %word310, align 4
  store %struct.word_desc* %185, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %186 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx311 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %186, i32 0
  %number312 = bitcast %union.YYSTYPE* %arrayidx311 to i32*
  %187 = load i32, i32* %number312, align 4
  store i32 %187, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call313 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 7, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call313, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb314:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %188 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx315 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %188, i32 0
  %word316 = bitcast %union.YYSTYPE* %arrayidx315 to %struct.word_desc**
  %189 = load %struct.word_desc*, %struct.word_desc** %word316, align 4
  store %struct.word_desc* %189, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call317 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 13, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call317, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb318:                                         ; preds = %if.end129
  %190 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx319 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %190, i32 -2
  %number320 = bitcast %union.YYSTYPE* %arrayidx319 to i32*
  %191 = load i32, i32* %number320, align 4
  store i32 %191, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %192 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx321 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %192, i32 0
  %word322 = bitcast %union.YYSTYPE* %arrayidx321 to %struct.word_desc**
  %193 = load %struct.word_desc*, %struct.word_desc** %word322, align 4
  store %struct.word_desc* %193, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call323 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 13, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call323, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb324:                                         ; preds = %if.end129
  %194 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx325 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %194, i32 -2
  %word326 = bitcast %union.YYSTYPE* %arrayidx325 to %struct.word_desc**
  %195 = load %struct.word_desc*, %struct.word_desc** %word326, align 4
  store %struct.word_desc* %195, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %196 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx327 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %196, i32 0
  %word328 = bitcast %union.YYSTYPE* %arrayidx327 to %struct.word_desc**
  %197 = load %struct.word_desc*, %struct.word_desc** %word328, align 4
  store %struct.word_desc* %197, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call329 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 13, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call329, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb330:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %198 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx331 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %198, i32 0
  %word332 = bitcast %union.YYSTYPE* %arrayidx331 to %struct.word_desc**
  %199 = load %struct.word_desc*, %struct.word_desc** %word332, align 4
  store %struct.word_desc* %199, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call333 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 14, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call333, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb334:                                         ; preds = %if.end129
  %200 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx335 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %200, i32 -2
  %number336 = bitcast %union.YYSTYPE* %arrayidx335 to i32*
  %201 = load i32, i32* %number336, align 4
  store i32 %201, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %202 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx337 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %202, i32 0
  %word338 = bitcast %union.YYSTYPE* %arrayidx337 to %struct.word_desc**
  %203 = load %struct.word_desc*, %struct.word_desc** %word338, align 4
  store %struct.word_desc* %203, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call339 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 14, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call339, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb340:                                         ; preds = %if.end129
  %204 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx341 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %204, i32 -2
  %word342 = bitcast %union.YYSTYPE* %arrayidx341 to %struct.word_desc**
  %205 = load %struct.word_desc*, %struct.word_desc** %word342, align 4
  store %struct.word_desc* %205, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  %206 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx343 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %206, i32 0
  %word344 = bitcast %union.YYSTYPE* %arrayidx343 to %struct.word_desc**
  %207 = load %struct.word_desc*, %struct.word_desc** %word344, align 4
  store %struct.word_desc* %207, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call345 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 14, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call345, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb346:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call347 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 9, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call347, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb348:                                         ; preds = %if.end129
  %208 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx349 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %208, i32 -2
  %number350 = bitcast %union.YYSTYPE* %arrayidx349 to i32*
  %209 = load i32, i32* %number350, align 4
  store i32 %209, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call351 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 9, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call351, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb352:                                         ; preds = %if.end129
  %210 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx353 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %210, i32 -2
  %word354 = bitcast %union.YYSTYPE* %arrayidx353 to %struct.word_desc**
  %211 = load %struct.word_desc*, %struct.word_desc** %word354, align 4
  store %struct.word_desc* %211, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call355 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 9, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call355, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb356:                                         ; preds = %if.end129
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call357 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 9, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call357, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb358:                                         ; preds = %if.end129
  %212 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx359 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %212, i32 -2
  %number360 = bitcast %union.YYSTYPE* %arrayidx359 to i32*
  %213 = load i32, i32* %number360, align 4
  store i32 %213, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call361 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 9, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call361, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb362:                                         ; preds = %if.end129
  %214 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx363 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %214, i32 -2
  %word364 = bitcast %union.YYSTYPE* %arrayidx363 to %struct.word_desc**
  %215 = load %struct.word_desc*, %struct.word_desc** %word364, align 4
  store %struct.word_desc* %215, %struct.word_desc** bitcast (%union.REDIRECTEE* @source to %struct.word_desc**), align 4
  store i32 0, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @redir, i32 0, i32 0), align 4
  %call365 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 9, %union.REDIRECTEE* byval align 4 @redir, i32 1)
  store %struct.redirect* %call365, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb366:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %216 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx367 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %216, i32 0
  %word368 = bitcast %union.YYSTYPE* %arrayidx367 to %struct.word_desc**
  %217 = load %struct.word_desc*, %struct.word_desc** %word368, align 4
  store %struct.word_desc* %217, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call369 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 10, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call369, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb370:                                         ; preds = %if.end129
  store i32 1, i32* getelementptr inbounds (%union.REDIRECTEE, %union.REDIRECTEE* @source, i32 0, i32 0), align 4
  %218 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx371 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %218, i32 0
  %word372 = bitcast %union.YYSTYPE* %arrayidx371 to %struct.word_desc**
  %219 = load %struct.word_desc*, %struct.word_desc** %word372, align 4
  store %struct.word_desc* %219, %struct.word_desc** bitcast (%union.REDIRECTEE* @redir to %struct.word_desc**), align 4
  %call373 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 @source, i32 19, %union.REDIRECTEE* byval align 4 @redir, i32 0)
  store %struct.redirect* %call373, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb374:                                         ; preds = %if.end129
  %220 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx375 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %220, i32 0
  %word376 = bitcast %union.YYSTYPE* %arrayidx375 to %struct.word_desc**
  %221 = load %struct.word_desc*, %struct.word_desc** %word376, align 4
  store %struct.word_desc* %221, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yyval, i32 0, i32 0, i32 0), align 4
  store %struct.redirect* null, %struct.redirect** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yyval, i32 0, i32 0, i32 1), align 4
  br label %sw.epilog

sw.bb377:                                         ; preds = %if.end129
  %222 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx378 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %222, i32 0
  %word379 = bitcast %union.YYSTYPE* %arrayidx378 to %struct.word_desc**
  %223 = load %struct.word_desc*, %struct.word_desc** %word379, align 4
  store %struct.word_desc* %223, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yyval, i32 0, i32 0, i32 0), align 4
  store %struct.redirect* null, %struct.redirect** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yyval, i32 0, i32 0, i32 1), align 4
  br label %sw.epilog

sw.bb380:                                         ; preds = %if.end129
  %224 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx381 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %224, i32 0
  %redirect = bitcast %union.YYSTYPE* %arrayidx381 to %struct.redirect**
  %225 = load %struct.redirect*, %struct.redirect** %redirect, align 4
  store %struct.redirect* %225, %struct.redirect** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yyval, i32 0, i32 0, i32 1), align 4
  store %struct.word_desc* null, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yyval, i32 0, i32 0, i32 0), align 4
  br label %sw.epilog

sw.bb382:                                         ; preds = %if.end129
  %226 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx383 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %226, i32 0
  %redirect384 = bitcast %union.YYSTYPE* %arrayidx383 to %struct.redirect**
  %227 = load %struct.redirect*, %struct.redirect** %redirect384, align 4
  store %struct.redirect* %227, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb385:                                         ; preds = %if.end129
  %228 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx386 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %228, i32 -1
  %redirect387 = bitcast %union.YYSTYPE* %arrayidx386 to %struct.redirect**
  %229 = load %struct.redirect*, %struct.redirect** %redirect387, align 4
  store %struct.redirect* %229, %struct.redirect** %t, align 4
  br label %for.cond388

for.cond388:                                      ; preds = %for.inc, %sw.bb385
  %230 = load %struct.redirect*, %struct.redirect** %t, align 4
  %next = getelementptr inbounds %struct.redirect, %struct.redirect* %230, i32 0, i32 0
  %231 = load %struct.redirect*, %struct.redirect** %next, align 4
  %tobool389 = icmp ne %struct.redirect* %231, null
  br i1 %tobool389, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond388
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %232 = load %struct.redirect*, %struct.redirect** %t, align 4
  %next390 = getelementptr inbounds %struct.redirect, %struct.redirect* %232, i32 0, i32 0
  %233 = load %struct.redirect*, %struct.redirect** %next390, align 4
  store %struct.redirect* %233, %struct.redirect** %t, align 4
  br label %for.cond388

for.end:                                          ; preds = %for.cond388
  %234 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx391 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %234, i32 0
  %redirect392 = bitcast %union.YYSTYPE* %arrayidx391 to %struct.redirect**
  %235 = load %struct.redirect*, %struct.redirect** %redirect392, align 4
  %236 = load %struct.redirect*, %struct.redirect** %t, align 4
  %next393 = getelementptr inbounds %struct.redirect, %struct.redirect* %236, i32 0, i32 0
  store %struct.redirect* %235, %struct.redirect** %next393, align 4
  %237 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx394 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %237, i32 -1
  %redirect395 = bitcast %union.YYSTYPE* %arrayidx394 to %struct.redirect**
  %238 = load %struct.redirect*, %struct.redirect** %redirect395, align 4
  store %struct.redirect* %238, %struct.redirect** bitcast (%union.YYSTYPE* @yyval to %struct.redirect**), align 4
  br label %sw.epilog

sw.bb396:                                         ; preds = %if.end129
  %239 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx397 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %239, i32 0
  %element = bitcast %union.YYSTYPE* %arrayidx397 to %struct.element*
  %call398 = call %struct.command* @make_simple_command(%struct.element* byval align 4 %element, %struct.command* null)
  store %struct.command* %call398, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb399:                                         ; preds = %if.end129
  %240 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx400 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %240, i32 0
  %element401 = bitcast %union.YYSTYPE* %arrayidx400 to %struct.element*
  %241 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx402 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %241, i32 -1
  %command403 = bitcast %union.YYSTYPE* %arrayidx402 to %struct.command**
  %242 = load %struct.command*, %struct.command** %command403, align 4
  %call404 = call %struct.command* @make_simple_command(%struct.element* byval align 4 %element401, %struct.command* %242)
  store %struct.command* %call404, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb405:                                         ; preds = %if.end129
  %243 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx406 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %243, i32 0
  %command407 = bitcast %union.YYSTYPE* %arrayidx406 to %struct.command**
  %244 = load %struct.command*, %struct.command** %command407, align 4
  %call408 = call %struct.command* @clean_simple_command(%struct.command* %244)
  store %struct.command* %call408, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb409:                                         ; preds = %if.end129
  %245 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx410 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %245, i32 0
  %command411 = bitcast %union.YYSTYPE* %arrayidx410 to %struct.command**
  %246 = load %struct.command*, %struct.command** %command411, align 4
  store %struct.command* %246, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb412:                                         ; preds = %if.end129
  %247 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx413 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %247, i32 -1
  %command414 = bitcast %union.YYSTYPE* %arrayidx413 to %struct.command**
  %248 = load %struct.command*, %struct.command** %command414, align 4
  store %struct.command* %248, %struct.command** %tc, align 4
  %249 = load %struct.command*, %struct.command** %tc, align 4
  %redirects = getelementptr inbounds %struct.command, %struct.command* %249, i32 0, i32 3
  %250 = load %struct.redirect*, %struct.redirect** %redirects, align 4
  %tobool415 = icmp ne %struct.redirect* %250, null
  br i1 %tobool415, label %if.then416, label %if.else429

if.then416:                                       ; preds = %sw.bb412
  %251 = load %struct.command*, %struct.command** %tc, align 4
  %redirects418 = getelementptr inbounds %struct.command, %struct.command* %251, i32 0, i32 3
  %252 = load %struct.redirect*, %struct.redirect** %redirects418, align 4
  store %struct.redirect* %252, %struct.redirect** %t417, align 4
  br label %for.cond419

for.cond419:                                      ; preds = %for.inc423, %if.then416
  %253 = load %struct.redirect*, %struct.redirect** %t417, align 4
  %next420 = getelementptr inbounds %struct.redirect, %struct.redirect* %253, i32 0, i32 0
  %254 = load %struct.redirect*, %struct.redirect** %next420, align 4
  %tobool421 = icmp ne %struct.redirect* %254, null
  br i1 %tobool421, label %for.body422, label %for.end425

for.body422:                                      ; preds = %for.cond419
  br label %for.inc423

for.inc423:                                       ; preds = %for.body422
  %255 = load %struct.redirect*, %struct.redirect** %t417, align 4
  %next424 = getelementptr inbounds %struct.redirect, %struct.redirect* %255, i32 0, i32 0
  %256 = load %struct.redirect*, %struct.redirect** %next424, align 4
  store %struct.redirect* %256, %struct.redirect** %t417, align 4
  br label %for.cond419

for.end425:                                       ; preds = %for.cond419
  %257 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx426 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %257, i32 0
  %redirect427 = bitcast %union.YYSTYPE* %arrayidx426 to %struct.redirect**
  %258 = load %struct.redirect*, %struct.redirect** %redirect427, align 4
  %259 = load %struct.redirect*, %struct.redirect** %t417, align 4
  %next428 = getelementptr inbounds %struct.redirect, %struct.redirect* %259, i32 0, i32 0
  store %struct.redirect* %258, %struct.redirect** %next428, align 4
  br label %if.end433

if.else429:                                       ; preds = %sw.bb412
  %260 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx430 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %260, i32 0
  %redirect431 = bitcast %union.YYSTYPE* %arrayidx430 to %struct.redirect**
  %261 = load %struct.redirect*, %struct.redirect** %redirect431, align 4
  %262 = load %struct.command*, %struct.command** %tc, align 4
  %redirects432 = getelementptr inbounds %struct.command, %struct.command* %262, i32 0, i32 3
  store %struct.redirect* %261, %struct.redirect** %redirects432, align 4
  br label %if.end433

if.end433:                                        ; preds = %if.else429, %for.end425
  %263 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx434 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %263, i32 -1
  %command435 = bitcast %union.YYSTYPE* %arrayidx434 to %struct.command**
  %264 = load %struct.command*, %struct.command** %command435, align 4
  store %struct.command* %264, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb436:                                         ; preds = %if.end129
  %265 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx437 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %265, i32 0
  %command438 = bitcast %union.YYSTYPE* %arrayidx437 to %struct.command**
  %266 = load %struct.command*, %struct.command** %command438, align 4
  store %struct.command* %266, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb439:                                         ; preds = %if.end129
  %267 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx440 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %267, i32 0
  %command441 = bitcast %union.YYSTYPE* %arrayidx440 to %struct.command**
  %268 = load %struct.command*, %struct.command** %command441, align 4
  store %struct.command* %268, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb442:                                         ; preds = %if.end129
  %269 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx443 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %269, i32 0
  %command444 = bitcast %union.YYSTYPE* %arrayidx443 to %struct.command**
  %270 = load %struct.command*, %struct.command** %command444, align 4
  store %struct.command* %270, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb445:                                         ; preds = %if.end129
  %271 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx446 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %271, i32 0
  %command447 = bitcast %union.YYSTYPE* %arrayidx446 to %struct.command**
  %272 = load %struct.command*, %struct.command** %command447, align 4
  store %struct.command* %272, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb448:                                         ; preds = %if.end129
  %273 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx449 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %273, i32 -3
  %command450 = bitcast %union.YYSTYPE* %arrayidx449 to %struct.command**
  %274 = load %struct.command*, %struct.command** %command450, align 4
  %275 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx451 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %275, i32 -1
  %command452 = bitcast %union.YYSTYPE* %arrayidx451 to %struct.command**
  %276 = load %struct.command*, %struct.command** %command452, align 4
  %call453 = call %struct.command* @make_while_command(%struct.command* %274, %struct.command* %276)
  store %struct.command* %call453, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb454:                                         ; preds = %if.end129
  %277 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx455 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %277, i32 -3
  %command456 = bitcast %union.YYSTYPE* %arrayidx455 to %struct.command**
  %278 = load %struct.command*, %struct.command** %command456, align 4
  %279 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx457 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %279, i32 -1
  %command458 = bitcast %union.YYSTYPE* %arrayidx457 to %struct.command**
  %280 = load %struct.command*, %struct.command** %command458, align 4
  %call459 = call %struct.command* @make_until_command(%struct.command* %278, %struct.command* %280)
  store %struct.command* %call459, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb460:                                         ; preds = %if.end129
  %281 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx461 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %281, i32 0
  %command462 = bitcast %union.YYSTYPE* %arrayidx461 to %struct.command**
  %282 = load %struct.command*, %struct.command** %command462, align 4
  store %struct.command* %282, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb463:                                         ; preds = %if.end129
  %283 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx464 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %283, i32 0
  %command465 = bitcast %union.YYSTYPE* %arrayidx464 to %struct.command**
  %284 = load %struct.command*, %struct.command** %command465, align 4
  store %struct.command* %284, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb466:                                         ; preds = %if.end129
  %285 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx467 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %285, i32 0
  %command468 = bitcast %union.YYSTYPE* %arrayidx467 to %struct.command**
  %286 = load %struct.command*, %struct.command** %command468, align 4
  store %struct.command* %286, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb469:                                         ; preds = %if.end129
  %287 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx470 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %287, i32 0
  %command471 = bitcast %union.YYSTYPE* %arrayidx470 to %struct.command**
  %288 = load %struct.command*, %struct.command** %command471, align 4
  store %struct.command* %288, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb472:                                         ; preds = %if.end129
  %289 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx473 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %289, i32 0
  %command474 = bitcast %union.YYSTYPE* %arrayidx473 to %struct.command**
  %290 = load %struct.command*, %struct.command** %command474, align 4
  store %struct.command* %290, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb475:                                         ; preds = %if.end129
  %291 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx476 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %291, i32 0
  %command477 = bitcast %union.YYSTYPE* %arrayidx476 to %struct.command**
  %292 = load %struct.command*, %struct.command** %command477, align 4
  store %struct.command* %292, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb478:                                         ; preds = %if.end129
  %293 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx479 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %293, i32 0
  %command480 = bitcast %union.YYSTYPE* %arrayidx479 to %struct.command**
  %294 = load %struct.command*, %struct.command** %command480, align 4
  store %struct.command* %294, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb481:                                         ; preds = %if.end129
  %295 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx482 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %295, i32 -4
  %word483 = bitcast %union.YYSTYPE* %arrayidx482 to %struct.word_desc**
  %296 = load %struct.word_desc*, %struct.word_desc** %word483, align 4
  %call484 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call485 = call %struct.word_list* @make_word_list(%struct.word_desc* %call484, %struct.word_list* null)
  %297 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx486 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %297, i32 -1
  %command487 = bitcast %union.YYSTYPE* %arrayidx486 to %struct.command**
  %298 = load %struct.command*, %struct.command** %command487, align 4
  %299 = load i32, i32* @word_top, align 4
  %arrayidx488 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %299
  %300 = load i32, i32* %arrayidx488, align 4
  %call489 = call %struct.command* @make_for_command(%struct.word_desc* %296, %struct.word_list* %call485, %struct.command* %298, i32 %300)
  store %struct.command* %call489, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %301 = load i32, i32* @word_top, align 4
  %cmp490 = icmp sgt i32 %301, 0
  br i1 %cmp490, label %if.then492, label %if.end494

if.then492:                                       ; preds = %sw.bb481
  %302 = load i32, i32* @word_top, align 4
  %dec493 = add nsw i32 %302, -1
  store i32 %dec493, i32* @word_top, align 4
  br label %if.end494

if.end494:                                        ; preds = %if.then492, %sw.bb481
  br label %sw.epilog

sw.bb495:                                         ; preds = %if.end129
  %303 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx496 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %303, i32 -4
  %word497 = bitcast %union.YYSTYPE* %arrayidx496 to %struct.word_desc**
  %304 = load %struct.word_desc*, %struct.word_desc** %word497, align 4
  %call498 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call499 = call %struct.word_list* @make_word_list(%struct.word_desc* %call498, %struct.word_list* null)
  %305 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx500 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %305, i32 -1
  %command501 = bitcast %union.YYSTYPE* %arrayidx500 to %struct.command**
  %306 = load %struct.command*, %struct.command** %command501, align 4
  %307 = load i32, i32* @word_top, align 4
  %arrayidx502 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %307
  %308 = load i32, i32* %arrayidx502, align 4
  %call503 = call %struct.command* @make_for_command(%struct.word_desc* %304, %struct.word_list* %call499, %struct.command* %306, i32 %308)
  store %struct.command* %call503, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %309 = load i32, i32* @word_top, align 4
  %cmp504 = icmp sgt i32 %309, 0
  br i1 %cmp504, label %if.then506, label %if.end508

if.then506:                                       ; preds = %sw.bb495
  %310 = load i32, i32* @word_top, align 4
  %dec507 = add nsw i32 %310, -1
  store i32 %dec507, i32* @word_top, align 4
  br label %if.end508

if.end508:                                        ; preds = %if.then506, %sw.bb495
  br label %sw.epilog

sw.bb509:                                         ; preds = %if.end129
  %311 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx510 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %311, i32 -5
  %word511 = bitcast %union.YYSTYPE* %arrayidx510 to %struct.word_desc**
  %312 = load %struct.word_desc*, %struct.word_desc** %word511, align 4
  %call512 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call513 = call %struct.word_list* @make_word_list(%struct.word_desc* %call512, %struct.word_list* null)
  %313 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx514 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %313, i32 -1
  %command515 = bitcast %union.YYSTYPE* %arrayidx514 to %struct.command**
  %314 = load %struct.command*, %struct.command** %command515, align 4
  %315 = load i32, i32* @word_top, align 4
  %arrayidx516 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %315
  %316 = load i32, i32* %arrayidx516, align 4
  %call517 = call %struct.command* @make_for_command(%struct.word_desc* %312, %struct.word_list* %call513, %struct.command* %314, i32 %316)
  store %struct.command* %call517, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %317 = load i32, i32* @word_top, align 4
  %cmp518 = icmp sgt i32 %317, 0
  br i1 %cmp518, label %if.then520, label %if.end522

if.then520:                                       ; preds = %sw.bb509
  %318 = load i32, i32* @word_top, align 4
  %dec521 = add nsw i32 %318, -1
  store i32 %dec521, i32* @word_top, align 4
  br label %if.end522

if.end522:                                        ; preds = %if.then520, %sw.bb509
  br label %sw.epilog

sw.bb523:                                         ; preds = %if.end129
  %319 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx524 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %319, i32 -5
  %word525 = bitcast %union.YYSTYPE* %arrayidx524 to %struct.word_desc**
  %320 = load %struct.word_desc*, %struct.word_desc** %word525, align 4
  %call526 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call527 = call %struct.word_list* @make_word_list(%struct.word_desc* %call526, %struct.word_list* null)
  %321 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx528 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %321, i32 -1
  %command529 = bitcast %union.YYSTYPE* %arrayidx528 to %struct.command**
  %322 = load %struct.command*, %struct.command** %command529, align 4
  %323 = load i32, i32* @word_top, align 4
  %arrayidx530 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %323
  %324 = load i32, i32* %arrayidx530, align 4
  %call531 = call %struct.command* @make_for_command(%struct.word_desc* %320, %struct.word_list* %call527, %struct.command* %322, i32 %324)
  store %struct.command* %call531, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %325 = load i32, i32* @word_top, align 4
  %cmp532 = icmp sgt i32 %325, 0
  br i1 %cmp532, label %if.then534, label %if.end536

if.then534:                                       ; preds = %sw.bb523
  %326 = load i32, i32* @word_top, align 4
  %dec535 = add nsw i32 %326, -1
  store i32 %dec535, i32* @word_top, align 4
  br label %if.end536

if.end536:                                        ; preds = %if.then534, %sw.bb523
  br label %sw.epilog

sw.bb537:                                         ; preds = %if.end129
  %327 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx538 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %327, i32 -8
  %word539 = bitcast %union.YYSTYPE* %arrayidx538 to %struct.word_desc**
  %328 = load %struct.word_desc*, %struct.word_desc** %word539, align 4
  %329 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx540 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %329, i32 -5
  %word_list541 = bitcast %union.YYSTYPE* %arrayidx540 to %struct.word_list**
  %330 = load %struct.word_list*, %struct.word_list** %word_list541, align 4
  %tobool542 = icmp ne %struct.word_list* %330, null
  br i1 %tobool542, label %land.lhs.true543, label %cond.false

land.lhs.true543:                                 ; preds = %sw.bb537
  %331 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx544 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %331, i32 -5
  %word_list545 = bitcast %union.YYSTYPE* %arrayidx544 to %struct.word_list**
  %332 = load %struct.word_list*, %struct.word_list** %word_list545, align 4
  %next546 = getelementptr inbounds %struct.word_list, %struct.word_list* %332, i32 0, i32 0
  %333 = load %struct.word_list*, %struct.word_list** %next546, align 4
  %tobool547 = icmp ne %struct.word_list* %333, null
  br i1 %tobool547, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true543
  %334 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx548 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %334, i32 -5
  %word_list549 = bitcast %union.YYSTYPE* %arrayidx548 to %struct.word_list**
  %335 = load %struct.word_list*, %struct.word_list** %word_list549, align 4
  %336 = bitcast %struct.word_list* %335 to %struct.g_list*
  %call550 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %336)
  %337 = bitcast %struct.g_list* %call550 to %struct.word_list*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true543, %sw.bb537
  %338 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx551 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %338, i32 -5
  %word_list552 = bitcast %union.YYSTYPE* %arrayidx551 to %struct.word_list**
  %339 = load %struct.word_list*, %struct.word_list** %word_list552, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %337, %cond.true ], [ %339, %cond.false ]
  %340 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx553 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %340, i32 -1
  %command554 = bitcast %union.YYSTYPE* %arrayidx553 to %struct.command**
  %341 = load %struct.command*, %struct.command** %command554, align 4
  %342 = load i32, i32* @word_top, align 4
  %arrayidx555 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %342
  %343 = load i32, i32* %arrayidx555, align 4
  %call556 = call %struct.command* @make_for_command(%struct.word_desc* %328, %struct.word_list* %cond, %struct.command* %341, i32 %343)
  store %struct.command* %call556, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %344 = load i32, i32* @word_top, align 4
  %cmp557 = icmp sgt i32 %344, 0
  br i1 %cmp557, label %if.then559, label %if.end561

if.then559:                                       ; preds = %cond.end
  %345 = load i32, i32* @word_top, align 4
  %dec560 = add nsw i32 %345, -1
  store i32 %dec560, i32* @word_top, align 4
  br label %if.end561

if.end561:                                        ; preds = %if.then559, %cond.end
  br label %sw.epilog

sw.bb562:                                         ; preds = %if.end129
  %346 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx563 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %346, i32 -8
  %word564 = bitcast %union.YYSTYPE* %arrayidx563 to %struct.word_desc**
  %347 = load %struct.word_desc*, %struct.word_desc** %word564, align 4
  %348 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx565 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %348, i32 -5
  %word_list566 = bitcast %union.YYSTYPE* %arrayidx565 to %struct.word_list**
  %349 = load %struct.word_list*, %struct.word_list** %word_list566, align 4
  %tobool567 = icmp ne %struct.word_list* %349, null
  br i1 %tobool567, label %land.lhs.true568, label %cond.false577

land.lhs.true568:                                 ; preds = %sw.bb562
  %350 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx569 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %350, i32 -5
  %word_list570 = bitcast %union.YYSTYPE* %arrayidx569 to %struct.word_list**
  %351 = load %struct.word_list*, %struct.word_list** %word_list570, align 4
  %next571 = getelementptr inbounds %struct.word_list, %struct.word_list* %351, i32 0, i32 0
  %352 = load %struct.word_list*, %struct.word_list** %next571, align 4
  %tobool572 = icmp ne %struct.word_list* %352, null
  br i1 %tobool572, label %cond.true573, label %cond.false577

cond.true573:                                     ; preds = %land.lhs.true568
  %353 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx574 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %353, i32 -5
  %word_list575 = bitcast %union.YYSTYPE* %arrayidx574 to %struct.word_list**
  %354 = load %struct.word_list*, %struct.word_list** %word_list575, align 4
  %355 = bitcast %struct.word_list* %354 to %struct.g_list*
  %call576 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %355)
  %356 = bitcast %struct.g_list* %call576 to %struct.word_list*
  br label %cond.end580

cond.false577:                                    ; preds = %land.lhs.true568, %sw.bb562
  %357 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx578 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %357, i32 -5
  %word_list579 = bitcast %union.YYSTYPE* %arrayidx578 to %struct.word_list**
  %358 = load %struct.word_list*, %struct.word_list** %word_list579, align 4
  br label %cond.end580

cond.end580:                                      ; preds = %cond.false577, %cond.true573
  %cond581 = phi %struct.word_list* [ %356, %cond.true573 ], [ %358, %cond.false577 ]
  %359 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx582 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %359, i32 -1
  %command583 = bitcast %union.YYSTYPE* %arrayidx582 to %struct.command**
  %360 = load %struct.command*, %struct.command** %command583, align 4
  %361 = load i32, i32* @word_top, align 4
  %arrayidx584 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %361
  %362 = load i32, i32* %arrayidx584, align 4
  %call585 = call %struct.command* @make_for_command(%struct.word_desc* %347, %struct.word_list* %cond581, %struct.command* %360, i32 %362)
  store %struct.command* %call585, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %363 = load i32, i32* @word_top, align 4
  %cmp586 = icmp sgt i32 %363, 0
  br i1 %cmp586, label %if.then588, label %if.end590

if.then588:                                       ; preds = %cond.end580
  %364 = load i32, i32* @word_top, align 4
  %dec589 = add nsw i32 %364, -1
  store i32 %dec589, i32* @word_top, align 4
  br label %if.end590

if.end590:                                        ; preds = %if.then588, %cond.end580
  br label %sw.epilog

sw.bb591:                                         ; preds = %if.end129
  %365 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx592 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %365, i32 -7
  %word593 = bitcast %union.YYSTYPE* %arrayidx592 to %struct.word_desc**
  %366 = load %struct.word_desc*, %struct.word_desc** %word593, align 4
  %367 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx594 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %367, i32 -1
  %command595 = bitcast %union.YYSTYPE* %arrayidx594 to %struct.command**
  %368 = load %struct.command*, %struct.command** %command595, align 4
  %369 = load i32, i32* @word_top, align 4
  %arrayidx596 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %369
  %370 = load i32, i32* %arrayidx596, align 4
  %call597 = call %struct.command* @make_for_command(%struct.word_desc* %366, %struct.word_list* null, %struct.command* %368, i32 %370)
  store %struct.command* %call597, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %371 = load i32, i32* @word_top, align 4
  %cmp598 = icmp sgt i32 %371, 0
  br i1 %cmp598, label %if.then600, label %if.end602

if.then600:                                       ; preds = %sw.bb591
  %372 = load i32, i32* @word_top, align 4
  %dec601 = add nsw i32 %372, -1
  store i32 %dec601, i32* @word_top, align 4
  br label %if.end602

if.end602:                                        ; preds = %if.then600, %sw.bb591
  br label %sw.epilog

sw.bb603:                                         ; preds = %if.end129
  %373 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx604 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %373, i32 -7
  %word605 = bitcast %union.YYSTYPE* %arrayidx604 to %struct.word_desc**
  %374 = load %struct.word_desc*, %struct.word_desc** %word605, align 4
  %375 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx606 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %375, i32 -1
  %command607 = bitcast %union.YYSTYPE* %arrayidx606 to %struct.command**
  %376 = load %struct.command*, %struct.command** %command607, align 4
  %377 = load i32, i32* @word_top, align 4
  %arrayidx608 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %377
  %378 = load i32, i32* %arrayidx608, align 4
  %call609 = call %struct.command* @make_for_command(%struct.word_desc* %374, %struct.word_list* null, %struct.command* %376, i32 %378)
  store %struct.command* %call609, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %379 = load i32, i32* @word_top, align 4
  %cmp610 = icmp sgt i32 %379, 0
  br i1 %cmp610, label %if.then612, label %if.end614

if.then612:                                       ; preds = %sw.bb603
  %380 = load i32, i32* @word_top, align 4
  %dec613 = add nsw i32 %380, -1
  store i32 %dec613, i32* @word_top, align 4
  br label %if.end614

if.end614:                                        ; preds = %if.then612, %sw.bb603
  br label %sw.epilog

sw.bb615:                                         ; preds = %if.end129
  %381 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx616 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %381, i32 -5
  %word_list617 = bitcast %union.YYSTYPE* %arrayidx616 to %struct.word_list**
  %382 = load %struct.word_list*, %struct.word_list** %word_list617, align 4
  %383 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx618 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %383, i32 -1
  %command619 = bitcast %union.YYSTYPE* %arrayidx618 to %struct.command**
  %384 = load %struct.command*, %struct.command** %command619, align 4
  %385 = load i32, i32* @arith_for_lineno, align 4
  %call620 = call %struct.command* @make_arith_for_command(%struct.word_list* %382, %struct.command* %384, i32 %385)
  store %struct.command* %call620, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %386 = load i32, i32* @word_top, align 4
  %cmp621 = icmp sgt i32 %386, 0
  br i1 %cmp621, label %if.then623, label %if.end625

if.then623:                                       ; preds = %sw.bb615
  %387 = load i32, i32* @word_top, align 4
  %dec624 = add nsw i32 %387, -1
  store i32 %dec624, i32* @word_top, align 4
  br label %if.end625

if.end625:                                        ; preds = %if.then623, %sw.bb615
  br label %sw.epilog

sw.bb626:                                         ; preds = %if.end129
  %388 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx627 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %388, i32 -5
  %word_list628 = bitcast %union.YYSTYPE* %arrayidx627 to %struct.word_list**
  %389 = load %struct.word_list*, %struct.word_list** %word_list628, align 4
  %390 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx629 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %390, i32 -1
  %command630 = bitcast %union.YYSTYPE* %arrayidx629 to %struct.command**
  %391 = load %struct.command*, %struct.command** %command630, align 4
  %392 = load i32, i32* @arith_for_lineno, align 4
  %call631 = call %struct.command* @make_arith_for_command(%struct.word_list* %389, %struct.command* %391, i32 %392)
  store %struct.command* %call631, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %393 = load i32, i32* @word_top, align 4
  %cmp632 = icmp sgt i32 %393, 0
  br i1 %cmp632, label %if.then634, label %if.end636

if.then634:                                       ; preds = %sw.bb626
  %394 = load i32, i32* @word_top, align 4
  %dec635 = add nsw i32 %394, -1
  store i32 %dec635, i32* @word_top, align 4
  br label %if.end636

if.end636:                                        ; preds = %if.then634, %sw.bb626
  br label %sw.epilog

sw.bb637:                                         ; preds = %if.end129
  %395 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx638 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %395, i32 -3
  %word_list639 = bitcast %union.YYSTYPE* %arrayidx638 to %struct.word_list**
  %396 = load %struct.word_list*, %struct.word_list** %word_list639, align 4
  %397 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx640 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %397, i32 -1
  %command641 = bitcast %union.YYSTYPE* %arrayidx640 to %struct.command**
  %398 = load %struct.command*, %struct.command** %command641, align 4
  %399 = load i32, i32* @arith_for_lineno, align 4
  %call642 = call %struct.command* @make_arith_for_command(%struct.word_list* %396, %struct.command* %398, i32 %399)
  store %struct.command* %call642, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %400 = load i32, i32* @word_top, align 4
  %cmp643 = icmp sgt i32 %400, 0
  br i1 %cmp643, label %if.then645, label %if.end647

if.then645:                                       ; preds = %sw.bb637
  %401 = load i32, i32* @word_top, align 4
  %dec646 = add nsw i32 %401, -1
  store i32 %dec646, i32* @word_top, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then645, %sw.bb637
  br label %sw.epilog

sw.bb648:                                         ; preds = %if.end129
  %402 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx649 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %402, i32 -3
  %word_list650 = bitcast %union.YYSTYPE* %arrayidx649 to %struct.word_list**
  %403 = load %struct.word_list*, %struct.word_list** %word_list650, align 4
  %404 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx651 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %404, i32 -1
  %command652 = bitcast %union.YYSTYPE* %arrayidx651 to %struct.command**
  %405 = load %struct.command*, %struct.command** %command652, align 4
  %406 = load i32, i32* @arith_for_lineno, align 4
  %call653 = call %struct.command* @make_arith_for_command(%struct.word_list* %403, %struct.command* %405, i32 %406)
  store %struct.command* %call653, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %407 = load i32, i32* @word_top, align 4
  %cmp654 = icmp sgt i32 %407, 0
  br i1 %cmp654, label %if.then656, label %if.end658

if.then656:                                       ; preds = %sw.bb648
  %408 = load i32, i32* @word_top, align 4
  %dec657 = add nsw i32 %408, -1
  store i32 %dec657, i32* @word_top, align 4
  br label %if.end658

if.end658:                                        ; preds = %if.then656, %sw.bb648
  br label %sw.epilog

sw.bb659:                                         ; preds = %if.end129
  %409 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx660 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %409, i32 -4
  %word661 = bitcast %union.YYSTYPE* %arrayidx660 to %struct.word_desc**
  %410 = load %struct.word_desc*, %struct.word_desc** %word661, align 4
  %call662 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call663 = call %struct.word_list* @make_word_list(%struct.word_desc* %call662, %struct.word_list* null)
  %411 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx664 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %411, i32 -1
  %command665 = bitcast %union.YYSTYPE* %arrayidx664 to %struct.command**
  %412 = load %struct.command*, %struct.command** %command665, align 4
  %413 = load i32, i32* @word_top, align 4
  %arrayidx666 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %413
  %414 = load i32, i32* %arrayidx666, align 4
  %call667 = call %struct.command* @make_select_command(%struct.word_desc* %410, %struct.word_list* %call663, %struct.command* %412, i32 %414)
  store %struct.command* %call667, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %415 = load i32, i32* @word_top, align 4
  %cmp668 = icmp sgt i32 %415, 0
  br i1 %cmp668, label %if.then670, label %if.end672

if.then670:                                       ; preds = %sw.bb659
  %416 = load i32, i32* @word_top, align 4
  %dec671 = add nsw i32 %416, -1
  store i32 %dec671, i32* @word_top, align 4
  br label %if.end672

if.end672:                                        ; preds = %if.then670, %sw.bb659
  br label %sw.epilog

sw.bb673:                                         ; preds = %if.end129
  %417 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx674 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %417, i32 -4
  %word675 = bitcast %union.YYSTYPE* %arrayidx674 to %struct.word_desc**
  %418 = load %struct.word_desc*, %struct.word_desc** %word675, align 4
  %call676 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call677 = call %struct.word_list* @make_word_list(%struct.word_desc* %call676, %struct.word_list* null)
  %419 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx678 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %419, i32 -1
  %command679 = bitcast %union.YYSTYPE* %arrayidx678 to %struct.command**
  %420 = load %struct.command*, %struct.command** %command679, align 4
  %421 = load i32, i32* @word_top, align 4
  %arrayidx680 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %421
  %422 = load i32, i32* %arrayidx680, align 4
  %call681 = call %struct.command* @make_select_command(%struct.word_desc* %418, %struct.word_list* %call677, %struct.command* %420, i32 %422)
  store %struct.command* %call681, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %423 = load i32, i32* @word_top, align 4
  %cmp682 = icmp sgt i32 %423, 0
  br i1 %cmp682, label %if.then684, label %if.end686

if.then684:                                       ; preds = %sw.bb673
  %424 = load i32, i32* @word_top, align 4
  %dec685 = add nsw i32 %424, -1
  store i32 %dec685, i32* @word_top, align 4
  br label %if.end686

if.end686:                                        ; preds = %if.then684, %sw.bb673
  br label %sw.epilog

sw.bb687:                                         ; preds = %if.end129
  %425 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx688 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %425, i32 -5
  %word689 = bitcast %union.YYSTYPE* %arrayidx688 to %struct.word_desc**
  %426 = load %struct.word_desc*, %struct.word_desc** %word689, align 4
  %call690 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call691 = call %struct.word_list* @make_word_list(%struct.word_desc* %call690, %struct.word_list* null)
  %427 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx692 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %427, i32 -1
  %command693 = bitcast %union.YYSTYPE* %arrayidx692 to %struct.command**
  %428 = load %struct.command*, %struct.command** %command693, align 4
  %429 = load i32, i32* @word_top, align 4
  %arrayidx694 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %429
  %430 = load i32, i32* %arrayidx694, align 4
  %call695 = call %struct.command* @make_select_command(%struct.word_desc* %426, %struct.word_list* %call691, %struct.command* %428, i32 %430)
  store %struct.command* %call695, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %431 = load i32, i32* @word_top, align 4
  %cmp696 = icmp sgt i32 %431, 0
  br i1 %cmp696, label %if.then698, label %if.end700

if.then698:                                       ; preds = %sw.bb687
  %432 = load i32, i32* @word_top, align 4
  %dec699 = add nsw i32 %432, -1
  store i32 %dec699, i32* @word_top, align 4
  br label %if.end700

if.end700:                                        ; preds = %if.then698, %sw.bb687
  br label %sw.epilog

sw.bb701:                                         ; preds = %if.end129
  %433 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx702 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %433, i32 -5
  %word703 = bitcast %union.YYSTYPE* %arrayidx702 to %struct.word_desc**
  %434 = load %struct.word_desc*, %struct.word_desc** %word703, align 4
  %call704 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0))
  %call705 = call %struct.word_list* @make_word_list(%struct.word_desc* %call704, %struct.word_list* null)
  %435 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx706 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %435, i32 -1
  %command707 = bitcast %union.YYSTYPE* %arrayidx706 to %struct.command**
  %436 = load %struct.command*, %struct.command** %command707, align 4
  %437 = load i32, i32* @word_top, align 4
  %arrayidx708 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %437
  %438 = load i32, i32* %arrayidx708, align 4
  %call709 = call %struct.command* @make_select_command(%struct.word_desc* %434, %struct.word_list* %call705, %struct.command* %436, i32 %438)
  store %struct.command* %call709, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %439 = load i32, i32* @word_top, align 4
  %cmp710 = icmp sgt i32 %439, 0
  br i1 %cmp710, label %if.then712, label %if.end714

if.then712:                                       ; preds = %sw.bb701
  %440 = load i32, i32* @word_top, align 4
  %dec713 = add nsw i32 %440, -1
  store i32 %dec713, i32* @word_top, align 4
  br label %if.end714

if.end714:                                        ; preds = %if.then712, %sw.bb701
  br label %sw.epilog

sw.bb715:                                         ; preds = %if.end129
  %441 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx716 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %441, i32 -8
  %word717 = bitcast %union.YYSTYPE* %arrayidx716 to %struct.word_desc**
  %442 = load %struct.word_desc*, %struct.word_desc** %word717, align 4
  %443 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx718 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %443, i32 -5
  %word_list719 = bitcast %union.YYSTYPE* %arrayidx718 to %struct.word_list**
  %444 = load %struct.word_list*, %struct.word_list** %word_list719, align 4
  %tobool720 = icmp ne %struct.word_list* %444, null
  br i1 %tobool720, label %land.lhs.true721, label %cond.false730

land.lhs.true721:                                 ; preds = %sw.bb715
  %445 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx722 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %445, i32 -5
  %word_list723 = bitcast %union.YYSTYPE* %arrayidx722 to %struct.word_list**
  %446 = load %struct.word_list*, %struct.word_list** %word_list723, align 4
  %next724 = getelementptr inbounds %struct.word_list, %struct.word_list* %446, i32 0, i32 0
  %447 = load %struct.word_list*, %struct.word_list** %next724, align 4
  %tobool725 = icmp ne %struct.word_list* %447, null
  br i1 %tobool725, label %cond.true726, label %cond.false730

cond.true726:                                     ; preds = %land.lhs.true721
  %448 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx727 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %448, i32 -5
  %word_list728 = bitcast %union.YYSTYPE* %arrayidx727 to %struct.word_list**
  %449 = load %struct.word_list*, %struct.word_list** %word_list728, align 4
  %450 = bitcast %struct.word_list* %449 to %struct.g_list*
  %call729 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %450)
  %451 = bitcast %struct.g_list* %call729 to %struct.word_list*
  br label %cond.end733

cond.false730:                                    ; preds = %land.lhs.true721, %sw.bb715
  %452 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx731 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %452, i32 -5
  %word_list732 = bitcast %union.YYSTYPE* %arrayidx731 to %struct.word_list**
  %453 = load %struct.word_list*, %struct.word_list** %word_list732, align 4
  br label %cond.end733

cond.end733:                                      ; preds = %cond.false730, %cond.true726
  %cond734 = phi %struct.word_list* [ %451, %cond.true726 ], [ %453, %cond.false730 ]
  %454 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx735 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %454, i32 -1
  %command736 = bitcast %union.YYSTYPE* %arrayidx735 to %struct.command**
  %455 = load %struct.command*, %struct.command** %command736, align 4
  %456 = load i32, i32* @word_top, align 4
  %arrayidx737 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %456
  %457 = load i32, i32* %arrayidx737, align 4
  %call738 = call %struct.command* @make_select_command(%struct.word_desc* %442, %struct.word_list* %cond734, %struct.command* %455, i32 %457)
  store %struct.command* %call738, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %458 = load i32, i32* @word_top, align 4
  %cmp739 = icmp sgt i32 %458, 0
  br i1 %cmp739, label %if.then741, label %if.end743

if.then741:                                       ; preds = %cond.end733
  %459 = load i32, i32* @word_top, align 4
  %dec742 = add nsw i32 %459, -1
  store i32 %dec742, i32* @word_top, align 4
  br label %if.end743

if.end743:                                        ; preds = %if.then741, %cond.end733
  br label %sw.epilog

sw.bb744:                                         ; preds = %if.end129
  %460 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx745 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %460, i32 -8
  %word746 = bitcast %union.YYSTYPE* %arrayidx745 to %struct.word_desc**
  %461 = load %struct.word_desc*, %struct.word_desc** %word746, align 4
  %462 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx747 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %462, i32 -5
  %word_list748 = bitcast %union.YYSTYPE* %arrayidx747 to %struct.word_list**
  %463 = load %struct.word_list*, %struct.word_list** %word_list748, align 4
  %tobool749 = icmp ne %struct.word_list* %463, null
  br i1 %tobool749, label %land.lhs.true750, label %cond.false759

land.lhs.true750:                                 ; preds = %sw.bb744
  %464 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx751 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %464, i32 -5
  %word_list752 = bitcast %union.YYSTYPE* %arrayidx751 to %struct.word_list**
  %465 = load %struct.word_list*, %struct.word_list** %word_list752, align 4
  %next753 = getelementptr inbounds %struct.word_list, %struct.word_list* %465, i32 0, i32 0
  %466 = load %struct.word_list*, %struct.word_list** %next753, align 4
  %tobool754 = icmp ne %struct.word_list* %466, null
  br i1 %tobool754, label %cond.true755, label %cond.false759

cond.true755:                                     ; preds = %land.lhs.true750
  %467 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx756 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %467, i32 -5
  %word_list757 = bitcast %union.YYSTYPE* %arrayidx756 to %struct.word_list**
  %468 = load %struct.word_list*, %struct.word_list** %word_list757, align 4
  %469 = bitcast %struct.word_list* %468 to %struct.g_list*
  %call758 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %469)
  %470 = bitcast %struct.g_list* %call758 to %struct.word_list*
  br label %cond.end762

cond.false759:                                    ; preds = %land.lhs.true750, %sw.bb744
  %471 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx760 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %471, i32 -5
  %word_list761 = bitcast %union.YYSTYPE* %arrayidx760 to %struct.word_list**
  %472 = load %struct.word_list*, %struct.word_list** %word_list761, align 4
  br label %cond.end762

cond.end762:                                      ; preds = %cond.false759, %cond.true755
  %cond763 = phi %struct.word_list* [ %470, %cond.true755 ], [ %472, %cond.false759 ]
  %473 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx764 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %473, i32 -1
  %command765 = bitcast %union.YYSTYPE* %arrayidx764 to %struct.command**
  %474 = load %struct.command*, %struct.command** %command765, align 4
  %475 = load i32, i32* @word_top, align 4
  %arrayidx766 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %475
  %476 = load i32, i32* %arrayidx766, align 4
  %call767 = call %struct.command* @make_select_command(%struct.word_desc* %461, %struct.word_list* %cond763, %struct.command* %474, i32 %476)
  store %struct.command* %call767, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %477 = load i32, i32* @word_top, align 4
  %cmp768 = icmp sgt i32 %477, 0
  br i1 %cmp768, label %if.then770, label %if.end772

if.then770:                                       ; preds = %cond.end762
  %478 = load i32, i32* @word_top, align 4
  %dec771 = add nsw i32 %478, -1
  store i32 %dec771, i32* @word_top, align 4
  br label %if.end772

if.end772:                                        ; preds = %if.then770, %cond.end762
  br label %sw.epilog

sw.bb773:                                         ; preds = %if.end129
  %479 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx774 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %479, i32 -4
  %word775 = bitcast %union.YYSTYPE* %arrayidx774 to %struct.word_desc**
  %480 = load %struct.word_desc*, %struct.word_desc** %word775, align 4
  %481 = load i32, i32* @word_top, align 4
  %arrayidx776 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %481
  %482 = load i32, i32* %arrayidx776, align 4
  %call777 = call %struct.command* @make_case_command(%struct.word_desc* %480, %struct.pattern_list* null, i32 %482)
  store %struct.command* %call777, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %483 = load i32, i32* @word_top, align 4
  %cmp778 = icmp sgt i32 %483, 0
  br i1 %cmp778, label %if.then780, label %if.end782

if.then780:                                       ; preds = %sw.bb773
  %484 = load i32, i32* @word_top, align 4
  %dec781 = add nsw i32 %484, -1
  store i32 %dec781, i32* @word_top, align 4
  br label %if.end782

if.end782:                                        ; preds = %if.then780, %sw.bb773
  br label %sw.epilog

sw.bb783:                                         ; preds = %if.end129
  %485 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx784 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %485, i32 -5
  %word785 = bitcast %union.YYSTYPE* %arrayidx784 to %struct.word_desc**
  %486 = load %struct.word_desc*, %struct.word_desc** %word785, align 4
  %487 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx786 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %487, i32 -2
  %pattern = bitcast %union.YYSTYPE* %arrayidx786 to %struct.pattern_list**
  %488 = load %struct.pattern_list*, %struct.pattern_list** %pattern, align 4
  %489 = load i32, i32* @word_top, align 4
  %arrayidx787 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %489
  %490 = load i32, i32* %arrayidx787, align 4
  %call788 = call %struct.command* @make_case_command(%struct.word_desc* %486, %struct.pattern_list* %488, i32 %490)
  store %struct.command* %call788, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %491 = load i32, i32* @word_top, align 4
  %cmp789 = icmp sgt i32 %491, 0
  br i1 %cmp789, label %if.then791, label %if.end793

if.then791:                                       ; preds = %sw.bb783
  %492 = load i32, i32* @word_top, align 4
  %dec792 = add nsw i32 %492, -1
  store i32 %dec792, i32* @word_top, align 4
  br label %if.end793

if.end793:                                        ; preds = %if.then791, %sw.bb783
  br label %sw.epilog

sw.bb794:                                         ; preds = %if.end129
  %493 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx795 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %493, i32 -4
  %word796 = bitcast %union.YYSTYPE* %arrayidx795 to %struct.word_desc**
  %494 = load %struct.word_desc*, %struct.word_desc** %word796, align 4
  %495 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx797 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %495, i32 -1
  %pattern798 = bitcast %union.YYSTYPE* %arrayidx797 to %struct.pattern_list**
  %496 = load %struct.pattern_list*, %struct.pattern_list** %pattern798, align 4
  %497 = load i32, i32* @word_top, align 4
  %arrayidx799 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %497
  %498 = load i32, i32* %arrayidx799, align 4
  %call800 = call %struct.command* @make_case_command(%struct.word_desc* %494, %struct.pattern_list* %496, i32 %498)
  store %struct.command* %call800, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %499 = load i32, i32* @word_top, align 4
  %cmp801 = icmp sgt i32 %499, 0
  br i1 %cmp801, label %if.then803, label %if.end805

if.then803:                                       ; preds = %sw.bb794
  %500 = load i32, i32* @word_top, align 4
  %dec804 = add nsw i32 %500, -1
  store i32 %dec804, i32* @word_top, align 4
  br label %if.end805

if.end805:                                        ; preds = %if.then803, %sw.bb794
  br label %sw.epilog

sw.bb806:                                         ; preds = %if.end129
  %501 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx807 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %501, i32 -4
  %word808 = bitcast %union.YYSTYPE* %arrayidx807 to %struct.word_desc**
  %502 = load %struct.word_desc*, %struct.word_desc** %word808, align 4
  %503 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx809 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %503, i32 0
  %command810 = bitcast %union.YYSTYPE* %arrayidx809 to %struct.command**
  %504 = load %struct.command*, %struct.command** %command810, align 4
  %505 = load i32, i32* @function_dstart, align 4
  %506 = load i32, i32* @function_bstart, align 4
  %call811 = call %struct.command* @make_function_def(%struct.word_desc* %502, %struct.command* %504, i32 %505, i32 %506)
  store %struct.command* %call811, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb812:                                         ; preds = %if.end129
  %507 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx813 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %507, i32 -4
  %word814 = bitcast %union.YYSTYPE* %arrayidx813 to %struct.word_desc**
  %508 = load %struct.word_desc*, %struct.word_desc** %word814, align 4
  %509 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx815 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %509, i32 0
  %command816 = bitcast %union.YYSTYPE* %arrayidx815 to %struct.command**
  %510 = load %struct.command*, %struct.command** %command816, align 4
  %511 = load i32, i32* @function_dstart, align 4
  %512 = load i32, i32* @function_bstart, align 4
  %call817 = call %struct.command* @make_function_def(%struct.word_desc* %508, %struct.command* %510, i32 %511, i32 %512)
  store %struct.command* %call817, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb818:                                         ; preds = %if.end129
  %513 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx819 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %513, i32 -2
  %word820 = bitcast %union.YYSTYPE* %arrayidx819 to %struct.word_desc**
  %514 = load %struct.word_desc*, %struct.word_desc** %word820, align 4
  %515 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx821 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %515, i32 0
  %command822 = bitcast %union.YYSTYPE* %arrayidx821 to %struct.command**
  %516 = load %struct.command*, %struct.command** %command822, align 4
  %517 = load i32, i32* @function_dstart, align 4
  %518 = load i32, i32* @function_bstart, align 4
  %call823 = call %struct.command* @make_function_def(%struct.word_desc* %514, %struct.command* %516, i32 %517, i32 %518)
  store %struct.command* %call823, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb824:                                         ; preds = %if.end129
  %519 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx825 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %519, i32 0
  %command826 = bitcast %union.YYSTYPE* %arrayidx825 to %struct.command**
  %520 = load %struct.command*, %struct.command** %command826, align 4
  store %struct.command* %520, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb827:                                         ; preds = %if.end129
  %521 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx829 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %521, i32 -1
  %command830 = bitcast %union.YYSTYPE* %arrayidx829 to %struct.command**
  %522 = load %struct.command*, %struct.command** %command830, align 4
  store %struct.command* %522, %struct.command** %tc828, align 4
  %523 = load %struct.command*, %struct.command** %tc828, align 4
  %redirects831 = getelementptr inbounds %struct.command, %struct.command* %523, i32 0, i32 3
  %524 = load %struct.redirect*, %struct.redirect** %redirects831, align 4
  %tobool832 = icmp ne %struct.redirect* %524, null
  br i1 %tobool832, label %if.then833, label %if.else846

if.then833:                                       ; preds = %sw.bb827
  %525 = load %struct.command*, %struct.command** %tc828, align 4
  %redirects835 = getelementptr inbounds %struct.command, %struct.command* %525, i32 0, i32 3
  %526 = load %struct.redirect*, %struct.redirect** %redirects835, align 4
  store %struct.redirect* %526, %struct.redirect** %t834, align 4
  br label %for.cond836

for.cond836:                                      ; preds = %for.inc840, %if.then833
  %527 = load %struct.redirect*, %struct.redirect** %t834, align 4
  %next837 = getelementptr inbounds %struct.redirect, %struct.redirect* %527, i32 0, i32 0
  %528 = load %struct.redirect*, %struct.redirect** %next837, align 4
  %tobool838 = icmp ne %struct.redirect* %528, null
  br i1 %tobool838, label %for.body839, label %for.end842

for.body839:                                      ; preds = %for.cond836
  br label %for.inc840

for.inc840:                                       ; preds = %for.body839
  %529 = load %struct.redirect*, %struct.redirect** %t834, align 4
  %next841 = getelementptr inbounds %struct.redirect, %struct.redirect* %529, i32 0, i32 0
  %530 = load %struct.redirect*, %struct.redirect** %next841, align 4
  store %struct.redirect* %530, %struct.redirect** %t834, align 4
  br label %for.cond836

for.end842:                                       ; preds = %for.cond836
  %531 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx843 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %531, i32 0
  %redirect844 = bitcast %union.YYSTYPE* %arrayidx843 to %struct.redirect**
  %532 = load %struct.redirect*, %struct.redirect** %redirect844, align 4
  %533 = load %struct.redirect*, %struct.redirect** %t834, align 4
  %next845 = getelementptr inbounds %struct.redirect, %struct.redirect* %533, i32 0, i32 0
  store %struct.redirect* %532, %struct.redirect** %next845, align 4
  br label %if.end850

if.else846:                                       ; preds = %sw.bb827
  %534 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx847 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %534, i32 0
  %redirect848 = bitcast %union.YYSTYPE* %arrayidx847 to %struct.redirect**
  %535 = load %struct.redirect*, %struct.redirect** %redirect848, align 4
  %536 = load %struct.command*, %struct.command** %tc828, align 4
  %redirects849 = getelementptr inbounds %struct.command, %struct.command* %536, i32 0, i32 3
  store %struct.redirect* %535, %struct.redirect** %redirects849, align 4
  br label %if.end850

if.end850:                                        ; preds = %if.else846, %for.end842
  %537 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx851 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %537, i32 -1
  %command852 = bitcast %union.YYSTYPE* %arrayidx851 to %struct.command**
  %538 = load %struct.command*, %struct.command** %command852, align 4
  store %struct.command* %538, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb853:                                         ; preds = %if.end129
  %539 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx854 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %539, i32 -1
  %command855 = bitcast %union.YYSTYPE* %arrayidx854 to %struct.command**
  %540 = load %struct.command*, %struct.command** %command855, align 4
  %call856 = call %struct.command* @make_subshell_command(%struct.command* %540)
  store %struct.command* %call856, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %541 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags = getelementptr inbounds %struct.command, %struct.command* %541, i32 0, i32 1
  %542 = load i32, i32* %flags, align 4
  %or857 = or i32 %542, 1
  store i32 %or857, i32* %flags, align 4
  br label %sw.epilog

sw.bb858:                                         ; preds = %if.end129
  %543 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx859 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %543, i32 0
  %command860 = bitcast %union.YYSTYPE* %arrayidx859 to %struct.command**
  %544 = load %struct.command*, %struct.command** %command860, align 4
  %call861 = call %struct.command* @make_coproc_command(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), %struct.command* %544)
  store %struct.command* %call861, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %545 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags862 = getelementptr inbounds %struct.command, %struct.command* %545, i32 0, i32 1
  %546 = load i32, i32* %flags862, align 4
  %or863 = or i32 %546, 4097
  store i32 %or863, i32* %flags862, align 4
  br label %sw.epilog

sw.bb864:                                         ; preds = %if.end129
  %547 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx866 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %547, i32 -1
  %command867 = bitcast %union.YYSTYPE* %arrayidx866 to %struct.command**
  %548 = load %struct.command*, %struct.command** %command867, align 4
  store %struct.command* %548, %struct.command** %tc865, align 4
  %549 = load %struct.command*, %struct.command** %tc865, align 4
  %redirects868 = getelementptr inbounds %struct.command, %struct.command* %549, i32 0, i32 3
  %550 = load %struct.redirect*, %struct.redirect** %redirects868, align 4
  %tobool869 = icmp ne %struct.redirect* %550, null
  br i1 %tobool869, label %if.then870, label %if.else883

if.then870:                                       ; preds = %sw.bb864
  %551 = load %struct.command*, %struct.command** %tc865, align 4
  %redirects872 = getelementptr inbounds %struct.command, %struct.command* %551, i32 0, i32 3
  %552 = load %struct.redirect*, %struct.redirect** %redirects872, align 4
  store %struct.redirect* %552, %struct.redirect** %t871, align 4
  br label %for.cond873

for.cond873:                                      ; preds = %for.inc877, %if.then870
  %553 = load %struct.redirect*, %struct.redirect** %t871, align 4
  %next874 = getelementptr inbounds %struct.redirect, %struct.redirect* %553, i32 0, i32 0
  %554 = load %struct.redirect*, %struct.redirect** %next874, align 4
  %tobool875 = icmp ne %struct.redirect* %554, null
  br i1 %tobool875, label %for.body876, label %for.end879

for.body876:                                      ; preds = %for.cond873
  br label %for.inc877

for.inc877:                                       ; preds = %for.body876
  %555 = load %struct.redirect*, %struct.redirect** %t871, align 4
  %next878 = getelementptr inbounds %struct.redirect, %struct.redirect* %555, i32 0, i32 0
  %556 = load %struct.redirect*, %struct.redirect** %next878, align 4
  store %struct.redirect* %556, %struct.redirect** %t871, align 4
  br label %for.cond873

for.end879:                                       ; preds = %for.cond873
  %557 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx880 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %557, i32 0
  %redirect881 = bitcast %union.YYSTYPE* %arrayidx880 to %struct.redirect**
  %558 = load %struct.redirect*, %struct.redirect** %redirect881, align 4
  %559 = load %struct.redirect*, %struct.redirect** %t871, align 4
  %next882 = getelementptr inbounds %struct.redirect, %struct.redirect* %559, i32 0, i32 0
  store %struct.redirect* %558, %struct.redirect** %next882, align 4
  br label %if.end887

if.else883:                                       ; preds = %sw.bb864
  %560 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx884 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %560, i32 0
  %redirect885 = bitcast %union.YYSTYPE* %arrayidx884 to %struct.redirect**
  %561 = load %struct.redirect*, %struct.redirect** %redirect885, align 4
  %562 = load %struct.command*, %struct.command** %tc865, align 4
  %redirects886 = getelementptr inbounds %struct.command, %struct.command* %562, i32 0, i32 3
  store %struct.redirect* %561, %struct.redirect** %redirects886, align 4
  br label %if.end887

if.end887:                                        ; preds = %if.else883, %for.end879
  %563 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx888 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %563, i32 -1
  %command889 = bitcast %union.YYSTYPE* %arrayidx888 to %struct.command**
  %564 = load %struct.command*, %struct.command** %command889, align 4
  %call890 = call %struct.command* @make_coproc_command(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), %struct.command* %564)
  store %struct.command* %call890, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %565 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags891 = getelementptr inbounds %struct.command, %struct.command* %565, i32 0, i32 1
  %566 = load i32, i32* %flags891, align 4
  %or892 = or i32 %566, 4097
  store i32 %or892, i32* %flags891, align 4
  br label %sw.epilog

sw.bb893:                                         ; preds = %if.end129
  %567 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx894 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %567, i32 -1
  %word895 = bitcast %union.YYSTYPE* %arrayidx894 to %struct.word_desc**
  %568 = load %struct.word_desc*, %struct.word_desc** %word895, align 4
  %word896 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %568, i32 0, i32 0
  %569 = load i8*, i8** %word896, align 4
  %570 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx897 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %570, i32 0
  %command898 = bitcast %union.YYSTYPE* %arrayidx897 to %struct.command**
  %571 = load %struct.command*, %struct.command** %command898, align 4
  %call899 = call %struct.command* @make_coproc_command(i8* %569, %struct.command* %571)
  store %struct.command* %call899, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %572 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags900 = getelementptr inbounds %struct.command, %struct.command* %572, i32 0, i32 1
  %573 = load i32, i32* %flags900, align 4
  %or901 = or i32 %573, 4097
  store i32 %or901, i32* %flags900, align 4
  br label %sw.epilog

sw.bb902:                                         ; preds = %if.end129
  %574 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx904 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %574, i32 -1
  %command905 = bitcast %union.YYSTYPE* %arrayidx904 to %struct.command**
  %575 = load %struct.command*, %struct.command** %command905, align 4
  store %struct.command* %575, %struct.command** %tc903, align 4
  %576 = load %struct.command*, %struct.command** %tc903, align 4
  %redirects906 = getelementptr inbounds %struct.command, %struct.command* %576, i32 0, i32 3
  %577 = load %struct.redirect*, %struct.redirect** %redirects906, align 4
  %tobool907 = icmp ne %struct.redirect* %577, null
  br i1 %tobool907, label %if.then908, label %if.else921

if.then908:                                       ; preds = %sw.bb902
  %578 = load %struct.command*, %struct.command** %tc903, align 4
  %redirects910 = getelementptr inbounds %struct.command, %struct.command* %578, i32 0, i32 3
  %579 = load %struct.redirect*, %struct.redirect** %redirects910, align 4
  store %struct.redirect* %579, %struct.redirect** %t909, align 4
  br label %for.cond911

for.cond911:                                      ; preds = %for.inc915, %if.then908
  %580 = load %struct.redirect*, %struct.redirect** %t909, align 4
  %next912 = getelementptr inbounds %struct.redirect, %struct.redirect* %580, i32 0, i32 0
  %581 = load %struct.redirect*, %struct.redirect** %next912, align 4
  %tobool913 = icmp ne %struct.redirect* %581, null
  br i1 %tobool913, label %for.body914, label %for.end917

for.body914:                                      ; preds = %for.cond911
  br label %for.inc915

for.inc915:                                       ; preds = %for.body914
  %582 = load %struct.redirect*, %struct.redirect** %t909, align 4
  %next916 = getelementptr inbounds %struct.redirect, %struct.redirect* %582, i32 0, i32 0
  %583 = load %struct.redirect*, %struct.redirect** %next916, align 4
  store %struct.redirect* %583, %struct.redirect** %t909, align 4
  br label %for.cond911

for.end917:                                       ; preds = %for.cond911
  %584 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx918 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %584, i32 0
  %redirect919 = bitcast %union.YYSTYPE* %arrayidx918 to %struct.redirect**
  %585 = load %struct.redirect*, %struct.redirect** %redirect919, align 4
  %586 = load %struct.redirect*, %struct.redirect** %t909, align 4
  %next920 = getelementptr inbounds %struct.redirect, %struct.redirect* %586, i32 0, i32 0
  store %struct.redirect* %585, %struct.redirect** %next920, align 4
  br label %if.end925

if.else921:                                       ; preds = %sw.bb902
  %587 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx922 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %587, i32 0
  %redirect923 = bitcast %union.YYSTYPE* %arrayidx922 to %struct.redirect**
  %588 = load %struct.redirect*, %struct.redirect** %redirect923, align 4
  %589 = load %struct.command*, %struct.command** %tc903, align 4
  %redirects924 = getelementptr inbounds %struct.command, %struct.command* %589, i32 0, i32 3
  store %struct.redirect* %588, %struct.redirect** %redirects924, align 4
  br label %if.end925

if.end925:                                        ; preds = %if.else921, %for.end917
  %590 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx926 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %590, i32 -2
  %word927 = bitcast %union.YYSTYPE* %arrayidx926 to %struct.word_desc**
  %591 = load %struct.word_desc*, %struct.word_desc** %word927, align 4
  %word928 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %591, i32 0, i32 0
  %592 = load i8*, i8** %word928, align 4
  %593 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx929 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %593, i32 -1
  %command930 = bitcast %union.YYSTYPE* %arrayidx929 to %struct.command**
  %594 = load %struct.command*, %struct.command** %command930, align 4
  %call931 = call %struct.command* @make_coproc_command(i8* %592, %struct.command* %594)
  store %struct.command* %call931, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %595 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags932 = getelementptr inbounds %struct.command, %struct.command* %595, i32 0, i32 1
  %596 = load i32, i32* %flags932, align 4
  %or933 = or i32 %596, 4097
  store i32 %or933, i32* %flags932, align 4
  br label %sw.epilog

sw.bb934:                                         ; preds = %if.end129
  %597 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx935 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %597, i32 0
  %command936 = bitcast %union.YYSTYPE* %arrayidx935 to %struct.command**
  %598 = load %struct.command*, %struct.command** %command936, align 4
  %call937 = call %struct.command* @clean_simple_command(%struct.command* %598)
  %call938 = call %struct.command* @make_coproc_command(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), %struct.command* %call937)
  store %struct.command* %call938, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %599 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags939 = getelementptr inbounds %struct.command, %struct.command* %599, i32 0, i32 1
  %600 = load i32, i32* %flags939, align 4
  %or940 = or i32 %600, 4097
  store i32 %or940, i32* %flags939, align 4
  br label %sw.epilog

sw.bb941:                                         ; preds = %if.end129
  %601 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx942 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %601, i32 -3
  %command943 = bitcast %union.YYSTYPE* %arrayidx942 to %struct.command**
  %602 = load %struct.command*, %struct.command** %command943, align 4
  %603 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx944 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %603, i32 -1
  %command945 = bitcast %union.YYSTYPE* %arrayidx944 to %struct.command**
  %604 = load %struct.command*, %struct.command** %command945, align 4
  %call946 = call %struct.command* @make_if_command(%struct.command* %602, %struct.command* %604, %struct.command* null)
  store %struct.command* %call946, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb947:                                         ; preds = %if.end129
  %605 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx948 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %605, i32 -5
  %command949 = bitcast %union.YYSTYPE* %arrayidx948 to %struct.command**
  %606 = load %struct.command*, %struct.command** %command949, align 4
  %607 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx950 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %607, i32 -3
  %command951 = bitcast %union.YYSTYPE* %arrayidx950 to %struct.command**
  %608 = load %struct.command*, %struct.command** %command951, align 4
  %609 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx952 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %609, i32 -1
  %command953 = bitcast %union.YYSTYPE* %arrayidx952 to %struct.command**
  %610 = load %struct.command*, %struct.command** %command953, align 4
  %call954 = call %struct.command* @make_if_command(%struct.command* %606, %struct.command* %608, %struct.command* %610)
  store %struct.command* %call954, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb955:                                         ; preds = %if.end129
  %611 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx956 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %611, i32 -4
  %command957 = bitcast %union.YYSTYPE* %arrayidx956 to %struct.command**
  %612 = load %struct.command*, %struct.command** %command957, align 4
  %613 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx958 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %613, i32 -2
  %command959 = bitcast %union.YYSTYPE* %arrayidx958 to %struct.command**
  %614 = load %struct.command*, %struct.command** %command959, align 4
  %615 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx960 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %615, i32 -1
  %command961 = bitcast %union.YYSTYPE* %arrayidx960 to %struct.command**
  %616 = load %struct.command*, %struct.command** %command961, align 4
  %call962 = call %struct.command* @make_if_command(%struct.command* %612, %struct.command* %614, %struct.command* %616)
  store %struct.command* %call962, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb963:                                         ; preds = %if.end129
  %617 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx964 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %617, i32 -1
  %command965 = bitcast %union.YYSTYPE* %arrayidx964 to %struct.command**
  %618 = load %struct.command*, %struct.command** %command965, align 4
  %call966 = call %struct.command* @make_group_command(%struct.command* %618)
  store %struct.command* %call966, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb967:                                         ; preds = %if.end129
  %619 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx968 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %619, i32 0
  %word_list969 = bitcast %union.YYSTYPE* %arrayidx968 to %struct.word_list**
  %620 = load %struct.word_list*, %struct.word_list** %word_list969, align 4
  %call970 = call %struct.command* @make_arith_command(%struct.word_list* %620)
  store %struct.command* %call970, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb971:                                         ; preds = %if.end129
  %621 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx972 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %621, i32 -1
  %command973 = bitcast %union.YYSTYPE* %arrayidx972 to %struct.command**
  %622 = load %struct.command*, %struct.command** %command973, align 4
  store %struct.command* %622, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb974:                                         ; preds = %if.end129
  %623 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx975 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %623, i32 -2
  %command976 = bitcast %union.YYSTYPE* %arrayidx975 to %struct.command**
  %624 = load %struct.command*, %struct.command** %command976, align 4
  %625 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx977 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %625, i32 0
  %command978 = bitcast %union.YYSTYPE* %arrayidx977 to %struct.command**
  %626 = load %struct.command*, %struct.command** %command978, align 4
  %call979 = call %struct.command* @make_if_command(%struct.command* %624, %struct.command* %626, %struct.command* null)
  store %struct.command* %call979, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb980:                                         ; preds = %if.end129
  %627 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx981 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %627, i32 -4
  %command982 = bitcast %union.YYSTYPE* %arrayidx981 to %struct.command**
  %628 = load %struct.command*, %struct.command** %command982, align 4
  %629 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx983 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %629, i32 -2
  %command984 = bitcast %union.YYSTYPE* %arrayidx983 to %struct.command**
  %630 = load %struct.command*, %struct.command** %command984, align 4
  %631 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx985 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %631, i32 0
  %command986 = bitcast %union.YYSTYPE* %arrayidx985 to %struct.command**
  %632 = load %struct.command*, %struct.command** %command986, align 4
  %call987 = call %struct.command* @make_if_command(%struct.command* %628, %struct.command* %630, %struct.command* %632)
  store %struct.command* %call987, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb988:                                         ; preds = %if.end129
  %633 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx989 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %633, i32 -3
  %command990 = bitcast %union.YYSTYPE* %arrayidx989 to %struct.command**
  %634 = load %struct.command*, %struct.command** %command990, align 4
  %635 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx991 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %635, i32 -1
  %command992 = bitcast %union.YYSTYPE* %arrayidx991 to %struct.command**
  %636 = load %struct.command*, %struct.command** %command992, align 4
  %637 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx993 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %637, i32 0
  %command994 = bitcast %union.YYSTYPE* %arrayidx993 to %struct.command**
  %638 = load %struct.command*, %struct.command** %command994, align 4
  %call995 = call %struct.command* @make_if_command(%struct.command* %634, %struct.command* %636, %struct.command* %638)
  store %struct.command* %call995, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb996:                                         ; preds = %if.end129
  %639 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx997 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %639, i32 -1
  %pattern998 = bitcast %union.YYSTYPE* %arrayidx997 to %struct.pattern_list**
  %640 = load %struct.pattern_list*, %struct.pattern_list** %pattern998, align 4
  %641 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx999 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %641, i32 0
  %pattern1000 = bitcast %union.YYSTYPE* %arrayidx999 to %struct.pattern_list**
  %642 = load %struct.pattern_list*, %struct.pattern_list** %pattern1000, align 4
  %next1001 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %642, i32 0, i32 0
  store %struct.pattern_list* %640, %struct.pattern_list** %next1001, align 4
  %643 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1002 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %643, i32 0
  %pattern1003 = bitcast %union.YYSTYPE* %arrayidx1002 to %struct.pattern_list**
  %644 = load %struct.pattern_list*, %struct.pattern_list** %pattern1003, align 4
  store %struct.pattern_list* %644, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1004:                                        ; preds = %if.end129
  %645 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1005 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %645, i32 -2
  %word_list1006 = bitcast %union.YYSTYPE* %arrayidx1005 to %struct.word_list**
  %646 = load %struct.word_list*, %struct.word_list** %word_list1006, align 4
  %647 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1007 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %647, i32 0
  %command1008 = bitcast %union.YYSTYPE* %arrayidx1007 to %struct.command**
  %648 = load %struct.command*, %struct.command** %command1008, align 4
  %call1009 = call %struct.pattern_list* @make_pattern_list(%struct.word_list* %646, %struct.command* %648)
  store %struct.pattern_list* %call1009, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1010:                                        ; preds = %if.end129
  %649 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1011 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %649, i32 -2
  %word_list1012 = bitcast %union.YYSTYPE* %arrayidx1011 to %struct.word_list**
  %650 = load %struct.word_list*, %struct.word_list** %word_list1012, align 4
  %call1013 = call %struct.pattern_list* @make_pattern_list(%struct.word_list* %650, %struct.command* null)
  store %struct.pattern_list* %call1013, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1014:                                        ; preds = %if.end129
  %651 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1015 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %651, i32 -2
  %word_list1016 = bitcast %union.YYSTYPE* %arrayidx1015 to %struct.word_list**
  %652 = load %struct.word_list*, %struct.word_list** %word_list1016, align 4
  %653 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1017 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %653, i32 0
  %command1018 = bitcast %union.YYSTYPE* %arrayidx1017 to %struct.command**
  %654 = load %struct.command*, %struct.command** %command1018, align 4
  %call1019 = call %struct.pattern_list* @make_pattern_list(%struct.word_list* %652, %struct.command* %654)
  store %struct.pattern_list* %call1019, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1020:                                        ; preds = %if.end129
  %655 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1021 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %655, i32 -2
  %word_list1022 = bitcast %union.YYSTYPE* %arrayidx1021 to %struct.word_list**
  %656 = load %struct.word_list*, %struct.word_list** %word_list1022, align 4
  %call1023 = call %struct.pattern_list* @make_pattern_list(%struct.word_list* %656, %struct.command* null)
  store %struct.pattern_list* %call1023, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1024:                                        ; preds = %if.end129
  %657 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1025 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %657, i32 -1
  %pattern1026 = bitcast %union.YYSTYPE* %arrayidx1025 to %struct.pattern_list**
  %658 = load %struct.pattern_list*, %struct.pattern_list** %pattern1026, align 4
  store %struct.pattern_list* %658, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1027:                                        ; preds = %if.end129
  %659 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1028 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %659, i32 -2
  %pattern1029 = bitcast %union.YYSTYPE* %arrayidx1028 to %struct.pattern_list**
  %660 = load %struct.pattern_list*, %struct.pattern_list** %pattern1029, align 4
  %661 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1030 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %661, i32 -1
  %pattern1031 = bitcast %union.YYSTYPE* %arrayidx1030 to %struct.pattern_list**
  %662 = load %struct.pattern_list*, %struct.pattern_list** %pattern1031, align 4
  %next1032 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %662, i32 0, i32 0
  store %struct.pattern_list* %660, %struct.pattern_list** %next1032, align 4
  %663 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1033 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %663, i32 -1
  %pattern1034 = bitcast %union.YYSTYPE* %arrayidx1033 to %struct.pattern_list**
  %664 = load %struct.pattern_list*, %struct.pattern_list** %pattern1034, align 4
  store %struct.pattern_list* %664, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1035:                                        ; preds = %if.end129
  %665 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1036 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %665, i32 -1
  %pattern1037 = bitcast %union.YYSTYPE* %arrayidx1036 to %struct.pattern_list**
  %666 = load %struct.pattern_list*, %struct.pattern_list** %pattern1037, align 4
  %flags1038 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %666, i32 0, i32 3
  %667 = load i32, i32* %flags1038, align 4
  %or1039 = or i32 %667, 1
  store i32 %or1039, i32* %flags1038, align 4
  %668 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1040 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %668, i32 -1
  %pattern1041 = bitcast %union.YYSTYPE* %arrayidx1040 to %struct.pattern_list**
  %669 = load %struct.pattern_list*, %struct.pattern_list** %pattern1041, align 4
  store %struct.pattern_list* %669, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1042:                                        ; preds = %if.end129
  %670 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1043 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %670, i32 -1
  %pattern1044 = bitcast %union.YYSTYPE* %arrayidx1043 to %struct.pattern_list**
  %671 = load %struct.pattern_list*, %struct.pattern_list** %pattern1044, align 4
  %flags1045 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %671, i32 0, i32 3
  %672 = load i32, i32* %flags1045, align 4
  %or1046 = or i32 %672, 1
  store i32 %or1046, i32* %flags1045, align 4
  %673 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1047 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %673, i32 -2
  %pattern1048 = bitcast %union.YYSTYPE* %arrayidx1047 to %struct.pattern_list**
  %674 = load %struct.pattern_list*, %struct.pattern_list** %pattern1048, align 4
  %675 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1049 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %675, i32 -1
  %pattern1050 = bitcast %union.YYSTYPE* %arrayidx1049 to %struct.pattern_list**
  %676 = load %struct.pattern_list*, %struct.pattern_list** %pattern1050, align 4
  %next1051 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %676, i32 0, i32 0
  store %struct.pattern_list* %674, %struct.pattern_list** %next1051, align 4
  %677 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1052 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %677, i32 -1
  %pattern1053 = bitcast %union.YYSTYPE* %arrayidx1052 to %struct.pattern_list**
  %678 = load %struct.pattern_list*, %struct.pattern_list** %pattern1053, align 4
  store %struct.pattern_list* %678, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1054:                                        ; preds = %if.end129
  %679 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1055 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %679, i32 -1
  %pattern1056 = bitcast %union.YYSTYPE* %arrayidx1055 to %struct.pattern_list**
  %680 = load %struct.pattern_list*, %struct.pattern_list** %pattern1056, align 4
  %flags1057 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %680, i32 0, i32 3
  %681 = load i32, i32* %flags1057, align 4
  %or1058 = or i32 %681, 2
  store i32 %or1058, i32* %flags1057, align 4
  %682 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1059 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %682, i32 -1
  %pattern1060 = bitcast %union.YYSTYPE* %arrayidx1059 to %struct.pattern_list**
  %683 = load %struct.pattern_list*, %struct.pattern_list** %pattern1060, align 4
  store %struct.pattern_list* %683, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1061:                                        ; preds = %if.end129
  %684 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1062 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %684, i32 -1
  %pattern1063 = bitcast %union.YYSTYPE* %arrayidx1062 to %struct.pattern_list**
  %685 = load %struct.pattern_list*, %struct.pattern_list** %pattern1063, align 4
  %flags1064 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %685, i32 0, i32 3
  %686 = load i32, i32* %flags1064, align 4
  %or1065 = or i32 %686, 2
  store i32 %or1065, i32* %flags1064, align 4
  %687 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1066 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %687, i32 -2
  %pattern1067 = bitcast %union.YYSTYPE* %arrayidx1066 to %struct.pattern_list**
  %688 = load %struct.pattern_list*, %struct.pattern_list** %pattern1067, align 4
  %689 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1068 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %689, i32 -1
  %pattern1069 = bitcast %union.YYSTYPE* %arrayidx1068 to %struct.pattern_list**
  %690 = load %struct.pattern_list*, %struct.pattern_list** %pattern1069, align 4
  %next1070 = getelementptr inbounds %struct.pattern_list, %struct.pattern_list* %690, i32 0, i32 0
  store %struct.pattern_list* %688, %struct.pattern_list** %next1070, align 4
  %691 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1071 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %691, i32 -1
  %pattern1072 = bitcast %union.YYSTYPE* %arrayidx1071 to %struct.pattern_list**
  %692 = load %struct.pattern_list*, %struct.pattern_list** %pattern1072, align 4
  store %struct.pattern_list* %692, %struct.pattern_list** bitcast (%union.YYSTYPE* @yyval to %struct.pattern_list**), align 4
  br label %sw.epilog

sw.bb1073:                                        ; preds = %if.end129
  %693 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1074 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %693, i32 0
  %word1075 = bitcast %union.YYSTYPE* %arrayidx1074 to %struct.word_desc**
  %694 = load %struct.word_desc*, %struct.word_desc** %word1075, align 4
  %call1076 = call %struct.word_list* @make_word_list(%struct.word_desc* %694, %struct.word_list* null)
  store %struct.word_list* %call1076, %struct.word_list** bitcast (%union.YYSTYPE* @yyval to %struct.word_list**), align 4
  br label %sw.epilog

sw.bb1077:                                        ; preds = %if.end129
  %695 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1078 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %695, i32 0
  %word1079 = bitcast %union.YYSTYPE* %arrayidx1078 to %struct.word_desc**
  %696 = load %struct.word_desc*, %struct.word_desc** %word1079, align 4
  %697 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1080 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %697, i32 -2
  %word_list1081 = bitcast %union.YYSTYPE* %arrayidx1080 to %struct.word_list**
  %698 = load %struct.word_list*, %struct.word_list** %word_list1081, align 4
  %call1082 = call %struct.word_list* @make_word_list(%struct.word_desc* %696, %struct.word_list* %698)
  store %struct.word_list* %call1082, %struct.word_list** bitcast (%union.YYSTYPE* @yyval to %struct.word_list**), align 4
  br label %sw.epilog

sw.bb1083:                                        ; preds = %if.end129
  %699 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1084 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %699, i32 0
  %command1085 = bitcast %union.YYSTYPE* %arrayidx1084 to %struct.command**
  %700 = load %struct.command*, %struct.command** %command1085, align 4
  store %struct.command* %700, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %701 = load i32, i32* @need_here_doc, align 4
  %tobool1086 = icmp ne i32 %701, 0
  br i1 %tobool1086, label %if.then1087, label %if.end1088

if.then1087:                                      ; preds = %sw.bb1083
  call void @gather_here_documents()
  br label %if.end1088

if.end1088:                                       ; preds = %if.then1087, %sw.bb1083
  br label %sw.epilog

sw.bb1089:                                        ; preds = %if.end129
  %702 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1090 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %702, i32 0
  %command1091 = bitcast %union.YYSTYPE* %arrayidx1090 to %struct.command**
  %703 = load %struct.command*, %struct.command** %command1091, align 4
  store %struct.command* %703, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1092:                                        ; preds = %if.end129
  %704 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1093 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %704, i32 -2
  %command1094 = bitcast %union.YYSTYPE* %arrayidx1093 to %struct.command**
  %705 = load %struct.command*, %struct.command** %command1094, align 4
  %type = getelementptr inbounds %struct.command, %struct.command* %705, i32 0, i32 0
  %706 = load i32, i32* %type, align 4
  %cmp1095 = icmp eq i32 %706, 6
  br i1 %cmp1095, label %if.then1097, label %if.else1101

if.then1097:                                      ; preds = %sw.bb1092
  %707 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1098 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %707, i32 -2
  %command1099 = bitcast %union.YYSTYPE* %arrayidx1098 to %struct.command**
  %708 = load %struct.command*, %struct.command** %command1099, align 4
  %call1100 = call %struct.command* @connect_async_list(%struct.command* %708, %struct.command* null, i32 38)
  store %struct.command* %call1100, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1105

if.else1101:                                      ; preds = %sw.bb1092
  %709 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1102 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %709, i32 -2
  %command1103 = bitcast %union.YYSTYPE* %arrayidx1102 to %struct.command**
  %710 = load %struct.command*, %struct.command** %command1103, align 4
  %call1104 = call %struct.command* @command_connect(%struct.command* %710, %struct.command* null, i32 38)
  store %struct.command* %call1104, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1105

if.end1105:                                       ; preds = %if.else1101, %if.then1097
  br label %sw.epilog

sw.bb1106:                                        ; preds = %if.end129
  %711 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1107 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %711, i32 -3
  %command1108 = bitcast %union.YYSTYPE* %arrayidx1107 to %struct.command**
  %712 = load %struct.command*, %struct.command** %command1108, align 4
  %713 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1109 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %713, i32 0
  %command1110 = bitcast %union.YYSTYPE* %arrayidx1109 to %struct.command**
  %714 = load %struct.command*, %struct.command** %command1110, align 4
  %call1111 = call %struct.command* @command_connect(%struct.command* %712, %struct.command* %714, i32 287)
  store %struct.command* %call1111, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1112:                                        ; preds = %if.end129
  %715 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1113 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %715, i32 -3
  %command1114 = bitcast %union.YYSTYPE* %arrayidx1113 to %struct.command**
  %716 = load %struct.command*, %struct.command** %command1114, align 4
  %717 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1115 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %717, i32 0
  %command1116 = bitcast %union.YYSTYPE* %arrayidx1115 to %struct.command**
  %718 = load %struct.command*, %struct.command** %command1116, align 4
  %call1117 = call %struct.command* @command_connect(%struct.command* %716, %struct.command* %718, i32 288)
  store %struct.command* %call1117, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1118:                                        ; preds = %if.end129
  %719 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1119 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %719, i32 -3
  %command1120 = bitcast %union.YYSTYPE* %arrayidx1119 to %struct.command**
  %720 = load %struct.command*, %struct.command** %command1120, align 4
  %type1121 = getelementptr inbounds %struct.command, %struct.command* %720, i32 0, i32 0
  %721 = load i32, i32* %type1121, align 4
  %cmp1122 = icmp eq i32 %721, 6
  br i1 %cmp1122, label %if.then1124, label %if.else1130

if.then1124:                                      ; preds = %sw.bb1118
  %722 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1125 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %722, i32 -3
  %command1126 = bitcast %union.YYSTYPE* %arrayidx1125 to %struct.command**
  %723 = load %struct.command*, %struct.command** %command1126, align 4
  %724 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1127 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %724, i32 0
  %command1128 = bitcast %union.YYSTYPE* %arrayidx1127 to %struct.command**
  %725 = load %struct.command*, %struct.command** %command1128, align 4
  %call1129 = call %struct.command* @connect_async_list(%struct.command* %723, %struct.command* %725, i32 38)
  store %struct.command* %call1129, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1136

if.else1130:                                      ; preds = %sw.bb1118
  %726 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1131 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %726, i32 -3
  %command1132 = bitcast %union.YYSTYPE* %arrayidx1131 to %struct.command**
  %727 = load %struct.command*, %struct.command** %command1132, align 4
  %728 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1133 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %728, i32 0
  %command1134 = bitcast %union.YYSTYPE* %arrayidx1133 to %struct.command**
  %729 = load %struct.command*, %struct.command** %command1134, align 4
  %call1135 = call %struct.command* @command_connect(%struct.command* %727, %struct.command* %729, i32 38)
  store %struct.command* %call1135, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1136

if.end1136:                                       ; preds = %if.else1130, %if.then1124
  br label %sw.epilog

sw.bb1137:                                        ; preds = %if.end129
  %730 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1138 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %730, i32 -3
  %command1139 = bitcast %union.YYSTYPE* %arrayidx1138 to %struct.command**
  %731 = load %struct.command*, %struct.command** %command1139, align 4
  %732 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1140 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %732, i32 0
  %command1141 = bitcast %union.YYSTYPE* %arrayidx1140 to %struct.command**
  %733 = load %struct.command*, %struct.command** %command1141, align 4
  %call1142 = call %struct.command* @command_connect(%struct.command* %731, %struct.command* %733, i32 59)
  store %struct.command* %call1142, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1143:                                        ; preds = %if.end129
  %734 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1144 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %734, i32 -3
  %command1145 = bitcast %union.YYSTYPE* %arrayidx1144 to %struct.command**
  %735 = load %struct.command*, %struct.command** %command1145, align 4
  %736 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1146 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %736, i32 0
  %command1147 = bitcast %union.YYSTYPE* %arrayidx1146 to %struct.command**
  %737 = load %struct.command*, %struct.command** %command1147, align 4
  %call1148 = call %struct.command* @command_connect(%struct.command* %735, %struct.command* %737, i32 59)
  store %struct.command* %call1148, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1149:                                        ; preds = %if.end129
  %738 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1150 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %738, i32 0
  %command1151 = bitcast %union.YYSTYPE* %arrayidx1150 to %struct.command**
  %739 = load %struct.command*, %struct.command** %command1151, align 4
  store %struct.command* %739, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1152:                                        ; preds = %if.end129
  store i32 10, i32* bitcast (%union.YYSTYPE* @yyval to i32*), align 4
  br label %sw.epilog

sw.bb1153:                                        ; preds = %if.end129
  store i32 59, i32* bitcast (%union.YYSTYPE* @yyval to i32*), align 4
  br label %sw.epilog

sw.bb1154:                                        ; preds = %if.end129
  store i32 303, i32* bitcast (%union.YYSTYPE* @yyval to i32*), align 4
  br label %sw.epilog

sw.bb1155:                                        ; preds = %if.end129
  %740 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1156 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %740, i32 0
  %command1157 = bitcast %union.YYSTYPE* %arrayidx1156 to %struct.command**
  %741 = load %struct.command*, %struct.command** %command1157, align 4
  store %struct.command* %741, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %742 = load i32, i32* @need_here_doc, align 4
  %tobool1158 = icmp ne i32 %742, 0
  br i1 %tobool1158, label %if.then1159, label %if.end1160

if.then1159:                                      ; preds = %sw.bb1155
  call void @gather_here_documents()
  br label %if.end1160

if.end1160:                                       ; preds = %if.then1159, %sw.bb1155
  %743 = load i32, i32* @parser_state, align 4
  %and1161 = and i32 %743, 64
  %tobool1162 = icmp ne i32 %and1161, 0
  br i1 %tobool1162, label %land.lhs.true1163, label %if.end1169

land.lhs.true1163:                                ; preds = %if.end1160
  %744 = load i32, i32* @current_token, align 4
  %745 = load i32, i32* @shell_eof_token, align 4
  %cmp1164 = icmp eq i32 %744, %745
  br i1 %cmp1164, label %if.then1166, label %if.end1169

if.then1166:                                      ; preds = %land.lhs.true1163
  %746 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1167 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %746, i32 0
  %command1168 = bitcast %union.YYSTYPE* %arrayidx1167 to %struct.command**
  %747 = load %struct.command*, %struct.command** %command1168, align 4
  store %struct.command* %747, %struct.command** @global_command, align 4
  store i32 0, i32* @eof_encountered, align 4
  call void @rewind_input_string()
  br label %yyaccept

if.end1169:                                       ; preds = %land.lhs.true1163, %if.end1160
  br label %sw.epilog

sw.bb1170:                                        ; preds = %if.end129
  %748 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1171 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %748, i32 -1
  %command1172 = bitcast %union.YYSTYPE* %arrayidx1171 to %struct.command**
  %749 = load %struct.command*, %struct.command** %command1172, align 4
  %type1173 = getelementptr inbounds %struct.command, %struct.command* %749, i32 0, i32 0
  %750 = load i32, i32* %type1173, align 4
  %cmp1174 = icmp eq i32 %750, 6
  br i1 %cmp1174, label %if.then1176, label %if.else1180

if.then1176:                                      ; preds = %sw.bb1170
  %751 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1177 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %751, i32 -1
  %command1178 = bitcast %union.YYSTYPE* %arrayidx1177 to %struct.command**
  %752 = load %struct.command*, %struct.command** %command1178, align 4
  %call1179 = call %struct.command* @connect_async_list(%struct.command* %752, %struct.command* null, i32 38)
  store %struct.command* %call1179, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1184

if.else1180:                                      ; preds = %sw.bb1170
  %753 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1181 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %753, i32 -1
  %command1182 = bitcast %union.YYSTYPE* %arrayidx1181 to %struct.command**
  %754 = load %struct.command*, %struct.command** %command1182, align 4
  %call1183 = call %struct.command* @command_connect(%struct.command* %754, %struct.command* null, i32 38)
  store %struct.command* %call1183, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1184

if.end1184:                                       ; preds = %if.else1180, %if.then1176
  %755 = load i32, i32* @need_here_doc, align 4
  %tobool1185 = icmp ne i32 %755, 0
  br i1 %tobool1185, label %if.then1186, label %if.end1187

if.then1186:                                      ; preds = %if.end1184
  call void @gather_here_documents()
  br label %if.end1187

if.end1187:                                       ; preds = %if.then1186, %if.end1184
  %756 = load i32, i32* @parser_state, align 4
  %and1188 = and i32 %756, 64
  %tobool1189 = icmp ne i32 %and1188, 0
  br i1 %tobool1189, label %land.lhs.true1190, label %if.end1196

land.lhs.true1190:                                ; preds = %if.end1187
  %757 = load i32, i32* @current_token, align 4
  %758 = load i32, i32* @shell_eof_token, align 4
  %cmp1191 = icmp eq i32 %757, %758
  br i1 %cmp1191, label %if.then1193, label %if.end1196

if.then1193:                                      ; preds = %land.lhs.true1190
  %759 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1194 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %759, i32 -1
  %command1195 = bitcast %union.YYSTYPE* %arrayidx1194 to %struct.command**
  %760 = load %struct.command*, %struct.command** %command1195, align 4
  store %struct.command* %760, %struct.command** @global_command, align 4
  store i32 0, i32* @eof_encountered, align 4
  call void @rewind_input_string()
  br label %yyaccept

if.end1196:                                       ; preds = %land.lhs.true1190, %if.end1187
  br label %sw.epilog

sw.bb1197:                                        ; preds = %if.end129
  %761 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1198 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %761, i32 -1
  %command1199 = bitcast %union.YYSTYPE* %arrayidx1198 to %struct.command**
  %762 = load %struct.command*, %struct.command** %command1199, align 4
  store %struct.command* %762, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %763 = load i32, i32* @need_here_doc, align 4
  %tobool1200 = icmp ne i32 %763, 0
  br i1 %tobool1200, label %if.then1201, label %if.end1202

if.then1201:                                      ; preds = %sw.bb1197
  call void @gather_here_documents()
  br label %if.end1202

if.end1202:                                       ; preds = %if.then1201, %sw.bb1197
  %764 = load i32, i32* @parser_state, align 4
  %and1203 = and i32 %764, 64
  %tobool1204 = icmp ne i32 %and1203, 0
  br i1 %tobool1204, label %land.lhs.true1205, label %if.end1211

land.lhs.true1205:                                ; preds = %if.end1202
  %765 = load i32, i32* @current_token, align 4
  %766 = load i32, i32* @shell_eof_token, align 4
  %cmp1206 = icmp eq i32 %765, %766
  br i1 %cmp1206, label %if.then1208, label %if.end1211

if.then1208:                                      ; preds = %land.lhs.true1205
  %767 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1209 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %767, i32 -1
  %command1210 = bitcast %union.YYSTYPE* %arrayidx1209 to %struct.command**
  %768 = load %struct.command*, %struct.command** %command1210, align 4
  store %struct.command* %768, %struct.command** @global_command, align 4
  store i32 0, i32* @eof_encountered, align 4
  call void @rewind_input_string()
  br label %yyaccept

if.end1211:                                       ; preds = %land.lhs.true1205, %if.end1202
  br label %sw.epilog

sw.bb1212:                                        ; preds = %if.end129
  %769 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1213 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %769, i32 -3
  %command1214 = bitcast %union.YYSTYPE* %arrayidx1213 to %struct.command**
  %770 = load %struct.command*, %struct.command** %command1214, align 4
  %771 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1215 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %771, i32 0
  %command1216 = bitcast %union.YYSTYPE* %arrayidx1215 to %struct.command**
  %772 = load %struct.command*, %struct.command** %command1216, align 4
  %call1217 = call %struct.command* @command_connect(%struct.command* %770, %struct.command* %772, i32 287)
  store %struct.command* %call1217, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1218:                                        ; preds = %if.end129
  %773 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1219 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %773, i32 -3
  %command1220 = bitcast %union.YYSTYPE* %arrayidx1219 to %struct.command**
  %774 = load %struct.command*, %struct.command** %command1220, align 4
  %775 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1221 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %775, i32 0
  %command1222 = bitcast %union.YYSTYPE* %arrayidx1221 to %struct.command**
  %776 = load %struct.command*, %struct.command** %command1222, align 4
  %call1223 = call %struct.command* @command_connect(%struct.command* %774, %struct.command* %776, i32 288)
  store %struct.command* %call1223, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1224:                                        ; preds = %if.end129
  %777 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1225 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %777, i32 -2
  %command1226 = bitcast %union.YYSTYPE* %arrayidx1225 to %struct.command**
  %778 = load %struct.command*, %struct.command** %command1226, align 4
  %type1227 = getelementptr inbounds %struct.command, %struct.command* %778, i32 0, i32 0
  %779 = load i32, i32* %type1227, align 4
  %cmp1228 = icmp eq i32 %779, 6
  br i1 %cmp1228, label %if.then1230, label %if.else1236

if.then1230:                                      ; preds = %sw.bb1224
  %780 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1231 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %780, i32 -2
  %command1232 = bitcast %union.YYSTYPE* %arrayidx1231 to %struct.command**
  %781 = load %struct.command*, %struct.command** %command1232, align 4
  %782 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1233 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %782, i32 0
  %command1234 = bitcast %union.YYSTYPE* %arrayidx1233 to %struct.command**
  %783 = load %struct.command*, %struct.command** %command1234, align 4
  %call1235 = call %struct.command* @connect_async_list(%struct.command* %781, %struct.command* %783, i32 38)
  store %struct.command* %call1235, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1242

if.else1236:                                      ; preds = %sw.bb1224
  %784 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1237 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %784, i32 -2
  %command1238 = bitcast %union.YYSTYPE* %arrayidx1237 to %struct.command**
  %785 = load %struct.command*, %struct.command** %command1238, align 4
  %786 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1239 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %786, i32 0
  %command1240 = bitcast %union.YYSTYPE* %arrayidx1239 to %struct.command**
  %787 = load %struct.command*, %struct.command** %command1240, align 4
  %call1241 = call %struct.command* @command_connect(%struct.command* %785, %struct.command* %787, i32 38)
  store %struct.command* %call1241, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %if.end1242

if.end1242:                                       ; preds = %if.else1236, %if.then1230
  br label %sw.epilog

sw.bb1243:                                        ; preds = %if.end129
  %788 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1244 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %788, i32 -2
  %command1245 = bitcast %union.YYSTYPE* %arrayidx1244 to %struct.command**
  %789 = load %struct.command*, %struct.command** %command1245, align 4
  %790 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1246 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %790, i32 0
  %command1247 = bitcast %union.YYSTYPE* %arrayidx1246 to %struct.command**
  %791 = load %struct.command*, %struct.command** %command1247, align 4
  %call1248 = call %struct.command* @command_connect(%struct.command* %789, %struct.command* %791, i32 59)
  store %struct.command* %call1248, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1249:                                        ; preds = %if.end129
  %792 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1250 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %792, i32 0
  %command1251 = bitcast %union.YYSTYPE* %arrayidx1250 to %struct.command**
  %793 = load %struct.command*, %struct.command** %command1251, align 4
  store %struct.command* %793, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1252:                                        ; preds = %if.end129
  %794 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1253 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %794, i32 0
  %command1254 = bitcast %union.YYSTYPE* %arrayidx1253 to %struct.command**
  %795 = load %struct.command*, %struct.command** %command1254, align 4
  store %struct.command* %795, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1255:                                        ; preds = %if.end129
  %796 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1256 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %796, i32 0
  %command1257 = bitcast %union.YYSTYPE* %arrayidx1256 to %struct.command**
  %797 = load %struct.command*, %struct.command** %command1257, align 4
  %tobool1258 = icmp ne %struct.command* %797, null
  br i1 %tobool1258, label %if.then1259, label %if.end1263

if.then1259:                                      ; preds = %sw.bb1255
  %798 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1260 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %798, i32 0
  %command1261 = bitcast %union.YYSTYPE* %arrayidx1260 to %struct.command**
  %799 = load %struct.command*, %struct.command** %command1261, align 4
  %flags1262 = getelementptr inbounds %struct.command, %struct.command* %799, i32 0, i32 1
  %800 = load i32, i32* %flags1262, align 4
  %xor = xor i32 %800, 4
  store i32 %xor, i32* %flags1262, align 4
  br label %if.end1263

if.end1263:                                       ; preds = %if.then1259, %sw.bb1255
  %801 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1264 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %801, i32 0
  %command1265 = bitcast %union.YYSTYPE* %arrayidx1264 to %struct.command**
  %802 = load %struct.command*, %struct.command** %command1265, align 4
  store %struct.command* %802, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1266:                                        ; preds = %if.end129
  %803 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1267 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %803, i32 0
  %command1268 = bitcast %union.YYSTYPE* %arrayidx1267 to %struct.command**
  %804 = load %struct.command*, %struct.command** %command1268, align 4
  %tobool1269 = icmp ne %struct.command* %804, null
  br i1 %tobool1269, label %if.then1270, label %if.end1277

if.then1270:                                      ; preds = %sw.bb1266
  %805 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1271 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %805, i32 -1
  %number1272 = bitcast %union.YYSTYPE* %arrayidx1271 to i32*
  %806 = load i32, i32* %number1272, align 4
  %807 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1273 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %807, i32 0
  %command1274 = bitcast %union.YYSTYPE* %arrayidx1273 to %struct.command**
  %808 = load %struct.command*, %struct.command** %command1274, align 4
  %flags1275 = getelementptr inbounds %struct.command, %struct.command* %808, i32 0, i32 1
  %809 = load i32, i32* %flags1275, align 4
  %or1276 = or i32 %809, %806
  store i32 %or1276, i32* %flags1275, align 4
  br label %if.end1277

if.end1277:                                       ; preds = %if.then1270, %sw.bb1266
  %810 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1278 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %810, i32 0
  %command1279 = bitcast %union.YYSTYPE* %arrayidx1278 to %struct.command**
  %811 = load %struct.command*, %struct.command** %command1279, align 4
  store %struct.command* %811, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1280:                                        ; preds = %if.end129
  %word1281 = getelementptr inbounds %struct.element, %struct.element* %x, i32 0, i32 0
  store %struct.word_desc* null, %struct.word_desc** %word1281, align 4
  %redirect1282 = getelementptr inbounds %struct.element, %struct.element* %x, i32 0, i32 1
  store %struct.redirect* null, %struct.redirect** %redirect1282, align 4
  %call1283 = call %struct.command* @make_simple_command(%struct.element* byval align 4 %x, %struct.command* null)
  store %struct.command* %call1283, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %812 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1284 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %812, i32 -1
  %number1285 = bitcast %union.YYSTYPE* %arrayidx1284 to i32*
  %813 = load i32, i32* %number1285, align 4
  %814 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags1286 = getelementptr inbounds %struct.command, %struct.command* %814, i32 0, i32 1
  %815 = load i32, i32* %flags1286, align 4
  %or1287 = or i32 %815, %813
  store i32 %or1287, i32* %flags1286, align 4
  %816 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1288 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %816, i32 0
  %number1289 = bitcast %union.YYSTYPE* %arrayidx1288 to i32*
  %817 = load i32, i32* %number1289, align 4
  %cmp1290 = icmp eq i32 %817, 10
  br i1 %cmp1290, label %if.then1292, label %if.else1293

if.then1292:                                      ; preds = %sw.bb1280
  store i32 10, i32* @token_to_read, align 4
  br label %if.end1300

if.else1293:                                      ; preds = %sw.bb1280
  %818 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1294 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %818, i32 0
  %number1295 = bitcast %union.YYSTYPE* %arrayidx1294 to i32*
  %819 = load i32, i32* %number1295, align 4
  %cmp1296 = icmp eq i32 %819, 59
  br i1 %cmp1296, label %if.then1298, label %if.end1299

if.then1298:                                      ; preds = %if.else1293
  store i32 59, i32* @token_to_read, align 4
  br label %if.end1299

if.end1299:                                       ; preds = %if.then1298, %if.else1293
  br label %if.end1300

if.end1300:                                       ; preds = %if.end1299, %if.then1292
  br label %sw.epilog

sw.bb1301:                                        ; preds = %if.end129
  %word1303 = getelementptr inbounds %struct.element, %struct.element* %x1302, i32 0, i32 0
  store %struct.word_desc* null, %struct.word_desc** %word1303, align 4
  %redirect1304 = getelementptr inbounds %struct.element, %struct.element* %x1302, i32 0, i32 1
  store %struct.redirect* null, %struct.redirect** %redirect1304, align 4
  %call1305 = call %struct.command* @make_simple_command(%struct.element* byval align 4 %x1302, %struct.command* null)
  store %struct.command* %call1305, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %820 = load %struct.command*, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  %flags1306 = getelementptr inbounds %struct.command, %struct.command* %820, i32 0, i32 1
  %821 = load i32, i32* %flags1306, align 4
  %or1307 = or i32 %821, 4
  store i32 %or1307, i32* %flags1306, align 4
  %822 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1308 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %822, i32 0
  %number1309 = bitcast %union.YYSTYPE* %arrayidx1308 to i32*
  %823 = load i32, i32* %number1309, align 4
  %cmp1310 = icmp eq i32 %823, 10
  br i1 %cmp1310, label %if.then1312, label %if.end1313

if.then1312:                                      ; preds = %sw.bb1301
  store i32 10, i32* @token_to_read, align 4
  br label %if.end1313

if.end1313:                                       ; preds = %if.then1312, %sw.bb1301
  %824 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1314 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %824, i32 0
  %number1315 = bitcast %union.YYSTYPE* %arrayidx1314 to i32*
  %825 = load i32, i32* %number1315, align 4
  %cmp1316 = icmp eq i32 %825, 59
  br i1 %cmp1316, label %if.then1318, label %if.end1319

if.then1318:                                      ; preds = %if.end1313
  store i32 59, i32* @token_to_read, align 4
  br label %if.end1319

if.end1319:                                       ; preds = %if.then1318, %if.end1313
  br label %sw.epilog

sw.bb1320:                                        ; preds = %if.end129
  %826 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1321 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %826, i32 -3
  %command1322 = bitcast %union.YYSTYPE* %arrayidx1321 to %struct.command**
  %827 = load %struct.command*, %struct.command** %command1322, align 4
  %828 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1323 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %828, i32 0
  %command1324 = bitcast %union.YYSTYPE* %arrayidx1323 to %struct.command**
  %829 = load %struct.command*, %struct.command** %command1324, align 4
  %call1325 = call %struct.command* @command_connect(%struct.command* %827, %struct.command* %829, i32 124)
  store %struct.command* %call1325, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1326:                                        ; preds = %if.end129
  %830 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1328 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %830, i32 -3
  %command1329 = bitcast %union.YYSTYPE* %arrayidx1328 to %struct.command**
  %831 = load %struct.command*, %struct.command** %command1329, align 4
  %type1330 = getelementptr inbounds %struct.command, %struct.command* %831, i32 0, i32 0
  %832 = load i32, i32* %type1330, align 4
  %cmp1331 = icmp eq i32 %832, 4
  br i1 %cmp1331, label %cond.true1333, label %cond.false1336

cond.true1333:                                    ; preds = %sw.bb1326
  %833 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1334 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %833, i32 -3
  %command1335 = bitcast %union.YYSTYPE* %arrayidx1334 to %struct.command**
  %834 = load %struct.command*, %struct.command** %command1335, align 4
  %value = getelementptr inbounds %struct.command, %struct.command* %834, i32 0, i32 4
  %Simple = bitcast %union.anon* %value to %struct.simple_com**
  %835 = load %struct.simple_com*, %struct.simple_com** %Simple, align 4
  %836 = bitcast %struct.simple_com* %835 to %struct.command*
  br label %cond.end1339

cond.false1336:                                   ; preds = %sw.bb1326
  %837 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1337 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %837, i32 -3
  %command1338 = bitcast %union.YYSTYPE* %arrayidx1337 to %struct.command**
  %838 = load %struct.command*, %struct.command** %command1338, align 4
  br label %cond.end1339

cond.end1339:                                     ; preds = %cond.false1336, %cond.true1333
  %cond1340 = phi %struct.command* [ %836, %cond.true1333 ], [ %838, %cond.false1336 ]
  store %struct.command* %cond1340, %struct.command** %tc1327, align 4
  %dest = bitcast %union.REDIRECTEE* %sd to i32*
  store i32 2, i32* %dest, align 4
  %dest1341 = bitcast %union.REDIRECTEE* %rd to i32*
  store i32 1, i32* %dest1341, align 4
  %call1342 = call %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4 %sd, i32 7, %union.REDIRECTEE* byval align 4 %rd, i32 0)
  store %struct.redirect* %call1342, %struct.redirect** %r, align 4
  %839 = load %struct.command*, %struct.command** %tc1327, align 4
  %redirects1343 = getelementptr inbounds %struct.command, %struct.command* %839, i32 0, i32 3
  %840 = load %struct.redirect*, %struct.redirect** %redirects1343, align 4
  %tobool1344 = icmp ne %struct.redirect* %840, null
  br i1 %tobool1344, label %if.then1345, label %if.else1356

if.then1345:                                      ; preds = %cond.end1339
  %841 = load %struct.command*, %struct.command** %tc1327, align 4
  %redirects1347 = getelementptr inbounds %struct.command, %struct.command* %841, i32 0, i32 3
  %842 = load %struct.redirect*, %struct.redirect** %redirects1347, align 4
  store %struct.redirect* %842, %struct.redirect** %t1346, align 4
  br label %for.cond1348

for.cond1348:                                     ; preds = %for.inc1352, %if.then1345
  %843 = load %struct.redirect*, %struct.redirect** %t1346, align 4
  %next1349 = getelementptr inbounds %struct.redirect, %struct.redirect* %843, i32 0, i32 0
  %844 = load %struct.redirect*, %struct.redirect** %next1349, align 4
  %tobool1350 = icmp ne %struct.redirect* %844, null
  br i1 %tobool1350, label %for.body1351, label %for.end1354

for.body1351:                                     ; preds = %for.cond1348
  br label %for.inc1352

for.inc1352:                                      ; preds = %for.body1351
  %845 = load %struct.redirect*, %struct.redirect** %t1346, align 4
  %next1353 = getelementptr inbounds %struct.redirect, %struct.redirect* %845, i32 0, i32 0
  %846 = load %struct.redirect*, %struct.redirect** %next1353, align 4
  store %struct.redirect* %846, %struct.redirect** %t1346, align 4
  br label %for.cond1348

for.end1354:                                      ; preds = %for.cond1348
  %847 = load %struct.redirect*, %struct.redirect** %r, align 4
  %848 = load %struct.redirect*, %struct.redirect** %t1346, align 4
  %next1355 = getelementptr inbounds %struct.redirect, %struct.redirect* %848, i32 0, i32 0
  store %struct.redirect* %847, %struct.redirect** %next1355, align 4
  br label %if.end1358

if.else1356:                                      ; preds = %cond.end1339
  %849 = load %struct.redirect*, %struct.redirect** %r, align 4
  %850 = load %struct.command*, %struct.command** %tc1327, align 4
  %redirects1357 = getelementptr inbounds %struct.command, %struct.command* %850, i32 0, i32 3
  store %struct.redirect* %849, %struct.redirect** %redirects1357, align 4
  br label %if.end1358

if.end1358:                                       ; preds = %if.else1356, %for.end1354
  %851 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1359 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %851, i32 -3
  %command1360 = bitcast %union.YYSTYPE* %arrayidx1359 to %struct.command**
  %852 = load %struct.command*, %struct.command** %command1360, align 4
  %853 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1361 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %853, i32 0
  %command1362 = bitcast %union.YYSTYPE* %arrayidx1361 to %struct.command**
  %854 = load %struct.command*, %struct.command** %command1362, align 4
  %call1363 = call %struct.command* @command_connect(%struct.command* %852, %struct.command* %854, i32 124)
  store %struct.command* %call1363, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1364:                                        ; preds = %if.end129
  %855 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %arrayidx1365 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %855, i32 0
  %command1366 = bitcast %union.YYSTYPE* %arrayidx1365 to %struct.command**
  %856 = load %struct.command*, %struct.command** %command1366, align 4
  store %struct.command* %856, %struct.command** bitcast (%union.YYSTYPE* @yyval to %struct.command**), align 4
  br label %sw.epilog

sw.bb1367:                                        ; preds = %if.end129
  store i32 128, i32* bitcast (%union.YYSTYPE* @yyval to i32*), align 4
  br label %sw.epilog

sw.bb1368:                                        ; preds = %if.end129
  store i32 384, i32* bitcast (%union.YYSTYPE* @yyval to i32*), align 4
  br label %sw.epilog

sw.bb1369:                                        ; preds = %if.end129
  store i32 384, i32* bitcast (%union.YYSTYPE* @yyval to i32*), align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end129, %sw.bb1369, %sw.bb1368, %sw.bb1367, %sw.bb1364, %if.end1358, %sw.bb1320, %if.end1319, %if.end1300, %if.end1277, %if.end1263, %sw.bb1252, %sw.bb1249, %sw.bb1243, %if.end1242, %sw.bb1218, %sw.bb1212, %if.end1211, %if.end1196, %if.end1169, %sw.bb1154, %sw.bb1153, %sw.bb1152, %sw.bb1149, %sw.bb1143, %sw.bb1137, %if.end1136, %sw.bb1112, %sw.bb1106, %if.end1105, %sw.bb1089, %if.end1088, %sw.bb1077, %sw.bb1073, %sw.bb1061, %sw.bb1054, %sw.bb1042, %sw.bb1035, %sw.bb1027, %sw.bb1024, %sw.bb1020, %sw.bb1014, %sw.bb1010, %sw.bb1004, %sw.bb996, %sw.bb988, %sw.bb980, %sw.bb974, %sw.bb971, %sw.bb967, %sw.bb963, %sw.bb955, %sw.bb947, %sw.bb941, %sw.bb934, %if.end925, %sw.bb893, %if.end887, %sw.bb858, %sw.bb853, %if.end850, %sw.bb824, %sw.bb818, %sw.bb812, %sw.bb806, %if.end805, %if.end793, %if.end782, %if.end772, %if.end743, %if.end714, %if.end700, %if.end686, %if.end672, %if.end658, %if.end647, %if.end636, %if.end625, %if.end614, %if.end602, %if.end590, %if.end561, %if.end536, %if.end522, %if.end508, %if.end494, %sw.bb478, %sw.bb475, %sw.bb472, %sw.bb469, %sw.bb466, %sw.bb463, %sw.bb460, %sw.bb454, %sw.bb448, %sw.bb445, %sw.bb442, %sw.bb439, %sw.bb436, %if.end433, %sw.bb409, %sw.bb405, %sw.bb399, %sw.bb396, %for.end, %sw.bb382, %sw.bb380, %sw.bb377, %sw.bb374, %sw.bb370, %sw.bb366, %sw.bb362, %sw.bb358, %sw.bb356, %sw.bb352, %sw.bb348, %sw.bb346, %sw.bb340, %sw.bb334, %sw.bb330, %sw.bb324, %sw.bb318, %sw.bb314, %sw.bb308, %sw.bb302, %sw.bb298, %sw.bb292, %sw.bb286, %sw.bb282, %sw.bb276, %sw.bb270, %sw.bb266, %sw.bb260, %sw.bb254, %sw.bb250, %sw.bb244, %sw.bb238, %sw.bb234, %sw.bb228, %sw.bb222, %sw.bb218, %sw.bb212, %sw.bb206, %sw.bb202, %sw.bb196, %sw.bb190, %sw.bb186, %sw.bb180, %sw.bb174, %sw.bb168, %sw.bb163, %sw.bb159, %sw.bb155, %sw.bb150, %sw.bb147
  %857 = load i32, i32* %yym, align 4
  %858 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %idx.neg = sub i32 0, %857
  %add.ptr = getelementptr inbounds i16, i16* %858, i32 %idx.neg
  store i16* %add.ptr, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %859 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %860 = load i16, i16* %859, align 2
  %conv1370 = sext i16 %860 to i32
  store i32 %conv1370, i32* %yystate, align 4
  %861 = load i32, i32* %yym, align 4
  %862 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %idx.neg1371 = sub i32 0, %861
  %add.ptr1372 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %862, i32 %idx.neg1371
  store %union.YYSTYPE* %add.ptr1372, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %863 = load i32, i32* %yyn, align 4
  %arrayidx1373 = getelementptr inbounds [167 x i16], [167 x i16]* @yylhs, i32 0, i32 %863
  %864 = load i16, i16* %arrayidx1373, align 2
  %conv1374 = sext i16 %864 to i32
  store i32 %conv1374, i32* %yym, align 4
  %865 = load i32, i32* %yystate, align 4
  %cmp1375 = icmp eq i32 %865, 0
  br i1 %cmp1375, label %land.lhs.true1377, label %if.end1396

land.lhs.true1377:                                ; preds = %sw.epilog
  %866 = load i32, i32* %yym, align 4
  %cmp1378 = icmp eq i32 %866, 0
  br i1 %cmp1378, label %if.then1380, label %if.end1396

if.then1380:                                      ; preds = %land.lhs.true1377
  store i32 34, i32* %yystate, align 4
  %867 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %incdec.ptr1381 = getelementptr inbounds i16, i16* %867, i32 1
  store i16* %incdec.ptr1381, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  store i16 34, i16* %incdec.ptr1381, align 2
  %868 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %incdec.ptr1382 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %868, i32 1
  store %union.YYSTYPE* %incdec.ptr1382, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %869 = bitcast %union.YYSTYPE* %incdec.ptr1382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %869, i8* bitcast (%union.YYSTYPE* @yyval to i8*), i32 8, i32 4, i1 false)
  %870 = load i32, i32* @yychar, align 4
  %cmp1383 = icmp slt i32 %870, 0
  br i1 %cmp1383, label %if.then1385, label %if.end1391

if.then1385:                                      ; preds = %if.then1380
  %call1386 = call i32 @yylex()
  store i32 %call1386, i32* @yychar, align 4
  %871 = load i32, i32* @yychar, align 4
  %cmp1387 = icmp slt i32 %871, 0
  br i1 %cmp1387, label %if.then1389, label %if.end1390

if.then1389:                                      ; preds = %if.then1385
  store i32 0, i32* @yychar, align 4
  br label %if.end1390

if.end1390:                                       ; preds = %if.then1389, %if.then1385
  br label %if.end1391

if.end1391:                                       ; preds = %if.end1390, %if.then1380
  %872 = load i32, i32* @yychar, align 4
  %cmp1392 = icmp eq i32 %872, 0
  br i1 %cmp1392, label %if.then1394, label %if.end1395

if.then1394:                                      ; preds = %if.end1391
  br label %yyaccept

if.end1395:                                       ; preds = %if.end1391
  br label %yyloop

if.end1396:                                       ; preds = %land.lhs.true1377, %sw.epilog
  %873 = load i32, i32* %yym, align 4
  %arrayidx1397 = getelementptr inbounds [37 x i16], [37 x i16]* @yygindex, i32 0, i32 %873
  %874 = load i16, i16* %arrayidx1397, align 2
  %conv1398 = sext i16 %874 to i32
  store i32 %conv1398, i32* %yyn, align 4
  %cmp1399 = icmp ne i32 %conv1398, 0
  br i1 %cmp1399, label %land.lhs.true1401, label %if.else1418

land.lhs.true1401:                                ; preds = %if.end1396
  %875 = load i32, i32* %yystate, align 4
  %876 = load i32, i32* %yyn, align 4
  %add1402 = add nsw i32 %876, %875
  store i32 %add1402, i32* %yyn, align 4
  %cmp1403 = icmp sge i32 %add1402, 0
  br i1 %cmp1403, label %land.lhs.true1405, label %if.else1418

land.lhs.true1405:                                ; preds = %land.lhs.true1401
  %877 = load i32, i32* %yyn, align 4
  %cmp1406 = icmp sle i32 %877, 1748
  br i1 %cmp1406, label %land.lhs.true1408, label %if.else1418

land.lhs.true1408:                                ; preds = %land.lhs.true1405
  %878 = load i32, i32* %yyn, align 4
  %arrayidx1409 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yycheck, i32 0, i32 %878
  %879 = load i16, i16* %arrayidx1409, align 2
  %conv1410 = sext i16 %879 to i32
  %880 = load i32, i32* %yystate, align 4
  %conv1411 = trunc i32 %880 to i16
  %conv1412 = sext i16 %conv1411 to i32
  %cmp1413 = icmp eq i32 %conv1410, %conv1412
  br i1 %cmp1413, label %if.then1415, label %if.else1418

if.then1415:                                      ; preds = %land.lhs.true1408
  %881 = load i32, i32* %yyn, align 4
  %arrayidx1416 = getelementptr inbounds [1749 x i16], [1749 x i16]* @yytable, i32 0, i32 %881
  %882 = load i16, i16* %arrayidx1416, align 2
  %conv1417 = sext i16 %882 to i32
  store i32 %conv1417, i32* %yystate, align 4
  br label %if.end1421

if.else1418:                                      ; preds = %land.lhs.true1408, %land.lhs.true1405, %land.lhs.true1401, %if.end1396
  %883 = load i32, i32* %yym, align 4
  %arrayidx1419 = getelementptr inbounds [37 x i16], [37 x i16]* @yydgoto, i32 0, i32 %883
  %884 = load i16, i16* %arrayidx1419, align 2
  %conv1420 = sext i16 %884 to i32
  store i32 %conv1420, i32* %yystate, align 4
  br label %if.end1421

if.end1421:                                       ; preds = %if.else1418, %if.then1415
  %885 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %886 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 3), align 4
  %cmp1422 = icmp uge i16* %885, %886
  br i1 %cmp1422, label %land.lhs.true1424, label %if.end1429

land.lhs.true1424:                                ; preds = %if.end1421
  %call1425 = call i32 @yygrowstack(%struct.YYSTACKDATA* @yystack)
  %cmp1426 = icmp eq i32 %call1425, -2
  br i1 %cmp1426, label %if.then1428, label %if.end1429

if.then1428:                                      ; preds = %land.lhs.true1424
  br label %yyoverflow

if.end1429:                                       ; preds = %land.lhs.true1424, %if.end1421
  %887 = load i32, i32* %yystate, align 4
  %conv1430 = trunc i32 %887 to i16
  %888 = load i16*, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  %incdec.ptr1431 = getelementptr inbounds i16, i16* %888, i32 1
  store i16* %incdec.ptr1431, i16** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 2), align 4
  store i16 %conv1430, i16* %incdec.ptr1431, align 2
  %889 = load %union.YYSTYPE*, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %incdec.ptr1432 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %889, i32 1
  store %union.YYSTYPE* %incdec.ptr1432, %union.YYSTYPE** getelementptr inbounds (%struct.YYSTACKDATA, %struct.YYSTACKDATA* @yystack, i32 0, i32 5), align 4
  %890 = bitcast %union.YYSTYPE* %incdec.ptr1432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %890, i8* bitcast (%union.YYSTYPE* @yyval to i8*), i32 8, i32 4, i1 false)
  br label %yyloop

yyoverflow:                                       ; preds = %if.then1428, %if.then103, %if.then39, %if.then
  %call1433 = call i32 @yyerror(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i32 0, i32 0))
  br label %yyabort

yyabort:                                          ; preds = %yyoverflow, %if.else145, %if.then120, %if.then112
  store i32 1, i32* %retval, align 4
  br label %return

yyaccept:                                         ; preds = %if.then1394, %if.then1208, %if.then1193, %if.then1166, %sw.bb146, %if.then144, %if.end138, %if.end132
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %yyaccept, %yyabort
  %891 = load i32, i32* %retval, align 4
  ret i32 %891
}

; Function Attrs: noinline nounwind
define internal i32 @yygrowstack(%struct.YYSTACKDATA* %data) #0 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.YYSTACKDATA*, align 4
  %i = alloca i32, align 4
  %newsize = alloca i32, align 4
  %newss = alloca i16*, align 4
  %newvs = alloca %union.YYSTYPE*, align 4
  store %struct.YYSTACKDATA* %data, %struct.YYSTACKDATA** %data.addr, align 4
  %0 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %stacksize = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %0, i32 0, i32 0
  %1 = load i32, i32* %stacksize, align 4
  store i32 %1, i32* %newsize, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 200, i32* %newsize, align 4
  br label %if.end7

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %newsize, align 4
  %cmp1 = icmp uge i32 %2, 10000
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  store i32 -2, i32* %retval, align 4
  br label %return

if.else3:                                         ; preds = %if.else
  %3 = load i32, i32* %newsize, align 4
  %mul = mul i32 %3, 2
  store i32 %mul, i32* %newsize, align 4
  %cmp4 = icmp ugt i32 %mul, 10000
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else3
  store i32 10000, i32* %newsize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else3
  br label %if.end6

if.end6:                                          ; preds = %if.end
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.then
  %4 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_mark = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %4, i32 0, i32 2
  %5 = load i16*, i16** %s_mark, align 4
  %6 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_base = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %6, i32 0, i32 1
  %7 = load i16*, i16** %s_base, align 4
  %sub.ptr.lhs.cast = ptrtoint i16* %5 to i32
  %sub.ptr.rhs.cast = ptrtoint i16* %7 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 2
  store i32 %sub.ptr.div, i32* %i, align 4
  %8 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_base8 = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %8, i32 0, i32 1
  %9 = load i16*, i16** %s_base8, align 4
  %10 = bitcast i16* %9 to i8*
  %11 = load i32, i32* %newsize, align 4
  %mul9 = mul i32 %11, 2
  %call = call i8* @realloc(i8* %10, i32 %mul9)
  %12 = bitcast i8* %call to i16*
  store i16* %12, i16** %newss, align 4
  %13 = load i16*, i16** %newss, align 4
  %cmp10 = icmp eq i16* %13, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end7
  store i32 -2, i32* %retval, align 4
  br label %return

if.end12:                                         ; preds = %if.end7
  %14 = load i16*, i16** %newss, align 4
  %15 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_base13 = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %15, i32 0, i32 1
  store i16* %14, i16** %s_base13, align 4
  %16 = load i16*, i16** %newss, align 4
  %17 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i16, i16* %16, i32 %17
  %18 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_mark14 = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %18, i32 0, i32 2
  store i16* %add.ptr, i16** %s_mark14, align 4
  %19 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %l_base = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %19, i32 0, i32 4
  %20 = load %union.YYSTYPE*, %union.YYSTYPE** %l_base, align 4
  %21 = bitcast %union.YYSTYPE* %20 to i8*
  %22 = load i32, i32* %newsize, align 4
  %mul15 = mul i32 %22, 8
  %call16 = call i8* @realloc(i8* %21, i32 %mul15)
  %23 = bitcast i8* %call16 to %union.YYSTYPE*
  store %union.YYSTYPE* %23, %union.YYSTYPE** %newvs, align 4
  %24 = load %union.YYSTYPE*, %union.YYSTYPE** %newvs, align 4
  %cmp17 = icmp eq %union.YYSTYPE* %24, null
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end12
  store i32 -2, i32* %retval, align 4
  br label %return

if.end19:                                         ; preds = %if.end12
  %25 = load %union.YYSTYPE*, %union.YYSTYPE** %newvs, align 4
  %26 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %l_base20 = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %26, i32 0, i32 4
  store %union.YYSTYPE* %25, %union.YYSTYPE** %l_base20, align 4
  %27 = load %union.YYSTYPE*, %union.YYSTYPE** %newvs, align 4
  %28 = load i32, i32* %i, align 4
  %add.ptr21 = getelementptr inbounds %union.YYSTYPE, %union.YYSTYPE* %27, i32 %28
  %29 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %l_mark = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %29, i32 0, i32 5
  store %union.YYSTYPE* %add.ptr21, %union.YYSTYPE** %l_mark, align 4
  %30 = load i32, i32* %newsize, align 4
  %31 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %stacksize22 = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %31, i32 0, i32 0
  store i32 %30, i32* %stacksize22, align 4
  %32 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_base23 = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %32, i32 0, i32 1
  %33 = load i16*, i16** %s_base23, align 4
  %34 = load i32, i32* %newsize, align 4
  %add.ptr24 = getelementptr inbounds i16, i16* %33, i32 %34
  %add.ptr25 = getelementptr inbounds i16, i16* %add.ptr24, i32 -1
  %35 = load %struct.YYSTACKDATA*, %struct.YYSTACKDATA** %data.addr, align 4
  %s_last = getelementptr inbounds %struct.YYSTACKDATA, %struct.YYSTACKDATA* %35, i32 0, i32 3
  store i16* %add.ptr25, i16** %s_last, align 4
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end19, %if.then18, %if.then11, %if.then2
  %36 = load i32, i32* %retval, align 4
  ret i32 %36
}

; Function Attrs: noinline nounwind
define internal i32 @yylex() #0 {
entry:
  %0 = load i32, i32* @interactive, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @current_token, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i32, i32* @current_token, align 4
  %cmp1 = icmp eq i32 %2, 10
  br i1 %cmp1, label %if.then, label %if.end19

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %3 = load i8**, i8*** @prompt_string_pointer, align 4
  %tobool2 = icmp ne i8** %3, null
  br i1 %tobool2, label %lor.lhs.false3, label %land.lhs.true5

lor.lhs.false3:                                   ; preds = %if.then
  %4 = load i8**, i8*** @prompt_string_pointer, align 4
  %cmp4 = icmp eq i8** %4, @ps1_prompt
  br i1 %cmp4, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %lor.lhs.false3, %if.then
  %5 = load i32, i32* @parse_and_execute_level, align 4
  %cmp6 = icmp eq i32 %5, 0
  br i1 %cmp6, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %call = call i32 @time_to_check_mail()
  %tobool8 = icmp ne i32 %call, 0
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %land.lhs.true7
  call void @check_mail()
  call void @reset_mail_timer()
  br label %if.end

if.end:                                           ; preds = %if.then9, %land.lhs.true7, %land.lhs.true5, %lor.lhs.false3
  %6 = load i32, i32* @token_to_read, align 4
  %cmp10 = icmp eq i32 %6, 0
  br i1 %cmp10, label %land.lhs.true11, label %if.end18

land.lhs.true11:                                  ; preds = %if.end
  %7 = load i32, i32* @interactive, align 4
  %tobool12 = icmp ne i32 %7, 0
  br i1 %tobool12, label %land.lhs.true13, label %if.end18

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %8 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp14 = icmp eq i32 %8, 1
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %land.lhs.true13
  %9 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp16 = icmp eq i32 %9, 2
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %lor.lhs.false15, %land.lhs.true13
  call void @prompt_again()
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %lor.lhs.false15, %land.lhs.true11, %if.end
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %lor.lhs.false, %entry
  %10 = load i32, i32* @token_before_that, align 4
  store i32 %10, i32* @two_tokens_ago, align 4
  %11 = load i32, i32* @last_read_token, align 4
  store i32 %11, i32* @token_before_that, align 4
  %12 = load i32, i32* @current_token, align 4
  store i32 %12, i32* @last_read_token, align 4
  %call20 = call i32 @read_token(i32 0)
  store i32 %call20, i32* @current_token, align 4
  %13 = load i32, i32* @parser_state, align 4
  %and = and i32 %13, 32768
  %tobool21 = icmp ne i32 %and, 0
  br i1 %tobool21, label %land.lhs.true22, label %if.end28

land.lhs.true22:                                  ; preds = %if.end19
  %14 = load i32, i32* @current_token, align 4
  %15 = load i32, i32* @shell_eof_token, align 4
  %cmp23 = icmp eq i32 %14, %15
  br i1 %cmp23, label %if.then24, label %if.end28

if.then24:                                        ; preds = %land.lhs.true22
  store i32 303, i32* @current_token, align 4
  %16 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp25 = icmp eq i32 %16, 3
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.then24
  call void @rewind_input_string()
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.then24
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %land.lhs.true22, %if.end19
  %17 = load i32, i32* @parser_state, align 4
  %and29 = and i32 %17, -32769
  store i32 %and29, i32* @parser_state, align 4
  %18 = load i32, i32* @current_token, align 4
  ret i32 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i32, i1) #2

; Function Attrs: noinline nounwind
define internal void @handle_eof_input_unit() #0 {
entry:
  %0 = load i32, i32* @interactive, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @EOF_Reached, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  store i32 0, i32* @EOF_Reached, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %2 = load i32, i32* @ignoreeof, align 4
  %tobool3 = icmp ne i32 %2, 0
  br i1 %tobool3, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %3 = load i32, i32* @eof_encountered, align 4
  %4 = load i32, i32* @eof_encountered_limit, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.then4
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call = call i8* @libintl_gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.108, i32 0, i32 0))
  %6 = load i32, i32* @login_shell, align 4
  %tobool6 = icmp ne i32 %6, 0
  %cond = select i1 %tobool6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0)
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %call, i8* %cond)
  %7 = load i32, i32* @eof_encountered, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* @eof_encountered, align 4
  store i32 10, i32* @current_token, align 4
  store i32 10, i32* @last_read_token, align 4
  store i8** null, i8*** @prompt_string_pointer, align 4
  call void @prompt_again()
  br label %if.end11

if.end8:                                          ; preds = %if.then4
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  call void @reset_parser()
  %call10 = call i32 @exit_builtin(%struct.word_list* null)
  br label %if.end11

if.else:                                          ; preds = %entry
  store i32 1, i32* @EOF_Reached, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then5, %if.else, %if.end9
  ret void
}

declare %struct.redirect* @make_redirection(%union.REDIRECTEE* byval align 4, i32, %union.REDIRECTEE* byval align 4, i32) #1

; Function Attrs: noinline nounwind
define internal void @push_heredoc(%struct.redirect* %r) #0 {
entry:
  %r.addr = alloca %struct.redirect*, align 4
  store %struct.redirect* %r, %struct.redirect** %r.addr, align 4
  %0 = load i32, i32* @need_here_doc, align 4
  %cmp = icmp sge i32 %0, 16
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 2, i32* @last_command_exit_value, align 4
  store i32 0, i32* @need_here_doc, align 4
  %call = call i8* @libintl_gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.111, i32 0, i32 0))
  call void @report_syntax_error(i8* %call)
  call void @reset_parser()
  %1 = load i32, i32* @last_command_exit_value, align 4
  call void @exit_shell(i32 %1) #5
  unreachable

if.end:                                           ; preds = %entry
  %2 = load %struct.redirect*, %struct.redirect** %r.addr, align 4
  %3 = load i32, i32* @need_here_doc, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @need_here_doc, align 4
  %arrayidx = getelementptr inbounds [16 x %struct.redirect*], [16 x %struct.redirect*]* @redir_stack, i32 0, i32 %3
  store %struct.redirect* %2, %struct.redirect** %arrayidx, align 4
  ret void
}

declare %struct.command* @make_simple_command(%struct.element* byval align 4, %struct.command*) #1

declare %struct.command* @clean_simple_command(%struct.command*) #1

declare %struct.command* @make_while_command(%struct.command*, %struct.command*) #1

declare %struct.command* @make_until_command(%struct.command*, %struct.command*) #1

declare %struct.command* @make_for_command(%struct.word_desc*, %struct.word_list*, %struct.command*, i32) #1

declare %struct.word_desc* @make_word(i8*) #1

declare %struct.command* @make_arith_for_command(%struct.word_list*, %struct.command*, i32) #1

declare %struct.command* @make_select_command(%struct.word_desc*, %struct.word_list*, %struct.command*, i32) #1

declare %struct.command* @make_case_command(%struct.word_desc*, %struct.pattern_list*, i32) #1

declare %struct.command* @make_function_def(%struct.word_desc*, %struct.command*, i32, i32) #1

declare %struct.command* @make_subshell_command(%struct.command*) #1

declare %struct.command* @make_coproc_command(i8*, %struct.command*) #1

declare %struct.command* @make_if_command(%struct.command*, %struct.command*, %struct.command*) #1

declare %struct.command* @make_group_command(%struct.command*) #1

declare %struct.command* @make_arith_command(%struct.word_list*) #1

declare %struct.pattern_list* @make_pattern_list(%struct.word_list*, %struct.command*) #1

declare %struct.command* @connect_async_list(%struct.command*, %struct.command*, i32) #1

declare %struct.command* @command_connect(%struct.command*, %struct.command*, i32) #1

; Function Attrs: noinline nounwind
define internal void @rewind_input_string() #0 {
entry:
  %xchars = alloca i32, align 4
  %0 = load i32, i32* @shell_input_line_len, align 4
  %1 = load i32, i32* @shell_input_line_index, align 4
  %sub = sub i32 %0, %1
  store i32 %sub, i32* %xchars, align 4
  %2 = load i8*, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 -1
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 10
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %xchars, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %xchars, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %xchars, align 4
  %6 = load i8*, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  %idx.neg = sub i32 0, %5
  %add.ptr = getelementptr inbounds i8, i8* %6, i32 %idx.neg
  store i8* %add.ptr, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  ret void
}

declare void @initialize_readline() #1

declare void @initialize_traps() #1

declare i32 @signal_is_ignored(i32) #1

declare void (i32)* @signal(i32, void (i32)*) #1

declare void @sigint_sighandler(i32) #1

declare i8* @readline(i8*) #1

declare void @termsig_handler(i32) #1

declare i32 @getc_with_restart(%struct._IO_FILE*) #1

declare i32 @ungetc_with_restart(i32, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind
define internal void @print_prompt() #0 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %1 = load i8*, i8** @current_decoded_prompt, align 4
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* %1)
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call1 = call i32 @fflush(%struct._IO_FILE* %2)
  ret void
}

declare void @throw_to_top_level() #1

; Function Attrs: noinline nounwind
define internal i32 @yy_getc() #0 {
entry:
  %0 = load i32 ()*, i32 ()** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 3), align 4
  %call = call i32 %0()
  ret i32 %call
}

declare void @clearerr(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind
define internal i32 @yy_ungetc(i32 %c) #0 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32 (i32)*, i32 (i32)** getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 4), align 4
  %1 = load i32, i32* %c.addr, align 4
  %call = call i32 %0(i32 %1)
  ret i32 %call
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare i32 @fflush(%struct._IO_FILE*) #1

declare void @parser_error(i32, i8*, ...) #1

; Function Attrs: noinline nounwind
define internal i8* @error_token_from_token(i32 %tok) #0 {
entry:
  %retval = alloca i8*, align 4
  %tok.addr = alloca i32, align 4
  %t = alloca i8*, align 4
  store i32 %tok, i32* %tok.addr, align 4
  %0 = load i32, i32* %tok.addr, align 4
  %call = call i8* @find_token_in_alist(i32 %0, %struct.STRING_INT_ALIST* getelementptr inbounds ([23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 0), i32 0)
  store i8* %call, i8** %t, align 4
  %tobool = icmp ne i8* %call, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %t, align 4
  store i8* %1, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %tok.addr, align 4
  %call1 = call i8* @find_token_in_alist(i32 %2, %struct.STRING_INT_ALIST* getelementptr inbounds ([31 x %struct.STRING_INT_ALIST], [31 x %struct.STRING_INT_ALIST]* @other_token_alist, i32 0, i32 0), i32 0)
  store i8* %call1, i8** %t, align 4
  %tobool2 = icmp ne i8* %call1, null
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %3 = load i8*, i8** %t, align 4
  store i8* %3, i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  store i8* null, i8** %t, align 4
  %4 = load i32, i32* @current_token, align 4
  switch i32 %4, label %sw.epilog [
    i32 280, label %sw.bb
    i32 281, label %sw.bb
    i32 283, label %sw.bb12
    i32 284, label %sw.bb14
    i32 285, label %sw.bb19
    i32 286, label %sw.bb24
  ]

sw.bb:                                            ; preds = %if.end4, %if.end4
  %5 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %tobool5 = icmp ne %struct.word_desc* %5, null
  br i1 %tobool5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %sw.bb
  %6 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %6, i32 0, i32 0
  %7 = load i8*, i8** %word, align 4
  %call7 = call i32 @strlen(i8* %7)
  %add = add i32 1, %call7
  %call8 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5882)
  %8 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word9 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %8, i32 0, i32 0
  %9 = load i8*, i8** %word9, align 4
  %call10 = call i8* @strcpy(i8* %call8, i8* %9)
  store i8* %call10, i8** %t, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then6, %sw.bb
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end4
  %10 = load i32, i32* bitcast (%union.YYSTYPE* @yylval to i32*), align 4
  %conv = sext i32 %10 to i64
  %call13 = call i8* @itos(i64 %conv)
  store i8* %call13, i8** %t, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end4
  %11 = load %struct.word_list*, %struct.word_list** bitcast (%union.YYSTYPE* @yylval to %struct.word_list**), align 4
  %tobool15 = icmp ne %struct.word_list* %11, null
  br i1 %tobool15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %sw.bb14
  %12 = load %struct.word_list*, %struct.word_list** bitcast (%union.YYSTYPE* @yylval to %struct.word_list**), align 4
  %call17 = call i8* @string_list(%struct.word_list* %12)
  store i8* %call17, i8** %t, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %sw.bb14
  br label %sw.epilog

sw.bb19:                                          ; preds = %if.end4
  %13 = load %struct.word_list*, %struct.word_list** bitcast (%union.YYSTYPE* @yylval to %struct.word_list**), align 4
  %tobool20 = icmp ne %struct.word_list* %13, null
  br i1 %tobool20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %sw.bb19
  %14 = load %struct.word_list*, %struct.word_list** bitcast (%union.YYSTYPE* @yylval to %struct.word_list**), align 4
  %call22 = call i8* @string_list_internal(%struct.word_list* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i32 0, i32 0))
  store i8* %call22, i8** %t, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %sw.bb19
  br label %sw.epilog

sw.bb24:                                          ; preds = %if.end4
  store i8* null, i8** %t, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end4, %sw.bb24, %if.end23, %if.end18, %sw.bb12, %if.end11
  %15 = load i8*, i8** %t, align 4
  store i8* %15, i8** %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then3, %if.then
  %16 = load i8*, i8** %retval, align 4
  ret i8* %16
}

declare i32 @ansic_shouldquote(i8*) #1

declare i8* @ansic_quote(i8*, i32, i32*) #1

declare i8* @libintl_gettext(i8*) #1

; Function Attrs: noinline nounwind
define internal void @print_offending_line() #0 {
entry:
  %msg = alloca i8*, align 4
  %token_end = alloca i32, align 4
  %0 = load i8*, i8** @shell_input_line, align 4
  %call = call i32 @strlen(i8* %0)
  %add = add i32 1, %call
  %call1 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5951)
  %1 = load i8*, i8** @shell_input_line, align 4
  %call2 = call i8* @strcpy(i8* %call1, i8* %1)
  store i8* %call2, i8** %msg, align 4
  %2 = load i8*, i8** %msg, align 4
  %call3 = call i32 @strlen(i8* %2)
  store i32 %call3, i32* %token_end, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %token_end, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %msg, align 4
  %5 = load i32, i32* %token_end, align 4
  %sub = sub nsw i32 %5, 1
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %sub
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv, 10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %7, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %8 = load i8*, i8** %msg, align 4
  %9 = load i32, i32* %token_end, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %token_end, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i32 %dec
  store i8 0, i8* %arrayidx5, align 1
  br label %while.cond

while.end:                                        ; preds = %land.end
  %10 = load i32, i32* @line_number, align 4
  %11 = load i8*, i8** %msg, align 4
  call void (i32, i8*, ...) @parser_error(i32 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i8* %11)
  %12 = load i8*, i8** %msg, align 4
  call void @sh_xfree(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5957)
  ret void
}

; Function Attrs: noinline nounwind
define internal i8* @error_token_from_text() #0 {
entry:
  %msg = alloca i8*, align 4
  %t = alloca i8*, align 4
  %token_end = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = load i8*, i8** @shell_input_line, align 4
  store i8* %0, i8** %t, align 4
  %1 = load i32, i32* @shell_input_line_index, align 4
  store i32 %1, i32* %i, align 4
  store i32 0, i32* %token_end, align 4
  store i8* null, i8** %msg, align 4
  %2 = load i32, i32* %i, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %t, align 4
  %4 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 %4
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %i, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %7 = load i32, i32* %i, align 4
  %tobool2 = icmp ne i32 %7, 0
  br i1 %tobool2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %8 = load i8*, i8** %t, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %10 to i32
  %cmp5 = icmp eq i32 %conv4, 32
  br i1 %cmp5, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %11 = load i8*, i8** %t, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i32 %12
  %13 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %13 to i32
  %cmp9 = icmp eq i32 %conv8, 9
  br i1 %cmp9, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %14 = load i8*, i8** %t, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %16 to i32
  %cmp13 = icmp eq i32 %conv12, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp13, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %17, %lor.end ]
  br i1 %18, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %19 = load i32, i32* %i, align 4
  %dec15 = add nsw i32 %19, -1
  store i32 %dec15, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %20 = load i32, i32* %i, align 4
  %tobool16 = icmp ne i32 %20, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %while.end
  %21 = load i32, i32* %i, align 4
  %add = add nsw i32 %21, 1
  store i32 %add, i32* %token_end, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %while.end
  br label %while.cond19

while.cond19:                                     ; preds = %while.body32, %if.end18
  %22 = load i32, i32* %i, align 4
  %tobool20 = icmp ne i32 %22, 0
  br i1 %tobool20, label %land.rhs21, label %land.end31

land.rhs21:                                       ; preds = %while.cond19
  %23 = load i8*, i8** %t, align 4
  %24 = load i32, i32* %i, align 4
  %arrayidx22 = getelementptr inbounds i8, i8* %23, i32 %24
  %25 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %25 to i32
  %tobool24 = icmp ne i32 %conv23, 0
  br i1 %tobool24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.rhs21
  %26 = load i8*, i8** %t, align 4
  %27 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i8, i8* %arrayidx25, align 1
  %conv26 = sext i8 %28 to i32
  %call = call i8* @mbschr(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i32 0, i32 0), i32 %conv26)
  %cmp27 = icmp ne i8* %call, null
  %conv28 = zext i1 %cmp27 to i32
  br label %cond.end

cond.false:                                       ; preds = %land.rhs21
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv28, %cond.true ], [ 0, %cond.false ]
  %cmp29 = icmp eq i32 %cond, 0
  br label %land.end31

land.end31:                                       ; preds = %cond.end, %while.cond19
  %29 = phi i1 [ false, %while.cond19 ], [ %cmp29, %cond.end ]
  br i1 %29, label %while.body32, label %while.end34

while.body32:                                     ; preds = %land.end31
  %30 = load i32, i32* %i, align 4
  %dec33 = add nsw i32 %30, -1
  store i32 %dec33, i32* %i, align 4
  br label %while.cond19

while.end34:                                      ; preds = %land.end31
  br label %while.cond35

while.cond35:                                     ; preds = %while.body55, %while.end34
  %31 = load i32, i32* %i, align 4
  %32 = load i32, i32* %token_end, align 4
  %cmp36 = icmp ne i32 %31, %32
  br i1 %cmp36, label %land.rhs38, label %land.end54

land.rhs38:                                       ; preds = %while.cond35
  %33 = load i8*, i8** %t, align 4
  %34 = load i32, i32* %i, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %33, i32 %34
  %35 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %35 to i32
  %cmp41 = icmp eq i32 %conv40, 32
  br i1 %cmp41, label %lor.end53, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %land.rhs38
  %36 = load i8*, i8** %t, align 4
  %37 = load i32, i32* %i, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %36, i32 %37
  %38 = load i8, i8* %arrayidx44, align 1
  %conv45 = sext i8 %38 to i32
  %cmp46 = icmp eq i32 %conv45, 9
  br i1 %cmp46, label %lor.end53, label %lor.rhs48

lor.rhs48:                                        ; preds = %lor.lhs.false43
  %39 = load i8*, i8** %t, align 4
  %40 = load i32, i32* %i, align 4
  %arrayidx49 = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i8, i8* %arrayidx49, align 1
  %conv50 = sext i8 %41 to i32
  %cmp51 = icmp eq i32 %conv50, 10
  br label %lor.end53

lor.end53:                                        ; preds = %lor.rhs48, %lor.lhs.false43, %land.rhs38
  %42 = phi i1 [ true, %lor.lhs.false43 ], [ true, %land.rhs38 ], [ %cmp51, %lor.rhs48 ]
  br label %land.end54

land.end54:                                       ; preds = %lor.end53, %while.cond35
  %43 = phi i1 [ false, %while.cond35 ], [ %42, %lor.end53 ]
  br i1 %43, label %while.body55, label %while.end56

while.body55:                                     ; preds = %land.end54
  %44 = load i32, i32* %i, align 4
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond35

while.end56:                                      ; preds = %land.end54
  %45 = load i32, i32* %token_end, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.then64, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %while.end56
  %46 = load i32, i32* %i, align 4
  %cmp59 = icmp eq i32 %46, 0
  br i1 %cmp59, label %land.lhs.true61, label %if.end73

land.lhs.true61:                                  ; preds = %lor.lhs.false58
  %47 = load i32, i32* %token_end, align 4
  %cmp62 = icmp eq i32 %47, 0
  br i1 %cmp62, label %if.then64, label %if.end73

if.then64:                                        ; preds = %land.lhs.true61, %while.end56
  %48 = load i32, i32* %token_end, align 4
  %tobool65 = icmp ne i32 %48, 0
  br i1 %tobool65, label %if.then66, label %if.else

if.then66:                                        ; preds = %if.then64
  %49 = load i8*, i8** %t, align 4
  %50 = load i32, i32* %i, align 4
  %51 = load i32, i32* %token_end, align 4
  %call67 = call i8* @substring(i8* %49, i32 %50, i32 %51)
  store i8* %call67, i8** %msg, align 4
  br label %if.end72

if.else:                                          ; preds = %if.then64
  %call68 = call i8* @sh_xmalloc(i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5936)
  store i8* %call68, i8** %msg, align 4
  %52 = load i8*, i8** %t, align 4
  %53 = load i32, i32* %i, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %52, i32 %53
  %54 = load i8, i8* %arrayidx69, align 1
  %55 = load i8*, i8** %msg, align 4
  %arrayidx70 = getelementptr inbounds i8, i8* %55, i32 0
  store i8 %54, i8* %arrayidx70, align 1
  %56 = load i8*, i8** %msg, align 4
  %arrayidx71 = getelementptr inbounds i8, i8* %56, i32 1
  store i8 0, i8* %arrayidx71, align 1
  br label %if.end72

if.end72:                                         ; preds = %if.else, %if.then66
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %land.lhs.true61, %lor.lhs.false58
  %57 = load i8*, i8** %msg, align 4
  ret i8* %57
}

declare i8* @find_token_in_alist(i32, %struct.STRING_INT_ALIST*, i32) #1

declare i8* @string_list_internal(%struct.word_list*, i8*) #1

declare i8* @mbschr(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal %struct.command* @parse_cond_command() #0 {
entry:
  %cexp = alloca %struct.cond_com*, align 4
  %0 = load i32, i32* @extended_glob, align 4
  store i32 %0, i32* @global_extglob, align 4
  %call = call %struct.cond_com* @cond_expr()
  store %struct.cond_com* %call, %struct.cond_com** %cexp, align 4
  %1 = load %struct.cond_com*, %struct.cond_com** %cexp, align 4
  %call1 = call %struct.command* @make_cond_command(%struct.cond_com* %1)
  ret %struct.command* %call1
}

; Function Attrs: noinline nounwind
define internal void @cond_error() #0 {
entry:
  %etext = alloca i8*, align 4
  %0 = load i32, i32* @EOF_Reached, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @cond_token, align 4
  %cmp = icmp ne i32 %1, 274
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @cond_lineno, align 4
  %call = call i8* @libintl_gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.98, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %2, i8* %call)
  br label %if.end10

if.else:                                          ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* @cond_token, align 4
  %cmp1 = icmp ne i32 %3, 274
  br i1 %cmp1, label %if.then2, label %if.end9

if.then2:                                         ; preds = %if.else
  %4 = load i32, i32* @cond_token, align 4
  %call3 = call i8* @error_token_from_token(i32 %4)
  store i8* %call3, i8** %etext, align 4
  %tobool4 = icmp ne i8* %call3, null
  br i1 %tobool4, label %if.then5, label %if.else7

if.then5:                                         ; preds = %if.then2
  %5 = load i32, i32* @cond_lineno, align 4
  %call6 = call i8* @libintl_gettext(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.99, i32 0, i32 0))
  %6 = load i8*, i8** %etext, align 4
  call void (i32, i8*, ...) @parser_error(i32 %5, i8* %call6, i8* %6)
  %7 = load i8*, i8** %etext, align 4
  call void @sh_xfree(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4415)
  br label %if.end

if.else7:                                         ; preds = %if.then2
  %8 = load i32, i32* @cond_lineno, align 4
  %call8 = call i8* @libintl_gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.100, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %8, i8* %call8)
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @shell_getc(i32 %remove_quoted_newline) #0 {
entry:
  %retval = alloca i32, align 4
  %remove_quoted_newline.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %truncating = alloca i32, align 4
  %last_was_backslash = alloca i32, align 4
  %uc = alloca i8, align 1
  %n = alloca i32, align 4
  %expansions = alloca i8*, align 4
  %old_hist = alloca i32, align 4
  %hdcs = alloca i8*, align 4
  store i32 %remove_quoted_newline, i32* %remove_quoted_newline.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load volatile i32, i32* @terminating_signal, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %1 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  %2 = load volatile i32, i32* @interrupt_state, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @throw_to_top_level()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.end

do.end:                                           ; preds = %if.end3
  store i32 0, i32* %last_was_backslash, align 4
  %3 = load volatile i32, i32* @sigwinch_received, align 4
  %tobool4 = icmp ne i32 %3, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %do.end
  store volatile i32 0, i32* @sigwinch_received, align 4
  call void @get_new_window_size(i32 0, i32* null, i32* null)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %do.end
  %4 = load i32, i32* @eol_ungetc_lookahead, align 4
  %tobool7 = icmp ne i32 %4, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  %5 = load i32, i32* @eol_ungetc_lookahead, align 4
  store i32 %5, i32* %c, align 4
  store i32 0, i32* @eol_ungetc_lookahead, align 4
  %6 = load i32, i32* %c, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.end9:                                          ; preds = %if.end6
  %7 = load i8*, i8** @shell_input_line, align 4
  %tobool10 = icmp ne i8* %7, null
  br i1 %tobool10, label %lor.lhs.false, label %if.then12

lor.lhs.false:                                    ; preds = %if.end9
  %8 = load i8*, i8** @shell_input_line, align 4
  %9 = load i32, i32* @shell_input_line_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx, align 1
  %tobool11 = icmp ne i8 %10, 0
  br i1 %tobool11, label %if.end245, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %cmp = icmp eq %struct.string_saver* %11, null
  br i1 %cmp, label %if.then12, label %if.end245

if.then12:                                        ; preds = %land.lhs.true, %if.end9
  %12 = load i32, i32* @line_number, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* @line_number, align 4
  %13 = load i8*, i8** @shell_input_line, align 4
  %tobool13 = icmp ne i8* %13, null
  br i1 %tobool13, label %land.lhs.true14, label %if.end17

land.lhs.true14:                                  ; preds = %if.then12
  %14 = load i32, i32* @shell_input_line_size, align 4
  %cmp15 = icmp uge i32 %14, 32768
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.lhs.true14
  %15 = load i8*, i8** @shell_input_line, align 4
  call void @sh_xfree(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2256)
  store i8* null, i8** @shell_input_line, align 4
  store i32 0, i32* @shell_input_line_size, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %land.lhs.true14, %if.then12
  br label %restart_read

restart_read:                                     ; preds = %if.then351, %if.else320, %if.end204, %if.end17
  br label %do.body18

do.body18:                                        ; preds = %restart_read
  %16 = load volatile i32, i32* @terminating_signal, align 4
  %tobool19 = icmp ne i32 %16, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %do.body18
  %17 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %17)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %do.body18
  %18 = load volatile i32, i32* @interrupt_state, align 4
  %tobool22 = icmp ne i32 %18, 0
  br i1 %tobool22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  call void @throw_to_top_level()
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  br label %do.end25

do.end25:                                         ; preds = %if.end24
  store i32 0, i32* %truncating, align 4
  store i32 0, i32* %i, align 4
  store i32 0, i32* @shell_input_line_terminator, align 4
  %19 = load i32, i32* @interactive_shell, align 4
  %cmp26 = icmp eq i32 %19, 0
  br i1 %cmp26, label %if.then33, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %do.end25
  %20 = load i32, i32* @interactive, align 4
  %tobool28 = icmp ne i32 %20, 0
  br i1 %tobool28, label %land.lhs.true29, label %if.end34

land.lhs.true29:                                  ; preds = %lor.lhs.false27
  %21 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp30 = icmp eq i32 %21, 1
  br i1 %cmp30, label %if.then33, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true29
  %22 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp32 = icmp eq i32 %22, 2
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %lor.lhs.false31, %land.lhs.true29, %do.end25
  %call = call i32 @cleanup_dead_jobs()
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %lor.lhs.false31, %lor.lhs.false27
  %23 = load i32, i32* @no_line_editing, align 4
  %tobool35 = icmp ne i32 %23, 0
  br i1 %tobool35, label %land.lhs.true36, label %if.end43

land.lhs.true36:                                  ; preds = %if.end34
  %24 = load i32, i32* @interactive, align 4
  %tobool37 = icmp ne i32 %24, 0
  br i1 %tobool37, label %land.lhs.true38, label %if.end43

land.lhs.true38:                                  ; preds = %land.lhs.true36
  %25 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp39 = icmp eq i32 %25, 1
  br i1 %cmp39, label %if.then42, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %land.lhs.true38
  %26 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp41 = icmp eq i32 %26, 2
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %lor.lhs.false40, %land.lhs.true38
  call void @print_prompt()
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %lor.lhs.false40, %land.lhs.true36, %if.end34
  %27 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp44 = icmp eq i32 %27, 2
  br i1 %cmp44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end43
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 4
  call void @clearerr(%struct._IO_FILE* %28)
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end43
  br label %while.body

while.body:                                       ; preds = %if.end46, %if.then57, %land.end
  %call47 = call i32 @yy_getc()
  store i32 %call47, i32* %c, align 4
  br label %do.body48

do.body48:                                        ; preds = %while.body
  %29 = load volatile i32, i32* @terminating_signal, align 4
  %tobool49 = icmp ne i32 %29, 0
  br i1 %tobool49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %do.body48
  %30 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %30)
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %do.body48
  %31 = load volatile i32, i32* @interrupt_state, align 4
  %tobool52 = icmp ne i32 %31, 0
  br i1 %tobool52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.end51
  call void @throw_to_top_level()
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end51
  br label %do.end55

do.end55:                                         ; preds = %if.end54
  %32 = load i32, i32* %c, align 4
  %cmp56 = icmp eq i32 %32, 0
  br i1 %cmp56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %do.end55
  br label %while.body

if.end58:                                         ; preds = %do.end55
  %33 = load i32, i32* @shell_input_line_size, align 4
  %cmp59 = icmp ugt i32 %33, -257
  br i1 %cmp59, label %if.then60, label %if.else

if.then60:                                        ; preds = %if.end58
  %34 = load i32, i32* %i, align 4
  %sub = sub i32 -1, %34
  store i32 %sub, i32* %n, align 4
  %35 = load i32, i32* %n, align 4
  %cmp61 = icmp ule i32 %35, 2
  br i1 %cmp61, label %if.then62, label %if.end68

if.then62:                                        ; preds = %if.then60
  %36 = load i32, i32* %truncating, align 4
  %cmp63 = icmp eq i32 %36, 0
  br i1 %cmp63, label %if.then64, label %if.end66

if.then64:                                        ; preds = %if.then62
  %call65 = call i8* @libintl_gettext(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.101, i32 0, i32 0))
  %37 = load i32, i32* @shell_input_line_size, align 4
  call void (i8*, ...) @internal_warning(i8* %call65, i32 %37, i32 -1)
  br label %if.end66

if.end66:                                         ; preds = %if.then64, %if.then62
  %38 = load i8*, i8** @shell_input_line, align 4
  %39 = load i32, i32* %i, align 4
  %arrayidx67 = getelementptr inbounds i8, i8* %38, i32 %39
  store i8 0, i8* %arrayidx67, align 1
  store i32 1, i32* %truncating, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.end66, %if.then60
  %40 = load i32, i32* @shell_input_line_size, align 4
  %cmp69 = icmp ult i32 %40, -1
  br i1 %cmp69, label %if.then70, label %if.end72

if.then70:                                        ; preds = %if.end68
  store i32 -1, i32* @shell_input_line_size, align 4
  %41 = load i8*, i8** @shell_input_line, align 4
  %42 = load i32, i32* @shell_input_line_size, align 4
  %call71 = call i8* @sh_xrealloc(i8* %41, i32 %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2330)
  store i8* %call71, i8** @shell_input_line, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %if.end68
  br label %if.end84

if.else:                                          ; preds = %if.end58
  br label %do.body73

do.body73:                                        ; preds = %if.else
  %43 = load i32, i32* %i, align 4
  %add = add nsw i32 %43, 2
  %44 = load i32, i32* @shell_input_line_size, align 4
  %cmp74 = icmp uge i32 %add, %44
  br i1 %cmp74, label %if.then75, label %if.end82

if.then75:                                        ; preds = %do.body73
  br label %while.cond76

while.cond76:                                     ; preds = %while.body79, %if.then75
  %45 = load i32, i32* %i, align 4
  %add77 = add nsw i32 %45, 2
  %46 = load i32, i32* @shell_input_line_size, align 4
  %cmp78 = icmp uge i32 %add77, %46
  br i1 %cmp78, label %while.body79, label %while.end

while.body79:                                     ; preds = %while.cond76
  %47 = load i32, i32* @shell_input_line_size, align 4
  %add80 = add i32 %47, 256
  store i32 %add80, i32* @shell_input_line_size, align 4
  br label %while.cond76

while.end:                                        ; preds = %while.cond76
  %48 = load i8*, i8** @shell_input_line, align 4
  %49 = load i32, i32* @shell_input_line_size, align 4
  %call81 = call i8* @sh_xrealloc(i8* %48, i32 %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2334)
  store i8* %call81, i8** @shell_input_line, align 4
  br label %if.end82

if.end82:                                         ; preds = %while.end, %do.body73
  br label %do.end83

do.end83:                                         ; preds = %if.end82
  br label %if.end84

if.end84:                                         ; preds = %do.end83, %if.end72
  %50 = load i32, i32* %c, align 4
  %cmp85 = icmp eq i32 %50, -1
  br i1 %cmp85, label %if.then86, label %if.end94

if.then86:                                        ; preds = %if.end84
  %51 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp87 = icmp eq i32 %51, 2
  br i1 %cmp87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.then86
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 4
  call void @clearerr(%struct._IO_FILE* %52)
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.then86
  %53 = load i32, i32* %i, align 4
  %cmp90 = icmp eq i32 %53, 0
  br i1 %cmp90, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end89
  store i32 -1, i32* @shell_input_line_terminator, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end89
  %54 = load i8*, i8** @shell_input_line, align 4
  %55 = load i32, i32* %i, align 4
  %arrayidx93 = getelementptr inbounds i8, i8* %54, i32 %55
  store i8 0, i8* %arrayidx93, align 1
  br label %while.end112

if.end94:                                         ; preds = %if.end84
  %56 = load i32, i32* %truncating, align 4
  %cmp95 = icmp eq i32 %56, 0
  br i1 %cmp95, label %if.then98, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %if.end94
  %57 = load i32, i32* %c, align 4
  %cmp97 = icmp eq i32 %57, 10
  br i1 %cmp97, label %if.then98, label %if.end101

if.then98:                                        ; preds = %lor.lhs.false96, %if.end94
  %58 = load i32, i32* %c, align 4
  %conv = trunc i32 %58 to i8
  %59 = load i8*, i8** @shell_input_line, align 4
  %60 = load i32, i32* %i, align 4
  %inc99 = add nsw i32 %60, 1
  store i32 %inc99, i32* %i, align 4
  %arrayidx100 = getelementptr inbounds i8, i8* %59, i32 %60
  store i8 %conv, i8* %arrayidx100, align 1
  br label %if.end101

if.end101:                                        ; preds = %if.then98, %lor.lhs.false96
  %61 = load i32, i32* %c, align 4
  %cmp102 = icmp eq i32 %61, 10
  br i1 %cmp102, label %if.then104, label %if.end107

if.then104:                                       ; preds = %if.end101
  %62 = load i8*, i8** @shell_input_line, align 4
  %63 = load i32, i32* %i, align 4
  %dec = add nsw i32 %63, -1
  store i32 %dec, i32* %i, align 4
  %arrayidx105 = getelementptr inbounds i8, i8* %62, i32 %dec
  store i8 0, i8* %arrayidx105, align 1
  %64 = load i32, i32* @current_command_line_count, align 4
  %inc106 = add nsw i32 %64, 1
  store i32 %inc106, i32* @current_command_line_count, align 4
  br label %while.end112

if.end107:                                        ; preds = %if.end101
  %65 = load i32, i32* %last_was_backslash, align 4
  %cmp108 = icmp eq i32 %65, 0
  br i1 %cmp108, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end107
  %66 = load i32, i32* %c, align 4
  %cmp110 = icmp eq i32 %66, 92
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end107
  %67 = phi i1 [ false, %if.end107 ], [ %cmp110, %land.rhs ]
  %land.ext = zext i1 %67 to i32
  store i32 %land.ext, i32* %last_was_backslash, align 4
  br label %while.body

while.end112:                                     ; preds = %if.then104, %if.end92
  store i32 0, i32* @shell_input_line_index, align 4
  %68 = load i32, i32* %i, align 4
  store i32 %68, i32* @shell_input_line_len, align 4
  call void @set_line_mbstate()
  %69 = load i32, i32* @remember_on_history, align 4
  %tobool113 = icmp ne i32 %69, 0
  br i1 %tobool113, label %land.lhs.true114, label %if.else145

land.lhs.true114:                                 ; preds = %while.end112
  %70 = load i8*, i8** @shell_input_line, align 4
  %tobool115 = icmp ne i8* %70, null
  br i1 %tobool115, label %land.lhs.true116, label %if.else145

land.lhs.true116:                                 ; preds = %land.lhs.true114
  %71 = load i8*, i8** @shell_input_line, align 4
  %arrayidx117 = getelementptr inbounds i8, i8* %71, i32 0
  %72 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %72 to i32
  %tobool119 = icmp ne i32 %conv118, 0
  br i1 %tobool119, label %if.then120, label %if.else145

if.then120:                                       ; preds = %land.lhs.true116
  %73 = load i32, i32* @history_expansion_inhibited, align 4
  store i32 %73, i32* %old_hist, align 4
  %74 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %tobool121 = icmp ne i32 %74, 0
  br i1 %tobool121, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then120
  %75 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %76 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %sub122 = sub nsw i32 %76, 1
  %arrayidx123 = getelementptr inbounds i8, i8* %75, i32 %sub122
  %77 = load i8, i8* %arrayidx123, align 1
  %conv124 = sext i8 %77 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then120
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv124, %cond.true ], [ 0, %cond.false ]
  %cmp125 = icmp eq i32 %cond, 39
  br i1 %cmp125, label %if.then127, label %if.end128

if.then127:                                       ; preds = %cond.end
  store i32 1, i32* @history_expansion_inhibited, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.then127, %cond.end
  %78 = load i8*, i8** @shell_input_line, align 4
  %call129 = call i8* @pre_process_line(i8* %78, i32 1, i32 1)
  store i8* %call129, i8** %expansions, align 4
  %79 = load i32, i32* %old_hist, align 4
  store i32 %79, i32* @history_expansion_inhibited, align 4
  %80 = load i8*, i8** %expansions, align 4
  %81 = load i8*, i8** @shell_input_line, align 4
  %cmp130 = icmp ne i8* %80, %81
  br i1 %cmp130, label %if.then132, label %if.end144

if.then132:                                       ; preds = %if.end128
  %82 = load i8*, i8** @shell_input_line, align 4
  call void @sh_xfree(i8* %82, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2388)
  %83 = load i8*, i8** %expansions, align 4
  store i8* %83, i8** @shell_input_line, align 4
  %84 = load i8*, i8** @shell_input_line, align 4
  %tobool133 = icmp ne i8* %84, null
  br i1 %tobool133, label %cond.true134, label %cond.false136

cond.true134:                                     ; preds = %if.then132
  %85 = load i8*, i8** @shell_input_line, align 4
  %call135 = call i32 @strlen(i8* %85)
  br label %cond.end137

cond.false136:                                    ; preds = %if.then132
  br label %cond.end137

cond.end137:                                      ; preds = %cond.false136, %cond.true134
  %cond138 = phi i32 [ %call135, %cond.true134 ], [ 0, %cond.false136 ]
  store i32 %cond138, i32* @shell_input_line_len, align 4
  %86 = load i32, i32* @shell_input_line_len, align 4
  %cmp139 = icmp eq i32 %86, 0
  br i1 %cmp139, label %if.then141, label %if.end143

if.then141:                                       ; preds = %cond.end137
  %87 = load i32, i32* @current_command_line_count, align 4
  %dec142 = add nsw i32 %87, -1
  store i32 %dec142, i32* @current_command_line_count, align 4
  br label %if.end143

if.end143:                                        ; preds = %if.then141, %cond.end137
  %88 = load i32, i32* @shell_input_line_len, align 4
  store i32 %88, i32* @shell_input_line_size, align 4
  call void @set_line_mbstate()
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end128
  br label %if.end178

if.else145:                                       ; preds = %land.lhs.true116, %land.lhs.true114, %while.end112
  %89 = load i32, i32* @remember_on_history, align 4
  %tobool146 = icmp ne i32 %89, 0
  br i1 %tobool146, label %land.lhs.true147, label %if.end177

land.lhs.true147:                                 ; preds = %if.else145
  %90 = load i8*, i8** @shell_input_line, align 4
  %tobool148 = icmp ne i8* %90, null
  br i1 %tobool148, label %land.lhs.true149, label %if.end177

land.lhs.true149:                                 ; preds = %land.lhs.true147
  %91 = load i8*, i8** @shell_input_line, align 4
  %arrayidx150 = getelementptr inbounds i8, i8* %91, i32 0
  %92 = load i8, i8* %arrayidx150, align 1
  %conv151 = sext i8 %92 to i32
  %cmp152 = icmp eq i32 %conv151, 0
  br i1 %cmp152, label %land.lhs.true154, label %if.end177

land.lhs.true154:                                 ; preds = %land.lhs.true149
  %93 = load i32, i32* @current_command_line_count, align 4
  %cmp155 = icmp sgt i32 %93, 1
  br i1 %cmp155, label %if.then157, label %if.end177

if.then157:                                       ; preds = %land.lhs.true154
  %94 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %tobool158 = icmp ne i32 %94, 0
  br i1 %tobool158, label %cond.true159, label %cond.false164

cond.true159:                                     ; preds = %if.then157
  %95 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %96 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %sub160 = sub nsw i32 %96, 1
  %arrayidx161 = getelementptr inbounds i8, i8* %95, i32 %sub160
  %97 = load i8, i8* %arrayidx161, align 1
  %conv162 = sext i8 %97 to i32
  %tobool163 = icmp ne i32 %conv162, 0
  br i1 %tobool163, label %if.then165, label %if.else166

cond.false164:                                    ; preds = %if.then157
  br i1 false, label %if.then165, label %if.else166

if.then165:                                       ; preds = %cond.false164, %cond.true159
  %98 = load i8*, i8** @shell_input_line, align 4
  call void @maybe_add_history(i8* %98)
  br label %if.end176

if.else166:                                       ; preds = %cond.false164, %cond.true159
  %99 = load i8*, i8** @shell_input_line, align 4
  %call167 = call i8* @history_delimiting_chars(i8* %99)
  store i8* %call167, i8** %hdcs, align 4
  %100 = load i8*, i8** %hdcs, align 4
  %tobool168 = icmp ne i8* %100, null
  br i1 %tobool168, label %land.lhs.true169, label %if.end175

land.lhs.true169:                                 ; preds = %if.else166
  %101 = load i8*, i8** %hdcs, align 4
  %arrayidx170 = getelementptr inbounds i8, i8* %101, i32 0
  %102 = load i8, i8* %arrayidx170, align 1
  %conv171 = sext i8 %102 to i32
  %cmp172 = icmp eq i32 %conv171, 59
  br i1 %cmp172, label %if.then174, label %if.end175

if.then174:                                       ; preds = %land.lhs.true169
  %103 = load i8*, i8** @shell_input_line, align 4
  call void @maybe_add_history(i8* %103)
  br label %if.end175

if.end175:                                        ; preds = %if.then174, %land.lhs.true169, %if.else166
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then165
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %land.lhs.true154, %land.lhs.true149, %land.lhs.true147, %if.else145
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.end144
  %104 = load i8*, i8** @shell_input_line, align 4
  %tobool179 = icmp ne i8* %104, null
  br i1 %tobool179, label %if.then180, label %if.else195

if.then180:                                       ; preds = %if.end178
  %105 = load i32, i32* @echo_input_at_read, align 4
  %tobool181 = icmp ne i32 %105, 0
  br i1 %tobool181, label %land.lhs.true182, label %if.end194

land.lhs.true182:                                 ; preds = %if.then180
  %106 = load i8*, i8** @shell_input_line, align 4
  %arrayidx183 = getelementptr inbounds i8, i8* %106, i32 0
  %107 = load i8, i8* %arrayidx183, align 1
  %conv184 = sext i8 %107 to i32
  %tobool185 = icmp ne i32 %conv184, 0
  br i1 %tobool185, label %land.lhs.true189, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %land.lhs.true182
  %108 = load i32, i32* @shell_input_line_terminator, align 4
  %cmp187 = icmp ne i32 %108, -1
  br i1 %cmp187, label %land.lhs.true189, label %if.end194

land.lhs.true189:                                 ; preds = %lor.lhs.false186, %land.lhs.true182
  %109 = load i32, i32* @shell_eof_token, align 4
  %cmp190 = icmp eq i32 %109, 0
  br i1 %cmp190, label %if.then192, label %if.end194

if.then192:                                       ; preds = %land.lhs.true189
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %111 = load i8*, i8** @shell_input_line, align 4
  %call193 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.102, i32 0, i32 0), i8* %111)
  br label %if.end194

if.end194:                                        ; preds = %if.then192, %land.lhs.true189, %lor.lhs.false186, %if.then180
  br label %if.end205

if.else195:                                       ; preds = %if.end178
  store i32 0, i32* @shell_input_line_size, align 4
  store i8** @current_prompt_string, i8*** @prompt_string_pointer, align 4
  %112 = load i32, i32* @interactive, align 4
  %tobool196 = icmp ne i32 %112, 0
  br i1 %tobool196, label %land.lhs.true197, label %if.end204

land.lhs.true197:                                 ; preds = %if.else195
  %113 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp198 = icmp eq i32 %113, 1
  br i1 %cmp198, label %if.then203, label %lor.lhs.false200

lor.lhs.false200:                                 ; preds = %land.lhs.true197
  %114 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp201 = icmp eq i32 %114, 2
  br i1 %cmp201, label %if.then203, label %if.end204

if.then203:                                       ; preds = %lor.lhs.false200, %land.lhs.true197
  call void @prompt_again()
  br label %if.end204

if.end204:                                        ; preds = %if.then203, %lor.lhs.false200, %if.else195
  br label %restart_read

if.end205:                                        ; preds = %if.end194
  %115 = load i32, i32* @shell_input_line_terminator, align 4
  %cmp206 = icmp ne i32 %115, -1
  br i1 %cmp206, label %if.then208, label %if.end244

if.then208:                                       ; preds = %if.end205
  %116 = load i32, i32* @shell_input_line_size, align 4
  %cmp209 = icmp ult i32 %116, -4
  br i1 %cmp209, label %land.lhs.true211, label %if.end219

land.lhs.true211:                                 ; preds = %if.then208
  %117 = load i32, i32* @shell_input_line_len, align 4
  %add212 = add i32 %117, 3
  %118 = load i32, i32* @shell_input_line_size, align 4
  %cmp213 = icmp ugt i32 %add212, %118
  br i1 %cmp213, label %if.then215, label %if.end219

if.then215:                                       ; preds = %land.lhs.true211
  %119 = load i8*, i8** @shell_input_line, align 4
  %120 = load i32, i32* @shell_input_line_size, align 4
  %add216 = add i32 %120, 2
  store i32 %add216, i32* @shell_input_line_size, align 4
  %add217 = add i32 1, %add216
  %call218 = call i8* @sh_xrealloc(i8* %119, i32 %add217, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2453)
  store i8* %call218, i8** @shell_input_line, align 4
  br label %if.end219

if.end219:                                        ; preds = %if.then215, %land.lhs.true211, %if.then208
  %121 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp220 = icmp eq i32 %121, 3
  br i1 %cmp220, label %land.lhs.true222, label %if.else239

land.lhs.true222:                                 ; preds = %if.end219
  %122 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool223 = icmp ne %struct.string_saver* %122, null
  br i1 %tobool223, label %land.rhs224, label %land.end226

land.rhs224:                                      ; preds = %land.lhs.true222
  %123 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %expander = getelementptr inbounds %struct.string_saver, %struct.string_saver* %123, i32 0, i32 3
  %124 = load %struct.alias*, %struct.alias** %expander, align 4
  %tobool225 = icmp ne %struct.alias* %124, null
  br label %land.end226

land.end226:                                      ; preds = %land.rhs224, %land.lhs.true222
  %125 = phi i1 [ false, %land.lhs.true222 ], [ %tobool225, %land.rhs224 ]
  %land.ext227 = zext i1 %125 to i32
  %cmp228 = icmp eq i32 %land.ext227, 0
  br i1 %cmp228, label %land.lhs.true230, label %if.else239

land.lhs.true230:                                 ; preds = %land.end226
  %126 = load i32, i32* %last_was_backslash, align 4
  %tobool231 = icmp ne i32 %126, 0
  br i1 %tobool231, label %land.lhs.true232, label %if.else239

land.lhs.true232:                                 ; preds = %land.lhs.true230
  %127 = load i32, i32* %c, align 4
  %cmp233 = icmp eq i32 %127, -1
  br i1 %cmp233, label %land.lhs.true235, label %if.else239

land.lhs.true235:                                 ; preds = %land.lhs.true232
  %128 = load i32, i32* %remove_quoted_newline.addr, align 4
  %tobool236 = icmp ne i32 %128, 0
  br i1 %tobool236, label %if.then237, label %if.else239

if.then237:                                       ; preds = %land.lhs.true235
  %129 = load i8*, i8** @shell_input_line, align 4
  %130 = load i32, i32* @shell_input_line_len, align 4
  %arrayidx238 = getelementptr inbounds i8, i8* %129, i32 %130
  store i8 92, i8* %arrayidx238, align 1
  br label %if.end241

if.else239:                                       ; preds = %land.lhs.true235, %land.lhs.true232, %land.lhs.true230, %land.end226, %if.end219
  %131 = load i8*, i8** @shell_input_line, align 4
  %132 = load i32, i32* @shell_input_line_len, align 4
  %arrayidx240 = getelementptr inbounds i8, i8* %131, i32 %132
  store i8 10, i8* %arrayidx240, align 1
  br label %if.end241

if.end241:                                        ; preds = %if.else239, %if.then237
  %133 = load i8*, i8** @shell_input_line, align 4
  %134 = load i32, i32* @shell_input_line_len, align 4
  %add242 = add i32 %134, 1
  %arrayidx243 = getelementptr inbounds i8, i8* %133, i32 %add242
  store i8 0, i8* %arrayidx243, align 1
  call void @set_line_mbstate()
  br label %if.end244

if.end244:                                        ; preds = %if.end241, %if.end205
  br label %if.end245

if.end245:                                        ; preds = %if.end244, %land.lhs.true, %lor.lhs.false
  br label %next_alias_char

next_alias_char:                                  ; preds = %if.then318, %if.end245
  %135 = load i8*, i8** @shell_input_line, align 4
  %136 = load i32, i32* @shell_input_line_index, align 4
  %arrayidx246 = getelementptr inbounds i8, i8* %135, i32 %136
  %137 = load i8, i8* %arrayidx246, align 1
  store i8 %137, i8* %uc, align 1
  %138 = load i8, i8* %uc, align 1
  %tobool247 = icmp ne i8 %138, 0
  br i1 %tobool247, label %if.then248, label %if.end250

if.then248:                                       ; preds = %next_alias_char
  %139 = load i32, i32* @shell_input_line_index, align 4
  %inc249 = add i32 %139, 1
  store i32 %inc249, i32* @shell_input_line_index, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then248, %next_alias_char
  br label %pop_alias

pop_alias:                                        ; preds = %if.then306, %if.end250
  %140 = load i8, i8* %uc, align 1
  %conv251 = zext i8 %140 to i32
  %cmp252 = icmp eq i32 %conv251, 0
  br i1 %cmp252, label %land.lhs.true254, label %if.end265

land.lhs.true254:                                 ; preds = %pop_alias
  %141 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool255 = icmp ne %struct.string_saver* %141, null
  br i1 %tobool255, label %land.lhs.true256, label %if.end265

land.lhs.true256:                                 ; preds = %land.lhs.true254
  %142 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %flags = getelementptr inbounds %struct.string_saver, %struct.string_saver* %142, i32 0, i32 7
  %143 = load i32, i32* %flags, align 4
  %cmp257 = icmp ne i32 %143, 4
  br i1 %cmp257, label %if.then259, label %if.end265

if.then259:                                       ; preds = %land.lhs.true256
  call void @pop_string()
  %144 = load i8*, i8** @shell_input_line, align 4
  %145 = load i32, i32* @shell_input_line_index, align 4
  %arrayidx260 = getelementptr inbounds i8, i8* %144, i32 %145
  %146 = load i8, i8* %arrayidx260, align 1
  store i8 %146, i8* %uc, align 1
  %147 = load i8, i8* %uc, align 1
  %tobool261 = icmp ne i8 %147, 0
  br i1 %tobool261, label %if.then262, label %if.end264

if.then262:                                       ; preds = %if.then259
  %148 = load i32, i32* @shell_input_line_index, align 4
  %inc263 = add i32 %148, 1
  store i32 %inc263, i32* @shell_input_line_index, align 4
  br label %if.end264

if.end264:                                        ; preds = %if.then262, %if.then259
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %land.lhs.true256, %land.lhs.true254, %pop_alias
  %149 = load i8, i8* %uc, align 1
  %conv266 = zext i8 %149 to i32
  %cmp267 = icmp eq i32 %conv266, 92
  br i1 %cmp267, label %land.lhs.true269, label %if.end321

land.lhs.true269:                                 ; preds = %if.end265
  %150 = load i32, i32* %remove_quoted_newline.addr, align 4
  %tobool270 = icmp ne i32 %150, 0
  br i1 %tobool270, label %land.lhs.true271, label %if.end321

land.lhs.true271:                                 ; preds = %land.lhs.true269
  %151 = load i8*, i8** @shell_input_line, align 4
  %152 = load i32, i32* @shell_input_line_index, align 4
  %arrayidx272 = getelementptr inbounds i8, i8* %151, i32 %152
  %153 = load i8, i8* %arrayidx272, align 1
  %conv273 = sext i8 %153 to i32
  %cmp274 = icmp eq i32 %conv273, 10
  br i1 %cmp274, label %land.lhs.true276, label %if.end321

land.lhs.true276:                                 ; preds = %land.lhs.true271
  %154 = load i32, i32* @shell_input_line_index, align 4
  %cmp277 = icmp ugt i32 %154, 1
  br i1 %cmp277, label %cond.true279, label %cond.false284

cond.true279:                                     ; preds = %land.lhs.true276
  %155 = load i8*, i8** @shell_input_line_property, align 4
  %156 = load i32, i32* @shell_input_line_index, align 4
  %sub280 = sub i32 %156, 1
  %arrayidx281 = getelementptr inbounds i8, i8* %155, i32 %sub280
  %157 = load i8, i8* %arrayidx281, align 1
  %conv282 = sext i8 %157 to i32
  %tobool283 = icmp ne i32 %conv282, 0
  br i1 %tobool283, label %if.then285, label %if.end321

cond.false284:                                    ; preds = %land.lhs.true276
  br i1 true, label %if.then285, label %if.end321

if.then285:                                       ; preds = %cond.false284, %cond.true279
  %158 = load i32, i32* @interactive, align 4
  %tobool286 = icmp ne i32 %158, 0
  br i1 %tobool286, label %land.lhs.true287, label %if.end294

land.lhs.true287:                                 ; preds = %if.then285
  %159 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp288 = icmp eq i32 %159, 1
  br i1 %cmp288, label %if.then293, label %lor.lhs.false290

lor.lhs.false290:                                 ; preds = %land.lhs.true287
  %160 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp291 = icmp eq i32 %160, 2
  br i1 %cmp291, label %if.then293, label %if.end294

if.then293:                                       ; preds = %lor.lhs.false290, %land.lhs.true287
  call void @prompt_again()
  br label %if.end294

if.end294:                                        ; preds = %if.then293, %lor.lhs.false290, %if.then285
  %161 = load i32, i32* @line_number, align 4
  %inc295 = add nsw i32 %161, 1
  store i32 %inc295, i32* @line_number, align 4
  %162 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool296 = icmp ne %struct.string_saver* %162, null
  br i1 %tobool296, label %land.lhs.true297, label %if.else307

land.lhs.true297:                                 ; preds = %if.end294
  %163 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %expander298 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %163, i32 0, i32 3
  %164 = load %struct.alias*, %struct.alias** %expander298, align 4
  %tobool299 = icmp ne %struct.alias* %164, null
  br i1 %tobool299, label %land.lhs.true300, label %if.else307

land.lhs.true300:                                 ; preds = %land.lhs.true297
  %165 = load i8*, i8** @shell_input_line, align 4
  %166 = load i32, i32* @shell_input_line_index, align 4
  %add301 = add i32 %166, 1
  %arrayidx302 = getelementptr inbounds i8, i8* %165, i32 %add301
  %167 = load i8, i8* %arrayidx302, align 1
  %conv303 = sext i8 %167 to i32
  %cmp304 = icmp eq i32 %conv303, 0
  br i1 %cmp304, label %if.then306, label %if.else307

if.then306:                                       ; preds = %land.lhs.true300
  store i8 0, i8* %uc, align 1
  br label %pop_alias

if.else307:                                       ; preds = %land.lhs.true300, %land.lhs.true297, %if.end294
  %168 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool308 = icmp ne %struct.string_saver* %168, null
  br i1 %tobool308, label %land.lhs.true309, label %if.else320

land.lhs.true309:                                 ; preds = %if.else307
  %169 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %expander310 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %169, i32 0, i32 3
  %170 = load %struct.alias*, %struct.alias** %expander310, align 4
  %tobool311 = icmp ne %struct.alias* %170, null
  br i1 %tobool311, label %land.lhs.true312, label %if.else320

land.lhs.true312:                                 ; preds = %land.lhs.true309
  %171 = load i8*, i8** @shell_input_line, align 4
  %172 = load i32, i32* @shell_input_line_index, align 4
  %add313 = add i32 %172, 1
  %arrayidx314 = getelementptr inbounds i8, i8* %171, i32 %add313
  %173 = load i8, i8* %arrayidx314, align 1
  %conv315 = sext i8 %173 to i32
  %cmp316 = icmp ne i32 %conv315, 0
  br i1 %cmp316, label %if.then318, label %if.else320

if.then318:                                       ; preds = %land.lhs.true312
  %174 = load i32, i32* @shell_input_line_index, align 4
  %inc319 = add i32 %174, 1
  store i32 %inc319, i32* @shell_input_line_index, align 4
  br label %next_alias_char

if.else320:                                       ; preds = %land.lhs.true312, %land.lhs.true309, %if.else307
  br label %restart_read

if.end321:                                        ; preds = %cond.false284, %cond.true279, %land.lhs.true271, %land.lhs.true269, %if.end265
  %175 = load i8, i8* %uc, align 1
  %conv322 = zext i8 %175 to i32
  %cmp323 = icmp eq i32 %conv322, 0
  br i1 %cmp323, label %land.lhs.true325, label %if.end332

land.lhs.true325:                                 ; preds = %if.end321
  %176 = load i32, i32* @shell_input_line_terminator, align 4
  %cmp326 = icmp eq i32 %176, -1
  br i1 %cmp326, label %if.then328, label %if.end332

if.then328:                                       ; preds = %land.lhs.true325
  %177 = load i32, i32* @shell_input_line_index, align 4
  %cmp329 = icmp ne i32 %177, 0
  %cond331 = select i1 %cmp329, i32 10, i32 -1
  store i32 %cond331, i32* %retval, align 4
  br label %return

if.end332:                                        ; preds = %land.lhs.true325, %if.end321
  %178 = load i8, i8* %uc, align 1
  %conv333 = zext i8 %178 to i32
  %cmp334 = icmp eq i32 %conv333, 0
  br i1 %cmp334, label %land.lhs.true336, label %if.end352

land.lhs.true336:                                 ; preds = %if.end332
  %179 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp337 = icmp eq i32 %179, 3
  br i1 %cmp337, label %land.lhs.true339, label %if.end352

land.lhs.true339:                                 ; preds = %land.lhs.true336
  %180 = load i8*, i8** bitcast (%union.INPUT_STREAM* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 2) to i8**), align 4
  %181 = load i8, i8* %180, align 1
  %conv340 = sext i8 %181 to i32
  %tobool341 = icmp ne i32 %conv340, 0
  br i1 %tobool341, label %land.lhs.true342, label %if.end352

land.lhs.true342:                                 ; preds = %land.lhs.true339
  %182 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %tobool343 = icmp ne %struct.string_saver* %182, null
  br i1 %tobool343, label %land.lhs.true344, label %if.end352

land.lhs.true344:                                 ; preds = %land.lhs.true342
  %183 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %flags345 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %183, i32 0, i32 7
  %184 = load i32, i32* %flags345, align 4
  %cmp346 = icmp eq i32 %184, 4
  br i1 %cmp346, label %land.lhs.true348, label %if.end352

land.lhs.true348:                                 ; preds = %land.lhs.true344
  %185 = load i32, i32* @shell_input_line_terminator, align 4
  %cmp349 = icmp eq i32 %185, 0
  br i1 %cmp349, label %if.then351, label %if.end352

if.then351:                                       ; preds = %land.lhs.true348
  store i32 0, i32* @shell_input_line_index, align 4
  br label %restart_read

if.end352:                                        ; preds = %land.lhs.true348, %land.lhs.true344, %land.lhs.true342, %land.lhs.true339, %land.lhs.true336, %if.end332
  %186 = load i8, i8* %uc, align 1
  %conv353 = zext i8 %186 to i32
  store i32 %conv353, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end352, %if.then328, %if.then8
  %187 = load i32, i32* %retval, align 4
  ret i32 %187
}

; Function Attrs: noinline nounwind
define internal void @discard_until(i32 %character) #0 {
entry:
  %character.addr = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %character, i32* %character.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %call = call i32 @shell_getc(i32 0)
  store i32 %call, i32* %c, align 4
  %cmp = icmp ne i32 %call, -1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %0 = load i32, i32* %c, align 4
  %1 = load i32, i32* %character.addr, align 4
  %cmp1 = icmp ne i32 %0, %1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %2, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %while.cond

while.end:                                        ; preds = %land.end
  %3 = load i32, i32* %c, align 4
  %cmp2 = icmp ne i32 %3, -1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %4 = load i32, i32* %c, align 4
  call void @shell_ungetc(i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end
  ret void
}

; Function Attrs: noinline nounwind
define internal void @shell_ungetc(i32 %c) #0 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i8*, i8** @shell_input_line, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @shell_input_line_index, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %c.addr, align 4
  %conv = trunc i32 %2 to i8
  %3 = load i8*, i8** @shell_input_line, align 4
  %4 = load i32, i32* @shell_input_line_index, align 4
  %dec = add i32 %4, -1
  store i32 %dec, i32* @shell_input_line_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 %dec
  store i8 %conv, i8* %arrayidx, align 1
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %c.addr, align 4
  store i32 %5, i32* @eol_ungetc_lookahead, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define internal i32 @parse_dparen(i32 %c) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %cmdtyp = alloca i32, align 4
  %sline = alloca i32, align 4
  %wval = alloca i8*, align 4
  %wd = alloca %struct.word_desc*, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32, i32* @last_read_token, align 4
  %cmp = icmp eq i32 %0, 264
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @line_number, align 4
  store i32 %1, i32* @arith_for_lineno, align 4
  %call = call i32 @parse_arith_cmd(i8** %wval, i32 0)
  store i32 %call, i32* %cmdtyp, align 4
  %2 = load i32, i32* %cmdtyp, align 4
  %cmp1 = icmp eq i32 %2, 1
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call3 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call3, %struct.word_desc** %wd, align 4
  %3 = load i8*, i8** %wval, align 4
  %4 = load %struct.word_desc*, %struct.word_desc** %wd, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %4, i32 0, i32 0
  store i8* %3, i8** %word, align 4
  %5 = load %struct.word_desc*, %struct.word_desc** %wd, align 4
  %call4 = call %struct.word_list* @make_word_list(%struct.word_desc* %5, %struct.word_list* null)
  store %struct.word_list* %call4, %struct.word_list** bitcast (%union.YYSTYPE* @yylval to %struct.word_list**), align 4
  store i32 285, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %6 = load i32, i32* @last_read_token, align 4
  %call5 = call i32 @reserved_word_acceptable(i32 %6)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.then6, label %if.end21

if.then6:                                         ; preds = %if.end
  %7 = load i32, i32* @line_number, align 4
  store i32 %7, i32* %sline, align 4
  %call7 = call i32 @parse_arith_cmd(i8** %wval, i32 0)
  store i32 %call7, i32* %cmdtyp, align 4
  %8 = load i32, i32* %cmdtyp, align 4
  %cmp8 = icmp eq i32 %8, 1
  br i1 %cmp8, label %if.then9, label %if.else13

if.then9:                                         ; preds = %if.then6
  %call10 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call10, %struct.word_desc** %wd, align 4
  %9 = load i8*, i8** %wval, align 4
  %10 = load %struct.word_desc*, %struct.word_desc** %wd, align 4
  %word11 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  store i8* %9, i8** %word11, align 4
  %11 = load %struct.word_desc*, %struct.word_desc** %wd, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %11, i32 0, i32 1
  store i32 524338, i32* %flags, align 4
  %12 = load %struct.word_desc*, %struct.word_desc** %wd, align 4
  %call12 = call %struct.word_list* @make_word_list(%struct.word_desc* %12, %struct.word_list* null)
  store %struct.word_list* %call12, %struct.word_list** bitcast (%union.YYSTYPE* @yylval to %struct.word_list**), align 4
  store i32 284, i32* %retval, align 4
  br label %return

if.else13:                                        ; preds = %if.then6
  %13 = load i32, i32* %cmdtyp, align 4
  %cmp14 = icmp eq i32 %13, 0
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %if.else13
  %14 = load i8*, i8** %wval, align 4
  call void @push_string(i8* %14, i32 0, %struct.alias* null)
  %15 = load %struct.string_saver*, %struct.string_saver** @pushed_string_list, align 4
  %flags16 = getelementptr inbounds %struct.string_saver, %struct.string_saver* %15, i32 0, i32 7
  store i32 2, i32* %flags16, align 4
  %16 = load i32, i32* @parser_state, align 4
  %and = and i32 %16, 1
  %cmp17 = icmp eq i32 %and, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then15
  %17 = load i32, i32* @parser_state, align 4
  %or = or i32 %17, 32
  store i32 %or, i32* @parser_state, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then15
  %18 = load i32, i32* %c.addr, align 4
  store i32 %18, i32* %retval, align 4
  br label %return

if.else20:                                        ; preds = %if.else13
  store i32 -1, i32* %retval, align 4
  br label %return

if.end21:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end21, %if.else20, %if.end19, %if.then9, %if.else, %if.then2
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define internal i32 @read_token_word(i32 %character) #0 {
entry:
  %retval = alloca i32, align 4
  %character.addr = alloca i32, align 4
  %the_word = alloca %struct.word_desc*, align 4
  %token_index = alloca i32, align 4
  %all_digit_token = alloca i32, align 4
  %dollar_present = alloca i32, align 4
  %compound_assignment = alloca i32, align 4
  %quoted = alloca i32, align 4
  %pass_next_character = alloca i32, align 4
  %cd = alloca i32, align 4
  %result = alloca i32, align 4
  %peek_char = alloca i32, align 4
  %ttok = alloca i8*, align 4
  %ttrans = alloca i8*, align 4
  %ttoklen = alloca i32, align 4
  %ttranslen = alloca i32, align 4
  %lvalue = alloca i64, align 8
  %first_line = alloca i32, align 4
  %i = alloca i32, align 4
  %i1037 = alloca i32, align 4
  %b = alloca %struct.builtin*, align 4
  store i32 %character, i32* %character.addr, align 4
  %0 = load i32, i32* @token_buffer_size, align 4
  %cmp = icmp slt i32 %0, 496
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @token, align 4
  store i32 496, i32* @token_buffer_size, align 4
  %call = call i8* @sh_xrealloc(i8* %1, i32 496, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4715)
  store i8* %call, i8** @token, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %token_index, align 4
  %2 = load i32, i32* %character.addr, align 4
  %cmp1 = icmp sge i32 %2, 48
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %3 = load i32, i32* %character.addr, align 4
  %cmp2 = icmp sle i32 %3, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %cmp2, %land.rhs ]
  %land.ext = zext i1 %4 to i32
  store i32 %land.ext, i32* %all_digit_token, align 4
  store i32 0, i32* %compound_assignment, align 4
  store i32 0, i32* %pass_next_character, align 4
  store i32 0, i32* %quoted, align 4
  store i32 0, i32* %dollar_present, align 4
  br label %for.cond

for.cond:                                         ; preds = %land.end821, %land.end
  %5 = load i32, i32* %character.addr, align 4
  %cmp3 = icmp eq i32 %5, -1
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %for.cond
  br label %got_token

if.end5:                                          ; preds = %for.cond
  %6 = load i32, i32* %pass_next_character, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end5
  store i32 0, i32* %pass_next_character, align 4
  br label %got_escaped_character

if.end7:                                          ; preds = %if.end5
  %7 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %tobool8 = icmp ne i32 %7, 0
  br i1 %tobool8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end7
  %8 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %sub = sub nsw i32 %9, 1
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 %sub
  %10 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %10 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %cd, align 4
  %11 = load i32, i32* %character.addr, align 4
  %cmp9 = icmp eq i32 %11, 92
  br i1 %cmp9, label %land.lhs.true, label %if.end39

land.lhs.true:                                    ; preds = %cond.end
  %12 = load i32, i32* @shell_input_line_index, align 4
  %cmp11 = icmp ugt i32 %12, 1
  br i1 %cmp11, label %cond.true13, label %cond.false18

cond.true13:                                      ; preds = %land.lhs.true
  %13 = load i8*, i8** @shell_input_line_property, align 4
  %14 = load i32, i32* @shell_input_line_index, align 4
  %sub14 = sub i32 %14, 1
  %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %sub14
  %15 = load i8, i8* %arrayidx15, align 1
  %conv16 = sext i8 %15 to i32
  %tobool17 = icmp ne i32 %conv16, 0
  br i1 %tobool17, label %if.then19, label %if.end39

cond.false18:                                     ; preds = %land.lhs.true
  br i1 true, label %if.then19, label %if.end39

if.then19:                                        ; preds = %cond.false18, %cond.true13
  %call20 = call i32 @shell_getc(i32 0)
  store i32 %call20, i32* %peek_char, align 4
  %16 = load i32, i32* %peek_char, align 4
  %cmp21 = icmp eq i32 %16, 10
  br i1 %cmp21, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then19
  store i32 10, i32* %character.addr, align 4
  br label %next_character

if.else:                                          ; preds = %if.then19
  %17 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %17)
  %18 = load i32, i32* %cd, align 4
  %cmp24 = icmp eq i32 %18, 0
  br i1 %cmp24, label %if.then37, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %19 = load i32, i32* %cd, align 4
  %cmp26 = icmp eq i32 %19, 96
  br i1 %cmp26, label %if.then37, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %20 = load i32, i32* %cd, align 4
  %cmp29 = icmp eq i32 %20, 34
  br i1 %cmp29, label %land.lhs.true31, label %if.end38

land.lhs.true31:                                  ; preds = %lor.lhs.false28
  %21 = load i32, i32* %peek_char, align 4
  %cmp32 = icmp sge i32 %21, 0
  br i1 %cmp32, label %land.lhs.true34, label %if.end38

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %22 = load i32, i32* %peek_char, align 4
  %arrayidx35 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %22
  %23 = load i32, i32* %arrayidx35, align 4
  %and = and i32 %23, 64
  %tobool36 = icmp ne i32 %and, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %land.lhs.true34, %lor.lhs.false, %if.else
  %24 = load i32, i32* %pass_next_character, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %pass_next_character, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %land.lhs.true34, %land.lhs.true31, %lor.lhs.false28
  store i32 1, i32* %quoted, align 4
  br label %got_character

if.end39:                                         ; preds = %cond.false18, %cond.true13, %cond.end
  %25 = load i32, i32* %character.addr, align 4
  %conv40 = trunc i32 %25 to i8
  %idxprom = zext i8 %conv40 to i32
  %arrayidx41 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %26 = load i32, i32* %arrayidx41, align 4
  %and42 = and i32 %26, 8
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %land.lhs.true44, label %if.end103

land.lhs.true44:                                  ; preds = %if.end39
  %27 = load i32, i32* @shell_input_line_index, align 4
  %cmp45 = icmp ugt i32 %27, 1
  br i1 %cmp45, label %cond.true47, label %cond.false52

cond.true47:                                      ; preds = %land.lhs.true44
  %28 = load i8*, i8** @shell_input_line_property, align 4
  %29 = load i32, i32* @shell_input_line_index, align 4
  %sub48 = sub i32 %29, 1
  %arrayidx49 = getelementptr inbounds i8, i8* %28, i32 %sub48
  %30 = load i8, i8* %arrayidx49, align 1
  %conv50 = sext i8 %30 to i32
  %tobool51 = icmp ne i32 %conv50, 0
  br i1 %tobool51, label %if.then53, label %if.end103

cond.false52:                                     ; preds = %land.lhs.true44
  br i1 true, label %if.then53, label %if.end103

if.then53:                                        ; preds = %cond.false52, %cond.true47
  br label %do.body

do.body:                                          ; preds = %if.then53
  %31 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add = add nsw i32 %31, 2
  %32 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp54 = icmp sgt i32 %add, %32
  br i1 %cmp54, label %if.then56, label %if.end59

if.then56:                                        ; preds = %do.body
  %33 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %34 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add57 = add nsw i32 %34, 10
  store i32 %add57, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul = mul i32 %add57, 1
  %call58 = call i8* @sh_xrealloc(i8* %33, i32 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4764)
  store i8* %call58, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then56, %do.body
  %35 = load i32, i32* %character.addr, align 4
  %conv60 = trunc i32 %35 to i8
  %36 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %37 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx61 = getelementptr inbounds i8, i8* %36, i32 %37
  store i8 %conv60, i8* %arrayidx61, align 1
  %38 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc62 = add nsw i32 %38, 1
  store i32 %inc62, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end

do.end:                                           ; preds = %if.end59
  %39 = load i32, i32* %character.addr, align 4
  %40 = load i32, i32* %character.addr, align 4
  %41 = load i32, i32* %character.addr, align 4
  %42 = load i32, i32* %character.addr, align 4
  %cmp63 = icmp eq i32 %42, 96
  %cond65 = select i1 %cmp63, i32 8, i32 0
  %call66 = call i8* @parse_matched_pair(i32 %39, i32 %40, i32 %41, i32* %ttoklen, i32 %cond65)
  store i8* %call66, i8** %ttok, align 4
  %43 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec = add nsw i32 %43, -1
  store i32 %dec, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %44 = load i8*, i8** %ttok, align 4
  %cmp67 = icmp eq i8* %44, @matched_pair_error
  br i1 %cmp67, label %if.then69, label %if.end70

if.then69:                                        ; preds = %do.end
  store i32 -1, i32* %retval, align 4
  br label %return

if.end70:                                         ; preds = %do.end
  br label %do.body71

do.body71:                                        ; preds = %if.end70
  %45 = load i32, i32* %token_index, align 4
  %46 = load i32, i32* %ttoklen, align 4
  %add72 = add nsw i32 %46, 2
  %add73 = add nsw i32 %45, %add72
  %47 = load i32, i32* @token_buffer_size, align 4
  %cmp74 = icmp sge i32 %add73, %47
  br i1 %cmp74, label %if.then76, label %if.end83

if.then76:                                        ; preds = %do.body71
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then76
  %48 = load i32, i32* %token_index, align 4
  %49 = load i32, i32* %ttoklen, align 4
  %add77 = add nsw i32 %49, 2
  %add78 = add nsw i32 %48, %add77
  %50 = load i32, i32* @token_buffer_size, align 4
  %cmp79 = icmp sge i32 %add78, %50
  br i1 %cmp79, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %51 = load i32, i32* @token_buffer_size, align 4
  %add81 = add nsw i32 %51, 512
  store i32 %add81, i32* @token_buffer_size, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %52 = load i8*, i8** @token, align 4
  %53 = load i32, i32* @token_buffer_size, align 4
  %call82 = call i8* @sh_xrealloc(i8* %52, i32 %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4770)
  store i8* %call82, i8** @token, align 4
  br label %if.end83

if.end83:                                         ; preds = %while.end, %do.body71
  br label %do.end84

do.end84:                                         ; preds = %if.end83
  %54 = load i32, i32* %character.addr, align 4
  %conv85 = trunc i32 %54 to i8
  %55 = load i8*, i8** @token, align 4
  %56 = load i32, i32* %token_index, align 4
  %inc86 = add nsw i32 %56, 1
  store i32 %inc86, i32* %token_index, align 4
  %arrayidx87 = getelementptr inbounds i8, i8* %55, i32 %56
  store i8 %conv85, i8* %arrayidx87, align 1
  %57 = load i8*, i8** @token, align 4
  %58 = load i32, i32* %token_index, align 4
  %add.ptr = getelementptr inbounds i8, i8* %57, i32 %58
  %59 = load i8*, i8** %ttok, align 4
  %call88 = call i8* @strcpy(i8* %add.ptr, i8* %59)
  %60 = load i32, i32* %ttoklen, align 4
  %61 = load i32, i32* %token_index, align 4
  %add89 = add nsw i32 %61, %60
  store i32 %add89, i32* %token_index, align 4
  store i32 0, i32* %all_digit_token, align 4
  store i32 1, i32* %quoted, align 4
  %62 = load i32, i32* %character.addr, align 4
  %cmp90 = icmp eq i32 %62, 34
  br i1 %cmp90, label %land.rhs92, label %land.end96

land.rhs92:                                       ; preds = %do.end84
  %63 = load i8*, i8** %ttok, align 4
  %call93 = call i8* @strchr(i8* %63, i32 36)
  %cmp94 = icmp ne i8* %call93, null
  br label %land.end96

land.end96:                                       ; preds = %land.rhs92, %do.end84
  %64 = phi i1 [ false, %do.end84 ], [ %cmp94, %land.rhs92 ]
  %land.ext97 = zext i1 %64 to i32
  %65 = load i32, i32* %dollar_present, align 4
  %or = or i32 %65, %land.ext97
  store i32 %or, i32* %dollar_present, align 4
  br label %do.body98

do.body98:                                        ; preds = %land.end96
  %66 = load i8*, i8** %ttok, align 4
  %tobool99 = icmp ne i8* %66, null
  br i1 %tobool99, label %if.then100, label %if.end101

if.then100:                                       ; preds = %do.body98
  %67 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4777)
  br label %if.end101

if.end101:                                        ; preds = %if.then100, %do.body98
  br label %do.end102

do.end102:                                        ; preds = %if.end101
  br label %next_character

if.end103:                                        ; preds = %cond.false52, %cond.true47, %if.end39
  %68 = load i32, i32* @parser_state, align 4
  %and104 = and i32 %68, 65536
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %land.lhs.true106, label %if.end173

land.lhs.true106:                                 ; preds = %if.end103
  %69 = load i32, i32* %character.addr, align 4
  %cmp107 = icmp eq i32 %69, 40
  br i1 %cmp107, label %land.lhs.true112, label %lor.lhs.false109

lor.lhs.false109:                                 ; preds = %land.lhs.true106
  %70 = load i32, i32* %character.addr, align 4
  %cmp110 = icmp eq i32 %70, 124
  br i1 %cmp110, label %land.lhs.true112, label %if.end173

land.lhs.true112:                                 ; preds = %lor.lhs.false109, %land.lhs.true106
  %71 = load i32, i32* @shell_input_line_index, align 4
  %cmp113 = icmp ugt i32 %71, 1
  br i1 %cmp113, label %cond.true115, label %cond.false120

cond.true115:                                     ; preds = %land.lhs.true112
  %72 = load i8*, i8** @shell_input_line_property, align 4
  %73 = load i32, i32* @shell_input_line_index, align 4
  %sub116 = sub i32 %73, 1
  %arrayidx117 = getelementptr inbounds i8, i8* %72, i32 %sub116
  %74 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %74 to i32
  %tobool119 = icmp ne i32 %conv118, 0
  br i1 %tobool119, label %if.then121, label %if.end173

cond.false120:                                    ; preds = %land.lhs.true112
  br i1 true, label %if.then121, label %if.end173

if.then121:                                       ; preds = %cond.false120, %cond.true115
  %75 = load i32, i32* %character.addr, align 4
  %cmp122 = icmp eq i32 %75, 124
  br i1 %cmp122, label %if.then124, label %if.end125

if.then124:                                       ; preds = %if.then121
  br label %got_character

if.end125:                                        ; preds = %if.then121
  br label %do.body126

do.body126:                                       ; preds = %if.end125
  %76 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add127 = add nsw i32 %76, 2
  %77 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp128 = icmp sgt i32 %add127, %77
  br i1 %cmp128, label %if.then130, label %if.end134

if.then130:                                       ; preds = %do.body126
  %78 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %79 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add131 = add nsw i32 %79, 10
  store i32 %add131, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul132 = mul i32 %add131, 1
  %call133 = call i8* @sh_xrealloc(i8* %78, i32 %mul132, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4790)
  store i8* %call133, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end134

if.end134:                                        ; preds = %if.then130, %do.body126
  %80 = load i32, i32* %character.addr, align 4
  %conv135 = trunc i32 %80 to i8
  %81 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %82 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %81, i32 %82
  store i8 %conv135, i8* %arrayidx136, align 1
  %83 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc137 = add nsw i32 %83, 1
  store i32 %inc137, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end138

do.end138:                                        ; preds = %if.end134
  %84 = load i32, i32* %cd, align 4
  %call139 = call i8* @parse_matched_pair(i32 %84, i32 40, i32 41, i32* %ttoklen, i32 0)
  store i8* %call139, i8** %ttok, align 4
  %85 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec140 = add nsw i32 %85, -1
  store i32 %dec140, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %86 = load i8*, i8** %ttok, align 4
  %cmp141 = icmp eq i8* %86, @matched_pair_error
  br i1 %cmp141, label %if.then143, label %if.end144

if.then143:                                       ; preds = %do.end138
  store i32 -1, i32* %retval, align 4
  br label %return

if.end144:                                        ; preds = %do.end138
  br label %do.body145

do.body145:                                       ; preds = %if.end144
  %87 = load i32, i32* %token_index, align 4
  %88 = load i32, i32* %ttoklen, align 4
  %add146 = add nsw i32 %88, 2
  %add147 = add nsw i32 %87, %add146
  %89 = load i32, i32* @token_buffer_size, align 4
  %cmp148 = icmp sge i32 %add147, %89
  br i1 %cmp148, label %if.then150, label %if.end160

if.then150:                                       ; preds = %do.body145
  br label %while.cond151

while.cond151:                                    ; preds = %while.body156, %if.then150
  %90 = load i32, i32* %token_index, align 4
  %91 = load i32, i32* %ttoklen, align 4
  %add152 = add nsw i32 %91, 2
  %add153 = add nsw i32 %90, %add152
  %92 = load i32, i32* @token_buffer_size, align 4
  %cmp154 = icmp sge i32 %add153, %92
  br i1 %cmp154, label %while.body156, label %while.end158

while.body156:                                    ; preds = %while.cond151
  %93 = load i32, i32* @token_buffer_size, align 4
  %add157 = add nsw i32 %93, 512
  store i32 %add157, i32* @token_buffer_size, align 4
  br label %while.cond151

while.end158:                                     ; preds = %while.cond151
  %94 = load i8*, i8** @token, align 4
  %95 = load i32, i32* @token_buffer_size, align 4
  %call159 = call i8* @sh_xrealloc(i8* %94, i32 %95, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4796)
  store i8* %call159, i8** @token, align 4
  br label %if.end160

if.end160:                                        ; preds = %while.end158, %do.body145
  br label %do.end161

do.end161:                                        ; preds = %if.end160
  %96 = load i32, i32* %character.addr, align 4
  %conv162 = trunc i32 %96 to i8
  %97 = load i8*, i8** @token, align 4
  %98 = load i32, i32* %token_index, align 4
  %inc163 = add nsw i32 %98, 1
  store i32 %inc163, i32* %token_index, align 4
  %arrayidx164 = getelementptr inbounds i8, i8* %97, i32 %98
  store i8 %conv162, i8* %arrayidx164, align 1
  %99 = load i8*, i8** @token, align 4
  %100 = load i32, i32* %token_index, align 4
  %add.ptr165 = getelementptr inbounds i8, i8* %99, i32 %100
  %101 = load i8*, i8** %ttok, align 4
  %call166 = call i8* @strcpy(i8* %add.ptr165, i8* %101)
  %102 = load i32, i32* %ttoklen, align 4
  %103 = load i32, i32* %token_index, align 4
  %add167 = add nsw i32 %103, %102
  store i32 %add167, i32* %token_index, align 4
  br label %do.body168

do.body168:                                       ; preds = %do.end161
  %104 = load i8*, i8** %ttok, align 4
  %tobool169 = icmp ne i8* %104, null
  br i1 %tobool169, label %if.then170, label %if.end171

if.then170:                                       ; preds = %do.body168
  %105 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4800)
  br label %if.end171

if.end171:                                        ; preds = %if.then170, %do.body168
  br label %do.end172

do.end172:                                        ; preds = %if.end171
  store i32 0, i32* %all_digit_token, align 4
  store i32 0, i32* %dollar_present, align 4
  br label %next_character

if.end173:                                        ; preds = %cond.false120, %cond.true115, %lor.lhs.false109, %if.end103
  %106 = load i32, i32* @extended_glob, align 4
  %tobool174 = icmp ne i32 %106, 0
  br i1 %tobool174, label %land.lhs.true175, label %if.end265

land.lhs.true175:                                 ; preds = %if.end173
  %107 = load i32, i32* %character.addr, align 4
  %cmp176 = icmp eq i32 %107, 64
  br i1 %cmp176, label %land.lhs.true190, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %land.lhs.true175
  %108 = load i32, i32* %character.addr, align 4
  %cmp179 = icmp eq i32 %108, 42
  br i1 %cmp179, label %land.lhs.true190, label %lor.lhs.false181

lor.lhs.false181:                                 ; preds = %lor.lhs.false178
  %109 = load i32, i32* %character.addr, align 4
  %cmp182 = icmp eq i32 %109, 43
  br i1 %cmp182, label %land.lhs.true190, label %lor.lhs.false184

lor.lhs.false184:                                 ; preds = %lor.lhs.false181
  %110 = load i32, i32* %character.addr, align 4
  %cmp185 = icmp eq i32 %110, 63
  br i1 %cmp185, label %land.lhs.true190, label %lor.lhs.false187

lor.lhs.false187:                                 ; preds = %lor.lhs.false184
  %111 = load i32, i32* %character.addr, align 4
  %cmp188 = icmp eq i32 %111, 33
  br i1 %cmp188, label %land.lhs.true190, label %if.end265

land.lhs.true190:                                 ; preds = %lor.lhs.false187, %lor.lhs.false184, %lor.lhs.false181, %lor.lhs.false178, %land.lhs.true175
  %112 = load i32, i32* @shell_input_line_index, align 4
  %cmp191 = icmp ugt i32 %112, 1
  br i1 %cmp191, label %cond.true193, label %cond.false198

cond.true193:                                     ; preds = %land.lhs.true190
  %113 = load i8*, i8** @shell_input_line_property, align 4
  %114 = load i32, i32* @shell_input_line_index, align 4
  %sub194 = sub i32 %114, 1
  %arrayidx195 = getelementptr inbounds i8, i8* %113, i32 %sub194
  %115 = load i8, i8* %arrayidx195, align 1
  %conv196 = sext i8 %115 to i32
  %tobool197 = icmp ne i32 %conv196, 0
  br i1 %tobool197, label %if.then199, label %if.end265

cond.false198:                                    ; preds = %land.lhs.true190
  br i1 true, label %if.then199, label %if.end265

if.then199:                                       ; preds = %cond.false198, %cond.true193
  %call200 = call i32 @shell_getc(i32 1)
  store i32 %call200, i32* %peek_char, align 4
  %116 = load i32, i32* %peek_char, align 4
  %cmp201 = icmp eq i32 %116, 40
  br i1 %cmp201, label %land.lhs.true203, label %if.else263

land.lhs.true203:                                 ; preds = %if.then199
  %117 = load i32, i32* @shell_input_line_index, align 4
  %cmp204 = icmp ugt i32 %117, 1
  br i1 %cmp204, label %cond.true206, label %cond.false211

cond.true206:                                     ; preds = %land.lhs.true203
  %118 = load i8*, i8** @shell_input_line_property, align 4
  %119 = load i32, i32* @shell_input_line_index, align 4
  %sub207 = sub i32 %119, 1
  %arrayidx208 = getelementptr inbounds i8, i8* %118, i32 %sub207
  %120 = load i8, i8* %arrayidx208, align 1
  %conv209 = sext i8 %120 to i32
  %tobool210 = icmp ne i32 %conv209, 0
  br i1 %tobool210, label %if.then212, label %if.else263

cond.false211:                                    ; preds = %land.lhs.true203
  br i1 true, label %if.then212, label %if.else263

if.then212:                                       ; preds = %cond.false211, %cond.true206
  br label %do.body213

do.body213:                                       ; preds = %if.then212
  %121 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add214 = add nsw i32 %121, 2
  %122 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp215 = icmp sgt i32 %add214, %122
  br i1 %cmp215, label %if.then217, label %if.end221

if.then217:                                       ; preds = %do.body213
  %123 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %124 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add218 = add nsw i32 %124, 10
  store i32 %add218, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul219 = mul i32 %add218, 1
  %call220 = call i8* @sh_xrealloc(i8* %123, i32 %mul219, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4813)
  store i8* %call220, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then217, %do.body213
  %125 = load i32, i32* %peek_char, align 4
  %conv222 = trunc i32 %125 to i8
  %126 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %127 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx223 = getelementptr inbounds i8, i8* %126, i32 %127
  store i8 %conv222, i8* %arrayidx223, align 1
  %128 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc224 = add nsw i32 %128, 1
  store i32 %inc224, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end225

do.end225:                                        ; preds = %if.end221
  %129 = load i32, i32* %cd, align 4
  %call226 = call i8* @parse_matched_pair(i32 %129, i32 40, i32 41, i32* %ttoklen, i32 0)
  store i8* %call226, i8** %ttok, align 4
  %130 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec227 = add nsw i32 %130, -1
  store i32 %dec227, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %131 = load i8*, i8** %ttok, align 4
  %cmp228 = icmp eq i8* %131, @matched_pair_error
  br i1 %cmp228, label %if.then230, label %if.end231

if.then230:                                       ; preds = %do.end225
  store i32 -1, i32* %retval, align 4
  br label %return

if.end231:                                        ; preds = %do.end225
  br label %do.body232

do.body232:                                       ; preds = %if.end231
  %132 = load i32, i32* %token_index, align 4
  %133 = load i32, i32* %ttoklen, align 4
  %add233 = add nsw i32 %133, 3
  %add234 = add nsw i32 %132, %add233
  %134 = load i32, i32* @token_buffer_size, align 4
  %cmp235 = icmp sge i32 %add234, %134
  br i1 %cmp235, label %if.then237, label %if.end247

if.then237:                                       ; preds = %do.body232
  br label %while.cond238

while.cond238:                                    ; preds = %while.body243, %if.then237
  %135 = load i32, i32* %token_index, align 4
  %136 = load i32, i32* %ttoklen, align 4
  %add239 = add nsw i32 %136, 3
  %add240 = add nsw i32 %135, %add239
  %137 = load i32, i32* @token_buffer_size, align 4
  %cmp241 = icmp sge i32 %add240, %137
  br i1 %cmp241, label %while.body243, label %while.end245

while.body243:                                    ; preds = %while.cond238
  %138 = load i32, i32* @token_buffer_size, align 4
  %add244 = add nsw i32 %138, 512
  store i32 %add244, i32* @token_buffer_size, align 4
  br label %while.cond238

while.end245:                                     ; preds = %while.cond238
  %139 = load i8*, i8** @token, align 4
  %140 = load i32, i32* @token_buffer_size, align 4
  %call246 = call i8* @sh_xrealloc(i8* %139, i32 %140, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4820)
  store i8* %call246, i8** @token, align 4
  br label %if.end247

if.end247:                                        ; preds = %while.end245, %do.body232
  br label %do.end248

do.end248:                                        ; preds = %if.end247
  %141 = load i32, i32* %character.addr, align 4
  %conv249 = trunc i32 %141 to i8
  %142 = load i8*, i8** @token, align 4
  %143 = load i32, i32* %token_index, align 4
  %inc250 = add nsw i32 %143, 1
  store i32 %inc250, i32* %token_index, align 4
  %arrayidx251 = getelementptr inbounds i8, i8* %142, i32 %143
  store i8 %conv249, i8* %arrayidx251, align 1
  %144 = load i32, i32* %peek_char, align 4
  %conv252 = trunc i32 %144 to i8
  %145 = load i8*, i8** @token, align 4
  %146 = load i32, i32* %token_index, align 4
  %inc253 = add nsw i32 %146, 1
  store i32 %inc253, i32* %token_index, align 4
  %arrayidx254 = getelementptr inbounds i8, i8* %145, i32 %146
  store i8 %conv252, i8* %arrayidx254, align 1
  %147 = load i8*, i8** @token, align 4
  %148 = load i32, i32* %token_index, align 4
  %add.ptr255 = getelementptr inbounds i8, i8* %147, i32 %148
  %149 = load i8*, i8** %ttok, align 4
  %call256 = call i8* @strcpy(i8* %add.ptr255, i8* %149)
  %150 = load i32, i32* %ttoklen, align 4
  %151 = load i32, i32* %token_index, align 4
  %add257 = add nsw i32 %151, %150
  store i32 %add257, i32* %token_index, align 4
  br label %do.body258

do.body258:                                       ; preds = %do.end248
  %152 = load i8*, i8** %ttok, align 4
  %tobool259 = icmp ne i8* %152, null
  br i1 %tobool259, label %if.then260, label %if.end261

if.then260:                                       ; preds = %do.body258
  %153 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %153, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4825)
  br label %if.end261

if.end261:                                        ; preds = %if.then260, %do.body258
  br label %do.end262

do.end262:                                        ; preds = %if.end261
  store i32 0, i32* %all_digit_token, align 4
  store i32 0, i32* %dollar_present, align 4
  br label %next_character

if.else263:                                       ; preds = %cond.false211, %cond.true206, %if.then199
  %154 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %154)
  br label %if.end264

if.end264:                                        ; preds = %if.else263
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %cond.false198, %cond.true193, %lor.lhs.false187, %if.end173
  %155 = load i32, i32* %character.addr, align 4
  %cmp266 = icmp eq i32 %155, 36
  br i1 %cmp266, label %if.then274, label %lor.lhs.false268

lor.lhs.false268:                                 ; preds = %if.end265
  %156 = load i32, i32* %character.addr, align 4
  %cmp269 = icmp eq i32 %156, 60
  br i1 %cmp269, label %if.then274, label %lor.lhs.false271

lor.lhs.false271:                                 ; preds = %lor.lhs.false268
  %157 = load i32, i32* %character.addr, align 4
  %cmp272 = icmp eq i32 %157, 62
  br i1 %cmp272, label %if.then274, label %if.else478

if.then274:                                       ; preds = %lor.lhs.false271, %lor.lhs.false268, %if.end265
  %call275 = call i32 @shell_getc(i32 1)
  store i32 %call275, i32* %peek_char, align 4
  %158 = load i32, i32* %peek_char, align 4
  %cmp276 = icmp eq i32 %158, 40
  br i1 %cmp276, label %land.lhs.true287, label %lor.lhs.false278

lor.lhs.false278:                                 ; preds = %if.then274
  %159 = load i32, i32* %peek_char, align 4
  %cmp279 = icmp eq i32 %159, 123
  br i1 %cmp279, label %land.lhs.true284, label %lor.lhs.false281

lor.lhs.false281:                                 ; preds = %lor.lhs.false278
  %160 = load i32, i32* %peek_char, align 4
  %cmp282 = icmp eq i32 %160, 91
  br i1 %cmp282, label %land.lhs.true284, label %if.else359

land.lhs.true284:                                 ; preds = %lor.lhs.false281, %lor.lhs.false278
  %161 = load i32, i32* %character.addr, align 4
  %cmp285 = icmp eq i32 %161, 36
  br i1 %cmp285, label %land.lhs.true287, label %if.else359

land.lhs.true287:                                 ; preds = %land.lhs.true284, %if.then274
  %162 = load i32, i32* @shell_input_line_index, align 4
  %cmp288 = icmp ugt i32 %162, 1
  br i1 %cmp288, label %cond.true290, label %cond.false295

cond.true290:                                     ; preds = %land.lhs.true287
  %163 = load i8*, i8** @shell_input_line_property, align 4
  %164 = load i32, i32* @shell_input_line_index, align 4
  %sub291 = sub i32 %164, 1
  %arrayidx292 = getelementptr inbounds i8, i8* %163, i32 %sub291
  %165 = load i8, i8* %arrayidx292, align 1
  %conv293 = sext i8 %165 to i32
  %tobool294 = icmp ne i32 %conv293, 0
  br i1 %tobool294, label %if.then296, label %if.else359

cond.false295:                                    ; preds = %land.lhs.true287
  br i1 true, label %if.then296, label %if.else359

if.then296:                                       ; preds = %cond.false295, %cond.true290
  %166 = load i32, i32* %peek_char, align 4
  %cmp297 = icmp eq i32 %166, 123
  br i1 %cmp297, label %if.then299, label %if.else301

if.then299:                                       ; preds = %if.then296
  %167 = load i32, i32* %cd, align 4
  %call300 = call i8* @parse_matched_pair(i32 %167, i32 123, i32 125, i32* %ttoklen, i32 65)
  store i8* %call300, i8** %ttok, align 4
  br label %if.end323

if.else301:                                       ; preds = %if.then296
  %168 = load i32, i32* %peek_char, align 4
  %cmp302 = icmp eq i32 %168, 40
  br i1 %cmp302, label %if.then304, label %if.else320

if.then304:                                       ; preds = %if.else301
  br label %do.body305

do.body305:                                       ; preds = %if.then304
  %169 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add306 = add nsw i32 %169, 2
  %170 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp307 = icmp sgt i32 %add306, %170
  br i1 %cmp307, label %if.then309, label %if.end313

if.then309:                                       ; preds = %do.body305
  %171 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %172 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add310 = add nsw i32 %172, 10
  store i32 %add310, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul311 = mul i32 %add310, 1
  %call312 = call i8* @sh_xrealloc(i8* %171, i32 %mul311, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4852)
  store i8* %call312, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end313

if.end313:                                        ; preds = %if.then309, %do.body305
  %173 = load i32, i32* %peek_char, align 4
  %conv314 = trunc i32 %173 to i8
  %174 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %175 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx315 = getelementptr inbounds i8, i8* %174, i32 %175
  store i8 %conv314, i8* %arrayidx315, align 1
  %176 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc316 = add nsw i32 %176, 1
  store i32 %inc316, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end317

do.end317:                                        ; preds = %if.end313
  %177 = load i32, i32* %cd, align 4
  %call318 = call i8* @parse_comsub(i32 %177, i32 40, i32 41, i32* %ttoklen, i32 8)
  store i8* %call318, i8** %ttok, align 4
  %178 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec319 = add nsw i32 %178, -1
  store i32 %dec319, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %if.end322

if.else320:                                       ; preds = %if.else301
  %179 = load i32, i32* %cd, align 4
  %call321 = call i8* @parse_matched_pair(i32 %179, i32 91, i32 93, i32* %ttoklen, i32 0)
  store i8* %call321, i8** %ttok, align 4
  br label %if.end322

if.end322:                                        ; preds = %if.else320, %do.end317
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.then299
  %180 = load i8*, i8** %ttok, align 4
  %cmp324 = icmp eq i8* %180, @matched_pair_error
  br i1 %cmp324, label %if.then326, label %if.end327

if.then326:                                       ; preds = %if.end323
  store i32 -1, i32* %retval, align 4
  br label %return

if.end327:                                        ; preds = %if.end323
  br label %do.body328

do.body328:                                       ; preds = %if.end327
  %181 = load i32, i32* %token_index, align 4
  %182 = load i32, i32* %ttoklen, align 4
  %add329 = add nsw i32 %182, 3
  %add330 = add nsw i32 %181, %add329
  %183 = load i32, i32* @token_buffer_size, align 4
  %cmp331 = icmp sge i32 %add330, %183
  br i1 %cmp331, label %if.then333, label %if.end343

if.then333:                                       ; preds = %do.body328
  br label %while.cond334

while.cond334:                                    ; preds = %while.body339, %if.then333
  %184 = load i32, i32* %token_index, align 4
  %185 = load i32, i32* %ttoklen, align 4
  %add335 = add nsw i32 %185, 3
  %add336 = add nsw i32 %184, %add335
  %186 = load i32, i32* @token_buffer_size, align 4
  %cmp337 = icmp sge i32 %add336, %186
  br i1 %cmp337, label %while.body339, label %while.end341

while.body339:                                    ; preds = %while.cond334
  %187 = load i32, i32* @token_buffer_size, align 4
  %add340 = add nsw i32 %187, 512
  store i32 %add340, i32* @token_buffer_size, align 4
  br label %while.cond334

while.end341:                                     ; preds = %while.cond334
  %188 = load i8*, i8** @token, align 4
  %189 = load i32, i32* @token_buffer_size, align 4
  %call342 = call i8* @sh_xrealloc(i8* %188, i32 %189, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4862)
  store i8* %call342, i8** @token, align 4
  br label %if.end343

if.end343:                                        ; preds = %while.end341, %do.body328
  br label %do.end344

do.end344:                                        ; preds = %if.end343
  %190 = load i32, i32* %character.addr, align 4
  %conv345 = trunc i32 %190 to i8
  %191 = load i8*, i8** @token, align 4
  %192 = load i32, i32* %token_index, align 4
  %inc346 = add nsw i32 %192, 1
  store i32 %inc346, i32* %token_index, align 4
  %arrayidx347 = getelementptr inbounds i8, i8* %191, i32 %192
  store i8 %conv345, i8* %arrayidx347, align 1
  %193 = load i32, i32* %peek_char, align 4
  %conv348 = trunc i32 %193 to i8
  %194 = load i8*, i8** @token, align 4
  %195 = load i32, i32* %token_index, align 4
  %inc349 = add nsw i32 %195, 1
  store i32 %inc349, i32* %token_index, align 4
  %arrayidx350 = getelementptr inbounds i8, i8* %194, i32 %195
  store i8 %conv348, i8* %arrayidx350, align 1
  %196 = load i8*, i8** @token, align 4
  %197 = load i32, i32* %token_index, align 4
  %add.ptr351 = getelementptr inbounds i8, i8* %196, i32 %197
  %198 = load i8*, i8** %ttok, align 4
  %call352 = call i8* @strcpy(i8* %add.ptr351, i8* %198)
  %199 = load i32, i32* %ttoklen, align 4
  %200 = load i32, i32* %token_index, align 4
  %add353 = add nsw i32 %200, %199
  store i32 %add353, i32* %token_index, align 4
  br label %do.body354

do.body354:                                       ; preds = %do.end344
  %201 = load i8*, i8** %ttok, align 4
  %tobool355 = icmp ne i8* %201, null
  br i1 %tobool355, label %if.then356, label %if.end357

if.then356:                                       ; preds = %do.body354
  %202 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %202, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4867)
  br label %if.end357

if.end357:                                        ; preds = %if.then356, %do.body354
  br label %do.end358

do.end358:                                        ; preds = %if.end357
  store i32 1, i32* %dollar_present, align 4
  store i32 0, i32* %all_digit_token, align 4
  br label %next_character

if.else359:                                       ; preds = %cond.false295, %cond.true290, %land.lhs.true284, %lor.lhs.false281
  %203 = load i32, i32* %character.addr, align 4
  %cmp360 = icmp eq i32 %203, 36
  br i1 %cmp360, label %land.lhs.true362, label %if.else438

land.lhs.true362:                                 ; preds = %if.else359
  %204 = load i32, i32* %peek_char, align 4
  %cmp363 = icmp eq i32 %204, 39
  br i1 %cmp363, label %land.lhs.true368, label %lor.lhs.false365

lor.lhs.false365:                                 ; preds = %land.lhs.true362
  %205 = load i32, i32* %peek_char, align 4
  %cmp366 = icmp eq i32 %205, 34
  br i1 %cmp366, label %land.lhs.true368, label %if.else438

land.lhs.true368:                                 ; preds = %lor.lhs.false365, %land.lhs.true362
  %206 = load i32, i32* @shell_input_line_index, align 4
  %cmp369 = icmp ugt i32 %206, 1
  br i1 %cmp369, label %cond.true371, label %cond.false376

cond.true371:                                     ; preds = %land.lhs.true368
  %207 = load i8*, i8** @shell_input_line_property, align 4
  %208 = load i32, i32* @shell_input_line_index, align 4
  %sub372 = sub i32 %208, 1
  %arrayidx373 = getelementptr inbounds i8, i8* %207, i32 %sub372
  %209 = load i8, i8* %arrayidx373, align 1
  %conv374 = sext i8 %209 to i32
  %tobool375 = icmp ne i32 %conv374, 0
  br i1 %tobool375, label %if.then377, label %if.else438

cond.false376:                                    ; preds = %land.lhs.true368
  br i1 true, label %if.then377, label %if.else438

if.then377:                                       ; preds = %cond.false376, %cond.true371
  %210 = load i32, i32* @line_number, align 4
  store i32 %210, i32* %first_line, align 4
  br label %do.body378

do.body378:                                       ; preds = %if.then377
  %211 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add379 = add nsw i32 %211, 2
  %212 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp380 = icmp sgt i32 %add379, %212
  br i1 %cmp380, label %if.then382, label %if.end386

if.then382:                                       ; preds = %do.body378
  %213 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %214 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add383 = add nsw i32 %214, 10
  store i32 %add383, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul384 = mul i32 %add383, 1
  %call385 = call i8* @sh_xrealloc(i8* %213, i32 %mul384, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4878)
  store i8* %call385, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end386

if.end386:                                        ; preds = %if.then382, %do.body378
  %215 = load i32, i32* %peek_char, align 4
  %conv387 = trunc i32 %215 to i8
  %216 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %217 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx388 = getelementptr inbounds i8, i8* %216, i32 %217
  store i8 %conv387, i8* %arrayidx388, align 1
  %218 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc389 = add nsw i32 %218, 1
  store i32 %inc389, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end390

do.end390:                                        ; preds = %if.end386
  %219 = load i32, i32* %peek_char, align 4
  %220 = load i32, i32* %peek_char, align 4
  %221 = load i32, i32* %peek_char, align 4
  %222 = load i32, i32* %peek_char, align 4
  %cmp391 = icmp eq i32 %222, 39
  %cond393 = select i1 %cmp391, i32 2, i32 0
  %call394 = call i8* @parse_matched_pair(i32 %219, i32 %220, i32 %221, i32* %ttoklen, i32 %cond393)
  store i8* %call394, i8** %ttok, align 4
  %223 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec395 = add nsw i32 %223, -1
  store i32 %dec395, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %224 = load i8*, i8** %ttok, align 4
  %cmp396 = icmp eq i8* %224, @matched_pair_error
  br i1 %cmp396, label %if.then398, label %if.end399

if.then398:                                       ; preds = %do.end390
  store i32 -1, i32* %retval, align 4
  br label %return

if.end399:                                        ; preds = %do.end390
  %225 = load i32, i32* %peek_char, align 4
  %cmp400 = icmp eq i32 %225, 39
  br i1 %cmp400, label %if.then402, label %if.else407

if.then402:                                       ; preds = %if.end399
  %226 = load i8*, i8** %ttok, align 4
  %227 = load i32, i32* %ttoklen, align 4
  %sub403 = sub nsw i32 %227, 1
  %call404 = call i8* @ansiexpand(i8* %226, i32 0, i32 %sub403, i32* %ttranslen)
  store i8* %call404, i8** %ttrans, align 4
  %228 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %228, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4888)
  %229 = load i8*, i8** %ttrans, align 4
  %call405 = call i8* @sh_single_quote(i8* %229)
  store i8* %call405, i8** %ttok, align 4
  %230 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %230, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4894)
  %231 = load i8*, i8** %ttok, align 4
  %call406 = call i32 @strlen(i8* %231)
  store i32 %call406, i32* %ttranslen, align 4
  %232 = load i8*, i8** %ttok, align 4
  store i8* %232, i8** %ttrans, align 4
  br label %if.end412

if.else407:                                       ; preds = %if.end399
  %233 = load i8*, i8** %ttok, align 4
  %234 = load i32, i32* %ttoklen, align 4
  %sub408 = sub nsw i32 %234, 1
  %235 = load i32, i32* %first_line, align 4
  %call409 = call i8* @localeexpand(i8* %233, i32 0, i32 %sub408, i32 %235, i32* %ttranslen)
  store i8* %call409, i8** %ttrans, align 4
  %236 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %236, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4902)
  %237 = load i8*, i8** %ttrans, align 4
  %238 = load i32, i32* %ttranslen, align 4
  %call410 = call i8* @sh_mkdoublequoted(i8* %237, i32 %238, i32 0)
  store i8* %call410, i8** %ttok, align 4
  %239 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %239, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4906)
  %240 = load i32, i32* %ttranslen, align 4
  %add411 = add nsw i32 %240, 2
  store i32 %add411, i32* %ttranslen, align 4
  %241 = load i8*, i8** %ttok, align 4
  store i8* %241, i8** %ttrans, align 4
  br label %if.end412

if.end412:                                        ; preds = %if.else407, %if.then402
  br label %do.body413

do.body413:                                       ; preds = %if.end412
  %242 = load i32, i32* %token_index, align 4
  %243 = load i32, i32* %ttranslen, align 4
  %add414 = add nsw i32 %243, 1
  %add415 = add nsw i32 %242, %add414
  %244 = load i32, i32* @token_buffer_size, align 4
  %cmp416 = icmp sge i32 %add415, %244
  br i1 %cmp416, label %if.then418, label %if.end428

if.then418:                                       ; preds = %do.body413
  br label %while.cond419

while.cond419:                                    ; preds = %while.body424, %if.then418
  %245 = load i32, i32* %token_index, align 4
  %246 = load i32, i32* %ttranslen, align 4
  %add420 = add nsw i32 %246, 1
  %add421 = add nsw i32 %245, %add420
  %247 = load i32, i32* @token_buffer_size, align 4
  %cmp422 = icmp sge i32 %add421, %247
  br i1 %cmp422, label %while.body424, label %while.end426

while.body424:                                    ; preds = %while.cond419
  %248 = load i32, i32* @token_buffer_size, align 4
  %add425 = add nsw i32 %248, 512
  store i32 %add425, i32* @token_buffer_size, align 4
  br label %while.cond419

while.end426:                                     ; preds = %while.cond419
  %249 = load i8*, i8** @token, align 4
  %250 = load i32, i32* @token_buffer_size, align 4
  %call427 = call i8* @sh_xrealloc(i8* %249, i32 %250, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4913)
  store i8* %call427, i8** @token, align 4
  br label %if.end428

if.end428:                                        ; preds = %while.end426, %do.body413
  br label %do.end429

do.end429:                                        ; preds = %if.end428
  %251 = load i8*, i8** @token, align 4
  %252 = load i32, i32* %token_index, align 4
  %add.ptr430 = getelementptr inbounds i8, i8* %251, i32 %252
  %253 = load i8*, i8** %ttrans, align 4
  %call431 = call i8* @strcpy(i8* %add.ptr430, i8* %253)
  %254 = load i32, i32* %ttranslen, align 4
  %255 = load i32, i32* %token_index, align 4
  %add432 = add nsw i32 %255, %254
  store i32 %add432, i32* %token_index, align 4
  br label %do.body433

do.body433:                                       ; preds = %do.end429
  %256 = load i8*, i8** %ttrans, align 4
  %tobool434 = icmp ne i8* %256, null
  br i1 %tobool434, label %if.then435, label %if.end436

if.then435:                                       ; preds = %do.body433
  %257 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %257, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4916)
  br label %if.end436

if.end436:                                        ; preds = %if.then435, %do.body433
  br label %do.end437

do.end437:                                        ; preds = %if.end436
  store i32 1, i32* %quoted, align 4
  store i32 0, i32* %all_digit_token, align 4
  br label %next_character

if.else438:                                       ; preds = %cond.false376, %cond.true371, %lor.lhs.false365, %if.else359
  %258 = load i32, i32* %character.addr, align 4
  %cmp439 = icmp eq i32 %258, 36
  br i1 %cmp439, label %land.lhs.true441, label %if.else474

land.lhs.true441:                                 ; preds = %if.else438
  %259 = load i32, i32* %peek_char, align 4
  %cmp442 = icmp eq i32 %259, 36
  br i1 %cmp442, label %land.lhs.true444, label %if.else474

land.lhs.true444:                                 ; preds = %land.lhs.true441
  %260 = load i32, i32* @shell_input_line_index, align 4
  %cmp445 = icmp ugt i32 %260, 1
  br i1 %cmp445, label %cond.true447, label %cond.false452

cond.true447:                                     ; preds = %land.lhs.true444
  %261 = load i8*, i8** @shell_input_line_property, align 4
  %262 = load i32, i32* @shell_input_line_index, align 4
  %sub448 = sub i32 %262, 1
  %arrayidx449 = getelementptr inbounds i8, i8* %261, i32 %sub448
  %263 = load i8, i8* %arrayidx449, align 1
  %conv450 = sext i8 %263 to i32
  %tobool451 = icmp ne i32 %conv450, 0
  br i1 %tobool451, label %if.then453, label %if.else474

cond.false452:                                    ; preds = %land.lhs.true444
  br i1 true, label %if.then453, label %if.else474

if.then453:                                       ; preds = %cond.false452, %cond.true447
  br label %do.body454

do.body454:                                       ; preds = %if.then453
  %264 = load i32, i32* %token_index, align 4
  %add455 = add nsw i32 %264, 3
  %265 = load i32, i32* @token_buffer_size, align 4
  %cmp456 = icmp sge i32 %add455, %265
  br i1 %cmp456, label %if.then458, label %if.end467

if.then458:                                       ; preds = %do.body454
  br label %while.cond459

while.cond459:                                    ; preds = %while.body463, %if.then458
  %266 = load i32, i32* %token_index, align 4
  %add460 = add nsw i32 %266, 3
  %267 = load i32, i32* @token_buffer_size, align 4
  %cmp461 = icmp sge i32 %add460, %267
  br i1 %cmp461, label %while.body463, label %while.end465

while.body463:                                    ; preds = %while.cond459
  %268 = load i32, i32* @token_buffer_size, align 4
  %add464 = add nsw i32 %268, 512
  store i32 %add464, i32* @token_buffer_size, align 4
  br label %while.cond459

while.end465:                                     ; preds = %while.cond459
  %269 = load i8*, i8** @token, align 4
  %270 = load i32, i32* @token_buffer_size, align 4
  %call466 = call i8* @sh_xrealloc(i8* %269, i32 %270, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4927)
  store i8* %call466, i8** @token, align 4
  br label %if.end467

if.end467:                                        ; preds = %while.end465, %do.body454
  br label %do.end468

do.end468:                                        ; preds = %if.end467
  %271 = load i8*, i8** @token, align 4
  %272 = load i32, i32* %token_index, align 4
  %inc469 = add nsw i32 %272, 1
  store i32 %inc469, i32* %token_index, align 4
  %arrayidx470 = getelementptr inbounds i8, i8* %271, i32 %272
  store i8 36, i8* %arrayidx470, align 1
  %273 = load i32, i32* %peek_char, align 4
  %conv471 = trunc i32 %273 to i8
  %274 = load i8*, i8** @token, align 4
  %275 = load i32, i32* %token_index, align 4
  %inc472 = add nsw i32 %275, 1
  store i32 %inc472, i32* %token_index, align 4
  %arrayidx473 = getelementptr inbounds i8, i8* %274, i32 %275
  store i8 %conv471, i8* %arrayidx473, align 1
  store i32 1, i32* %dollar_present, align 4
  store i32 0, i32* %all_digit_token, align 4
  br label %next_character

if.else474:                                       ; preds = %cond.false452, %cond.true447, %land.lhs.true441, %if.else438
  %276 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %276)
  br label %if.end475

if.end475:                                        ; preds = %if.else474
  br label %if.end476

if.end476:                                        ; preds = %if.end475
  br label %if.end477

if.end477:                                        ; preds = %if.end476
  br label %if.end725

if.else478:                                       ; preds = %lor.lhs.false271
  %277 = load i32, i32* %character.addr, align 4
  %cmp479 = icmp eq i32 %277, 91
  br i1 %cmp479, label %land.lhs.true481, label %if.else592

land.lhs.true481:                                 ; preds = %if.else478
  %278 = load i32, i32* %token_index, align 4
  %cmp482 = icmp sgt i32 %278, 0
  br i1 %cmp482, label %land.lhs.true484, label %lor.lhs.false543

land.lhs.true484:                                 ; preds = %land.lhs.true481
  %279 = load i32, i32* @last_read_token, align 4
  %cmp485 = icmp eq i32 %279, 281
  br i1 %cmp485, label %land.lhs.true536, label %lor.lhs.false487

lor.lhs.false487:                                 ; preds = %land.lhs.true484
  %280 = load i32, i32* @parser_state, align 4
  %and488 = and i32 %280, 524288
  %tobool489 = icmp ne i32 %and488, 0
  br i1 %tobool489, label %land.lhs.true490, label %lor.lhs.false524

land.lhs.true490:                                 ; preds = %lor.lhs.false487
  %281 = load i32, i32* @last_read_token, align 4
  %cmp491 = icmp eq i32 %281, 60
  br i1 %cmp491, label %lor.end, label %lor.lhs.false493

lor.lhs.false493:                                 ; preds = %land.lhs.true490
  %282 = load i32, i32* @last_read_token, align 4
  %cmp494 = icmp eq i32 %282, 62
  br i1 %cmp494, label %lor.end, label %lor.lhs.false496

lor.lhs.false496:                                 ; preds = %lor.lhs.false493
  %283 = load i32, i32* @last_read_token, align 4
  %cmp497 = icmp eq i32 %283, 289
  br i1 %cmp497, label %lor.end, label %lor.lhs.false499

lor.lhs.false499:                                 ; preds = %lor.lhs.false496
  %284 = load i32, i32* @last_read_token, align 4
  %cmp500 = icmp eq i32 %284, 301
  br i1 %cmp500, label %lor.end, label %lor.lhs.false502

lor.lhs.false502:                                 ; preds = %lor.lhs.false499
  %285 = load i32, i32* @last_read_token, align 4
  %cmp503 = icmp eq i32 %285, 300
  br i1 %cmp503, label %lor.end, label %lor.lhs.false505

lor.lhs.false505:                                 ; preds = %lor.lhs.false502
  %286 = load i32, i32* @last_read_token, align 4
  %cmp506 = icmp eq i32 %286, 297
  br i1 %cmp506, label %lor.end, label %lor.lhs.false508

lor.lhs.false508:                                 ; preds = %lor.lhs.false505
  %287 = load i32, i32* @last_read_token, align 4
  %cmp509 = icmp eq i32 %287, 290
  br i1 %cmp509, label %lor.end, label %lor.lhs.false511

lor.lhs.false511:                                 ; preds = %lor.lhs.false508
  %288 = load i32, i32* @last_read_token, align 4
  %cmp512 = icmp eq i32 %288, 292
  br i1 %cmp512, label %lor.end, label %lor.lhs.false514

lor.lhs.false514:                                 ; preds = %lor.lhs.false511
  %289 = load i32, i32* @last_read_token, align 4
  %cmp515 = icmp eq i32 %289, 291
  br i1 %cmp515, label %lor.end, label %lor.lhs.false517

lor.lhs.false517:                                 ; preds = %lor.lhs.false514
  %290 = load i32, i32* @last_read_token, align 4
  %cmp518 = icmp eq i32 %290, 293
  br i1 %cmp518, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false517
  %291 = load i32, i32* @last_read_token, align 4
  %cmp520 = icmp eq i32 %291, 298
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false517, %lor.lhs.false514, %lor.lhs.false511, %lor.lhs.false508, %lor.lhs.false505, %lor.lhs.false502, %lor.lhs.false499, %lor.lhs.false496, %lor.lhs.false493, %land.lhs.true490
  %292 = phi i1 [ true, %lor.lhs.false517 ], [ true, %lor.lhs.false514 ], [ true, %lor.lhs.false511 ], [ true, %lor.lhs.false508 ], [ true, %lor.lhs.false505 ], [ true, %lor.lhs.false502 ], [ true, %lor.lhs.false499 ], [ true, %lor.lhs.false496 ], [ true, %lor.lhs.false493 ], [ true, %land.lhs.true490 ], [ %cmp520, %lor.rhs ]
  %lor.ext = zext i1 %292 to i32
  %cmp522 = icmp eq i32 %lor.ext, 0
  br i1 %cmp522, label %land.lhs.true536, label %lor.lhs.false524

lor.lhs.false524:                                 ; preds = %lor.end, %lor.lhs.false487
  %293 = load i32, i32* @last_read_token, align 4
  %cmp525 = icmp ne i32 %293, 294
  br i1 %cmp525, label %land.lhs.true527, label %lor.lhs.false543

land.lhs.true527:                                 ; preds = %lor.lhs.false524
  %294 = load i32, i32* @last_read_token, align 4
  %cmp528 = icmp ne i32 %294, 295
  br i1 %cmp528, label %land.lhs.true530, label %lor.lhs.false543

land.lhs.true530:                                 ; preds = %land.lhs.true527
  %295 = load i32, i32* @last_read_token, align 4
  %cmp531 = icmp ne i32 %295, 296
  br i1 %cmp531, label %land.lhs.true533, label %lor.lhs.false543

land.lhs.true533:                                 ; preds = %land.lhs.true530
  %296 = load i32, i32* @last_read_token, align 4
  %call534 = call i32 @reserved_word_acceptable(i32 %296)
  %tobool535 = icmp ne i32 %call534, 0
  br i1 %tobool535, label %land.lhs.true536, label %lor.lhs.false543

land.lhs.true536:                                 ; preds = %land.lhs.true533, %lor.end, %land.lhs.true484
  %297 = load i32, i32* @parser_state, align 4
  %and537 = and i32 %297, 1
  %cmp538 = icmp eq i32 %and537, 0
  br i1 %cmp538, label %land.lhs.true540, label %lor.lhs.false543

land.lhs.true540:                                 ; preds = %land.lhs.true536
  %298 = load i8*, i8** @token, align 4
  %299 = load i32, i32* %token_index, align 4
  %call541 = call i32 @token_is_ident(i8* %298, i32 %299)
  %tobool542 = icmp ne i32 %call541, 0
  br i1 %tobool542, label %land.lhs.true549, label %lor.lhs.false543

lor.lhs.false543:                                 ; preds = %land.lhs.true540, %land.lhs.true536, %land.lhs.true533, %land.lhs.true530, %land.lhs.true527, %lor.lhs.false524, %land.lhs.true481
  %300 = load i32, i32* %token_index, align 4
  %cmp544 = icmp eq i32 %300, 0
  br i1 %cmp544, label %land.lhs.true546, label %if.else592

land.lhs.true546:                                 ; preds = %lor.lhs.false543
  %301 = load i32, i32* @parser_state, align 4
  %and547 = and i32 %301, 8192
  %tobool548 = icmp ne i32 %and547, 0
  br i1 %tobool548, label %land.lhs.true549, label %if.else592

land.lhs.true549:                                 ; preds = %land.lhs.true546, %land.lhs.true540
  %302 = load i32, i32* @shell_input_line_index, align 4
  %cmp550 = icmp ugt i32 %302, 1
  br i1 %cmp550, label %cond.true552, label %cond.false557

cond.true552:                                     ; preds = %land.lhs.true549
  %303 = load i8*, i8** @shell_input_line_property, align 4
  %304 = load i32, i32* @shell_input_line_index, align 4
  %sub553 = sub i32 %304, 1
  %arrayidx554 = getelementptr inbounds i8, i8* %303, i32 %sub553
  %305 = load i8, i8* %arrayidx554, align 1
  %conv555 = sext i8 %305 to i32
  %tobool556 = icmp ne i32 %conv555, 0
  br i1 %tobool556, label %if.then558, label %if.else592

cond.false557:                                    ; preds = %land.lhs.true549
  br i1 true, label %if.then558, label %if.else592

if.then558:                                       ; preds = %cond.false557, %cond.true552
  %306 = load i32, i32* %cd, align 4
  %call559 = call i8* @parse_matched_pair(i32 %306, i32 91, i32 93, i32* %ttoklen, i32 32)
  store i8* %call559, i8** %ttok, align 4
  %307 = load i8*, i8** %ttok, align 4
  %cmp560 = icmp eq i8* %307, @matched_pair_error
  br i1 %cmp560, label %if.then562, label %if.end563

if.then562:                                       ; preds = %if.then558
  store i32 -1, i32* %retval, align 4
  br label %return

if.end563:                                        ; preds = %if.then558
  br label %do.body564

do.body564:                                       ; preds = %if.end563
  %308 = load i32, i32* %token_index, align 4
  %309 = load i32, i32* %ttoklen, align 4
  %add565 = add nsw i32 %309, 2
  %add566 = add nsw i32 %308, %add565
  %310 = load i32, i32* @token_buffer_size, align 4
  %cmp567 = icmp sge i32 %add566, %310
  br i1 %cmp567, label %if.then569, label %if.end579

if.then569:                                       ; preds = %do.body564
  br label %while.cond570

while.cond570:                                    ; preds = %while.body575, %if.then569
  %311 = load i32, i32* %token_index, align 4
  %312 = load i32, i32* %ttoklen, align 4
  %add571 = add nsw i32 %312, 2
  %add572 = add nsw i32 %311, %add571
  %313 = load i32, i32* @token_buffer_size, align 4
  %cmp573 = icmp sge i32 %add572, %313
  br i1 %cmp573, label %while.body575, label %while.end577

while.body575:                                    ; preds = %while.cond570
  %314 = load i32, i32* @token_buffer_size, align 4
  %add576 = add nsw i32 %314, 512
  store i32 %add576, i32* @token_buffer_size, align 4
  br label %while.cond570

while.end577:                                     ; preds = %while.cond570
  %315 = load i8*, i8** @token, align 4
  %316 = load i32, i32* @token_buffer_size, align 4
  %call578 = call i8* @sh_xrealloc(i8* %315, i32 %316, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4951)
  store i8* %call578, i8** @token, align 4
  br label %if.end579

if.end579:                                        ; preds = %while.end577, %do.body564
  br label %do.end580

do.end580:                                        ; preds = %if.end579
  %317 = load i32, i32* %character.addr, align 4
  %conv581 = trunc i32 %317 to i8
  %318 = load i8*, i8** @token, align 4
  %319 = load i32, i32* %token_index, align 4
  %inc582 = add nsw i32 %319, 1
  store i32 %inc582, i32* %token_index, align 4
  %arrayidx583 = getelementptr inbounds i8, i8* %318, i32 %319
  store i8 %conv581, i8* %arrayidx583, align 1
  %320 = load i8*, i8** @token, align 4
  %321 = load i32, i32* %token_index, align 4
  %add.ptr584 = getelementptr inbounds i8, i8* %320, i32 %321
  %322 = load i8*, i8** %ttok, align 4
  %call585 = call i8* @strcpy(i8* %add.ptr584, i8* %322)
  %323 = load i32, i32* %ttoklen, align 4
  %324 = load i32, i32* %token_index, align 4
  %add586 = add nsw i32 %324, %323
  store i32 %add586, i32* %token_index, align 4
  br label %do.body587

do.body587:                                       ; preds = %do.end580
  %325 = load i8*, i8** %ttok, align 4
  %tobool588 = icmp ne i8* %325, null
  br i1 %tobool588, label %if.then589, label %if.end590

if.then589:                                       ; preds = %do.body587
  %326 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %326, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4955)
  br label %if.end590

if.end590:                                        ; preds = %if.then589, %do.body587
  br label %do.end591

do.end591:                                        ; preds = %if.end590
  store i32 0, i32* %all_digit_token, align 4
  br label %next_character

if.else592:                                       ; preds = %cond.false557, %cond.true552, %land.lhs.true546, %lor.lhs.false543, %if.else478
  %327 = load i32, i32* %character.addr, align 4
  %cmp593 = icmp eq i32 %327, 61
  br i1 %cmp593, label %land.lhs.true595, label %if.end723

land.lhs.true595:                                 ; preds = %if.else592
  %328 = load i32, i32* %token_index, align 4
  %cmp596 = icmp sgt i32 %328, 0
  br i1 %cmp596, label %land.lhs.true598, label %if.end723

land.lhs.true598:                                 ; preds = %land.lhs.true595
  %329 = load i32, i32* @last_read_token, align 4
  %cmp599 = icmp eq i32 %329, 281
  br i1 %cmp599, label %land.lhs.true653, label %lor.lhs.false601

lor.lhs.false601:                                 ; preds = %land.lhs.true598
  %330 = load i32, i32* @parser_state, align 4
  %and602 = and i32 %330, 524288
  %tobool603 = icmp ne i32 %and602, 0
  br i1 %tobool603, label %land.lhs.true604, label %lor.lhs.false641

land.lhs.true604:                                 ; preds = %lor.lhs.false601
  %331 = load i32, i32* @last_read_token, align 4
  %cmp605 = icmp eq i32 %331, 60
  br i1 %cmp605, label %lor.end637, label %lor.lhs.false607

lor.lhs.false607:                                 ; preds = %land.lhs.true604
  %332 = load i32, i32* @last_read_token, align 4
  %cmp608 = icmp eq i32 %332, 62
  br i1 %cmp608, label %lor.end637, label %lor.lhs.false610

lor.lhs.false610:                                 ; preds = %lor.lhs.false607
  %333 = load i32, i32* @last_read_token, align 4
  %cmp611 = icmp eq i32 %333, 289
  br i1 %cmp611, label %lor.end637, label %lor.lhs.false613

lor.lhs.false613:                                 ; preds = %lor.lhs.false610
  %334 = load i32, i32* @last_read_token, align 4
  %cmp614 = icmp eq i32 %334, 301
  br i1 %cmp614, label %lor.end637, label %lor.lhs.false616

lor.lhs.false616:                                 ; preds = %lor.lhs.false613
  %335 = load i32, i32* @last_read_token, align 4
  %cmp617 = icmp eq i32 %335, 300
  br i1 %cmp617, label %lor.end637, label %lor.lhs.false619

lor.lhs.false619:                                 ; preds = %lor.lhs.false616
  %336 = load i32, i32* @last_read_token, align 4
  %cmp620 = icmp eq i32 %336, 297
  br i1 %cmp620, label %lor.end637, label %lor.lhs.false622

lor.lhs.false622:                                 ; preds = %lor.lhs.false619
  %337 = load i32, i32* @last_read_token, align 4
  %cmp623 = icmp eq i32 %337, 290
  br i1 %cmp623, label %lor.end637, label %lor.lhs.false625

lor.lhs.false625:                                 ; preds = %lor.lhs.false622
  %338 = load i32, i32* @last_read_token, align 4
  %cmp626 = icmp eq i32 %338, 292
  br i1 %cmp626, label %lor.end637, label %lor.lhs.false628

lor.lhs.false628:                                 ; preds = %lor.lhs.false625
  %339 = load i32, i32* @last_read_token, align 4
  %cmp629 = icmp eq i32 %339, 291
  br i1 %cmp629, label %lor.end637, label %lor.lhs.false631

lor.lhs.false631:                                 ; preds = %lor.lhs.false628
  %340 = load i32, i32* @last_read_token, align 4
  %cmp632 = icmp eq i32 %340, 293
  br i1 %cmp632, label %lor.end637, label %lor.rhs634

lor.rhs634:                                       ; preds = %lor.lhs.false631
  %341 = load i32, i32* @last_read_token, align 4
  %cmp635 = icmp eq i32 %341, 298
  br label %lor.end637

lor.end637:                                       ; preds = %lor.rhs634, %lor.lhs.false631, %lor.lhs.false628, %lor.lhs.false625, %lor.lhs.false622, %lor.lhs.false619, %lor.lhs.false616, %lor.lhs.false613, %lor.lhs.false610, %lor.lhs.false607, %land.lhs.true604
  %342 = phi i1 [ true, %lor.lhs.false631 ], [ true, %lor.lhs.false628 ], [ true, %lor.lhs.false625 ], [ true, %lor.lhs.false622 ], [ true, %lor.lhs.false619 ], [ true, %lor.lhs.false616 ], [ true, %lor.lhs.false613 ], [ true, %lor.lhs.false610 ], [ true, %lor.lhs.false607 ], [ true, %land.lhs.true604 ], [ %cmp635, %lor.rhs634 ]
  %lor.ext638 = zext i1 %342 to i32
  %cmp639 = icmp eq i32 %lor.ext638, 0
  br i1 %cmp639, label %land.lhs.true653, label %lor.lhs.false641

lor.lhs.false641:                                 ; preds = %lor.end637, %lor.lhs.false601
  %343 = load i32, i32* @last_read_token, align 4
  %cmp642 = icmp ne i32 %343, 294
  br i1 %cmp642, label %land.lhs.true644, label %lor.lhs.false657

land.lhs.true644:                                 ; preds = %lor.lhs.false641
  %344 = load i32, i32* @last_read_token, align 4
  %cmp645 = icmp ne i32 %344, 295
  br i1 %cmp645, label %land.lhs.true647, label %lor.lhs.false657

land.lhs.true647:                                 ; preds = %land.lhs.true644
  %345 = load i32, i32* @last_read_token, align 4
  %cmp648 = icmp ne i32 %345, 296
  br i1 %cmp648, label %land.lhs.true650, label %lor.lhs.false657

land.lhs.true650:                                 ; preds = %land.lhs.true647
  %346 = load i32, i32* @last_read_token, align 4
  %call651 = call i32 @reserved_word_acceptable(i32 %346)
  %tobool652 = icmp ne i32 %call651, 0
  br i1 %tobool652, label %land.lhs.true653, label %lor.lhs.false657

land.lhs.true653:                                 ; preds = %land.lhs.true650, %lor.end637, %land.lhs.true598
  %347 = load i32, i32* @parser_state, align 4
  %and654 = and i32 %347, 1
  %cmp655 = icmp eq i32 %and654, 0
  br i1 %cmp655, label %land.lhs.true660, label %lor.lhs.false657

lor.lhs.false657:                                 ; preds = %land.lhs.true653, %land.lhs.true650, %land.lhs.true647, %land.lhs.true644, %lor.lhs.false641
  %348 = load i32, i32* @parser_state, align 4
  %and658 = and i32 %348, 16384
  %tobool659 = icmp ne i32 %and658, 0
  br i1 %tobool659, label %land.lhs.true660, label %if.end723

land.lhs.true660:                                 ; preds = %lor.lhs.false657, %land.lhs.true653
  %349 = load i8*, i8** @token, align 4
  %350 = load i32, i32* %token_index, align 4
  %call661 = call i32 @token_is_assignment(i8* %349, i32 %350)
  %tobool662 = icmp ne i32 %call661, 0
  br i1 %tobool662, label %land.lhs.true663, label %if.end723

land.lhs.true663:                                 ; preds = %land.lhs.true660
  %351 = load i32, i32* @shell_input_line_index, align 4
  %cmp664 = icmp ugt i32 %351, 1
  br i1 %cmp664, label %cond.true666, label %cond.false671

cond.true666:                                     ; preds = %land.lhs.true663
  %352 = load i8*, i8** @shell_input_line_property, align 4
  %353 = load i32, i32* @shell_input_line_index, align 4
  %sub667 = sub i32 %353, 1
  %arrayidx668 = getelementptr inbounds i8, i8* %352, i32 %sub667
  %354 = load i8, i8* %arrayidx668, align 1
  %conv669 = sext i8 %354 to i32
  %tobool670 = icmp ne i32 %conv669, 0
  br i1 %tobool670, label %if.then672, label %if.end723

cond.false671:                                    ; preds = %land.lhs.true663
  br i1 true, label %if.then672, label %if.end723

if.then672:                                       ; preds = %cond.false671, %cond.true666
  %call673 = call i32 @shell_getc(i32 1)
  store i32 %call673, i32* %peek_char, align 4
  %355 = load i32, i32* %peek_char, align 4
  %cmp674 = icmp eq i32 %355, 40
  br i1 %cmp674, label %land.lhs.true676, label %if.else721

land.lhs.true676:                                 ; preds = %if.then672
  %356 = load i32, i32* @shell_input_line_index, align 4
  %cmp677 = icmp ugt i32 %356, 1
  br i1 %cmp677, label %cond.true679, label %cond.false684

cond.true679:                                     ; preds = %land.lhs.true676
  %357 = load i8*, i8** @shell_input_line_property, align 4
  %358 = load i32, i32* @shell_input_line_index, align 4
  %sub680 = sub i32 %358, 1
  %arrayidx681 = getelementptr inbounds i8, i8* %357, i32 %sub680
  %359 = load i8, i8* %arrayidx681, align 1
  %conv682 = sext i8 %359 to i32
  %tobool683 = icmp ne i32 %conv682, 0
  br i1 %tobool683, label %if.then685, label %if.else721

cond.false684:                                    ; preds = %land.lhs.true676
  br i1 true, label %if.then685, label %if.else721

if.then685:                                       ; preds = %cond.false684, %cond.true679
  %call686 = call i8* @parse_compound_assignment(i32* %ttoklen)
  store i8* %call686, i8** %ttok, align 4
  br label %do.body687

do.body687:                                       ; preds = %if.then685
  %360 = load i32, i32* %token_index, align 4
  %361 = load i32, i32* %ttoklen, align 4
  %add688 = add nsw i32 %361, 4
  %add689 = add nsw i32 %360, %add688
  %362 = load i32, i32* @token_buffer_size, align 4
  %cmp690 = icmp sge i32 %add689, %362
  br i1 %cmp690, label %if.then692, label %if.end702

if.then692:                                       ; preds = %do.body687
  br label %while.cond693

while.cond693:                                    ; preds = %while.body698, %if.then692
  %363 = load i32, i32* %token_index, align 4
  %364 = load i32, i32* %ttoklen, align 4
  %add694 = add nsw i32 %364, 4
  %add695 = add nsw i32 %363, %add694
  %365 = load i32, i32* @token_buffer_size, align 4
  %cmp696 = icmp sge i32 %add695, %365
  br i1 %cmp696, label %while.body698, label %while.end700

while.body698:                                    ; preds = %while.cond693
  %366 = load i32, i32* @token_buffer_size, align 4
  %add699 = add nsw i32 %366, 512
  store i32 %add699, i32* @token_buffer_size, align 4
  br label %while.cond693

while.end700:                                     ; preds = %while.cond693
  %367 = load i8*, i8** @token, align 4
  %368 = load i32, i32* @token_buffer_size, align 4
  %call701 = call i8* @sh_xrealloc(i8* %367, i32 %368, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4969)
  store i8* %call701, i8** @token, align 4
  br label %if.end702

if.end702:                                        ; preds = %while.end700, %do.body687
  br label %do.end703

do.end703:                                        ; preds = %if.end702
  %369 = load i8*, i8** @token, align 4
  %370 = load i32, i32* %token_index, align 4
  %inc704 = add nsw i32 %370, 1
  store i32 %inc704, i32* %token_index, align 4
  %arrayidx705 = getelementptr inbounds i8, i8* %369, i32 %370
  store i8 61, i8* %arrayidx705, align 1
  %371 = load i8*, i8** @token, align 4
  %372 = load i32, i32* %token_index, align 4
  %inc706 = add nsw i32 %372, 1
  store i32 %inc706, i32* %token_index, align 4
  %arrayidx707 = getelementptr inbounds i8, i8* %371, i32 %372
  store i8 40, i8* %arrayidx707, align 1
  %373 = load i8*, i8** %ttok, align 4
  %tobool708 = icmp ne i8* %373, null
  br i1 %tobool708, label %if.then709, label %if.end713

if.then709:                                       ; preds = %do.end703
  %374 = load i8*, i8** @token, align 4
  %375 = load i32, i32* %token_index, align 4
  %add.ptr710 = getelementptr inbounds i8, i8* %374, i32 %375
  %376 = load i8*, i8** %ttok, align 4
  %call711 = call i8* @strcpy(i8* %add.ptr710, i8* %376)
  %377 = load i32, i32* %ttoklen, align 4
  %378 = load i32, i32* %token_index, align 4
  %add712 = add nsw i32 %378, %377
  store i32 %add712, i32* %token_index, align 4
  br label %if.end713

if.end713:                                        ; preds = %if.then709, %do.end703
  %379 = load i8*, i8** @token, align 4
  %380 = load i32, i32* %token_index, align 4
  %inc714 = add nsw i32 %380, 1
  store i32 %inc714, i32* %token_index, align 4
  %arrayidx715 = getelementptr inbounds i8, i8* %379, i32 %380
  store i8 41, i8* %arrayidx715, align 1
  br label %do.body716

do.body716:                                       ; preds = %if.end713
  %381 = load i8*, i8** %ttok, align 4
  %tobool717 = icmp ne i8* %381, null
  br i1 %tobool717, label %if.then718, label %if.end719

if.then718:                                       ; preds = %do.body716
  %382 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %382, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4979)
  br label %if.end719

if.end719:                                        ; preds = %if.then718, %do.body716
  br label %do.end720

do.end720:                                        ; preds = %if.end719
  store i32 0, i32* %all_digit_token, align 4
  store i32 1, i32* %compound_assignment, align 4
  br label %next_character

if.else721:                                       ; preds = %cond.false684, %cond.true679, %if.then672
  %383 = load i32, i32* %peek_char, align 4
  call void @shell_ungetc(i32 %383)
  br label %if.end722

if.end722:                                        ; preds = %if.else721
  br label %if.end723

if.end723:                                        ; preds = %if.end722, %cond.false671, %cond.true666, %land.lhs.true660, %lor.lhs.false657, %land.lhs.true595, %if.else592
  br label %if.end724

if.end724:                                        ; preds = %if.end723
  br label %if.end725

if.end725:                                        ; preds = %if.end724, %if.end477
  %384 = load i32, i32* %character.addr, align 4
  %conv726 = trunc i32 %384 to i8
  %idxprom727 = zext i8 %conv726 to i32
  %arrayidx728 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom727
  %385 = load i32, i32* %arrayidx728, align 4
  %and729 = and i32 %385, 2
  %tobool730 = icmp ne i32 %and729, 0
  br i1 %tobool730, label %land.lhs.true731, label %if.end741

land.lhs.true731:                                 ; preds = %if.end725
  %386 = load i32, i32* @shell_input_line_index, align 4
  %cmp732 = icmp ugt i32 %386, 1
  br i1 %cmp732, label %cond.true734, label %cond.false739

cond.true734:                                     ; preds = %land.lhs.true731
  %387 = load i8*, i8** @shell_input_line_property, align 4
  %388 = load i32, i32* @shell_input_line_index, align 4
  %sub735 = sub i32 %388, 1
  %arrayidx736 = getelementptr inbounds i8, i8* %387, i32 %sub735
  %389 = load i8, i8* %arrayidx736, align 1
  %conv737 = sext i8 %389 to i32
  %tobool738 = icmp ne i32 %conv737, 0
  br i1 %tobool738, label %if.then740, label %if.end741

cond.false739:                                    ; preds = %land.lhs.true731
  br i1 true, label %if.then740, label %if.end741

if.then740:                                       ; preds = %cond.false739, %cond.true734
  %390 = load i32, i32* %character.addr, align 4
  call void @shell_ungetc(i32 %390)
  br label %got_token

if.end741:                                        ; preds = %cond.false739, %cond.true734, %if.end725
  br label %got_character

got_character:                                    ; preds = %if.end741, %if.then124, %if.end38
  %391 = load i32, i32* %character.addr, align 4
  %cmp742 = icmp eq i32 %391, 1
  br i1 %cmp742, label %if.then747, label %lor.lhs.false744

lor.lhs.false744:                                 ; preds = %got_character
  %392 = load i32, i32* %character.addr, align 4
  %cmp745 = icmp eq i32 %392, 127
  br i1 %cmp745, label %if.then747, label %if.else765

if.then747:                                       ; preds = %lor.lhs.false744, %got_character
  br label %do.body748

do.body748:                                       ; preds = %if.then747
  %393 = load i32, i32* %token_index, align 4
  %add749 = add nsw i32 %393, 2
  %394 = load i32, i32* @token_buffer_size, align 4
  %cmp750 = icmp sge i32 %add749, %394
  br i1 %cmp750, label %if.then752, label %if.end761

if.then752:                                       ; preds = %do.body748
  br label %while.cond753

while.cond753:                                    ; preds = %while.body757, %if.then752
  %395 = load i32, i32* %token_index, align 4
  %add754 = add nsw i32 %395, 2
  %396 = load i32, i32* @token_buffer_size, align 4
  %cmp755 = icmp sge i32 %add754, %396
  br i1 %cmp755, label %while.body757, label %while.end759

while.body757:                                    ; preds = %while.cond753
  %397 = load i32, i32* @token_buffer_size, align 4
  %add758 = add nsw i32 %397, 512
  store i32 %add758, i32* @token_buffer_size, align 4
  br label %while.cond753

while.end759:                                     ; preds = %while.cond753
  %398 = load i8*, i8** @token, align 4
  %399 = load i32, i32* @token_buffer_size, align 4
  %call760 = call i8* @sh_xrealloc(i8* %398, i32 %399, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5005)
  store i8* %call760, i8** @token, align 4
  br label %if.end761

if.end761:                                        ; preds = %while.end759, %do.body748
  br label %do.end762

do.end762:                                        ; preds = %if.end761
  %400 = load i8*, i8** @token, align 4
  %401 = load i32, i32* %token_index, align 4
  %inc763 = add nsw i32 %401, 1
  store i32 %inc763, i32* %token_index, align 4
  %arrayidx764 = getelementptr inbounds i8, i8* %400, i32 %401
  store i8 1, i8* %arrayidx764, align 1
  br label %if.end781

if.else765:                                       ; preds = %lor.lhs.false744
  br label %got_escaped_character

got_escaped_character:                            ; preds = %if.else765, %if.then6
  br label %do.body766

do.body766:                                       ; preds = %got_escaped_character
  %402 = load i32, i32* %token_index, align 4
  %add767 = add nsw i32 %402, 1
  %403 = load i32, i32* @token_buffer_size, align 4
  %cmp768 = icmp sge i32 %add767, %403
  br i1 %cmp768, label %if.then770, label %if.end779

if.then770:                                       ; preds = %do.body766
  br label %while.cond771

while.cond771:                                    ; preds = %while.body775, %if.then770
  %404 = load i32, i32* %token_index, align 4
  %add772 = add nsw i32 %404, 1
  %405 = load i32, i32* @token_buffer_size, align 4
  %cmp773 = icmp sge i32 %add772, %405
  br i1 %cmp773, label %while.body775, label %while.end777

while.body775:                                    ; preds = %while.cond771
  %406 = load i32, i32* @token_buffer_size, align 4
  %add776 = add nsw i32 %406, 512
  store i32 %add776, i32* @token_buffer_size, align 4
  br label %while.cond771

while.end777:                                     ; preds = %while.cond771
  %407 = load i8*, i8** @token, align 4
  %408 = load i32, i32* @token_buffer_size, align 4
  %call778 = call i8* @sh_xrealloc(i8* %407, i32 %408, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5011)
  store i8* %call778, i8** @token, align 4
  br label %if.end779

if.end779:                                        ; preds = %while.end777, %do.body766
  br label %do.end780

do.end780:                                        ; preds = %if.end779
  br label %if.end781

if.end781:                                        ; preds = %do.end780, %do.end762
  %409 = load i32, i32* %character.addr, align 4
  %conv782 = trunc i32 %409 to i8
  %410 = load i8*, i8** @token, align 4
  %411 = load i32, i32* %token_index, align 4
  %inc783 = add nsw i32 %411, 1
  store i32 %inc783, i32* %token_index, align 4
  %arrayidx784 = getelementptr inbounds i8, i8* %410, i32 %411
  store i8 %conv782, i8* %arrayidx784, align 1
  %412 = load i32, i32* %character.addr, align 4
  %cmp785 = icmp sge i32 %412, 48
  br i1 %cmp785, label %land.rhs787, label %land.end790

land.rhs787:                                      ; preds = %if.end781
  %413 = load i32, i32* %character.addr, align 4
  %cmp788 = icmp sle i32 %413, 57
  br label %land.end790

land.end790:                                      ; preds = %land.rhs787, %if.end781
  %414 = phi i1 [ false, %if.end781 ], [ %cmp788, %land.rhs787 ]
  %land.ext791 = zext i1 %414 to i32
  %415 = load i32, i32* %all_digit_token, align 4
  %and792 = and i32 %415, %land.ext791
  store i32 %and792, i32* %all_digit_token, align 4
  %416 = load i32, i32* %character.addr, align 4
  %cmp793 = icmp eq i32 %416, 36
  %conv794 = zext i1 %cmp793 to i32
  %417 = load i32, i32* %dollar_present, align 4
  %or795 = or i32 %417, %conv794
  store i32 %or795, i32* %dollar_present, align 4
  br label %next_character

next_character:                                   ; preds = %land.end790, %do.end720, %do.end591, %do.end468, %do.end437, %do.end358, %do.end262, %do.end172, %do.end102, %if.then23
  %418 = load i32, i32* %character.addr, align 4
  %cmp796 = icmp eq i32 %418, 10
  br i1 %cmp796, label %land.lhs.true798, label %if.end807

land.lhs.true798:                                 ; preds = %next_character
  %419 = load i32, i32* @interactive, align 4
  %tobool799 = icmp ne i32 %419, 0
  br i1 %tobool799, label %land.lhs.true800, label %if.end807

land.lhs.true800:                                 ; preds = %land.lhs.true798
  %420 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp801 = icmp eq i32 %420, 1
  br i1 %cmp801, label %if.then806, label %lor.lhs.false803

lor.lhs.false803:                                 ; preds = %land.lhs.true800
  %421 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp804 = icmp eq i32 %421, 2
  br i1 %cmp804, label %if.then806, label %if.end807

if.then806:                                       ; preds = %lor.lhs.false803, %land.lhs.true800
  call void @prompt_again()
  br label %if.end807

if.end807:                                        ; preds = %if.then806, %lor.lhs.false803, %land.lhs.true798, %next_character
  %422 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %tobool808 = icmp ne i32 %422, 0
  br i1 %tobool808, label %cond.true809, label %cond.false813

cond.true809:                                     ; preds = %if.end807
  %423 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %424 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %sub810 = sub nsw i32 %424, 1
  %arrayidx811 = getelementptr inbounds i8, i8* %423, i32 %sub810
  %425 = load i8, i8* %arrayidx811, align 1
  %conv812 = sext i8 %425 to i32
  br label %cond.end814

cond.false813:                                    ; preds = %if.end807
  br label %cond.end814

cond.end814:                                      ; preds = %cond.false813, %cond.true809
  %cond815 = phi i32 [ %conv812, %cond.true809 ], [ 0, %cond.false813 ]
  store i32 %cond815, i32* %cd, align 4
  %426 = load i32, i32* %cd, align 4
  %cmp816 = icmp ne i32 %426, 39
  br i1 %cmp816, label %land.rhs818, label %land.end821

land.rhs818:                                      ; preds = %cond.end814
  %427 = load i32, i32* %pass_next_character, align 4
  %cmp819 = icmp eq i32 %427, 0
  br label %land.end821

land.end821:                                      ; preds = %land.rhs818, %cond.end814
  %428 = phi i1 [ false, %cond.end814 ], [ %cmp819, %land.rhs818 ]
  %land.ext822 = zext i1 %428 to i32
  %call823 = call i32 @shell_getc(i32 %land.ext822)
  store i32 %call823, i32* %character.addr, align 4
  br label %for.cond

got_token:                                        ; preds = %if.then740, %if.then4
  %429 = load i8*, i8** @token, align 4
  %430 = load i32, i32* %token_index, align 4
  %arrayidx824 = getelementptr inbounds i8, i8* %429, i32 %430
  store i8 0, i8* %arrayidx824, align 1
  %431 = load i32, i32* %all_digit_token, align 4
  %tobool825 = icmp ne i32 %431, 0
  br i1 %tobool825, label %land.lhs.true826, label %if.end858

land.lhs.true826:                                 ; preds = %got_token
  %432 = load i32, i32* %character.addr, align 4
  %cmp827 = icmp eq i32 %432, 60
  br i1 %cmp827, label %land.lhs.true838, label %lor.lhs.false829

lor.lhs.false829:                                 ; preds = %land.lhs.true826
  %433 = load i32, i32* %character.addr, align 4
  %cmp830 = icmp eq i32 %433, 62
  br i1 %cmp830, label %land.lhs.true838, label %lor.lhs.false832

lor.lhs.false832:                                 ; preds = %lor.lhs.false829
  %434 = load i32, i32* @last_read_token, align 4
  %cmp833 = icmp eq i32 %434, 291
  br i1 %cmp833, label %land.lhs.true838, label %lor.lhs.false835

lor.lhs.false835:                                 ; preds = %lor.lhs.false832
  %435 = load i32, i32* @last_read_token, align 4
  %cmp836 = icmp eq i32 %435, 293
  br i1 %cmp836, label %land.lhs.true838, label %if.end858

land.lhs.true838:                                 ; preds = %lor.lhs.false835, %lor.lhs.false832, %lor.lhs.false829, %land.lhs.true826
  %436 = load i32, i32* @shell_input_line_index, align 4
  %cmp839 = icmp ugt i32 %436, 1
  br i1 %cmp839, label %cond.true841, label %cond.false846

cond.true841:                                     ; preds = %land.lhs.true838
  %437 = load i8*, i8** @shell_input_line_property, align 4
  %438 = load i32, i32* @shell_input_line_index, align 4
  %sub842 = sub i32 %438, 1
  %arrayidx843 = getelementptr inbounds i8, i8* %437, i32 %sub842
  %439 = load i8, i8* %arrayidx843, align 1
  %conv844 = sext i8 %439 to i32
  %tobool845 = icmp ne i32 %conv844, 0
  br i1 %tobool845, label %if.then847, label %if.end858

cond.false846:                                    ; preds = %land.lhs.true838
  br i1 true, label %if.then847, label %if.end858

if.then847:                                       ; preds = %cond.false846, %cond.true841
  %440 = load i8*, i8** @token, align 4
  %call848 = call i32 @legal_number(i8* %440, i64* %lvalue)
  %tobool849 = icmp ne i32 %call848, 0
  br i1 %tobool849, label %land.lhs.true850, label %if.end857

land.lhs.true850:                                 ; preds = %if.then847
  %441 = load i64, i64* %lvalue, align 8
  %conv851 = trunc i64 %441 to i32
  %conv852 = sext i32 %conv851 to i64
  %442 = load i64, i64* %lvalue, align 8
  %cmp853 = icmp eq i64 %conv852, %442
  br i1 %cmp853, label %if.then855, label %if.end857

if.then855:                                       ; preds = %land.lhs.true850
  %443 = load i64, i64* %lvalue, align 8
  %conv856 = trunc i64 %443 to i32
  store i32 %conv856, i32* bitcast (%union.YYSTYPE* @yylval to i32*), align 4
  store i32 283, i32* %retval, align 4
  br label %return

if.end857:                                        ; preds = %land.lhs.true850, %if.then847
  br label %if.end858

if.end858:                                        ; preds = %if.end857, %cond.false846, %cond.true841, %lor.lhs.false835, %got_token
  %444 = load i32, i32* @shell_input_line_index, align 4
  %cmp859 = icmp ugt i32 %444, 1
  br i1 %cmp859, label %cond.true861, label %cond.false866

cond.true861:                                     ; preds = %if.end858
  %445 = load i8*, i8** @shell_input_line_property, align 4
  %446 = load i32, i32* @shell_input_line_index, align 4
  %sub862 = sub i32 %446, 1
  %arrayidx863 = getelementptr inbounds i8, i8* %445, i32 %sub862
  %447 = load i8, i8* %arrayidx863, align 1
  %conv864 = sext i8 %447 to i32
  %tobool865 = icmp ne i32 %conv864, 0
  br i1 %tobool865, label %cond.true867, label %cond.false869

cond.false866:                                    ; preds = %if.end858
  br i1 true, label %cond.true867, label %cond.false869

cond.true867:                                     ; preds = %cond.false866, %cond.true861
  %448 = load i8*, i8** @token, align 4
  %call868 = call i32 @special_case_tokens(i8* %448)
  br label %cond.end870

cond.false869:                                    ; preds = %cond.false866, %cond.true861
  br label %cond.end870

cond.end870:                                      ; preds = %cond.false869, %cond.true867
  %cond871 = phi i32 [ %call868, %cond.true867 ], [ -1, %cond.false869 ]
  store i32 %cond871, i32* %result, align 4
  %449 = load i32, i32* %result, align 4
  %cmp872 = icmp sge i32 %449, 0
  br i1 %cmp872, label %if.then874, label %if.end875

if.then874:                                       ; preds = %cond.end870
  %450 = load i32, i32* %result, align 4
  store i32 %450, i32* %retval, align 4
  br label %return

if.end875:                                        ; preds = %cond.end870
  %451 = load i32, i32* @posixly_correct, align 4
  %tobool876 = icmp ne i32 %451, 0
  br i1 %tobool876, label %land.lhs.true877, label %if.end999

land.lhs.true877:                                 ; preds = %if.end875
  %452 = load i32, i32* @shell_input_line_index, align 4
  %cmp878 = icmp ugt i32 %452, 1
  br i1 %cmp878, label %cond.true880, label %cond.false885

cond.true880:                                     ; preds = %land.lhs.true877
  %453 = load i8*, i8** @shell_input_line_property, align 4
  %454 = load i32, i32* @shell_input_line_index, align 4
  %sub881 = sub i32 %454, 1
  %arrayidx882 = getelementptr inbounds i8, i8* %453, i32 %sub881
  %455 = load i8, i8* %arrayidx882, align 1
  %conv883 = sext i8 %455 to i32
  %tobool884 = icmp ne i32 %conv883, 0
  br i1 %tobool884, label %if.then886, label %if.end999

cond.false885:                                    ; preds = %land.lhs.true877
  br i1 true, label %if.then886, label %if.end999

if.then886:                                       ; preds = %cond.false885, %cond.true880
  br label %do.body887

do.body887:                                       ; preds = %if.then886
  %456 = load i32, i32* %dollar_present, align 4
  %tobool888 = icmp ne i32 %456, 0
  br i1 %tobool888, label %if.end997, label %land.lhs.true889

land.lhs.true889:                                 ; preds = %do.body887
  %457 = load i32, i32* %quoted, align 4
  %tobool890 = icmp ne i32 %457, 0
  br i1 %tobool890, label %if.end997, label %land.lhs.true891

land.lhs.true891:                                 ; preds = %land.lhs.true889
  %458 = load i32, i32* @last_read_token, align 4
  %call892 = call i32 @reserved_word_acceptable(i32 %458)
  %tobool893 = icmp ne i32 %call892, 0
  br i1 %tobool893, label %if.then894, label %if.end997

if.then894:                                       ; preds = %land.lhs.true891
  store i32 0, i32* %i, align 4
  br label %for.cond895

for.cond895:                                      ; preds = %for.inc, %if.then894
  %459 = load i32, i32* %i, align 4
  %arrayidx896 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %459
  %word = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx896, i32 0, i32 0
  %460 = load i8*, i8** %word, align 4
  %cmp897 = icmp ne i8* %460, null
  br i1 %cmp897, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond895
  %461 = load i8*, i8** @token, align 4
  %arrayidx899 = getelementptr inbounds i8, i8* %461, i32 0
  %462 = load i8, i8* %arrayidx899, align 1
  %conv900 = sext i8 %462 to i32
  %463 = load i32, i32* %i, align 4
  %arrayidx901 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %463
  %word902 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx901, i32 0, i32 0
  %464 = load i8*, i8** %word902, align 4
  %arrayidx903 = getelementptr inbounds i8, i8* %464, i32 0
  %465 = load i8, i8* %arrayidx903, align 1
  %conv904 = sext i8 %465 to i32
  %cmp905 = icmp eq i32 %conv900, %conv904
  br i1 %cmp905, label %land.lhs.true907, label %if.end995

land.lhs.true907:                                 ; preds = %for.body
  %466 = load i8*, i8** @token, align 4
  %467 = load i32, i32* %i, align 4
  %arrayidx908 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %467
  %word909 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx908, i32 0, i32 0
  %468 = load i8*, i8** %word909, align 4
  %call910 = call i32 @strcmp(i8* %466, i8* %468)
  %cmp911 = icmp eq i32 %call910, 0
  br i1 %cmp911, label %if.then913, label %if.end995

if.then913:                                       ; preds = %land.lhs.true907
  %469 = load i32, i32* @parser_state, align 4
  %and914 = and i32 %469, 1
  %tobool915 = icmp ne i32 %and914, 0
  br i1 %tobool915, label %land.lhs.true916, label %if.end921

land.lhs.true916:                                 ; preds = %if.then913
  %470 = load i32, i32* %i, align 4
  %arrayidx917 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %470
  %token = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx917, i32 0, i32 1
  %471 = load i32, i32* %token, align 4
  %cmp918 = icmp ne i32 %471, 263
  br i1 %cmp918, label %if.then920, label %if.end921

if.then920:                                       ; preds = %land.lhs.true916
  br label %for.end

if.end921:                                        ; preds = %land.lhs.true916, %if.then913
  %472 = load i32, i32* %i, align 4
  %arrayidx922 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %472
  %token923 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx922, i32 0, i32 1
  %473 = load i32, i32* %token923, align 4
  %cmp924 = icmp eq i32 %473, 277
  br i1 %cmp924, label %land.lhs.true926, label %if.end931

land.lhs.true926:                                 ; preds = %if.end921
  %call927 = call i32 @time_command_acceptable()
  %cmp928 = icmp eq i32 %call927, 0
  br i1 %cmp928, label %if.then930, label %if.end931

if.then930:                                       ; preds = %land.lhs.true926
  br label %for.end

if.end931:                                        ; preds = %land.lhs.true926, %if.end921
  %474 = load i32, i32* @parser_state, align 4
  %and932 = and i32 %474, 1
  %tobool933 = icmp ne i32 %and932, 0
  br i1 %tobool933, label %land.lhs.true934, label %if.end943

land.lhs.true934:                                 ; preds = %if.end931
  %475 = load i32, i32* @last_read_token, align 4
  %cmp935 = icmp eq i32 %475, 124
  br i1 %cmp935, label %land.lhs.true937, label %if.end943

land.lhs.true937:                                 ; preds = %land.lhs.true934
  %476 = load i32, i32* %i, align 4
  %arrayidx938 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %476
  %token939 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx938, i32 0, i32 1
  %477 = load i32, i32* %token939, align 4
  %cmp940 = icmp eq i32 %477, 263
  br i1 %cmp940, label %if.then942, label %if.end943

if.then942:                                       ; preds = %land.lhs.true937
  br label %for.end

if.end943:                                        ; preds = %land.lhs.true937, %land.lhs.true934, %if.end931
  %478 = load i32, i32* %i, align 4
  %arrayidx944 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %478
  %token945 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx944, i32 0, i32 1
  %479 = load i32, i32* %token945, align 4
  %cmp946 = icmp eq i32 %479, 263
  br i1 %cmp946, label %if.then948, label %if.else950

if.then948:                                       ; preds = %if.end943
  %480 = load i32, i32* @parser_state, align 4
  %and949 = and i32 %480, -130
  store i32 %and949, i32* @parser_state, align 4
  br label %if.end992

if.else950:                                       ; preds = %if.end943
  %481 = load i32, i32* %i, align 4
  %arrayidx951 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %481
  %token952 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx951, i32 0, i32 1
  %482 = load i32, i32* %token952, align 4
  %cmp953 = icmp eq i32 %482, 262
  br i1 %cmp953, label %if.then955, label %if.else957

if.then955:                                       ; preds = %if.else950
  %483 = load i32, i32* @parser_state, align 4
  %or956 = or i32 %483, 128
  store i32 %or956, i32* @parser_state, align 4
  br label %if.end991

if.else957:                                       ; preds = %if.else950
  %484 = load i32, i32* %i, align 4
  %arrayidx958 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %484
  %token959 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx958, i32 0, i32 1
  %485 = load i32, i32* %token959, align 4
  %cmp960 = icmp eq i32 %485, 273
  br i1 %cmp960, label %if.then962, label %if.else964

if.then962:                                       ; preds = %if.else957
  %486 = load i32, i32* @parser_state, align 4
  %and963 = and i32 %486, -769
  store i32 %and963, i32* @parser_state, align 4
  br label %if.end990

if.else964:                                       ; preds = %if.else957
  %487 = load i32, i32* %i, align 4
  %arrayidx965 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %487
  %token966 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx965, i32 0, i32 1
  %488 = load i32, i32* %token966, align 4
  %cmp967 = icmp eq i32 %488, 272
  br i1 %cmp967, label %if.then969, label %if.else971

if.then969:                                       ; preds = %if.else964
  %489 = load i32, i32* @parser_state, align 4
  %or970 = or i32 %489, 256
  store i32 %or970, i32* @parser_state, align 4
  br label %if.end989

if.else971:                                       ; preds = %if.else964
  %490 = load i32, i32* %i, align 4
  %arrayidx972 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %490
  %token973 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx972, i32 0, i32 1
  %491 = load i32, i32* %token973, align 4
  %cmp974 = icmp eq i32 %491, 123
  br i1 %cmp974, label %if.then976, label %if.else978

if.then976:                                       ; preds = %if.else971
  %492 = load i32, i32* @open_brace_count, align 4
  %inc977 = add nsw i32 %492, 1
  store i32 %inc977, i32* @open_brace_count, align 4
  br label %if.end988

if.else978:                                       ; preds = %if.else971
  %493 = load i32, i32* %i, align 4
  %arrayidx979 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %493
  %token980 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx979, i32 0, i32 1
  %494 = load i32, i32* %token980, align 4
  %cmp981 = icmp eq i32 %494, 125
  br i1 %cmp981, label %land.lhs.true983, label %if.end987

land.lhs.true983:                                 ; preds = %if.else978
  %495 = load i32, i32* @open_brace_count, align 4
  %tobool984 = icmp ne i32 %495, 0
  br i1 %tobool984, label %if.then985, label %if.end987

if.then985:                                       ; preds = %land.lhs.true983
  %496 = load i32, i32* @open_brace_count, align 4
  %dec986 = add nsw i32 %496, -1
  store i32 %dec986, i32* @open_brace_count, align 4
  br label %if.end987

if.end987:                                        ; preds = %if.then985, %land.lhs.true983, %if.else978
  br label %if.end988

if.end988:                                        ; preds = %if.end987, %if.then976
  br label %if.end989

if.end989:                                        ; preds = %if.end988, %if.then969
  br label %if.end990

if.end990:                                        ; preds = %if.end989, %if.then962
  br label %if.end991

if.end991:                                        ; preds = %if.end990, %if.then955
  br label %if.end992

if.end992:                                        ; preds = %if.end991, %if.then948
  %497 = load i32, i32* %i, align 4
  %arrayidx993 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %497
  %token994 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx993, i32 0, i32 1
  %498 = load i32, i32* %token994, align 4
  store i32 %498, i32* %retval, align 4
  br label %return

if.end995:                                        ; preds = %land.lhs.true907, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end995
  %499 = load i32, i32* %i, align 4
  %inc996 = add nsw i32 %499, 1
  store i32 %inc996, i32* %i, align 4
  br label %for.cond895

for.end:                                          ; preds = %if.then942, %if.then930, %if.then920, %for.cond895
  br label %if.end997

if.end997:                                        ; preds = %for.end, %land.lhs.true891, %land.lhs.true889, %do.body887
  br label %do.end998

do.end998:                                        ; preds = %if.end997
  br label %if.end999

if.end999:                                        ; preds = %do.end998, %cond.false885, %cond.true880, %if.end875
  %500 = load i32, i32* @expand_aliases, align 4
  %tobool1000 = icmp ne i32 %500, 0
  br i1 %tobool1000, label %land.lhs.true1001, label %if.end1016

land.lhs.true1001:                                ; preds = %if.end999
  %501 = load i32, i32* %quoted, align 4
  %cmp1002 = icmp eq i32 %501, 0
  br i1 %cmp1002, label %if.then1004, label %if.end1016

if.then1004:                                      ; preds = %land.lhs.true1001
  %502 = load i8*, i8** @token, align 4
  %call1005 = call i32 @alias_expand_token(i8* %502)
  store i32 %call1005, i32* %result, align 4
  %503 = load i32, i32* %result, align 4
  %cmp1006 = icmp eq i32 %503, -99
  br i1 %cmp1006, label %if.then1008, label %if.else1009

if.then1008:                                      ; preds = %if.then1004
  store i32 -99, i32* %retval, align 4
  br label %return

if.else1009:                                      ; preds = %if.then1004
  %504 = load i32, i32* %result, align 4
  %cmp1010 = icmp eq i32 %504, -100
  br i1 %cmp1010, label %if.then1012, label %if.end1014

if.then1012:                                      ; preds = %if.else1009
  %505 = load i32, i32* @parser_state, align 4
  %and1013 = and i32 %505, -3
  store i32 %and1013, i32* @parser_state, align 4
  br label %if.end1014

if.end1014:                                       ; preds = %if.then1012, %if.else1009
  br label %if.end1015

if.end1015:                                       ; preds = %if.end1014
  br label %if.end1016

if.end1016:                                       ; preds = %if.end1015, %land.lhs.true1001, %if.end999
  %506 = load i32, i32* @posixly_correct, align 4
  %cmp1017 = icmp eq i32 %506, 0
  br i1 %cmp1017, label %land.lhs.true1019, label %if.end1147

land.lhs.true1019:                                ; preds = %if.end1016
  %507 = load i32, i32* @shell_input_line_index, align 4
  %cmp1020 = icmp ugt i32 %507, 1
  br i1 %cmp1020, label %cond.true1022, label %cond.false1027

cond.true1022:                                    ; preds = %land.lhs.true1019
  %508 = load i8*, i8** @shell_input_line_property, align 4
  %509 = load i32, i32* @shell_input_line_index, align 4
  %sub1023 = sub i32 %509, 1
  %arrayidx1024 = getelementptr inbounds i8, i8* %508, i32 %sub1023
  %510 = load i8, i8* %arrayidx1024, align 1
  %conv1025 = sext i8 %510 to i32
  %tobool1026 = icmp ne i32 %conv1025, 0
  br i1 %tobool1026, label %if.then1028, label %if.end1147

cond.false1027:                                   ; preds = %land.lhs.true1019
  br i1 true, label %if.then1028, label %if.end1147

if.then1028:                                      ; preds = %cond.false1027, %cond.true1022
  br label %do.body1029

do.body1029:                                      ; preds = %if.then1028
  %511 = load i32, i32* %dollar_present, align 4
  %tobool1030 = icmp ne i32 %511, 0
  br i1 %tobool1030, label %if.end1145, label %land.lhs.true1031

land.lhs.true1031:                                ; preds = %do.body1029
  %512 = load i32, i32* %quoted, align 4
  %tobool1032 = icmp ne i32 %512, 0
  br i1 %tobool1032, label %if.end1145, label %land.lhs.true1033

land.lhs.true1033:                                ; preds = %land.lhs.true1031
  %513 = load i32, i32* @last_read_token, align 4
  %call1034 = call i32 @reserved_word_acceptable(i32 %513)
  %tobool1035 = icmp ne i32 %call1034, 0
  br i1 %tobool1035, label %if.then1036, label %if.end1145

if.then1036:                                      ; preds = %land.lhs.true1033
  store i32 0, i32* %i1037, align 4
  br label %for.cond1038

for.cond1038:                                     ; preds = %for.inc1142, %if.then1036
  %514 = load i32, i32* %i1037, align 4
  %arrayidx1039 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %514
  %word1040 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1039, i32 0, i32 0
  %515 = load i8*, i8** %word1040, align 4
  %cmp1041 = icmp ne i8* %515, null
  br i1 %cmp1041, label %for.body1043, label %for.end1144

for.body1043:                                     ; preds = %for.cond1038
  %516 = load i8*, i8** @token, align 4
  %arrayidx1044 = getelementptr inbounds i8, i8* %516, i32 0
  %517 = load i8, i8* %arrayidx1044, align 1
  %conv1045 = sext i8 %517 to i32
  %518 = load i32, i32* %i1037, align 4
  %arrayidx1046 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %518
  %word1047 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1046, i32 0, i32 0
  %519 = load i8*, i8** %word1047, align 4
  %arrayidx1048 = getelementptr inbounds i8, i8* %519, i32 0
  %520 = load i8, i8* %arrayidx1048, align 1
  %conv1049 = sext i8 %520 to i32
  %cmp1050 = icmp eq i32 %conv1045, %conv1049
  br i1 %cmp1050, label %land.lhs.true1052, label %if.end1141

land.lhs.true1052:                                ; preds = %for.body1043
  %521 = load i8*, i8** @token, align 4
  %522 = load i32, i32* %i1037, align 4
  %arrayidx1053 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %522
  %word1054 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1053, i32 0, i32 0
  %523 = load i8*, i8** %word1054, align 4
  %call1055 = call i32 @strcmp(i8* %521, i8* %523)
  %cmp1056 = icmp eq i32 %call1055, 0
  br i1 %cmp1056, label %if.then1058, label %if.end1141

if.then1058:                                      ; preds = %land.lhs.true1052
  %524 = load i32, i32* @parser_state, align 4
  %and1059 = and i32 %524, 1
  %tobool1060 = icmp ne i32 %and1059, 0
  br i1 %tobool1060, label %land.lhs.true1061, label %if.end1067

land.lhs.true1061:                                ; preds = %if.then1058
  %525 = load i32, i32* %i1037, align 4
  %arrayidx1062 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %525
  %token1063 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1062, i32 0, i32 1
  %526 = load i32, i32* %token1063, align 4
  %cmp1064 = icmp ne i32 %526, 263
  br i1 %cmp1064, label %if.then1066, label %if.end1067

if.then1066:                                      ; preds = %land.lhs.true1061
  br label %for.end1144

if.end1067:                                       ; preds = %land.lhs.true1061, %if.then1058
  %527 = load i32, i32* %i1037, align 4
  %arrayidx1068 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %527
  %token1069 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1068, i32 0, i32 1
  %528 = load i32, i32* %token1069, align 4
  %cmp1070 = icmp eq i32 %528, 277
  br i1 %cmp1070, label %land.lhs.true1072, label %if.end1077

land.lhs.true1072:                                ; preds = %if.end1067
  %call1073 = call i32 @time_command_acceptable()
  %cmp1074 = icmp eq i32 %call1073, 0
  br i1 %cmp1074, label %if.then1076, label %if.end1077

if.then1076:                                      ; preds = %land.lhs.true1072
  br label %for.end1144

if.end1077:                                       ; preds = %land.lhs.true1072, %if.end1067
  %529 = load i32, i32* @parser_state, align 4
  %and1078 = and i32 %529, 1
  %tobool1079 = icmp ne i32 %and1078, 0
  br i1 %tobool1079, label %land.lhs.true1080, label %if.end1089

land.lhs.true1080:                                ; preds = %if.end1077
  %530 = load i32, i32* @last_read_token, align 4
  %cmp1081 = icmp eq i32 %530, 124
  br i1 %cmp1081, label %land.lhs.true1083, label %if.end1089

land.lhs.true1083:                                ; preds = %land.lhs.true1080
  %531 = load i32, i32* %i1037, align 4
  %arrayidx1084 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %531
  %token1085 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1084, i32 0, i32 1
  %532 = load i32, i32* %token1085, align 4
  %cmp1086 = icmp eq i32 %532, 263
  br i1 %cmp1086, label %if.then1088, label %if.end1089

if.then1088:                                      ; preds = %land.lhs.true1083
  br label %for.end1144

if.end1089:                                       ; preds = %land.lhs.true1083, %land.lhs.true1080, %if.end1077
  %533 = load i32, i32* %i1037, align 4
  %arrayidx1090 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %533
  %token1091 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1090, i32 0, i32 1
  %534 = load i32, i32* %token1091, align 4
  %cmp1092 = icmp eq i32 %534, 263
  br i1 %cmp1092, label %if.then1094, label %if.else1096

if.then1094:                                      ; preds = %if.end1089
  %535 = load i32, i32* @parser_state, align 4
  %and1095 = and i32 %535, -130
  store i32 %and1095, i32* @parser_state, align 4
  br label %if.end1138

if.else1096:                                      ; preds = %if.end1089
  %536 = load i32, i32* %i1037, align 4
  %arrayidx1097 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %536
  %token1098 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1097, i32 0, i32 1
  %537 = load i32, i32* %token1098, align 4
  %cmp1099 = icmp eq i32 %537, 262
  br i1 %cmp1099, label %if.then1101, label %if.else1103

if.then1101:                                      ; preds = %if.else1096
  %538 = load i32, i32* @parser_state, align 4
  %or1102 = or i32 %538, 128
  store i32 %or1102, i32* @parser_state, align 4
  br label %if.end1137

if.else1103:                                      ; preds = %if.else1096
  %539 = load i32, i32* %i1037, align 4
  %arrayidx1104 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %539
  %token1105 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1104, i32 0, i32 1
  %540 = load i32, i32* %token1105, align 4
  %cmp1106 = icmp eq i32 %540, 273
  br i1 %cmp1106, label %if.then1108, label %if.else1110

if.then1108:                                      ; preds = %if.else1103
  %541 = load i32, i32* @parser_state, align 4
  %and1109 = and i32 %541, -769
  store i32 %and1109, i32* @parser_state, align 4
  br label %if.end1136

if.else1110:                                      ; preds = %if.else1103
  %542 = load i32, i32* %i1037, align 4
  %arrayidx1111 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %542
  %token1112 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1111, i32 0, i32 1
  %543 = load i32, i32* %token1112, align 4
  %cmp1113 = icmp eq i32 %543, 272
  br i1 %cmp1113, label %if.then1115, label %if.else1117

if.then1115:                                      ; preds = %if.else1110
  %544 = load i32, i32* @parser_state, align 4
  %or1116 = or i32 %544, 256
  store i32 %or1116, i32* @parser_state, align 4
  br label %if.end1135

if.else1117:                                      ; preds = %if.else1110
  %545 = load i32, i32* %i1037, align 4
  %arrayidx1118 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %545
  %token1119 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1118, i32 0, i32 1
  %546 = load i32, i32* %token1119, align 4
  %cmp1120 = icmp eq i32 %546, 123
  br i1 %cmp1120, label %if.then1122, label %if.else1124

if.then1122:                                      ; preds = %if.else1117
  %547 = load i32, i32* @open_brace_count, align 4
  %inc1123 = add nsw i32 %547, 1
  store i32 %inc1123, i32* @open_brace_count, align 4
  br label %if.end1134

if.else1124:                                      ; preds = %if.else1117
  %548 = load i32, i32* %i1037, align 4
  %arrayidx1125 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %548
  %token1126 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1125, i32 0, i32 1
  %549 = load i32, i32* %token1126, align 4
  %cmp1127 = icmp eq i32 %549, 125
  br i1 %cmp1127, label %land.lhs.true1129, label %if.end1133

land.lhs.true1129:                                ; preds = %if.else1124
  %550 = load i32, i32* @open_brace_count, align 4
  %tobool1130 = icmp ne i32 %550, 0
  br i1 %tobool1130, label %if.then1131, label %if.end1133

if.then1131:                                      ; preds = %land.lhs.true1129
  %551 = load i32, i32* @open_brace_count, align 4
  %dec1132 = add nsw i32 %551, -1
  store i32 %dec1132, i32* @open_brace_count, align 4
  br label %if.end1133

if.end1133:                                       ; preds = %if.then1131, %land.lhs.true1129, %if.else1124
  br label %if.end1134

if.end1134:                                       ; preds = %if.end1133, %if.then1122
  br label %if.end1135

if.end1135:                                       ; preds = %if.end1134, %if.then1115
  br label %if.end1136

if.end1136:                                       ; preds = %if.end1135, %if.then1108
  br label %if.end1137

if.end1137:                                       ; preds = %if.end1136, %if.then1101
  br label %if.end1138

if.end1138:                                       ; preds = %if.end1137, %if.then1094
  %552 = load i32, i32* %i1037, align 4
  %arrayidx1139 = getelementptr inbounds [23 x %struct.STRING_INT_ALIST], [23 x %struct.STRING_INT_ALIST]* @word_token_alist, i32 0, i32 %552
  %token1140 = getelementptr inbounds %struct.STRING_INT_ALIST, %struct.STRING_INT_ALIST* %arrayidx1139, i32 0, i32 1
  %553 = load i32, i32* %token1140, align 4
  store i32 %553, i32* %retval, align 4
  br label %return

if.end1141:                                       ; preds = %land.lhs.true1052, %for.body1043
  br label %for.inc1142

for.inc1142:                                      ; preds = %if.end1141
  %554 = load i32, i32* %i1037, align 4
  %inc1143 = add nsw i32 %554, 1
  store i32 %inc1143, i32* %i1037, align 4
  br label %for.cond1038

for.end1144:                                      ; preds = %if.then1088, %if.then1076, %if.then1066, %for.cond1038
  br label %if.end1145

if.end1145:                                       ; preds = %for.end1144, %land.lhs.true1033, %land.lhs.true1031, %do.body1029
  br label %do.end1146

do.end1146:                                       ; preds = %if.end1145
  br label %if.end1147

if.end1147:                                       ; preds = %do.end1146, %cond.false1027, %cond.true1022, %if.end1016
  %call1148 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call1148, %struct.word_desc** %the_word, align 4
  %555 = load i32, i32* %token_index, align 4
  %add1149 = add nsw i32 1, %555
  %call1150 = call i8* @sh_xmalloc(i32 %add1149, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 5079)
  %556 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %word1151 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %556, i32 0, i32 0
  store i8* %call1150, i8** %word1151, align 4
  %557 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %557, i32 0, i32 1
  store i32 0, i32* %flags, align 4
  %558 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %word1152 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %558, i32 0, i32 0
  %559 = load i8*, i8** %word1152, align 4
  %560 = load i8*, i8** @token, align 4
  %call1153 = call i8* @strcpy(i8* %559, i8* %560)
  %561 = load i32, i32* %dollar_present, align 4
  %tobool1154 = icmp ne i32 %561, 0
  br i1 %tobool1154, label %if.then1155, label %if.end1158

if.then1155:                                      ; preds = %if.end1147
  %562 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1156 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %562, i32 0, i32 1
  %563 = load i32, i32* %flags1156, align 4
  %or1157 = or i32 %563, 1
  store i32 %or1157, i32* %flags1156, align 4
  br label %if.end1158

if.end1158:                                       ; preds = %if.then1155, %if.end1147
  %564 = load i32, i32* %quoted, align 4
  %tobool1159 = icmp ne i32 %564, 0
  br i1 %tobool1159, label %if.then1160, label %if.end1163

if.then1160:                                      ; preds = %if.end1158
  %565 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1161 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %565, i32 0, i32 1
  %566 = load i32, i32* %flags1161, align 4
  %or1162 = or i32 %566, 2
  store i32 %or1162, i32* %flags1161, align 4
  br label %if.end1163

if.end1163:                                       ; preds = %if.then1160, %if.end1158
  %567 = load i32, i32* %compound_assignment, align 4
  %tobool1164 = icmp ne i32 %567, 0
  br i1 %tobool1164, label %land.lhs.true1165, label %if.end1174

land.lhs.true1165:                                ; preds = %if.end1163
  %568 = load i8*, i8** @token, align 4
  %569 = load i32, i32* %token_index, align 4
  %sub1166 = sub nsw i32 %569, 1
  %arrayidx1167 = getelementptr inbounds i8, i8* %568, i32 %sub1166
  %570 = load i8, i8* %arrayidx1167, align 1
  %conv1168 = sext i8 %570 to i32
  %cmp1169 = icmp eq i32 %conv1168, 41
  br i1 %cmp1169, label %if.then1171, label %if.end1174

if.then1171:                                      ; preds = %land.lhs.true1165
  %571 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1172 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %571, i32 0, i32 1
  %572 = load i32, i32* %flags1172, align 4
  %or1173 = or i32 %572, 32768
  store i32 %or1173, i32* %flags1172, align 4
  br label %if.end1174

if.end1174:                                       ; preds = %if.then1171, %land.lhs.true1165, %if.end1163
  %573 = load i8*, i8** @token, align 4
  %574 = load i32, i32* @parser_state, align 4
  %and1175 = and i32 %574, 8192
  %cmp1176 = icmp ne i32 %and1175, 0
  %conv1177 = zext i1 %cmp1176 to i32
  %call1178 = call i32 @assignment(i8* %573, i32 %conv1177)
  %tobool1179 = icmp ne i32 %call1178, 0
  br i1 %tobool1179, label %if.then1180, label %if.end1255

if.then1180:                                      ; preds = %if.end1174
  %575 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1181 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %575, i32 0, i32 1
  %576 = load i32, i32* %flags1181, align 4
  %or1182 = or i32 %576, 4
  store i32 %or1182, i32* %flags1181, align 4
  %577 = load i32, i32* @last_read_token, align 4
  %cmp1183 = icmp eq i32 %577, 281
  br i1 %cmp1183, label %land.lhs.true1237, label %lor.lhs.false1185

lor.lhs.false1185:                                ; preds = %if.then1180
  %578 = load i32, i32* @parser_state, align 4
  %and1186 = and i32 %578, 524288
  %tobool1187 = icmp ne i32 %and1186, 0
  br i1 %tobool1187, label %land.lhs.true1188, label %lor.lhs.false1225

land.lhs.true1188:                                ; preds = %lor.lhs.false1185
  %579 = load i32, i32* @last_read_token, align 4
  %cmp1189 = icmp eq i32 %579, 60
  br i1 %cmp1189, label %lor.end1221, label %lor.lhs.false1191

lor.lhs.false1191:                                ; preds = %land.lhs.true1188
  %580 = load i32, i32* @last_read_token, align 4
  %cmp1192 = icmp eq i32 %580, 62
  br i1 %cmp1192, label %lor.end1221, label %lor.lhs.false1194

lor.lhs.false1194:                                ; preds = %lor.lhs.false1191
  %581 = load i32, i32* @last_read_token, align 4
  %cmp1195 = icmp eq i32 %581, 289
  br i1 %cmp1195, label %lor.end1221, label %lor.lhs.false1197

lor.lhs.false1197:                                ; preds = %lor.lhs.false1194
  %582 = load i32, i32* @last_read_token, align 4
  %cmp1198 = icmp eq i32 %582, 301
  br i1 %cmp1198, label %lor.end1221, label %lor.lhs.false1200

lor.lhs.false1200:                                ; preds = %lor.lhs.false1197
  %583 = load i32, i32* @last_read_token, align 4
  %cmp1201 = icmp eq i32 %583, 300
  br i1 %cmp1201, label %lor.end1221, label %lor.lhs.false1203

lor.lhs.false1203:                                ; preds = %lor.lhs.false1200
  %584 = load i32, i32* @last_read_token, align 4
  %cmp1204 = icmp eq i32 %584, 297
  br i1 %cmp1204, label %lor.end1221, label %lor.lhs.false1206

lor.lhs.false1206:                                ; preds = %lor.lhs.false1203
  %585 = load i32, i32* @last_read_token, align 4
  %cmp1207 = icmp eq i32 %585, 290
  br i1 %cmp1207, label %lor.end1221, label %lor.lhs.false1209

lor.lhs.false1209:                                ; preds = %lor.lhs.false1206
  %586 = load i32, i32* @last_read_token, align 4
  %cmp1210 = icmp eq i32 %586, 292
  br i1 %cmp1210, label %lor.end1221, label %lor.lhs.false1212

lor.lhs.false1212:                                ; preds = %lor.lhs.false1209
  %587 = load i32, i32* @last_read_token, align 4
  %cmp1213 = icmp eq i32 %587, 291
  br i1 %cmp1213, label %lor.end1221, label %lor.lhs.false1215

lor.lhs.false1215:                                ; preds = %lor.lhs.false1212
  %588 = load i32, i32* @last_read_token, align 4
  %cmp1216 = icmp eq i32 %588, 293
  br i1 %cmp1216, label %lor.end1221, label %lor.rhs1218

lor.rhs1218:                                      ; preds = %lor.lhs.false1215
  %589 = load i32, i32* @last_read_token, align 4
  %cmp1219 = icmp eq i32 %589, 298
  br label %lor.end1221

lor.end1221:                                      ; preds = %lor.rhs1218, %lor.lhs.false1215, %lor.lhs.false1212, %lor.lhs.false1209, %lor.lhs.false1206, %lor.lhs.false1203, %lor.lhs.false1200, %lor.lhs.false1197, %lor.lhs.false1194, %lor.lhs.false1191, %land.lhs.true1188
  %590 = phi i1 [ true, %lor.lhs.false1215 ], [ true, %lor.lhs.false1212 ], [ true, %lor.lhs.false1209 ], [ true, %lor.lhs.false1206 ], [ true, %lor.lhs.false1203 ], [ true, %lor.lhs.false1200 ], [ true, %lor.lhs.false1197 ], [ true, %lor.lhs.false1194 ], [ true, %lor.lhs.false1191 ], [ true, %land.lhs.true1188 ], [ %cmp1219, %lor.rhs1218 ]
  %lor.ext1222 = zext i1 %590 to i32
  %cmp1223 = icmp eq i32 %lor.ext1222, 0
  br i1 %cmp1223, label %land.lhs.true1237, label %lor.lhs.false1225

lor.lhs.false1225:                                ; preds = %lor.end1221, %lor.lhs.false1185
  %591 = load i32, i32* @last_read_token, align 4
  %cmp1226 = icmp ne i32 %591, 294
  br i1 %cmp1226, label %land.lhs.true1228, label %lor.lhs.false1241

land.lhs.true1228:                                ; preds = %lor.lhs.false1225
  %592 = load i32, i32* @last_read_token, align 4
  %cmp1229 = icmp ne i32 %592, 295
  br i1 %cmp1229, label %land.lhs.true1231, label %lor.lhs.false1241

land.lhs.true1231:                                ; preds = %land.lhs.true1228
  %593 = load i32, i32* @last_read_token, align 4
  %cmp1232 = icmp ne i32 %593, 296
  br i1 %cmp1232, label %land.lhs.true1234, label %lor.lhs.false1241

land.lhs.true1234:                                ; preds = %land.lhs.true1231
  %594 = load i32, i32* @last_read_token, align 4
  %call1235 = call i32 @reserved_word_acceptable(i32 %594)
  %tobool1236 = icmp ne i32 %call1235, 0
  br i1 %tobool1236, label %land.lhs.true1237, label %lor.lhs.false1241

land.lhs.true1237:                                ; preds = %land.lhs.true1234, %lor.end1221, %if.then1180
  %595 = load i32, i32* @parser_state, align 4
  %and1238 = and i32 %595, 1
  %cmp1239 = icmp eq i32 %and1238, 0
  br i1 %cmp1239, label %if.then1245, label %lor.lhs.false1241

lor.lhs.false1241:                                ; preds = %land.lhs.true1237, %land.lhs.true1234, %land.lhs.true1231, %land.lhs.true1228, %lor.lhs.false1225
  %596 = load i32, i32* @parser_state, align 4
  %and1242 = and i32 %596, 8192
  %cmp1243 = icmp ne i32 %and1242, 0
  br i1 %cmp1243, label %if.then1245, label %if.end1254

if.then1245:                                      ; preds = %lor.lhs.false1241, %land.lhs.true1237
  %597 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1246 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %597, i32 0, i32 1
  %598 = load i32, i32* %flags1246, align 4
  %or1247 = or i32 %598, 16
  store i32 %or1247, i32* %flags1246, align 4
  %599 = load i32, i32* @parser_state, align 4
  %and1248 = and i32 %599, 8192
  %tobool1249 = icmp ne i32 %and1248, 0
  br i1 %tobool1249, label %if.then1250, label %if.end1253

if.then1250:                                      ; preds = %if.then1245
  %600 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1251 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %600, i32 0, i32 1
  %601 = load i32, i32* %flags1251, align 4
  %or1252 = or i32 %601, 32
  store i32 %or1252, i32* %flags1251, align 4
  br label %if.end1253

if.end1253:                                       ; preds = %if.then1250, %if.then1245
  br label %if.end1254

if.end1254:                                       ; preds = %if.end1253, %lor.lhs.false1241
  br label %if.end1255

if.end1255:                                       ; preds = %if.end1254, %if.end1174
  %602 = load i32, i32* @last_read_token, align 4
  %cmp1256 = icmp eq i32 %602, 281
  br i1 %cmp1256, label %if.then1310, label %lor.lhs.false1258

lor.lhs.false1258:                                ; preds = %if.end1255
  %603 = load i32, i32* @parser_state, align 4
  %and1259 = and i32 %603, 524288
  %tobool1260 = icmp ne i32 %and1259, 0
  br i1 %tobool1260, label %land.lhs.true1261, label %lor.lhs.false1298

land.lhs.true1261:                                ; preds = %lor.lhs.false1258
  %604 = load i32, i32* @last_read_token, align 4
  %cmp1262 = icmp eq i32 %604, 60
  br i1 %cmp1262, label %lor.end1294, label %lor.lhs.false1264

lor.lhs.false1264:                                ; preds = %land.lhs.true1261
  %605 = load i32, i32* @last_read_token, align 4
  %cmp1265 = icmp eq i32 %605, 62
  br i1 %cmp1265, label %lor.end1294, label %lor.lhs.false1267

lor.lhs.false1267:                                ; preds = %lor.lhs.false1264
  %606 = load i32, i32* @last_read_token, align 4
  %cmp1268 = icmp eq i32 %606, 289
  br i1 %cmp1268, label %lor.end1294, label %lor.lhs.false1270

lor.lhs.false1270:                                ; preds = %lor.lhs.false1267
  %607 = load i32, i32* @last_read_token, align 4
  %cmp1271 = icmp eq i32 %607, 301
  br i1 %cmp1271, label %lor.end1294, label %lor.lhs.false1273

lor.lhs.false1273:                                ; preds = %lor.lhs.false1270
  %608 = load i32, i32* @last_read_token, align 4
  %cmp1274 = icmp eq i32 %608, 300
  br i1 %cmp1274, label %lor.end1294, label %lor.lhs.false1276

lor.lhs.false1276:                                ; preds = %lor.lhs.false1273
  %609 = load i32, i32* @last_read_token, align 4
  %cmp1277 = icmp eq i32 %609, 297
  br i1 %cmp1277, label %lor.end1294, label %lor.lhs.false1279

lor.lhs.false1279:                                ; preds = %lor.lhs.false1276
  %610 = load i32, i32* @last_read_token, align 4
  %cmp1280 = icmp eq i32 %610, 290
  br i1 %cmp1280, label %lor.end1294, label %lor.lhs.false1282

lor.lhs.false1282:                                ; preds = %lor.lhs.false1279
  %611 = load i32, i32* @last_read_token, align 4
  %cmp1283 = icmp eq i32 %611, 292
  br i1 %cmp1283, label %lor.end1294, label %lor.lhs.false1285

lor.lhs.false1285:                                ; preds = %lor.lhs.false1282
  %612 = load i32, i32* @last_read_token, align 4
  %cmp1286 = icmp eq i32 %612, 291
  br i1 %cmp1286, label %lor.end1294, label %lor.lhs.false1288

lor.lhs.false1288:                                ; preds = %lor.lhs.false1285
  %613 = load i32, i32* @last_read_token, align 4
  %cmp1289 = icmp eq i32 %613, 293
  br i1 %cmp1289, label %lor.end1294, label %lor.rhs1291

lor.rhs1291:                                      ; preds = %lor.lhs.false1288
  %614 = load i32, i32* @last_read_token, align 4
  %cmp1292 = icmp eq i32 %614, 298
  br label %lor.end1294

lor.end1294:                                      ; preds = %lor.rhs1291, %lor.lhs.false1288, %lor.lhs.false1285, %lor.lhs.false1282, %lor.lhs.false1279, %lor.lhs.false1276, %lor.lhs.false1273, %lor.lhs.false1270, %lor.lhs.false1267, %lor.lhs.false1264, %land.lhs.true1261
  %615 = phi i1 [ true, %lor.lhs.false1288 ], [ true, %lor.lhs.false1285 ], [ true, %lor.lhs.false1282 ], [ true, %lor.lhs.false1279 ], [ true, %lor.lhs.false1276 ], [ true, %lor.lhs.false1273 ], [ true, %lor.lhs.false1270 ], [ true, %lor.lhs.false1267 ], [ true, %lor.lhs.false1264 ], [ true, %land.lhs.true1261 ], [ %cmp1292, %lor.rhs1291 ]
  %lor.ext1295 = zext i1 %615 to i32
  %cmp1296 = icmp eq i32 %lor.ext1295, 0
  br i1 %cmp1296, label %if.then1310, label %lor.lhs.false1298

lor.lhs.false1298:                                ; preds = %lor.end1294, %lor.lhs.false1258
  %616 = load i32, i32* @last_read_token, align 4
  %cmp1299 = icmp ne i32 %616, 294
  br i1 %cmp1299, label %land.lhs.true1301, label %if.end1343

land.lhs.true1301:                                ; preds = %lor.lhs.false1298
  %617 = load i32, i32* @last_read_token, align 4
  %cmp1302 = icmp ne i32 %617, 295
  br i1 %cmp1302, label %land.lhs.true1304, label %if.end1343

land.lhs.true1304:                                ; preds = %land.lhs.true1301
  %618 = load i32, i32* @last_read_token, align 4
  %cmp1305 = icmp ne i32 %618, 296
  br i1 %cmp1305, label %land.lhs.true1307, label %if.end1343

land.lhs.true1307:                                ; preds = %land.lhs.true1304
  %619 = load i32, i32* @last_read_token, align 4
  %call1308 = call i32 @reserved_word_acceptable(i32 %619)
  %tobool1309 = icmp ne i32 %call1308, 0
  br i1 %tobool1309, label %if.then1310, label %if.end1343

if.then1310:                                      ; preds = %land.lhs.true1307, %lor.end1294, %if.end1255
  %620 = load i8*, i8** @token, align 4
  %call1311 = call %struct.builtin* @builtin_address_internal(i8* %620, i32 0)
  store %struct.builtin* %call1311, %struct.builtin** %b, align 4
  %621 = load %struct.builtin*, %struct.builtin** %b, align 4
  %tobool1312 = icmp ne %struct.builtin* %621, null
  br i1 %tobool1312, label %land.lhs.true1313, label %if.else1319

land.lhs.true1313:                                ; preds = %if.then1310
  %622 = load %struct.builtin*, %struct.builtin** %b, align 4
  %flags1314 = getelementptr inbounds %struct.builtin, %struct.builtin* %622, i32 0, i32 2
  %623 = load i32, i32* %flags1314, align 4
  %and1315 = and i32 %623, 16
  %tobool1316 = icmp ne i32 %and1315, 0
  br i1 %tobool1316, label %if.then1317, label %if.else1319

if.then1317:                                      ; preds = %land.lhs.true1313
  %624 = load i32, i32* @parser_state, align 4
  %or1318 = or i32 %624, 16384
  store i32 %or1318, i32* @parser_state, align 4
  br label %if.end1342

if.else1319:                                      ; preds = %land.lhs.true1313, %if.then1310
  %625 = load i8*, i8** @token, align 4
  %arrayidx1320 = getelementptr inbounds i8, i8* %625, i32 0
  %626 = load i8, i8* %arrayidx1320, align 1
  %conv1321 = sext i8 %626 to i32
  %627 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i32 0, i32 0), align 1
  %conv1322 = sext i8 %627 to i32
  %cmp1323 = icmp eq i32 %conv1321, %conv1322
  br i1 %cmp1323, label %land.lhs.true1325, label %lor.lhs.false1329

land.lhs.true1325:                                ; preds = %if.else1319
  %628 = load i8*, i8** @token, align 4
  %call1326 = call i32 @strcmp(i8* %628, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i32 0, i32 0))
  %cmp1327 = icmp eq i32 %call1326, 0
  br i1 %cmp1327, label %if.then1339, label %lor.lhs.false1329

lor.lhs.false1329:                                ; preds = %land.lhs.true1325, %if.else1319
  %629 = load i8*, i8** @token, align 4
  %arrayidx1330 = getelementptr inbounds i8, i8* %629, i32 0
  %630 = load i8, i8* %arrayidx1330, align 1
  %conv1331 = sext i8 %630 to i32
  %631 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i32 0, i32 0), align 1
  %conv1332 = sext i8 %631 to i32
  %cmp1333 = icmp eq i32 %conv1331, %conv1332
  br i1 %cmp1333, label %land.lhs.true1335, label %if.end1341

land.lhs.true1335:                                ; preds = %lor.lhs.false1329
  %632 = load i8*, i8** @token, align 4
  %call1336 = call i32 @strcmp(i8* %632, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i32 0, i32 0))
  %cmp1337 = icmp eq i32 %call1336, 0
  br i1 %cmp1337, label %if.then1339, label %if.end1341

if.then1339:                                      ; preds = %land.lhs.true1335, %land.lhs.true1325
  %633 = load i32, i32* @parser_state, align 4
  %or1340 = or i32 %633, 16384
  store i32 %or1340, i32* @parser_state, align 4
  br label %if.end1341

if.end1341:                                       ; preds = %if.then1339, %land.lhs.true1335, %lor.lhs.false1329
  br label %if.end1342

if.end1342:                                       ; preds = %if.end1341, %if.then1317
  br label %if.end1343

if.end1343:                                       ; preds = %if.end1342, %land.lhs.true1307, %land.lhs.true1304, %land.lhs.true1301, %lor.lhs.false1298
  %634 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  store %struct.word_desc* %634, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %635 = load i8*, i8** @token, align 4
  %arrayidx1344 = getelementptr inbounds i8, i8* %635, i32 0
  %636 = load i8, i8* %arrayidx1344, align 1
  %conv1345 = sext i8 %636 to i32
  %cmp1346 = icmp eq i32 %conv1345, 123
  br i1 %cmp1346, label %land.lhs.true1348, label %if.end1375

land.lhs.true1348:                                ; preds = %if.end1343
  %637 = load i8*, i8** @token, align 4
  %638 = load i32, i32* %token_index, align 4
  %sub1349 = sub nsw i32 %638, 1
  %arrayidx1350 = getelementptr inbounds i8, i8* %637, i32 %sub1349
  %639 = load i8, i8* %arrayidx1350, align 1
  %conv1351 = sext i8 %639 to i32
  %cmp1352 = icmp eq i32 %conv1351, 125
  br i1 %cmp1352, label %land.lhs.true1354, label %if.end1375

land.lhs.true1354:                                ; preds = %land.lhs.true1348
  %640 = load i32, i32* %character.addr, align 4
  %cmp1355 = icmp eq i32 %640, 60
  br i1 %cmp1355, label %if.then1360, label %lor.lhs.false1357

lor.lhs.false1357:                                ; preds = %land.lhs.true1354
  %641 = load i32, i32* %character.addr, align 4
  %cmp1358 = icmp eq i32 %641, 62
  br i1 %cmp1358, label %if.then1360, label %if.end1375

if.then1360:                                      ; preds = %lor.lhs.false1357, %land.lhs.true1354
  %642 = load i8*, i8** @token, align 4
  %643 = load i32, i32* %token_index, align 4
  %sub1361 = sub nsw i32 %643, 1
  %arrayidx1362 = getelementptr inbounds i8, i8* %642, i32 %sub1361
  store i8 0, i8* %arrayidx1362, align 1
  %644 = load i8*, i8** @token, align 4
  %add.ptr1363 = getelementptr inbounds i8, i8* %644, i32 1
  %call1364 = call i32 @legal_identifier(i8* %add.ptr1363)
  %tobool1365 = icmp ne i32 %call1364, 0
  br i1 %tobool1365, label %if.then1370, label %lor.lhs.false1366

lor.lhs.false1366:                                ; preds = %if.then1360
  %645 = load i8*, i8** @token, align 4
  %add.ptr1367 = getelementptr inbounds i8, i8* %645, i32 1
  %call1368 = call i32 @valid_array_reference(i8* %add.ptr1367, i32 0)
  %tobool1369 = icmp ne i32 %call1368, 0
  br i1 %tobool1369, label %if.then1370, label %if.end1374

if.then1370:                                      ; preds = %lor.lhs.false1366, %if.then1360
  %646 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %word1371 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %646, i32 0, i32 0
  %647 = load i8*, i8** %word1371, align 4
  %648 = load i8*, i8** @token, align 4
  %add.ptr1372 = getelementptr inbounds i8, i8* %648, i32 1
  %call1373 = call i8* @strcpy(i8* %647, i8* %add.ptr1372)
  store i32 282, i32* %retval, align 4
  br label %return

if.end1374:                                       ; preds = %lor.lhs.false1366
  br label %if.end1375

if.end1375:                                       ; preds = %if.end1374, %lor.lhs.false1357, %land.lhs.true1348, %if.end1343
  %649 = load %struct.word_desc*, %struct.word_desc** %the_word, align 4
  %flags1376 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %649, i32 0, i32 1
  %650 = load i32, i32* %flags1376, align 4
  %and1377 = and i32 %650, 20
  %cmp1378 = icmp eq i32 %and1377, 20
  %cond1380 = select i1 %cmp1378, i32 281, i32 280
  store i32 %cond1380, i32* %result, align 4
  %651 = load i32, i32* @last_read_token, align 4
  switch i32 %651, label %sw.epilog [
    i32 270, label %sw.bb
    i32 262, label %sw.bb1382
    i32 265, label %sw.bb1382
    i32 264, label %sw.bb1382
  ]

sw.bb:                                            ; preds = %if.end1375
  %652 = load i32, i32* @parser_state, align 4
  %or1381 = or i32 %652, 4
  store i32 %or1381, i32* @parser_state, align 4
  %653 = load i32, i32* @line_number, align 4
  store i32 %653, i32* @function_dstart, align 4
  br label %sw.epilog

sw.bb1382:                                        ; preds = %if.end1375, %if.end1375, %if.end1375
  %654 = load i32, i32* @word_top, align 4
  %cmp1383 = icmp slt i32 %654, 128
  br i1 %cmp1383, label %if.then1385, label %if.end1387

if.then1385:                                      ; preds = %sw.bb1382
  %655 = load i32, i32* @word_top, align 4
  %inc1386 = add nsw i32 %655, 1
  store i32 %inc1386, i32* @word_top, align 4
  br label %if.end1387

if.end1387:                                       ; preds = %if.then1385, %sw.bb1382
  %656 = load i32, i32* @line_number, align 4
  %657 = load i32, i32* @word_top, align 4
  %arrayidx1388 = getelementptr inbounds [129 x i32], [129 x i32]* @word_lineno, i32 0, i32 %657
  store i32 %656, i32* %arrayidx1388, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end1375, %if.end1387, %sw.bb
  %658 = load i32, i32* %result, align 4
  store i32 %658, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then1370, %if.end1138, %if.then1008, %if.end992, %if.then874, %if.then855, %if.then562, %if.then398, %if.then326, %if.then230, %if.then143, %if.then69
  %659 = load i32, i32* %retval, align 4
  ret i32 %659
}

; Function Attrs: noinline nounwind
define internal %struct.cond_com* @cond_expr() #0 {
entry:
  %call = call %struct.cond_com* @cond_or()
  ret %struct.cond_com* %call
}

declare %struct.command* @make_cond_command(%struct.cond_com*) #1

; Function Attrs: noinline nounwind
define internal %struct.cond_com* @cond_or() #0 {
entry:
  %l = alloca %struct.cond_com*, align 4
  %r = alloca %struct.cond_com*, align 4
  %call = call %struct.cond_com* @cond_and()
  store %struct.cond_com* %call, %struct.cond_com** %l, align 4
  %0 = load i32, i32* @cond_token, align 4
  %cmp = icmp eq i32 %0, 288
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call %struct.cond_com* @cond_or()
  store %struct.cond_com* %call1, %struct.cond_com** %r, align 4
  %1 = load %struct.cond_com*, %struct.cond_com** %l, align 4
  %2 = load %struct.cond_com*, %struct.cond_com** %r, align 4
  %call2 = call %struct.cond_com* @make_cond_node(i32 2, %struct.word_desc* null, %struct.cond_com* %1, %struct.cond_com* %2)
  store %struct.cond_com* %call2, %struct.cond_com** %l, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.cond_com*, %struct.cond_com** %l, align 4
  ret %struct.cond_com* %3
}

; Function Attrs: noinline nounwind
define internal %struct.cond_com* @cond_and() #0 {
entry:
  %l = alloca %struct.cond_com*, align 4
  %r = alloca %struct.cond_com*, align 4
  %call = call %struct.cond_com* @cond_term()
  store %struct.cond_com* %call, %struct.cond_com** %l, align 4
  %0 = load i32, i32* @cond_token, align 4
  %cmp = icmp eq i32 %0, 287
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call %struct.cond_com* @cond_and()
  store %struct.cond_com* %call1, %struct.cond_com** %r, align 4
  %1 = load %struct.cond_com*, %struct.cond_com** %l, align 4
  %2 = load %struct.cond_com*, %struct.cond_com** %r, align 4
  %call2 = call %struct.cond_com* @make_cond_node(i32 1, %struct.word_desc* null, %struct.cond_com* %1, %struct.cond_com* %2)
  store %struct.cond_com* %call2, %struct.cond_com** %l, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.cond_com*, %struct.cond_com** %l, align 4
  ret %struct.cond_com* %3
}

declare %struct.cond_com* @make_cond_node(i32, %struct.word_desc*, %struct.cond_com*, %struct.cond_com*) #1

; Function Attrs: noinline nounwind
define internal %struct.cond_com* @cond_term() #0 {
entry:
  %retval = alloca %struct.cond_com*, align 4
  %op = alloca %struct.word_desc*, align 4
  %term = alloca %struct.cond_com*, align 4
  %tleft = alloca %struct.cond_com*, align 4
  %tright = alloca %struct.cond_com*, align 4
  %tok = alloca i32, align 4
  %lineno = alloca i32, align 4
  %etext = alloca i8*, align 4
  %call = call i32 @cond_skip_newlines()
  store i32 %call, i32* %tok, align 4
  %0 = load i32, i32* @line_number, align 4
  store i32 %0, i32* %lineno, align 4
  %1 = load i32, i32* %tok, align 4
  %cmp = icmp eq i32 %1, 273
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.then
  store i32 274, i32* @cond_token, align 4
  store %struct.cond_com* null, %struct.cond_com** %retval, align 4
  br label %return

do.end:                                           ; No predecessors!
  br label %if.end237

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %tok, align 4
  %cmp1 = icmp eq i32 %2, 40
  br i1 %cmp1, label %if.then2, label %if.else19

if.then2:                                         ; preds = %if.else
  %call3 = call %struct.cond_com* @cond_expr()
  store %struct.cond_com* %call3, %struct.cond_com** %term, align 4
  %3 = load i32, i32* @cond_token, align 4
  %cmp4 = icmp ne i32 %3, 41
  br i1 %cmp4, label %if.then5, label %if.end16

if.then5:                                         ; preds = %if.then2
  %4 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  %tobool = icmp ne %struct.cond_com* %4, null
  br i1 %tobool, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then5
  %5 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  call void @dispose_cond_node(%struct.cond_com* %5)
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then5
  %6 = load i32, i32* @cond_token, align 4
  %call7 = call i8* @error_token_from_token(i32 %6)
  store i8* %call7, i8** %etext, align 4
  %tobool8 = icmp ne i8* %call7, null
  br i1 %tobool8, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.end
  %7 = load i32, i32* %lineno, align 4
  %call10 = call i8* @libintl_gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.85, i32 0, i32 0))
  %8 = load i8*, i8** %etext, align 4
  call void (i32, i8*, ...) @parser_error(i32 %7, i8* %call10, i8* %8)
  %9 = load i8*, i8** %etext, align 4
  call void @sh_xfree(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4497)
  br label %if.end13

if.else11:                                        ; preds = %if.end
  %10 = load i32, i32* %lineno, align 4
  %call12 = call i8* @libintl_gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %10, i8* %call12)
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9
  br label %do.body14

do.body14:                                        ; preds = %if.end13
  store i32 274, i32* @cond_token, align 4
  store %struct.cond_com* null, %struct.cond_com** %retval, align 4
  br label %return

do.end15:                                         ; No predecessors!
  br label %if.end16

if.end16:                                         ; preds = %do.end15, %if.then2
  %11 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  %call17 = call %struct.cond_com* @make_cond_node(i32 6, %struct.word_desc* null, %struct.cond_com* %11, %struct.cond_com* null)
  store %struct.cond_com* %call17, %struct.cond_com** %term, align 4
  %call18 = call i32 @cond_skip_newlines()
  br label %if.end236

if.else19:                                        ; preds = %if.else
  %12 = load i32, i32* %tok, align 4
  %cmp20 = icmp eq i32 %12, 276
  br i1 %cmp20, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else19
  %13 = load i32, i32* %tok, align 4
  %cmp21 = icmp eq i32 %13, 280
  br i1 %cmp21, label %land.lhs.true, label %if.else39

land.lhs.true:                                    ; preds = %lor.lhs.false
  %14 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %14, i32 0, i32 0
  %15 = load i8*, i8** %word, align 4
  %arrayidx = getelementptr inbounds i8, i8* %15, i32 0
  %16 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %16 to i32
  %cmp22 = icmp eq i32 %conv, 33
  br i1 %cmp22, label %land.lhs.true24, label %if.else39

land.lhs.true24:                                  ; preds = %land.lhs.true
  %17 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word25 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %17, i32 0, i32 0
  %18 = load i8*, i8** %word25, align 4
  %arrayidx26 = getelementptr inbounds i8, i8* %18, i32 1
  %19 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %19 to i32
  %cmp28 = icmp eq i32 %conv27, 0
  br i1 %cmp28, label %if.then30, label %if.else39

if.then30:                                        ; preds = %land.lhs.true24, %if.else19
  %20 = load i32, i32* %tok, align 4
  %cmp31 = icmp eq i32 %20, 280
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.then30
  %21 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  call void @dispose_word(%struct.word_desc* %21)
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.then30
  %call35 = call %struct.cond_com* @cond_term()
  store %struct.cond_com* %call35, %struct.cond_com** %term, align 4
  %22 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  %tobool36 = icmp ne %struct.cond_com* %22, null
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end34
  %23 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  %flags = getelementptr inbounds %struct.cond_com, %struct.cond_com* %23, i32 0, i32 0
  %24 = load i32, i32* %flags, align 4
  %or = or i32 %24, 4
  store i32 %or, i32* %flags, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end235

if.else39:                                        ; preds = %land.lhs.true24, %land.lhs.true, %lor.lhs.false
  %25 = load i32, i32* %tok, align 4
  %cmp40 = icmp eq i32 %25, 280
  br i1 %cmp40, label %land.lhs.true42, label %if.else77

land.lhs.true42:                                  ; preds = %if.else39
  %26 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word43 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %26, i32 0, i32 0
  %27 = load i8*, i8** %word43, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %27, i32 0
  %28 = load i8, i8* %arrayidx44, align 1
  %conv45 = sext i8 %28 to i32
  %cmp46 = icmp eq i32 %conv45, 45
  br i1 %cmp46, label %land.lhs.true48, label %if.else77

land.lhs.true48:                                  ; preds = %land.lhs.true42
  %29 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word49 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %29, i32 0, i32 0
  %30 = load i8*, i8** %word49, align 4
  %arrayidx50 = getelementptr inbounds i8, i8* %30, i32 2
  %31 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %31 to i32
  %cmp52 = icmp eq i32 %conv51, 0
  br i1 %cmp52, label %land.lhs.true54, label %if.else77

land.lhs.true54:                                  ; preds = %land.lhs.true48
  %32 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word55 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %32, i32 0, i32 0
  %33 = load i8*, i8** %word55, align 4
  %call56 = call i32 @test_unop(i8* %33)
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.then58, label %if.else77

if.then58:                                        ; preds = %land.lhs.true54
  %34 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  store %struct.word_desc* %34, %struct.word_desc** %op, align 4
  %call59 = call i32 @read_token(i32 0)
  store i32 %call59, i32* %tok, align 4
  %35 = load i32, i32* %tok, align 4
  %cmp60 = icmp eq i32 %35, 280
  br i1 %cmp60, label %if.then62, label %if.else65

if.then62:                                        ; preds = %if.then58
  %36 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %call63 = call %struct.cond_com* @make_cond_node(i32 5, %struct.word_desc* %36, %struct.cond_com* null, %struct.cond_com* null)
  store %struct.cond_com* %call63, %struct.cond_com** %tleft, align 4
  %37 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %38 = load %struct.cond_com*, %struct.cond_com** %tleft, align 4
  %call64 = call %struct.cond_com* @make_cond_node(i32 3, %struct.word_desc* %37, %struct.cond_com* %38, %struct.cond_com* null)
  store %struct.cond_com* %call64, %struct.cond_com** %term, align 4
  br label %if.end75

if.else65:                                        ; preds = %if.then58
  %39 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  call void @dispose_word(%struct.word_desc* %39)
  %40 = load i32, i32* %tok, align 4
  %call66 = call i8* @error_token_from_token(i32 %40)
  store i8* %call66, i8** %etext, align 4
  %tobool67 = icmp ne i8* %call66, null
  br i1 %tobool67, label %if.then68, label %if.else70

if.then68:                                        ; preds = %if.else65
  %41 = load i32, i32* @line_number, align 4
  %call69 = call i8* @libintl_gettext(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.87, i32 0, i32 0))
  %42 = load i8*, i8** %etext, align 4
  call void (i32, i8*, ...) @parser_error(i32 %41, i8* %call69, i8* %42)
  %43 = load i8*, i8** %etext, align 4
  call void @sh_xfree(i8* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4529)
  br label %if.end72

if.else70:                                        ; preds = %if.else65
  %44 = load i32, i32* @line_number, align 4
  %call71 = call i8* @libintl_gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.88, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %44, i8* %call71)
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %if.then68
  br label %do.body73

do.body73:                                        ; preds = %if.end72
  store i32 274, i32* @cond_token, align 4
  store %struct.cond_com* null, %struct.cond_com** %retval, align 4
  br label %return

do.end74:                                         ; No predecessors!
  br label %if.end75

if.end75:                                         ; preds = %do.end74, %if.then62
  %call76 = call i32 @cond_skip_newlines()
  br label %if.end234

if.else77:                                        ; preds = %land.lhs.true54, %land.lhs.true48, %land.lhs.true42, %if.else39
  %45 = load i32, i32* %tok, align 4
  %cmp78 = icmp eq i32 %45, 280
  br i1 %cmp78, label %if.then80, label %if.else217

if.then80:                                        ; preds = %if.else77
  %46 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %call81 = call %struct.cond_com* @make_cond_node(i32 5, %struct.word_desc* %46, %struct.cond_com* null, %struct.cond_com* null)
  store %struct.cond_com* %call81, %struct.cond_com** %tleft, align 4
  %call82 = call i32 @read_token(i32 0)
  store i32 %call82, i32* %tok, align 4
  %47 = load i32, i32* %tok, align 4
  %cmp83 = icmp eq i32 %47, 280
  br i1 %cmp83, label %land.lhs.true85, label %if.else137

land.lhs.true85:                                  ; preds = %if.then80
  %48 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word86 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %48, i32 0, i32 0
  %49 = load i8*, i8** %word86, align 4
  %call87 = call i32 @test_binop(i8* %49)
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %if.then89, label %if.else137

if.then89:                                        ; preds = %land.lhs.true85
  %50 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  store %struct.word_desc* %50, %struct.word_desc** %op, align 4
  %51 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word90 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %51, i32 0, i32 0
  %52 = load i8*, i8** %word90, align 4
  %arrayidx91 = getelementptr inbounds i8, i8* %52, i32 0
  %53 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %53 to i32
  %cmp93 = icmp eq i32 %conv92, 61
  br i1 %cmp93, label %land.lhs.true95, label %if.else115

land.lhs.true95:                                  ; preds = %if.then89
  %54 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word96 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %54, i32 0, i32 0
  %55 = load i8*, i8** %word96, align 4
  %arrayidx97 = getelementptr inbounds i8, i8* %55, i32 1
  %56 = load i8, i8* %arrayidx97, align 1
  %conv98 = sext i8 %56 to i32
  %cmp99 = icmp eq i32 %conv98, 0
  br i1 %cmp99, label %if.then113, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %land.lhs.true95
  %57 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word102 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %57, i32 0, i32 0
  %58 = load i8*, i8** %word102, align 4
  %arrayidx103 = getelementptr inbounds i8, i8* %58, i32 1
  %59 = load i8, i8* %arrayidx103, align 1
  %conv104 = sext i8 %59 to i32
  %cmp105 = icmp eq i32 %conv104, 61
  br i1 %cmp105, label %land.lhs.true107, label %if.else115

land.lhs.true107:                                 ; preds = %lor.lhs.false101
  %60 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word108 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %60, i32 0, i32 0
  %61 = load i8*, i8** %word108, align 4
  %arrayidx109 = getelementptr inbounds i8, i8* %61, i32 2
  %62 = load i8, i8* %arrayidx109, align 1
  %conv110 = sext i8 %62 to i32
  %cmp111 = icmp eq i32 %conv110, 0
  br i1 %cmp111, label %if.then113, label %if.else115

if.then113:                                       ; preds = %land.lhs.true107, %land.lhs.true95
  %63 = load i32, i32* @parser_state, align 4
  %or114 = or i32 %63, 4096
  store i32 %or114, i32* @parser_state, align 4
  br label %if.end136

if.else115:                                       ; preds = %land.lhs.true107, %lor.lhs.false101, %if.then89
  %64 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word116 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %64, i32 0, i32 0
  %65 = load i8*, i8** %word116, align 4
  %arrayidx117 = getelementptr inbounds i8, i8* %65, i32 0
  %66 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %66 to i32
  %cmp119 = icmp eq i32 %conv118, 33
  br i1 %cmp119, label %land.lhs.true121, label %if.end135

land.lhs.true121:                                 ; preds = %if.else115
  %67 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word122 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %67, i32 0, i32 0
  %68 = load i8*, i8** %word122, align 4
  %arrayidx123 = getelementptr inbounds i8, i8* %68, i32 1
  %69 = load i8, i8* %arrayidx123, align 1
  %conv124 = sext i8 %69 to i32
  %cmp125 = icmp eq i32 %conv124, 61
  br i1 %cmp125, label %land.lhs.true127, label %if.end135

land.lhs.true127:                                 ; preds = %land.lhs.true121
  %70 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %word128 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %70, i32 0, i32 0
  %71 = load i8*, i8** %word128, align 4
  %arrayidx129 = getelementptr inbounds i8, i8* %71, i32 2
  %72 = load i8, i8* %arrayidx129, align 1
  %conv130 = sext i8 %72 to i32
  %cmp131 = icmp eq i32 %conv130, 0
  br i1 %cmp131, label %if.then133, label %if.end135

if.then133:                                       ; preds = %land.lhs.true127
  %73 = load i32, i32* @parser_state, align 4
  %or134 = or i32 %73, 4096
  store i32 %or134, i32* @parser_state, align 4
  br label %if.end135

if.end135:                                        ; preds = %if.then133, %land.lhs.true127, %land.lhs.true121, %if.else115
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then113
  br label %if.end190

if.else137:                                       ; preds = %land.lhs.true85, %if.then80
  %74 = load i32, i32* %tok, align 4
  %cmp138 = icmp eq i32 %74, 280
  br i1 %cmp138, label %land.lhs.true140, label %if.else154

land.lhs.true140:                                 ; preds = %if.else137
  %75 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word141 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %75, i32 0, i32 0
  %76 = load i8*, i8** %word141, align 4
  %arrayidx142 = getelementptr inbounds i8, i8* %76, i32 0
  %77 = load i8, i8* %arrayidx142, align 1
  %conv143 = sext i8 %77 to i32
  %78 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i32 0, i32 0), align 1
  %conv144 = sext i8 %78 to i32
  %cmp145 = icmp eq i32 %conv143, %conv144
  br i1 %cmp145, label %land.lhs.true147, label %if.else154

land.lhs.true147:                                 ; preds = %land.lhs.true140
  %79 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %word148 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %79, i32 0, i32 0
  %80 = load i8*, i8** %word148, align 4
  %call149 = call i32 @strcmp(i8* %80, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.89, i32 0, i32 0))
  %cmp150 = icmp eq i32 %call149, 0
  br i1 %cmp150, label %if.then152, label %if.else154

if.then152:                                       ; preds = %land.lhs.true147
  %81 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  store %struct.word_desc* %81, %struct.word_desc** %op, align 4
  %82 = load i32, i32* @parser_state, align 4
  %or153 = or i32 %82, 65536
  store i32 %or153, i32* @parser_state, align 4
  br label %if.end189

if.else154:                                       ; preds = %land.lhs.true147, %land.lhs.true140, %if.else137
  %83 = load i32, i32* %tok, align 4
  %cmp155 = icmp eq i32 %83, 60
  br i1 %cmp155, label %if.then160, label %lor.lhs.false157

lor.lhs.false157:                                 ; preds = %if.else154
  %84 = load i32, i32* %tok, align 4
  %cmp158 = icmp eq i32 %84, 62
  br i1 %cmp158, label %if.then160, label %if.else162

if.then160:                                       ; preds = %lor.lhs.false157, %if.else154
  %85 = load i32, i32* %tok, align 4
  %call161 = call %struct.word_desc* @make_word_from_token(i32 %85)
  store %struct.word_desc* %call161, %struct.word_desc** %op, align 4
  br label %if.end188

if.else162:                                       ; preds = %lor.lhs.false157
  %86 = load i32, i32* %tok, align 4
  %cmp163 = icmp eq i32 %86, 273
  br i1 %cmp163, label %if.then174, label %lor.lhs.false165

lor.lhs.false165:                                 ; preds = %if.else162
  %87 = load i32, i32* %tok, align 4
  %cmp166 = icmp eq i32 %87, 287
  br i1 %cmp166, label %if.then174, label %lor.lhs.false168

lor.lhs.false168:                                 ; preds = %lor.lhs.false165
  %88 = load i32, i32* %tok, align 4
  %cmp169 = icmp eq i32 %88, 288
  br i1 %cmp169, label %if.then174, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %lor.lhs.false168
  %89 = load i32, i32* %tok, align 4
  %cmp172 = icmp eq i32 %89, 41
  br i1 %cmp172, label %if.then174, label %if.else177

if.then174:                                       ; preds = %lor.lhs.false171, %lor.lhs.false168, %lor.lhs.false165, %if.else162
  %call175 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.90, i32 0, i32 0))
  store %struct.word_desc* %call175, %struct.word_desc** %op, align 4
  %90 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %91 = load %struct.cond_com*, %struct.cond_com** %tleft, align 4
  %call176 = call %struct.cond_com* @make_cond_node(i32 3, %struct.word_desc* %90, %struct.cond_com* %91, %struct.cond_com* null)
  store %struct.cond_com* %call176, %struct.cond_com** %term, align 4
  %92 = load i32, i32* %tok, align 4
  store i32 %92, i32* @cond_token, align 4
  %93 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  store %struct.cond_com* %93, %struct.cond_com** %retval, align 4
  br label %return

if.else177:                                       ; preds = %lor.lhs.false171
  %94 = load i32, i32* %tok, align 4
  %call178 = call i8* @error_token_from_token(i32 %94)
  store i8* %call178, i8** %etext, align 4
  %tobool179 = icmp ne i8* %call178, null
  br i1 %tobool179, label %if.then180, label %if.else182

if.then180:                                       ; preds = %if.else177
  %95 = load i32, i32* @line_number, align 4
  %call181 = call i8* @libintl_gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.91, i32 0, i32 0))
  %96 = load i8*, i8** %etext, align 4
  call void (i32, i8*, ...) @parser_error(i32 %95, i8* %call181, i8* %96)
  %97 = load i8*, i8** %etext, align 4
  call void @sh_xfree(i8* %97, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4579)
  br label %if.end184

if.else182:                                       ; preds = %if.else177
  %98 = load i32, i32* @line_number, align 4
  %call183 = call i8* @libintl_gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.92, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %98, i8* %call183)
  br label %if.end184

if.end184:                                        ; preds = %if.else182, %if.then180
  %99 = load %struct.cond_com*, %struct.cond_com** %tleft, align 4
  call void @dispose_cond_node(%struct.cond_com* %99)
  br label %do.body185

do.body185:                                       ; preds = %if.end184
  store i32 274, i32* @cond_token, align 4
  store %struct.cond_com* null, %struct.cond_com** %retval, align 4
  br label %return

do.end186:                                        ; No predecessors!
  br label %if.end187

if.end187:                                        ; preds = %do.end186
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then160
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.then152
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end136
  %100 = load i32, i32* @parser_state, align 4
  %and = and i32 %100, 4096
  %tobool191 = icmp ne i32 %and, 0
  br i1 %tobool191, label %if.then192, label %if.end193

if.then192:                                       ; preds = %if.end190
  store i32 1, i32* @extended_glob, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.then192, %if.end190
  %call194 = call i32 @read_token(i32 0)
  store i32 %call194, i32* %tok, align 4
  %101 = load i32, i32* @parser_state, align 4
  %and195 = and i32 %101, 4096
  %tobool196 = icmp ne i32 %and195, 0
  br i1 %tobool196, label %if.then197, label %if.end198

if.then197:                                       ; preds = %if.end193
  %102 = load i32, i32* @global_extglob, align 4
  store i32 %102, i32* @extended_glob, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.then197, %if.end193
  %103 = load i32, i32* @parser_state, align 4
  %and199 = and i32 %103, -69633
  store i32 %and199, i32* @parser_state, align 4
  %104 = load i32, i32* %tok, align 4
  %cmp200 = icmp eq i32 %104, 280
  br i1 %cmp200, label %if.then202, label %if.else205

if.then202:                                       ; preds = %if.end198
  %105 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %call203 = call %struct.cond_com* @make_cond_node(i32 5, %struct.word_desc* %105, %struct.cond_com* null, %struct.cond_com* null)
  store %struct.cond_com* %call203, %struct.cond_com** %tright, align 4
  %106 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  %107 = load %struct.cond_com*, %struct.cond_com** %tleft, align 4
  %108 = load %struct.cond_com*, %struct.cond_com** %tright, align 4
  %call204 = call %struct.cond_com* @make_cond_node(i32 4, %struct.word_desc* %106, %struct.cond_com* %107, %struct.cond_com* %108)
  store %struct.cond_com* %call204, %struct.cond_com** %term, align 4
  br label %if.end215

if.else205:                                       ; preds = %if.end198
  %109 = load i32, i32* %tok, align 4
  %call206 = call i8* @error_token_from_token(i32 %109)
  store i8* %call206, i8** %etext, align 4
  %tobool207 = icmp ne i8* %call206, null
  br i1 %tobool207, label %if.then208, label %if.else210

if.then208:                                       ; preds = %if.else205
  %110 = load i32, i32* @line_number, align 4
  %call209 = call i8* @libintl_gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.93, i32 0, i32 0))
  %111 = load i8*, i8** %etext, align 4
  call void (i32, i8*, ...) @parser_error(i32 %110, i8* %call209, i8* %111)
  %112 = load i8*, i8** %etext, align 4
  call void @sh_xfree(i8* %112, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4605)
  br label %if.end212

if.else210:                                       ; preds = %if.else205
  %113 = load i32, i32* @line_number, align 4
  %call211 = call i8* @libintl_gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.94, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %113, i8* %call211)
  br label %if.end212

if.end212:                                        ; preds = %if.else210, %if.then208
  %114 = load %struct.cond_com*, %struct.cond_com** %tleft, align 4
  call void @dispose_cond_node(%struct.cond_com* %114)
  %115 = load %struct.word_desc*, %struct.word_desc** %op, align 4
  call void @dispose_word(%struct.word_desc* %115)
  br label %do.body213

do.body213:                                       ; preds = %if.end212
  store i32 274, i32* @cond_token, align 4
  store %struct.cond_com* null, %struct.cond_com** %retval, align 4
  br label %return

do.end214:                                        ; No predecessors!
  br label %if.end215

if.end215:                                        ; preds = %do.end214, %if.then202
  %call216 = call i32 @cond_skip_newlines()
  br label %if.end233

if.else217:                                       ; preds = %if.else77
  %116 = load i32, i32* %tok, align 4
  %cmp218 = icmp slt i32 %116, 256
  br i1 %cmp218, label %if.then220, label %if.else222

if.then220:                                       ; preds = %if.else217
  %117 = load i32, i32* @line_number, align 4
  %call221 = call i8* @libintl_gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.95, i32 0, i32 0))
  %118 = load i32, i32* %tok, align 4
  call void (i32, i8*, ...) @parser_error(i32 %117, i8* %call221, i32 %118)
  br label %if.end230

if.else222:                                       ; preds = %if.else217
  %119 = load i32, i32* %tok, align 4
  %call223 = call i8* @error_token_from_token(i32 %119)
  store i8* %call223, i8** %etext, align 4
  %tobool224 = icmp ne i8* %call223, null
  br i1 %tobool224, label %if.then225, label %if.else227

if.then225:                                       ; preds = %if.else222
  %120 = load i32, i32* @line_number, align 4
  %call226 = call i8* @libintl_gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.96, i32 0, i32 0))
  %121 = load i8*, i8** %etext, align 4
  call void (i32, i8*, ...) @parser_error(i32 %120, i8* %call226, i8* %121)
  %122 = load i8*, i8** %etext, align 4
  call void @sh_xfree(i8* %122, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4623)
  br label %if.end229

if.else227:                                       ; preds = %if.else222
  %123 = load i32, i32* @line_number, align 4
  %call228 = call i8* @libintl_gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.97, i32 0, i32 0))
  %124 = load i32, i32* %tok, align 4
  call void (i32, i8*, ...) @parser_error(i32 %123, i8* %call228, i32 %124)
  br label %if.end229

if.end229:                                        ; preds = %if.else227, %if.then225
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %if.then220
  br label %do.body231

do.body231:                                       ; preds = %if.end230
  store i32 274, i32* @cond_token, align 4
  store %struct.cond_com* null, %struct.cond_com** %retval, align 4
  br label %return

do.end232:                                        ; No predecessors!
  br label %if.end233

if.end233:                                        ; preds = %do.end232, %if.end215
  br label %if.end234

if.end234:                                        ; preds = %if.end233, %if.end75
  br label %if.end235

if.end235:                                        ; preds = %if.end234, %if.end38
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.end16
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %do.end
  %125 = load %struct.cond_com*, %struct.cond_com** %term, align 4
  store %struct.cond_com* %125, %struct.cond_com** %retval, align 4
  br label %return

return:                                           ; preds = %if.end237, %do.body231, %do.body213, %do.body185, %if.then174, %do.body73, %do.body14, %do.body
  %126 = load %struct.cond_com*, %struct.cond_com** %retval, align 4
  ret %struct.cond_com* %126
}

; Function Attrs: noinline nounwind
define internal i32 @cond_skip_newlines() #0 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %call = call i32 @read_token(i32 0)
  store i32 %call, i32* @cond_token, align 4
  %cmp = icmp eq i32 %call, 10
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %0 = load i32, i32* @interactive, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %1 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp1 = icmp eq i32 %1, 1
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp2 = icmp eq i32 %2, 2
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @prompt_again()
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %3 = load i32, i32* @cond_token, align 4
  ret i32 %3
}

declare void @dispose_cond_node(%struct.cond_com*) #1

declare void @dispose_word(%struct.word_desc*) #1

declare i32 @test_unop(i8*) #1

declare i32 @test_binop(i8*) #1

declare %struct.word_desc* @make_word_from_token(i32) #1

declare void @get_new_window_size(i32, i32*, i32*) #1

declare i32 @cleanup_dead_jobs() #1

declare void @internal_warning(i8*, ...) #1

declare i8* @pre_process_line(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @parse_arith_cmd(i8** %ep, i32 %adddq) #0 {
entry:
  %retval = alloca i32, align 4
  %ep.addr = alloca i8**, align 4
  %adddq.addr = alloca i32, align 4
  %exp_lineno = alloca i32, align 4
  %rval = alloca i32, align 4
  %c = alloca i32, align 4
  %ttok = alloca i8*, align 4
  %tokstr = alloca i8*, align 4
  %ttoklen = alloca i32, align 4
  store i8** %ep, i8*** %ep.addr, align 4
  store i32 %adddq, i32* %adddq.addr, align 4
  %0 = load i32, i32* @line_number, align 4
  store i32 %0, i32* %exp_lineno, align 4
  %call = call i8* @parse_matched_pair(i32 0, i32 40, i32 41, i32* %ttoklen, i32 0)
  store i8* %call, i8** %ttok, align 4
  store i32 1, i32* %rval, align 4
  %1 = load i8*, i8** %ttok, align 4
  %cmp = icmp eq i8* %1, @matched_pair_error
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call i32 @shell_getc(i32 0)
  store i32 %call1, i32* %c, align 4
  %2 = load i32, i32* %c, align 4
  %cmp2 = icmp ne i32 %2, 41
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* @shell_input_line_index, align 4
  %cmp3 = icmp ugt i32 %3, 1
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %4 = load i8*, i8** @shell_input_line_property, align 4
  %5 = load i32, i32* @shell_input_line_index, align 4
  %sub = sub i32 %5, 1
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %sub
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %if.then4, label %if.end5

cond.false:                                       ; preds = %land.lhs.true
  br i1 true, label %if.then4, label %if.end5

if.then4:                                         ; preds = %cond.false, %cond.true
  store i32 0, i32* %rval, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %cond.false, %cond.true, %if.end
  %7 = load i32, i32* %ttoklen, align 4
  %add = add nsw i32 %7, 4
  %call6 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4372)
  store i8* %call6, i8** %tokstr, align 4
  %8 = load i32, i32* %rval, align 4
  %cmp7 = icmp eq i32 %8, 1
  br i1 %cmp7, label %land.lhs.true9, label %if.else

land.lhs.true9:                                   ; preds = %if.end5
  %9 = load i32, i32* %adddq.addr, align 4
  %tobool10 = icmp ne i32 %9, 0
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %land.lhs.true9
  %10 = load i8*, i8** %tokstr, align 4
  %arrayidx12 = getelementptr inbounds i8, i8* %10, i32 0
  store i8 34, i8* %arrayidx12, align 1
  %11 = load i8*, i8** %tokstr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 1
  %12 = load i8*, i8** %ttok, align 4
  %13 = load i32, i32* %ttoklen, align 4
  %sub13 = sub nsw i32 %13, 1
  %call14 = call i8* @strncpy(i8* %add.ptr, i8* %12, i32 %sub13)
  %14 = load i8*, i8** %tokstr, align 4
  %15 = load i32, i32* %ttoklen, align 4
  %arrayidx15 = getelementptr inbounds i8, i8* %14, i32 %15
  store i8 34, i8* %arrayidx15, align 1
  %16 = load i8*, i8** %tokstr, align 4
  %17 = load i32, i32* %ttoklen, align 4
  %add16 = add nsw i32 %17, 1
  %arrayidx17 = getelementptr inbounds i8, i8* %16, i32 %add16
  store i8 0, i8* %arrayidx17, align 1
  br label %if.end37

if.else:                                          ; preds = %land.lhs.true9, %if.end5
  %18 = load i32, i32* %rval, align 4
  %cmp18 = icmp eq i32 %18, 1
  br i1 %cmp18, label %if.then20, label %if.else25

if.then20:                                        ; preds = %if.else
  %19 = load i8*, i8** %tokstr, align 4
  %20 = load i8*, i8** %ttok, align 4
  %21 = load i32, i32* %ttoklen, align 4
  %sub21 = sub nsw i32 %21, 1
  %call22 = call i8* @strncpy(i8* %19, i8* %20, i32 %sub21)
  %22 = load i8*, i8** %tokstr, align 4
  %23 = load i32, i32* %ttoklen, align 4
  %sub23 = sub nsw i32 %23, 1
  %arrayidx24 = getelementptr inbounds i8, i8* %22, i32 %sub23
  store i8 0, i8* %arrayidx24, align 1
  br label %if.end36

if.else25:                                        ; preds = %if.else
  %24 = load i8*, i8** %tokstr, align 4
  %arrayidx26 = getelementptr inbounds i8, i8* %24, i32 0
  store i8 40, i8* %arrayidx26, align 1
  %25 = load i8*, i8** %tokstr, align 4
  %add.ptr27 = getelementptr inbounds i8, i8* %25, i32 1
  %26 = load i8*, i8** %ttok, align 4
  %27 = load i32, i32* %ttoklen, align 4
  %sub28 = sub nsw i32 %27, 1
  %call29 = call i8* @strncpy(i8* %add.ptr27, i8* %26, i32 %sub28)
  %28 = load i8*, i8** %tokstr, align 4
  %29 = load i32, i32* %ttoklen, align 4
  %arrayidx30 = getelementptr inbounds i8, i8* %28, i32 %29
  store i8 41, i8* %arrayidx30, align 1
  %30 = load i32, i32* %c, align 4
  %conv31 = trunc i32 %30 to i8
  %31 = load i8*, i8** %tokstr, align 4
  %32 = load i32, i32* %ttoklen, align 4
  %add32 = add nsw i32 %32, 1
  %arrayidx33 = getelementptr inbounds i8, i8* %31, i32 %add32
  store i8 %conv31, i8* %arrayidx33, align 1
  %33 = load i8*, i8** %tokstr, align 4
  %34 = load i32, i32* %ttoklen, align 4
  %add34 = add nsw i32 %34, 2
  %arrayidx35 = getelementptr inbounds i8, i8* %33, i32 %add34
  store i8 0, i8* %arrayidx35, align 1
  br label %if.end36

if.end36:                                         ; preds = %if.else25, %if.then20
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then11
  %35 = load i8*, i8** %tokstr, align 4
  %36 = load i8**, i8*** %ep.addr, align 4
  store i8* %35, i8** %36, align 4
  br label %do.body

do.body:                                          ; preds = %if.end37
  %37 = load i8*, i8** %ttok, align 4
  %tobool38 = icmp ne i8* %37, null
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %do.body
  %38 = load i8*, i8** %ttok, align 4
  call void @sh_xfree(i8* %38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4397)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end40
  %39 = load i32, i32* %rval, align 4
  store i32 %39, i32* %retval, align 4
  br label %return

return:                                           ; preds = %do.end, %if.then
  %40 = load i32, i32* %retval, align 4
  ret i32 %40
}

declare %struct.word_desc* @alloc_word_desc() #1

; Function Attrs: noinline nounwind
define internal i8* @parse_matched_pair(i32 %qc, i32 %open, i32 %close, i32* %lenp, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %qc.addr = alloca i32, align 4
  %open.addr = alloca i32, align 4
  %close.addr = alloca i32, align 4
  %lenp.addr = alloca i32*, align 4
  %flags.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %ch = alloca i32, align 4
  %tflags = alloca i32, align 4
  %nestlen = alloca i32, align 4
  %ttranslen = alloca i32, align 4
  %start_lineno = alloca i32, align 4
  %ret = alloca i8*, align 4
  %nestret = alloca i8*, align 4
  %ttrans = alloca i8*, align 4
  %retind = alloca i32, align 4
  %retsize = alloca i32, align 4
  %rflags = alloca i32, align 4
  %dolbrace_state = alloca i32, align 4
  store i32 %qc, i32* %qc.addr, align 4
  store i32 %open, i32* %open.addr, align 4
  store i32 %close, i32* %close.addr, align 4
  store i32* %lenp, i32** %lenp.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* %flags.addr, align 4
  %and = and i32 %0, 64
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 1, i32 0
  store i32 %cond, i32* %dolbrace_state, align 4
  store i32 1, i32* %count, align 4
  store i32 0, i32* %tflags, align 4
  %1 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %1, 8
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %qc.addr, align 4
  %cmp = icmp ne i32 %2, 96
  br i1 %cmp, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %qc.addr, align 4
  %cmp4 = icmp ne i32 %3, 39
  br i1 %cmp4, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %4 = load i32, i32* %qc.addr, align 4
  %cmp6 = icmp ne i32 %4, 34
  br i1 %cmp6, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %5 = load i32, i32* %flags.addr, align 4
  %and8 = and i32 %5, 4
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true7
  %6 = load i32, i32* %tflags, align 4
  %or = or i32 %6, 2
  store i32 %or, i32* %tflags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %entry
  %7 = load i32, i32* %qc.addr, align 4
  %cmp10 = icmp eq i32 %7, 34
  br i1 %cmp10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %8 = load i32, i32* %flags.addr, align 4
  %and11 = and i32 %8, 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond12 = phi i32 [ 4, %cond.true ], [ %and11, %cond.false ]
  store i32 %cond12, i32* %rflags, align 4
  store i32 64, i32* %retsize, align 4
  %call = call i8* @sh_xmalloc(i32 64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3378)
  store i8* %call, i8** %ret, align 4
  store i32 0, i32* %retind, align 4
  %9 = load i32, i32* @line_number, align 4
  store i32 %9, i32* %start_lineno, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end826, %if.then492, %if.end309, %do.end201, %do.end167, %if.end127, %if.end96, %if.end46, %cond.end
  %10 = load i32, i32* %count, align 4
  %tobool13 = icmp ne i32 %10, 0
  br i1 %tobool13, label %while.body, label %while.end827

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %qc.addr, align 4
  %cmp14 = icmp ne i32 %11, 39
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.body
  %12 = load i32, i32* %tflags, align 4
  %and15 = and i32 %12, 8
  %cmp16 = icmp eq i32 %and15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.body
  %13 = phi i1 [ false, %while.body ], [ %cmp16, %land.rhs ]
  %land.ext = zext i1 %13 to i32
  %call17 = call i32 @shell_getc(i32 %land.ext)
  store i32 %call17, i32* %ch, align 4
  %14 = load i32, i32* %ch, align 4
  %cmp18 = icmp eq i32 %14, -1
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %land.end
  %15 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3388)
  %16 = load i32, i32* %start_lineno, align 4
  %call20 = call i8* @libintl_gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.103, i32 0, i32 0))
  %17 = load i32, i32* %close.addr, align 4
  call void (i32, i8*, ...) @parser_error(i32 %16, i8* %call20, i32 %17)
  store i32 1, i32* @EOF_Reached, align 4
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end21:                                         ; preds = %land.end
  %18 = load i32, i32* %ch, align 4
  %cmp22 = icmp eq i32 %18, 10
  br i1 %cmp22, label %land.lhs.true23, label %if.end29

land.lhs.true23:                                  ; preds = %if.end21
  %19 = load i32, i32* @interactive, align 4
  %tobool24 = icmp ne i32 %19, 0
  br i1 %tobool24, label %land.lhs.true25, label %if.end29

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %20 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp26 = icmp eq i32 %20, 1
  br i1 %cmp26, label %if.then28, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true25
  %21 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp27 = icmp eq i32 %21, 2
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %lor.lhs.false, %land.lhs.true25
  call void @prompt_again()
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %lor.lhs.false, %land.lhs.true23, %if.end21
  %22 = load i32, i32* %tflags, align 4
  %and30 = and i32 %22, 4
  %tobool31 = icmp ne i32 %and30, 0
  br i1 %tobool31, label %if.then32, label %if.else

if.then32:                                        ; preds = %if.end29
  br label %do.body

do.body:                                          ; preds = %if.then32
  %23 = load i32, i32* %retind, align 4
  %add = add nsw i32 %23, 1
  %24 = load i32, i32* %retsize, align 4
  %cmp33 = icmp sge i32 %add, %24
  br i1 %cmp33, label %if.then34, label %if.end41

if.then34:                                        ; preds = %do.body
  br label %while.cond35

while.cond35:                                     ; preds = %while.body38, %if.then34
  %25 = load i32, i32* %retind, align 4
  %add36 = add nsw i32 %25, 1
  %26 = load i32, i32* %retsize, align 4
  %cmp37 = icmp sge i32 %add36, %26
  br i1 %cmp37, label %while.body38, label %while.end

while.body38:                                     ; preds = %while.cond35
  %27 = load i32, i32* %retsize, align 4
  %add39 = add nsw i32 %27, 64
  store i32 %add39, i32* %retsize, align 4
  br label %while.cond35

while.end:                                        ; preds = %while.cond35
  %28 = load i8*, i8** %ret, align 4
  %29 = load i32, i32* %retsize, align 4
  %call40 = call i8* @sh_xrealloc(i8* %28, i32 %29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3403)
  store i8* %call40, i8** %ret, align 4
  br label %if.end41

if.end41:                                         ; preds = %while.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end41
  %30 = load i32, i32* %ch, align 4
  %conv = trunc i32 %30 to i8
  %31 = load i8*, i8** %ret, align 4
  %32 = load i32, i32* %retind, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %retind, align 4
  %arrayidx = getelementptr inbounds i8, i8* %31, i32 %32
  store i8 %conv, i8* %arrayidx, align 1
  %33 = load i32, i32* %ch, align 4
  %cmp42 = icmp eq i32 %33, 10
  br i1 %cmp42, label %if.then44, label %if.end46

if.then44:                                        ; preds = %do.end
  %34 = load i32, i32* %tflags, align 4
  %and45 = and i32 %34, -5
  store i32 %and45, i32* %tflags, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %do.end
  br label %while.cond

if.else:                                          ; preds = %if.end29
  %35 = load i32, i32* %tflags, align 4
  %and47 = and i32 %35, 2
  %tobool48 = icmp ne i32 %and47, 0
  br i1 %tobool48, label %land.lhs.true49, label %if.end81

land.lhs.true49:                                  ; preds = %if.else
  %36 = load i32, i32* %tflags, align 4
  %and50 = and i32 %36, 4
  %cmp51 = icmp eq i32 %and50, 0
  br i1 %cmp51, label %land.lhs.true53, label %if.end81

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %37 = load i32, i32* %ch, align 4
  %cmp54 = icmp eq i32 %37, 35
  br i1 %cmp54, label %land.lhs.true56, label %if.end81

land.lhs.true56:                                  ; preds = %land.lhs.true53
  %38 = load i32, i32* %retind, align 4
  %cmp57 = icmp eq i32 %38, 0
  br i1 %cmp57, label %land.lhs.true70, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %land.lhs.true56
  %39 = load i8*, i8** %ret, align 4
  %40 = load i32, i32* %retind, align 4
  %sub = sub nsw i32 %40, 1
  %arrayidx60 = getelementptr inbounds i8, i8* %39, i32 %sub
  %41 = load i8, i8* %arrayidx60, align 1
  %conv61 = sext i8 %41 to i32
  %cmp62 = icmp eq i32 %conv61, 10
  br i1 %cmp62, label %land.lhs.true70, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %lor.lhs.false59
  %42 = load i8*, i8** %ret, align 4
  %43 = load i32, i32* %retind, align 4
  %sub65 = sub nsw i32 %43, 1
  %arrayidx66 = getelementptr inbounds i8, i8* %42, i32 %sub65
  %44 = load i8, i8* %arrayidx66, align 1
  %idxprom = zext i8 %44 to i32
  %arrayidx67 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %45 = load i32, i32* %arrayidx67, align 4
  %and68 = and i32 %45, 8192
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %land.lhs.true70, label %if.end81

land.lhs.true70:                                  ; preds = %lor.lhs.false64, %lor.lhs.false59, %land.lhs.true56
  %46 = load i32, i32* @shell_input_line_index, align 4
  %cmp71 = icmp ugt i32 %46, 1
  br i1 %cmp71, label %cond.true73, label %cond.false78

cond.true73:                                      ; preds = %land.lhs.true70
  %47 = load i8*, i8** @shell_input_line_property, align 4
  %48 = load i32, i32* @shell_input_line_index, align 4
  %sub74 = sub i32 %48, 1
  %arrayidx75 = getelementptr inbounds i8, i8* %47, i32 %sub74
  %49 = load i8, i8* %arrayidx75, align 1
  %conv76 = sext i8 %49 to i32
  %tobool77 = icmp ne i32 %conv76, 0
  br i1 %tobool77, label %if.then79, label %if.end81

cond.false78:                                     ; preds = %land.lhs.true70
  br i1 true, label %if.then79, label %if.end81

if.then79:                                        ; preds = %cond.false78, %cond.true73
  %50 = load i32, i32* %tflags, align 4
  %or80 = or i32 %50, 4
  store i32 %or80, i32* %tflags, align 4
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %cond.false78, %cond.true73, %lor.lhs.false64, %land.lhs.true53, %land.lhs.true49, %if.else
  br label %if.end82

if.end82:                                         ; preds = %if.end81
  %51 = load i32, i32* %tflags, align 4
  %and83 = and i32 %51, 8
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %if.then85, label %if.else131

if.then85:                                        ; preds = %if.end82
  %52 = load i32, i32* %tflags, align 4
  %and86 = and i32 %52, -9
  store i32 %and86, i32* %tflags, align 4
  %53 = load i32, i32* %qc.addr, align 4
  %cmp87 = icmp ne i32 %53, 39
  br i1 %cmp87, label %land.lhs.true89, label %if.end97

land.lhs.true89:                                  ; preds = %if.then85
  %54 = load i32, i32* %ch, align 4
  %cmp90 = icmp eq i32 %54, 10
  br i1 %cmp90, label %if.then92, label %if.end97

if.then92:                                        ; preds = %land.lhs.true89
  %55 = load i32, i32* %retind, align 4
  %cmp93 = icmp sgt i32 %55, 0
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.then92
  %56 = load i32, i32* %retind, align 4
  %dec = add nsw i32 %56, -1
  store i32 %dec, i32* %retind, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.then92
  br label %while.cond

if.end97:                                         ; preds = %land.lhs.true89, %if.then85
  br label %do.body98

do.body98:                                        ; preds = %if.end97
  %57 = load i32, i32* %retind, align 4
  %add99 = add nsw i32 %57, 2
  %58 = load i32, i32* %retsize, align 4
  %cmp100 = icmp sge i32 %add99, %58
  br i1 %cmp100, label %if.then102, label %if.end111

if.then102:                                       ; preds = %do.body98
  br label %while.cond103

while.cond103:                                    ; preds = %while.body107, %if.then102
  %59 = load i32, i32* %retind, align 4
  %add104 = add nsw i32 %59, 2
  %60 = load i32, i32* %retsize, align 4
  %cmp105 = icmp sge i32 %add104, %60
  br i1 %cmp105, label %while.body107, label %while.end109

while.body107:                                    ; preds = %while.cond103
  %61 = load i32, i32* %retsize, align 4
  %add108 = add nsw i32 %61, 64
  store i32 %add108, i32* %retsize, align 4
  br label %while.cond103

while.end109:                                     ; preds = %while.cond103
  %62 = load i8*, i8** %ret, align 4
  %63 = load i32, i32* %retsize, align 4
  %call110 = call i8* @sh_xrealloc(i8* %62, i32 %63, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3428)
  store i8* %call110, i8** %ret, align 4
  br label %if.end111

if.end111:                                        ; preds = %while.end109, %do.body98
  br label %do.end112

do.end112:                                        ; preds = %if.end111
  %64 = load i32, i32* %ch, align 4
  %cmp113 = icmp eq i32 %64, 1
  br i1 %cmp113, label %land.lhs.true115, label %if.end127

land.lhs.true115:                                 ; preds = %do.end112
  %65 = load i32, i32* @shell_input_line_index, align 4
  %cmp116 = icmp ugt i32 %65, 1
  br i1 %cmp116, label %cond.true118, label %cond.false123

cond.true118:                                     ; preds = %land.lhs.true115
  %66 = load i8*, i8** @shell_input_line_property, align 4
  %67 = load i32, i32* @shell_input_line_index, align 4
  %sub119 = sub i32 %67, 1
  %arrayidx120 = getelementptr inbounds i8, i8* %66, i32 %sub119
  %68 = load i8, i8* %arrayidx120, align 1
  %conv121 = sext i8 %68 to i32
  %tobool122 = icmp ne i32 %conv121, 0
  br i1 %tobool122, label %if.then124, label %if.end127

cond.false123:                                    ; preds = %land.lhs.true115
  br i1 true, label %if.then124, label %if.end127

if.then124:                                       ; preds = %cond.false123, %cond.true118
  %69 = load i8*, i8** %ret, align 4
  %70 = load i32, i32* %retind, align 4
  %inc125 = add nsw i32 %70, 1
  store i32 %inc125, i32* %retind, align 4
  %arrayidx126 = getelementptr inbounds i8, i8* %69, i32 %70
  store i8 1, i8* %arrayidx126, align 1
  br label %if.end127

if.end127:                                        ; preds = %if.then124, %cond.false123, %cond.true118, %do.end112
  %71 = load i32, i32* %ch, align 4
  %conv128 = trunc i32 %71 to i8
  %72 = load i8*, i8** %ret, align 4
  %73 = load i32, i32* %retind, align 4
  %inc129 = add nsw i32 %73, 1
  store i32 %inc129, i32* %retind, align 4
  %arrayidx130 = getelementptr inbounds i8, i8* %72, i32 %73
  store i8 %conv128, i8* %arrayidx130, align 1
  br label %while.cond

if.else131:                                       ; preds = %if.end82
  %74 = load i32, i32* @parser_state, align 4
  %and132 = and i32 %74, 262144
  %tobool133 = icmp ne i32 %and132, 0
  br i1 %tobool133, label %land.lhs.true134, label %if.else171

land.lhs.true134:                                 ; preds = %if.else131
  %75 = load i32, i32* %open.addr, align 4
  %cmp135 = icmp eq i32 %75, 39
  br i1 %cmp135, label %land.lhs.true137, label %if.else171

land.lhs.true137:                                 ; preds = %land.lhs.true134
  %76 = load i32, i32* %ch, align 4
  %cmp138 = icmp eq i32 %76, 1
  br i1 %cmp138, label %land.lhs.true143, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %land.lhs.true137
  %77 = load i32, i32* %ch, align 4
  %cmp141 = icmp eq i32 %77, 127
  br i1 %cmp141, label %land.lhs.true143, label %if.else171

land.lhs.true143:                                 ; preds = %lor.lhs.false140, %land.lhs.true137
  %78 = load i32, i32* @shell_input_line_index, align 4
  %cmp144 = icmp ugt i32 %78, 1
  br i1 %cmp144, label %cond.true146, label %cond.false151

cond.true146:                                     ; preds = %land.lhs.true143
  %79 = load i8*, i8** @shell_input_line_property, align 4
  %80 = load i32, i32* @shell_input_line_index, align 4
  %sub147 = sub i32 %80, 1
  %arrayidx148 = getelementptr inbounds i8, i8* %79, i32 %sub147
  %81 = load i8, i8* %arrayidx148, align 1
  %conv149 = sext i8 %81 to i32
  %tobool150 = icmp ne i32 %conv149, 0
  br i1 %tobool150, label %if.then152, label %if.else171

cond.false151:                                    ; preds = %land.lhs.true143
  br i1 true, label %if.then152, label %if.else171

if.then152:                                       ; preds = %cond.false151, %cond.true146
  br label %do.body153

do.body153:                                       ; preds = %if.then152
  %82 = load i32, i32* %retind, align 4
  %add154 = add nsw i32 %82, 1
  %83 = load i32, i32* %retsize, align 4
  %cmp155 = icmp sge i32 %add154, %83
  br i1 %cmp155, label %if.then157, label %if.end166

if.then157:                                       ; preds = %do.body153
  br label %while.cond158

while.cond158:                                    ; preds = %while.body162, %if.then157
  %84 = load i32, i32* %retind, align 4
  %add159 = add nsw i32 %84, 1
  %85 = load i32, i32* %retsize, align 4
  %cmp160 = icmp sge i32 %add159, %85
  br i1 %cmp160, label %while.body162, label %while.end164

while.body162:                                    ; preds = %while.cond158
  %86 = load i32, i32* %retsize, align 4
  %add163 = add nsw i32 %86, 64
  store i32 %add163, i32* %retsize, align 4
  br label %while.cond158

while.end164:                                     ; preds = %while.cond158
  %87 = load i8*, i8** %ret, align 4
  %88 = load i32, i32* %retsize, align 4
  %call165 = call i8* @sh_xrealloc(i8* %87, i32 %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3440)
  store i8* %call165, i8** %ret, align 4
  br label %if.end166

if.end166:                                        ; preds = %while.end164, %do.body153
  br label %do.end167

do.end167:                                        ; preds = %if.end166
  %89 = load i32, i32* %ch, align 4
  %conv168 = trunc i32 %89 to i8
  %90 = load i8*, i8** %ret, align 4
  %91 = load i32, i32* %retind, align 4
  %inc169 = add nsw i32 %91, 1
  store i32 %inc169, i32* %retind, align 4
  %arrayidx170 = getelementptr inbounds i8, i8* %90, i32 %91
  store i8 %conv168, i8* %arrayidx170, align 1
  br label %while.cond

if.else171:                                       ; preds = %cond.false151, %cond.true146, %lor.lhs.false140, %land.lhs.true134, %if.else131
  %92 = load i32, i32* %ch, align 4
  %cmp172 = icmp eq i32 %92, 1
  br i1 %cmp172, label %land.lhs.true177, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %if.else171
  %93 = load i32, i32* %ch, align 4
  %cmp175 = icmp eq i32 %93, 127
  br i1 %cmp175, label %land.lhs.true177, label %if.else207

land.lhs.true177:                                 ; preds = %lor.lhs.false174, %if.else171
  %94 = load i32, i32* @shell_input_line_index, align 4
  %cmp178 = icmp ugt i32 %94, 1
  br i1 %cmp178, label %cond.true180, label %cond.false185

cond.true180:                                     ; preds = %land.lhs.true177
  %95 = load i8*, i8** @shell_input_line_property, align 4
  %96 = load i32, i32* @shell_input_line_index, align 4
  %sub181 = sub i32 %96, 1
  %arrayidx182 = getelementptr inbounds i8, i8* %95, i32 %sub181
  %97 = load i8, i8* %arrayidx182, align 1
  %conv183 = sext i8 %97 to i32
  %tobool184 = icmp ne i32 %conv183, 0
  br i1 %tobool184, label %if.then186, label %if.else207

cond.false185:                                    ; preds = %land.lhs.true177
  br i1 true, label %if.then186, label %if.else207

if.then186:                                       ; preds = %cond.false185, %cond.true180
  br label %do.body187

do.body187:                                       ; preds = %if.then186
  %98 = load i32, i32* %retind, align 4
  %add188 = add nsw i32 %98, 2
  %99 = load i32, i32* %retsize, align 4
  %cmp189 = icmp sge i32 %add188, %99
  br i1 %cmp189, label %if.then191, label %if.end200

if.then191:                                       ; preds = %do.body187
  br label %while.cond192

while.cond192:                                    ; preds = %while.body196, %if.then191
  %100 = load i32, i32* %retind, align 4
  %add193 = add nsw i32 %100, 2
  %101 = load i32, i32* %retsize, align 4
  %cmp194 = icmp sge i32 %add193, %101
  br i1 %cmp194, label %while.body196, label %while.end198

while.body196:                                    ; preds = %while.cond192
  %102 = load i32, i32* %retsize, align 4
  %add197 = add nsw i32 %102, 64
  store i32 %add197, i32* %retsize, align 4
  br label %while.cond192

while.end198:                                     ; preds = %while.cond192
  %103 = load i8*, i8** %ret, align 4
  %104 = load i32, i32* %retsize, align 4
  %call199 = call i8* @sh_xrealloc(i8* %103, i32 %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3446)
  store i8* %call199, i8** %ret, align 4
  br label %if.end200

if.end200:                                        ; preds = %while.end198, %do.body187
  br label %do.end201

do.end201:                                        ; preds = %if.end200
  %105 = load i8*, i8** %ret, align 4
  %106 = load i32, i32* %retind, align 4
  %inc202 = add nsw i32 %106, 1
  store i32 %inc202, i32* %retind, align 4
  %arrayidx203 = getelementptr inbounds i8, i8* %105, i32 %106
  store i8 1, i8* %arrayidx203, align 1
  %107 = load i32, i32* %ch, align 4
  %conv204 = trunc i32 %107 to i8
  %108 = load i8*, i8** %ret, align 4
  %109 = load i32, i32* %retind, align 4
  %inc205 = add nsw i32 %109, 1
  store i32 %inc205, i32* %retind, align 4
  %arrayidx206 = getelementptr inbounds i8, i8* %108, i32 %109
  store i8 %conv204, i8* %arrayidx206, align 1
  br label %while.cond

if.else207:                                       ; preds = %cond.false185, %cond.true180, %lor.lhs.false174
  %110 = load i32, i32* %ch, align 4
  %111 = load i32, i32* %close.addr, align 4
  %cmp208 = icmp eq i32 %110, %111
  br i1 %cmp208, label %land.lhs.true210, label %if.else221

land.lhs.true210:                                 ; preds = %if.else207
  %112 = load i32, i32* @shell_input_line_index, align 4
  %cmp211 = icmp ugt i32 %112, 1
  br i1 %cmp211, label %cond.true213, label %cond.false218

cond.true213:                                     ; preds = %land.lhs.true210
  %113 = load i8*, i8** @shell_input_line_property, align 4
  %114 = load i32, i32* @shell_input_line_index, align 4
  %sub214 = sub i32 %114, 1
  %arrayidx215 = getelementptr inbounds i8, i8* %113, i32 %sub214
  %115 = load i8, i8* %arrayidx215, align 1
  %conv216 = sext i8 %115 to i32
  %tobool217 = icmp ne i32 %conv216, 0
  br i1 %tobool217, label %if.then219, label %if.else221

cond.false218:                                    ; preds = %land.lhs.true210
  br i1 true, label %if.then219, label %if.else221

if.then219:                                       ; preds = %cond.false218, %cond.true213
  %116 = load i32, i32* %count, align 4
  %dec220 = add nsw i32 %116, -1
  store i32 %dec220, i32* %count, align 4
  br label %if.end264

if.else221:                                       ; preds = %cond.false218, %cond.true213, %if.else207
  %117 = load i32, i32* %open.addr, align 4
  %118 = load i32, i32* %close.addr, align 4
  %cmp222 = icmp ne i32 %117, %118
  br i1 %cmp222, label %land.lhs.true224, label %if.else244

land.lhs.true224:                                 ; preds = %if.else221
  %119 = load i32, i32* %tflags, align 4
  %and225 = and i32 %119, 1
  %tobool226 = icmp ne i32 %and225, 0
  br i1 %tobool226, label %land.lhs.true227, label %if.else244

land.lhs.true227:                                 ; preds = %land.lhs.true224
  %120 = load i32, i32* %open.addr, align 4
  %cmp228 = icmp eq i32 %120, 123
  br i1 %cmp228, label %land.lhs.true230, label %if.else244

land.lhs.true230:                                 ; preds = %land.lhs.true227
  %121 = load i32, i32* %ch, align 4
  %122 = load i32, i32* %open.addr, align 4
  %cmp231 = icmp eq i32 %121, %122
  br i1 %cmp231, label %land.lhs.true233, label %if.else244

land.lhs.true233:                                 ; preds = %land.lhs.true230
  %123 = load i32, i32* @shell_input_line_index, align 4
  %cmp234 = icmp ugt i32 %123, 1
  br i1 %cmp234, label %cond.true236, label %cond.false241

cond.true236:                                     ; preds = %land.lhs.true233
  %124 = load i8*, i8** @shell_input_line_property, align 4
  %125 = load i32, i32* @shell_input_line_index, align 4
  %sub237 = sub i32 %125, 1
  %arrayidx238 = getelementptr inbounds i8, i8* %124, i32 %sub237
  %126 = load i8, i8* %arrayidx238, align 1
  %conv239 = sext i8 %126 to i32
  %tobool240 = icmp ne i32 %conv239, 0
  br i1 %tobool240, label %if.then242, label %if.else244

cond.false241:                                    ; preds = %land.lhs.true233
  br i1 true, label %if.then242, label %if.else244

if.then242:                                       ; preds = %cond.false241, %cond.true236
  %127 = load i32, i32* %count, align 4
  %inc243 = add nsw i32 %127, 1
  store i32 %inc243, i32* %count, align 4
  br label %if.end263

if.else244:                                       ; preds = %cond.false241, %cond.true236, %land.lhs.true230, %land.lhs.true227, %land.lhs.true224, %if.else221
  %128 = load i32, i32* %flags.addr, align 4
  %and245 = and i32 %128, 1
  %cmp246 = icmp eq i32 %and245, 0
  br i1 %cmp246, label %land.lhs.true248, label %if.end262

land.lhs.true248:                                 ; preds = %if.else244
  %129 = load i32, i32* %ch, align 4
  %130 = load i32, i32* %open.addr, align 4
  %cmp249 = icmp eq i32 %129, %130
  br i1 %cmp249, label %land.lhs.true251, label %if.end262

land.lhs.true251:                                 ; preds = %land.lhs.true248
  %131 = load i32, i32* @shell_input_line_index, align 4
  %cmp252 = icmp ugt i32 %131, 1
  br i1 %cmp252, label %cond.true254, label %cond.false259

cond.true254:                                     ; preds = %land.lhs.true251
  %132 = load i8*, i8** @shell_input_line_property, align 4
  %133 = load i32, i32* @shell_input_line_index, align 4
  %sub255 = sub i32 %133, 1
  %arrayidx256 = getelementptr inbounds i8, i8* %132, i32 %sub255
  %134 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %134 to i32
  %tobool258 = icmp ne i32 %conv257, 0
  br i1 %tobool258, label %if.then260, label %if.end262

cond.false259:                                    ; preds = %land.lhs.true251
  br i1 true, label %if.then260, label %if.end262

if.then260:                                       ; preds = %cond.false259, %cond.true254
  %135 = load i32, i32* %count, align 4
  %inc261 = add nsw i32 %135, 1
  store i32 %inc261, i32* %count, align 4
  br label %if.end262

if.end262:                                        ; preds = %if.then260, %cond.false259, %cond.true254, %land.lhs.true248, %if.else244
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then242
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then219
  br label %if.end265

if.end265:                                        ; preds = %if.end264
  br label %if.end266

if.end266:                                        ; preds = %if.end265
  br label %if.end267

if.end267:                                        ; preds = %if.end266
  br label %do.body268

do.body268:                                       ; preds = %if.end267
  %136 = load i32, i32* %retind, align 4
  %add269 = add nsw i32 %136, 1
  %137 = load i32, i32* %retsize, align 4
  %cmp270 = icmp sge i32 %add269, %137
  br i1 %cmp270, label %if.then272, label %if.end281

if.then272:                                       ; preds = %do.body268
  br label %while.cond273

while.cond273:                                    ; preds = %while.body277, %if.then272
  %138 = load i32, i32* %retind, align 4
  %add274 = add nsw i32 %138, 1
  %139 = load i32, i32* %retsize, align 4
  %cmp275 = icmp sge i32 %add274, %139
  br i1 %cmp275, label %while.body277, label %while.end279

while.body277:                                    ; preds = %while.cond273
  %140 = load i32, i32* %retsize, align 4
  %add278 = add nsw i32 %140, 64
  store i32 %add278, i32* %retsize, align 4
  br label %while.cond273

while.end279:                                     ; preds = %while.cond273
  %141 = load i8*, i8** %ret, align 4
  %142 = load i32, i32* %retsize, align 4
  %call280 = call i8* @sh_xrealloc(i8* %141, i32 %142, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3460)
  store i8* %call280, i8** %ret, align 4
  br label %if.end281

if.end281:                                        ; preds = %while.end279, %do.body268
  br label %do.end282

do.end282:                                        ; preds = %if.end281
  %143 = load i32, i32* %ch, align 4
  %conv283 = trunc i32 %143 to i8
  %144 = load i8*, i8** %ret, align 4
  %145 = load i32, i32* %retind, align 4
  %inc284 = add nsw i32 %145, 1
  store i32 %inc284, i32* %retind, align 4
  %arrayidx285 = getelementptr inbounds i8, i8* %144, i32 %145
  store i8 %conv283, i8* %arrayidx285, align 1
  %146 = load i32, i32* %count, align 4
  %cmp286 = icmp eq i32 %146, 0
  br i1 %cmp286, label %if.then288, label %if.end289

if.then288:                                       ; preds = %do.end282
  br label %while.end827

if.end289:                                        ; preds = %do.end282
  %147 = load i32, i32* %open.addr, align 4
  %cmp290 = icmp eq i32 %147, 39
  br i1 %cmp290, label %if.then292, label %if.end310

if.then292:                                       ; preds = %if.end289
  %148 = load i32, i32* %flags.addr, align 4
  %and293 = and i32 %148, 2
  %tobool294 = icmp ne i32 %and293, 0
  br i1 %tobool294, label %land.lhs.true295, label %if.end309

land.lhs.true295:                                 ; preds = %if.then292
  %149 = load i32, i32* %ch, align 4
  %cmp296 = icmp eq i32 %149, 92
  br i1 %cmp296, label %land.lhs.true298, label %if.end309

land.lhs.true298:                                 ; preds = %land.lhs.true295
  %150 = load i32, i32* @shell_input_line_index, align 4
  %cmp299 = icmp ugt i32 %150, 1
  br i1 %cmp299, label %cond.true301, label %cond.false306

cond.true301:                                     ; preds = %land.lhs.true298
  %151 = load i8*, i8** @shell_input_line_property, align 4
  %152 = load i32, i32* @shell_input_line_index, align 4
  %sub302 = sub i32 %152, 1
  %arrayidx303 = getelementptr inbounds i8, i8* %151, i32 %sub302
  %153 = load i8, i8* %arrayidx303, align 1
  %conv304 = sext i8 %153 to i32
  %tobool305 = icmp ne i32 %conv304, 0
  br i1 %tobool305, label %if.then307, label %if.end309

cond.false306:                                    ; preds = %land.lhs.true298
  br i1 true, label %if.then307, label %if.end309

if.then307:                                       ; preds = %cond.false306, %cond.true301
  %154 = load i32, i32* %tflags, align 4
  %or308 = or i32 %154, 8
  store i32 %or308, i32* %tflags, align 4
  br label %if.end309

if.end309:                                        ; preds = %if.then307, %cond.false306, %cond.true301, %land.lhs.true295, %if.then292
  br label %while.cond

if.end310:                                        ; preds = %if.end289
  %155 = load i32, i32* %ch, align 4
  %cmp311 = icmp eq i32 %155, 92
  br i1 %cmp311, label %land.lhs.true313, label %if.end324

land.lhs.true313:                                 ; preds = %if.end310
  %156 = load i32, i32* @shell_input_line_index, align 4
  %cmp314 = icmp ugt i32 %156, 1
  br i1 %cmp314, label %cond.true316, label %cond.false321

cond.true316:                                     ; preds = %land.lhs.true313
  %157 = load i8*, i8** @shell_input_line_property, align 4
  %158 = load i32, i32* @shell_input_line_index, align 4
  %sub317 = sub i32 %158, 1
  %arrayidx318 = getelementptr inbounds i8, i8* %157, i32 %sub317
  %159 = load i8, i8* %arrayidx318, align 1
  %conv319 = sext i8 %159 to i32
  %tobool320 = icmp ne i32 %conv319, 0
  br i1 %tobool320, label %if.then322, label %if.end324

cond.false321:                                    ; preds = %land.lhs.true313
  br i1 true, label %if.then322, label %if.end324

if.then322:                                       ; preds = %cond.false321, %cond.true316
  %160 = load i32, i32* %tflags, align 4
  %or323 = or i32 %160, 8
  store i32 %or323, i32* %tflags, align 4
  br label %if.end324

if.end324:                                        ; preds = %if.then322, %cond.false321, %cond.true316, %if.end310
  %161 = load i32, i32* %flags.addr, align 4
  %and325 = and i32 %161, 64
  %tobool326 = icmp ne i32 %and325, 0
  br i1 %tobool326, label %if.then327, label %if.end463

if.then327:                                       ; preds = %if.end324
  %162 = load i32, i32* %dolbrace_state, align 4
  %cmp328 = icmp eq i32 %162, 1
  br i1 %cmp328, label %land.lhs.true330, label %if.else346

land.lhs.true330:                                 ; preds = %if.then327
  %163 = load i32, i32* %ch, align 4
  %cmp331 = icmp eq i32 %163, 37
  br i1 %cmp331, label %land.lhs.true333, label %if.else346

land.lhs.true333:                                 ; preds = %land.lhs.true330
  %164 = load i32, i32* %retind, align 4
  %cmp334 = icmp sgt i32 %164, 1
  br i1 %cmp334, label %land.lhs.true336, label %if.else346

land.lhs.true336:                                 ; preds = %land.lhs.true333
  %165 = load i32, i32* @shell_input_line_index, align 4
  %cmp337 = icmp ugt i32 %165, 1
  br i1 %cmp337, label %cond.true339, label %cond.false344

cond.true339:                                     ; preds = %land.lhs.true336
  %166 = load i8*, i8** @shell_input_line_property, align 4
  %167 = load i32, i32* @shell_input_line_index, align 4
  %sub340 = sub i32 %167, 1
  %arrayidx341 = getelementptr inbounds i8, i8* %166, i32 %sub340
  %168 = load i8, i8* %arrayidx341, align 1
  %conv342 = sext i8 %168 to i32
  %tobool343 = icmp ne i32 %conv342, 0
  br i1 %tobool343, label %if.then345, label %if.else346

cond.false344:                                    ; preds = %land.lhs.true336
  br i1 true, label %if.then345, label %if.else346

if.then345:                                       ; preds = %cond.false344, %cond.true339
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end462

if.else346:                                       ; preds = %cond.false344, %cond.true339, %land.lhs.true333, %land.lhs.true330, %if.then327
  %169 = load i32, i32* %dolbrace_state, align 4
  %cmp347 = icmp eq i32 %169, 1
  br i1 %cmp347, label %land.lhs.true349, label %if.else365

land.lhs.true349:                                 ; preds = %if.else346
  %170 = load i32, i32* %ch, align 4
  %cmp350 = icmp eq i32 %170, 35
  br i1 %cmp350, label %land.lhs.true352, label %if.else365

land.lhs.true352:                                 ; preds = %land.lhs.true349
  %171 = load i32, i32* %retind, align 4
  %cmp353 = icmp sgt i32 %171, 1
  br i1 %cmp353, label %land.lhs.true355, label %if.else365

land.lhs.true355:                                 ; preds = %land.lhs.true352
  %172 = load i32, i32* @shell_input_line_index, align 4
  %cmp356 = icmp ugt i32 %172, 1
  br i1 %cmp356, label %cond.true358, label %cond.false363

cond.true358:                                     ; preds = %land.lhs.true355
  %173 = load i8*, i8** @shell_input_line_property, align 4
  %174 = load i32, i32* @shell_input_line_index, align 4
  %sub359 = sub i32 %174, 1
  %arrayidx360 = getelementptr inbounds i8, i8* %173, i32 %sub359
  %175 = load i8, i8* %arrayidx360, align 1
  %conv361 = sext i8 %175 to i32
  %tobool362 = icmp ne i32 %conv361, 0
  br i1 %tobool362, label %if.then364, label %if.else365

cond.false363:                                    ; preds = %land.lhs.true355
  br i1 true, label %if.then364, label %if.else365

if.then364:                                       ; preds = %cond.false363, %cond.true358
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end461

if.else365:                                       ; preds = %cond.false363, %cond.true358, %land.lhs.true352, %land.lhs.true349, %if.else346
  %176 = load i32, i32* %dolbrace_state, align 4
  %cmp366 = icmp eq i32 %176, 1
  br i1 %cmp366, label %land.lhs.true368, label %if.else384

land.lhs.true368:                                 ; preds = %if.else365
  %177 = load i32, i32* %ch, align 4
  %cmp369 = icmp eq i32 %177, 47
  br i1 %cmp369, label %land.lhs.true371, label %if.else384

land.lhs.true371:                                 ; preds = %land.lhs.true368
  %178 = load i32, i32* %retind, align 4
  %cmp372 = icmp sgt i32 %178, 1
  br i1 %cmp372, label %land.lhs.true374, label %if.else384

land.lhs.true374:                                 ; preds = %land.lhs.true371
  %179 = load i32, i32* @shell_input_line_index, align 4
  %cmp375 = icmp ugt i32 %179, 1
  br i1 %cmp375, label %cond.true377, label %cond.false382

cond.true377:                                     ; preds = %land.lhs.true374
  %180 = load i8*, i8** @shell_input_line_property, align 4
  %181 = load i32, i32* @shell_input_line_index, align 4
  %sub378 = sub i32 %181, 1
  %arrayidx379 = getelementptr inbounds i8, i8* %180, i32 %sub378
  %182 = load i8, i8* %arrayidx379, align 1
  %conv380 = sext i8 %182 to i32
  %tobool381 = icmp ne i32 %conv380, 0
  br i1 %tobool381, label %if.then383, label %if.else384

cond.false382:                                    ; preds = %land.lhs.true374
  br i1 true, label %if.then383, label %if.else384

if.then383:                                       ; preds = %cond.false382, %cond.true377
  store i32 128, i32* %dolbrace_state, align 4
  br label %if.end460

if.else384:                                       ; preds = %cond.false382, %cond.true377, %land.lhs.true371, %land.lhs.true368, %if.else365
  %183 = load i32, i32* %dolbrace_state, align 4
  %cmp385 = icmp eq i32 %183, 1
  br i1 %cmp385, label %land.lhs.true387, label %if.else403

land.lhs.true387:                                 ; preds = %if.else384
  %184 = load i32, i32* %ch, align 4
  %cmp388 = icmp eq i32 %184, 94
  br i1 %cmp388, label %land.lhs.true390, label %if.else403

land.lhs.true390:                                 ; preds = %land.lhs.true387
  %185 = load i32, i32* %retind, align 4
  %cmp391 = icmp sgt i32 %185, 1
  br i1 %cmp391, label %land.lhs.true393, label %if.else403

land.lhs.true393:                                 ; preds = %land.lhs.true390
  %186 = load i32, i32* @shell_input_line_index, align 4
  %cmp394 = icmp ugt i32 %186, 1
  br i1 %cmp394, label %cond.true396, label %cond.false401

cond.true396:                                     ; preds = %land.lhs.true393
  %187 = load i8*, i8** @shell_input_line_property, align 4
  %188 = load i32, i32* @shell_input_line_index, align 4
  %sub397 = sub i32 %188, 1
  %arrayidx398 = getelementptr inbounds i8, i8* %187, i32 %sub397
  %189 = load i8, i8* %arrayidx398, align 1
  %conv399 = sext i8 %189 to i32
  %tobool400 = icmp ne i32 %conv399, 0
  br i1 %tobool400, label %if.then402, label %if.else403

cond.false401:                                    ; preds = %land.lhs.true393
  br i1 true, label %if.then402, label %if.else403

if.then402:                                       ; preds = %cond.false401, %cond.true396
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end459

if.else403:                                       ; preds = %cond.false401, %cond.true396, %land.lhs.true390, %land.lhs.true387, %if.else384
  %190 = load i32, i32* %dolbrace_state, align 4
  %cmp404 = icmp eq i32 %190, 1
  br i1 %cmp404, label %land.lhs.true406, label %if.else422

land.lhs.true406:                                 ; preds = %if.else403
  %191 = load i32, i32* %ch, align 4
  %cmp407 = icmp eq i32 %191, 44
  br i1 %cmp407, label %land.lhs.true409, label %if.else422

land.lhs.true409:                                 ; preds = %land.lhs.true406
  %192 = load i32, i32* %retind, align 4
  %cmp410 = icmp sgt i32 %192, 1
  br i1 %cmp410, label %land.lhs.true412, label %if.else422

land.lhs.true412:                                 ; preds = %land.lhs.true409
  %193 = load i32, i32* @shell_input_line_index, align 4
  %cmp413 = icmp ugt i32 %193, 1
  br i1 %cmp413, label %cond.true415, label %cond.false420

cond.true415:                                     ; preds = %land.lhs.true412
  %194 = load i8*, i8** @shell_input_line_property, align 4
  %195 = load i32, i32* @shell_input_line_index, align 4
  %sub416 = sub i32 %195, 1
  %arrayidx417 = getelementptr inbounds i8, i8* %194, i32 %sub416
  %196 = load i8, i8* %arrayidx417, align 1
  %conv418 = sext i8 %196 to i32
  %tobool419 = icmp ne i32 %conv418, 0
  br i1 %tobool419, label %if.then421, label %if.else422

cond.false420:                                    ; preds = %land.lhs.true412
  br i1 true, label %if.then421, label %if.else422

if.then421:                                       ; preds = %cond.false420, %cond.true415
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end458

if.else422:                                       ; preds = %cond.false420, %cond.true415, %land.lhs.true409, %land.lhs.true406, %if.else403
  %197 = load i32, i32* %dolbrace_state, align 4
  %cmp423 = icmp eq i32 %197, 1
  br i1 %cmp423, label %land.lhs.true425, label %if.else439

land.lhs.true425:                                 ; preds = %if.else422
  %198 = load i32, i32* %ch, align 4
  %call426 = call i8* @strchr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i32 0, i32 0), i32 %198)
  %cmp427 = icmp ne i8* %call426, null
  br i1 %cmp427, label %land.lhs.true429, label %if.else439

land.lhs.true429:                                 ; preds = %land.lhs.true425
  %199 = load i32, i32* @shell_input_line_index, align 4
  %cmp430 = icmp ugt i32 %199, 1
  br i1 %cmp430, label %cond.true432, label %cond.false437

cond.true432:                                     ; preds = %land.lhs.true429
  %200 = load i8*, i8** @shell_input_line_property, align 4
  %201 = load i32, i32* @shell_input_line_index, align 4
  %sub433 = sub i32 %201, 1
  %arrayidx434 = getelementptr inbounds i8, i8* %200, i32 %sub433
  %202 = load i8, i8* %arrayidx434, align 1
  %conv435 = sext i8 %202 to i32
  %tobool436 = icmp ne i32 %conv435, 0
  br i1 %tobool436, label %if.then438, label %if.else439

cond.false437:                                    ; preds = %land.lhs.true429
  br i1 true, label %if.then438, label %if.else439

if.then438:                                       ; preds = %cond.false437, %cond.true432
  store i32 2, i32* %dolbrace_state, align 4
  br label %if.end457

if.else439:                                       ; preds = %cond.false437, %cond.true432, %land.lhs.true425, %if.else422
  %203 = load i32, i32* %dolbrace_state, align 4
  %cmp440 = icmp eq i32 %203, 2
  br i1 %cmp440, label %land.lhs.true442, label %if.end456

land.lhs.true442:                                 ; preds = %if.else439
  %204 = load i32, i32* %ch, align 4
  %call443 = call i8* @strchr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i32 0, i32 0), i32 %204)
  %cmp444 = icmp eq i8* %call443, null
  br i1 %cmp444, label %land.lhs.true446, label %if.end456

land.lhs.true446:                                 ; preds = %land.lhs.true442
  %205 = load i32, i32* @shell_input_line_index, align 4
  %cmp447 = icmp ugt i32 %205, 1
  br i1 %cmp447, label %cond.true449, label %cond.false454

cond.true449:                                     ; preds = %land.lhs.true446
  %206 = load i8*, i8** @shell_input_line_property, align 4
  %207 = load i32, i32* @shell_input_line_index, align 4
  %sub450 = sub i32 %207, 1
  %arrayidx451 = getelementptr inbounds i8, i8* %206, i32 %sub450
  %208 = load i8, i8* %arrayidx451, align 1
  %conv452 = sext i8 %208 to i32
  %tobool453 = icmp ne i32 %conv452, 0
  br i1 %tobool453, label %if.then455, label %if.end456

cond.false454:                                    ; preds = %land.lhs.true446
  br i1 true, label %if.then455, label %if.end456

if.then455:                                       ; preds = %cond.false454, %cond.true449
  store i32 4, i32* %dolbrace_state, align 4
  br label %if.end456

if.end456:                                        ; preds = %if.then455, %cond.false454, %cond.true449, %land.lhs.true442, %if.else439
  br label %if.end457

if.end457:                                        ; preds = %if.end456, %if.then438
  br label %if.end458

if.end458:                                        ; preds = %if.end457, %if.then421
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then402
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then383
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then364
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then345
  br label %if.end463

if.end463:                                        ; preds = %if.end462, %if.end324
  %209 = load i32, i32* @posixly_correct, align 4
  %tobool464 = icmp ne i32 %209, 0
  br i1 %tobool464, label %land.lhs.true465, label %if.end493

land.lhs.true465:                                 ; preds = %if.end463
  %210 = load i32, i32* @shell_compatibility_level, align 4
  %cmp466 = icmp sgt i32 %210, 41
  br i1 %cmp466, label %land.lhs.true468, label %if.end493

land.lhs.true468:                                 ; preds = %land.lhs.true465
  %211 = load i32, i32* %dolbrace_state, align 4
  %cmp469 = icmp ne i32 %211, 64
  br i1 %cmp469, label %land.lhs.true471, label %if.end493

land.lhs.true471:                                 ; preds = %land.lhs.true468
  %212 = load i32, i32* %dolbrace_state, align 4
  %cmp472 = icmp ne i32 %212, 128
  br i1 %cmp472, label %land.lhs.true474, label %if.end493

land.lhs.true474:                                 ; preds = %land.lhs.true471
  %213 = load i32, i32* %flags.addr, align 4
  %and475 = and i32 %213, 4
  %tobool476 = icmp ne i32 %and475, 0
  br i1 %tobool476, label %land.lhs.true477, label %if.end493

land.lhs.true477:                                 ; preds = %land.lhs.true474
  %214 = load i32, i32* %flags.addr, align 4
  %and478 = and i32 %214, 64
  %tobool479 = icmp ne i32 %and478, 0
  br i1 %tobool479, label %land.lhs.true480, label %if.end493

land.lhs.true480:                                 ; preds = %land.lhs.true477
  %215 = load i32, i32* %ch, align 4
  %cmp481 = icmp eq i32 %215, 39
  br i1 %cmp481, label %land.lhs.true483, label %if.end493

land.lhs.true483:                                 ; preds = %land.lhs.true480
  %216 = load i32, i32* @shell_input_line_index, align 4
  %cmp484 = icmp ugt i32 %216, 1
  br i1 %cmp484, label %cond.true486, label %cond.false491

cond.true486:                                     ; preds = %land.lhs.true483
  %217 = load i8*, i8** @shell_input_line_property, align 4
  %218 = load i32, i32* @shell_input_line_index, align 4
  %sub487 = sub i32 %218, 1
  %arrayidx488 = getelementptr inbounds i8, i8* %217, i32 %sub487
  %219 = load i8, i8* %arrayidx488, align 1
  %conv489 = sext i8 %219 to i32
  %tobool490 = icmp ne i32 %conv489, 0
  br i1 %tobool490, label %if.then492, label %if.end493

cond.false491:                                    ; preds = %land.lhs.true483
  br i1 true, label %if.then492, label %if.end493

if.then492:                                       ; preds = %cond.false491, %cond.true486
  br label %while.cond

if.end493:                                        ; preds = %cond.false491, %cond.true486, %land.lhs.true480, %land.lhs.true477, %land.lhs.true474, %land.lhs.true471, %land.lhs.true468, %land.lhs.true465, %if.end463
  %220 = load i32, i32* %open.addr, align 4
  %221 = load i32, i32* %close.addr, align 4
  %cmp494 = icmp ne i32 %220, %221
  br i1 %cmp494, label %if.then496, label %if.else673

if.then496:                                       ; preds = %if.end493
  %222 = load i32, i32* %ch, align 4
  %conv497 = trunc i32 %222 to i8
  %idxprom498 = zext i8 %conv497 to i32
  %arrayidx499 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom498
  %223 = load i32, i32* %arrayidx499, align 4
  %and500 = and i32 %223, 8
  %tobool501 = icmp ne i32 %and500, 0
  br i1 %tobool501, label %land.lhs.true502, label %if.else655

land.lhs.true502:                                 ; preds = %if.then496
  %224 = load i32, i32* @shell_input_line_index, align 4
  %cmp503 = icmp ugt i32 %224, 1
  br i1 %cmp503, label %cond.true505, label %cond.false510

cond.true505:                                     ; preds = %land.lhs.true502
  %225 = load i8*, i8** @shell_input_line_property, align 4
  %226 = load i32, i32* @shell_input_line_index, align 4
  %sub506 = sub i32 %226, 1
  %arrayidx507 = getelementptr inbounds i8, i8* %225, i32 %sub506
  %227 = load i8, i8* %arrayidx507, align 1
  %conv508 = sext i8 %227 to i32
  %tobool509 = icmp ne i32 %conv508, 0
  br i1 %tobool509, label %if.then511, label %if.else655

cond.false510:                                    ; preds = %land.lhs.true502
  br i1 true, label %if.then511, label %if.else655

if.then511:                                       ; preds = %cond.false510, %cond.true505
  br label %do.body512

do.body512:                                       ; preds = %if.then511
  %228 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add513 = add nsw i32 %228, 2
  %229 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp514 = icmp sgt i32 %add513, %229
  br i1 %cmp514, label %if.then516, label %if.end519

if.then516:                                       ; preds = %do.body512
  %230 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %231 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add517 = add nsw i32 %231, 10
  store i32 %add517, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul = mul i32 %add517, 1
  %call518 = call i8* @sh_xrealloc(i8* %230, i32 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3522)
  store i8* %call518, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end519

if.end519:                                        ; preds = %if.then516, %do.body512
  %232 = load i32, i32* %ch, align 4
  %conv520 = trunc i32 %232 to i8
  %233 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %234 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx521 = getelementptr inbounds i8, i8* %233, i32 %234
  store i8 %conv520, i8* %arrayidx521, align 1
  %235 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc522 = add nsw i32 %235, 1
  store i32 %inc522, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end523

do.end523:                                        ; preds = %if.end519
  %236 = load i32, i32* %tflags, align 4
  %and524 = and i32 %236, 1
  %tobool525 = icmp ne i32 %and524, 0
  br i1 %tobool525, label %land.lhs.true526, label %if.else541

land.lhs.true526:                                 ; preds = %do.end523
  %237 = load i32, i32* %ch, align 4
  %cmp527 = icmp eq i32 %237, 39
  br i1 %cmp527, label %land.lhs.true529, label %if.else541

land.lhs.true529:                                 ; preds = %land.lhs.true526
  %238 = load i32, i32* @shell_input_line_index, align 4
  %cmp530 = icmp ugt i32 %238, 1
  br i1 %cmp530, label %cond.true532, label %cond.false537

cond.true532:                                     ; preds = %land.lhs.true529
  %239 = load i8*, i8** @shell_input_line_property, align 4
  %240 = load i32, i32* @shell_input_line_index, align 4
  %sub533 = sub i32 %240, 1
  %arrayidx534 = getelementptr inbounds i8, i8* %239, i32 %sub533
  %241 = load i8, i8* %arrayidx534, align 1
  %conv535 = sext i8 %241 to i32
  %tobool536 = icmp ne i32 %conv535, 0
  br i1 %tobool536, label %if.then538, label %if.else541

cond.false537:                                    ; preds = %land.lhs.true529
  br i1 true, label %if.then538, label %if.else541

if.then538:                                       ; preds = %cond.false537, %cond.true532
  %242 = load i32, i32* %ch, align 4
  %243 = load i32, i32* %ch, align 4
  %244 = load i32, i32* %ch, align 4
  %245 = load i32, i32* %rflags, align 4
  %or539 = or i32 2, %245
  %call540 = call i8* @parse_matched_pair(i32 %242, i32 %243, i32 %244, i32* %nestlen, i32 %or539)
  store i8* %call540, i8** %nestret, align 4
  br label %if.end543

if.else541:                                       ; preds = %cond.false537, %cond.true532, %land.lhs.true526, %do.end523
  %246 = load i32, i32* %ch, align 4
  %247 = load i32, i32* %ch, align 4
  %248 = load i32, i32* %ch, align 4
  %249 = load i32, i32* %rflags, align 4
  %call542 = call i8* @parse_matched_pair(i32 %246, i32 %247, i32 %248, i32* %nestlen, i32 %249)
  store i8* %call542, i8** %nestret, align 4
  br label %if.end543

if.end543:                                        ; preds = %if.else541, %if.then538
  %250 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec544 = add nsw i32 %250, -1
  store i32 %dec544, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.body545

do.body545:                                       ; preds = %if.end543
  %251 = load i8*, i8** %nestret, align 4
  %cmp546 = icmp eq i8* %251, @matched_pair_error
  br i1 %cmp546, label %if.then548, label %if.end549

if.then548:                                       ; preds = %do.body545
  %252 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %252, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3528)
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end549:                                        ; preds = %do.body545
  br label %do.end550

do.end550:                                        ; preds = %if.end549
  %253 = load i32, i32* %tflags, align 4
  %and551 = and i32 %253, 1
  %tobool552 = icmp ne i32 %and551, 0
  br i1 %tobool552, label %land.lhs.true553, label %if.else599

land.lhs.true553:                                 ; preds = %do.end550
  %254 = load i32, i32* %ch, align 4
  %cmp554 = icmp eq i32 %254, 39
  br i1 %cmp554, label %land.lhs.true556, label %if.else599

land.lhs.true556:                                 ; preds = %land.lhs.true553
  %255 = load i32, i32* @extended_quote, align 4
  %tobool557 = icmp ne i32 %255, 0
  br i1 %tobool557, label %land.lhs.true562, label %lor.lhs.false558

lor.lhs.false558:                                 ; preds = %land.lhs.true556
  %256 = load i32, i32* %rflags, align 4
  %and559 = and i32 %256, 4
  %cmp560 = icmp eq i32 %and559, 0
  br i1 %cmp560, label %land.lhs.true562, label %if.else599

land.lhs.true562:                                 ; preds = %lor.lhs.false558, %land.lhs.true556
  %257 = load i32, i32* @shell_input_line_index, align 4
  %cmp563 = icmp ugt i32 %257, 1
  br i1 %cmp563, label %cond.true565, label %cond.false570

cond.true565:                                     ; preds = %land.lhs.true562
  %258 = load i8*, i8** @shell_input_line_property, align 4
  %259 = load i32, i32* @shell_input_line_index, align 4
  %sub566 = sub i32 %259, 1
  %arrayidx567 = getelementptr inbounds i8, i8* %258, i32 %sub566
  %260 = load i8, i8* %arrayidx567, align 1
  %conv568 = sext i8 %260 to i32
  %tobool569 = icmp ne i32 %conv568, 0
  br i1 %tobool569, label %if.then571, label %if.else599

cond.false570:                                    ; preds = %land.lhs.true562
  br i1 true, label %if.then571, label %if.else599

if.then571:                                       ; preds = %cond.false570, %cond.true565
  %261 = load i8*, i8** %nestret, align 4
  %262 = load i32, i32* %nestlen, align 4
  %sub572 = sub nsw i32 %262, 1
  %call573 = call i8* @ansiexpand(i8* %261, i32 0, i32 %sub572, i32* %ttranslen)
  store i8* %call573, i8** %ttrans, align 4
  %263 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %263, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3534)
  %264 = load i32, i32* @shell_compatibility_level, align 4
  %cmp574 = icmp sgt i32 %264, 42
  br i1 %cmp574, label %land.lhs.true576, label %if.else588

land.lhs.true576:                                 ; preds = %if.then571
  %265 = load i32, i32* %rflags, align 4
  %and577 = and i32 %265, 4
  %tobool578 = icmp ne i32 %and577, 0
  br i1 %tobool578, label %land.lhs.true579, label %if.else588

land.lhs.true579:                                 ; preds = %land.lhs.true576
  %266 = load i32, i32* %dolbrace_state, align 4
  %cmp580 = icmp eq i32 %266, 128
  br i1 %cmp580, label %land.lhs.true582, label %if.else588

land.lhs.true582:                                 ; preds = %land.lhs.true579
  %267 = load i32, i32* %flags.addr, align 4
  %and583 = and i32 %267, 64
  %tobool584 = icmp ne i32 %and583, 0
  br i1 %tobool584, label %if.then585, label %if.else588

if.then585:                                       ; preds = %land.lhs.true582
  %268 = load i8*, i8** %ttrans, align 4
  %call586 = call i8* @sh_single_quote(i8* %268)
  store i8* %call586, i8** %nestret, align 4
  %269 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %269, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3544)
  %270 = load i8*, i8** %nestret, align 4
  %call587 = call i32 @strlen(i8* %270)
  store i32 %call587, i32* %nestlen, align 4
  br label %if.end597

if.else588:                                       ; preds = %land.lhs.true582, %land.lhs.true579, %land.lhs.true576, %if.then571
  %271 = load i32, i32* %rflags, align 4
  %and589 = and i32 %271, 4
  %cmp590 = icmp eq i32 %and589, 0
  br i1 %cmp590, label %if.then592, label %if.else595

if.then592:                                       ; preds = %if.else588
  %272 = load i8*, i8** %ttrans, align 4
  %call593 = call i8* @sh_single_quote(i8* %272)
  store i8* %call593, i8** %nestret, align 4
  %273 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %273, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3550)
  %274 = load i8*, i8** %nestret, align 4
  %call594 = call i32 @strlen(i8* %274)
  store i32 %call594, i32* %nestlen, align 4
  br label %if.end596

if.else595:                                       ; preds = %if.else588
  %275 = load i8*, i8** %ttrans, align 4
  store i8* %275, i8** %nestret, align 4
  %276 = load i32, i32* %ttranslen, align 4
  store i32 %276, i32* %nestlen, align 4
  br label %if.end596

if.end596:                                        ; preds = %if.else595, %if.then592
  br label %if.end597

if.end597:                                        ; preds = %if.end596, %if.then585
  %277 = load i32, i32* %retind, align 4
  %sub598 = sub nsw i32 %277, 2
  store i32 %sub598, i32* %retind, align 4
  br label %if.end627

if.else599:                                       ; preds = %cond.false570, %cond.true565, %lor.lhs.false558, %land.lhs.true553, %do.end550
  %278 = load i32, i32* %tflags, align 4
  %and600 = and i32 %278, 1
  %tobool601 = icmp ne i32 %and600, 0
  br i1 %tobool601, label %land.lhs.true602, label %if.end626

land.lhs.true602:                                 ; preds = %if.else599
  %279 = load i32, i32* %ch, align 4
  %cmp603 = icmp eq i32 %279, 34
  br i1 %cmp603, label %land.lhs.true605, label %if.end626

land.lhs.true605:                                 ; preds = %land.lhs.true602
  %280 = load i32, i32* @extended_quote, align 4
  %tobool606 = icmp ne i32 %280, 0
  br i1 %tobool606, label %land.lhs.true611, label %lor.lhs.false607

lor.lhs.false607:                                 ; preds = %land.lhs.true605
  %281 = load i32, i32* %rflags, align 4
  %and608 = and i32 %281, 4
  %cmp609 = icmp eq i32 %and608, 0
  br i1 %cmp609, label %land.lhs.true611, label %if.end626

land.lhs.true611:                                 ; preds = %lor.lhs.false607, %land.lhs.true605
  %282 = load i32, i32* @shell_input_line_index, align 4
  %cmp612 = icmp ugt i32 %282, 1
  br i1 %cmp612, label %cond.true614, label %cond.false619

cond.true614:                                     ; preds = %land.lhs.true611
  %283 = load i8*, i8** @shell_input_line_property, align 4
  %284 = load i32, i32* @shell_input_line_index, align 4
  %sub615 = sub i32 %284, 1
  %arrayidx616 = getelementptr inbounds i8, i8* %283, i32 %sub615
  %285 = load i8, i8* %arrayidx616, align 1
  %conv617 = sext i8 %285 to i32
  %tobool618 = icmp ne i32 %conv617, 0
  br i1 %tobool618, label %if.then620, label %if.end626

cond.false619:                                    ; preds = %land.lhs.true611
  br i1 true, label %if.then620, label %if.end626

if.then620:                                       ; preds = %cond.false619, %cond.true614
  %286 = load i8*, i8** %nestret, align 4
  %287 = load i32, i32* %nestlen, align 4
  %sub621 = sub nsw i32 %287, 1
  %288 = load i32, i32* %start_lineno, align 4
  %call622 = call i8* @localeexpand(i8* %286, i32 0, i32 %sub621, i32 %288, i32* %ttranslen)
  store i8* %call622, i8** %ttrans, align 4
  %289 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %289, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3564)
  %290 = load i8*, i8** %ttrans, align 4
  %291 = load i32, i32* %ttranslen, align 4
  %call623 = call i8* @sh_mkdoublequoted(i8* %290, i32 %291, i32 0)
  store i8* %call623, i8** %nestret, align 4
  %292 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %292, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3567)
  %293 = load i32, i32* %ttranslen, align 4
  %add624 = add nsw i32 %293, 2
  store i32 %add624, i32* %nestlen, align 4
  %294 = load i32, i32* %retind, align 4
  %sub625 = sub nsw i32 %294, 2
  store i32 %sub625, i32* %retind, align 4
  br label %if.end626

if.end626:                                        ; preds = %if.then620, %cond.false619, %cond.true614, %lor.lhs.false607, %land.lhs.true602, %if.else599
  br label %if.end627

if.end627:                                        ; preds = %if.end626, %if.end597
  br label %do.body628

do.body628:                                       ; preds = %if.end627
  %295 = load i32, i32* %nestlen, align 4
  %tobool629 = icmp ne i32 %295, 0
  br i1 %tobool629, label %if.then630, label %if.end648

if.then630:                                       ; preds = %do.body628
  br label %do.body631

do.body631:                                       ; preds = %if.then630
  %296 = load i32, i32* %retind, align 4
  %297 = load i32, i32* %nestlen, align 4
  %add632 = add nsw i32 %296, %297
  %298 = load i32, i32* %retsize, align 4
  %cmp633 = icmp sge i32 %add632, %298
  br i1 %cmp633, label %if.then635, label %if.end644

if.then635:                                       ; preds = %do.body631
  br label %while.cond636

while.cond636:                                    ; preds = %while.body640, %if.then635
  %299 = load i32, i32* %retind, align 4
  %300 = load i32, i32* %nestlen, align 4
  %add637 = add nsw i32 %299, %300
  %301 = load i32, i32* %retsize, align 4
  %cmp638 = icmp sge i32 %add637, %301
  br i1 %cmp638, label %while.body640, label %while.end642

while.body640:                                    ; preds = %while.cond636
  %302 = load i32, i32* %retsize, align 4
  %add641 = add nsw i32 %302, 64
  store i32 %add641, i32* %retsize, align 4
  br label %while.cond636

while.end642:                                     ; preds = %while.cond636
  %303 = load i8*, i8** %ret, align 4
  %304 = load i32, i32* %retsize, align 4
  %call643 = call i8* @sh_xrealloc(i8* %303, i32 %304, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3572)
  store i8* %call643, i8** %ret, align 4
  br label %if.end644

if.end644:                                        ; preds = %while.end642, %do.body631
  br label %do.end645

do.end645:                                        ; preds = %if.end644
  %305 = load i8*, i8** %ret, align 4
  %306 = load i32, i32* %retind, align 4
  %add.ptr = getelementptr inbounds i8, i8* %305, i32 %306
  %307 = load i8*, i8** %nestret, align 4
  %call646 = call i8* @strcpy(i8* %add.ptr, i8* %307)
  %308 = load i32, i32* %nestlen, align 4
  %309 = load i32, i32* %retind, align 4
  %add647 = add nsw i32 %309, %308
  store i32 %add647, i32* %retind, align 4
  br label %if.end648

if.end648:                                        ; preds = %do.end645, %do.body628
  br label %do.end649

do.end649:                                        ; preds = %if.end648
  br label %do.body650

do.body650:                                       ; preds = %do.end649
  %310 = load i8*, i8** %nestret, align 4
  %tobool651 = icmp ne i8* %310, null
  br i1 %tobool651, label %if.then652, label %if.end653

if.then652:                                       ; preds = %do.body650
  %311 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %311, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3573)
  br label %if.end653

if.end653:                                        ; preds = %if.then652, %do.body650
  br label %do.end654

do.end654:                                        ; preds = %if.end653
  br label %if.end672

if.else655:                                       ; preds = %cond.false510, %cond.true505, %if.then496
  %312 = load i32, i32* %flags.addr, align 4
  %and656 = and i32 %312, 96
  %tobool657 = icmp ne i32 %and656, 0
  br i1 %tobool657, label %land.lhs.true658, label %if.end671

land.lhs.true658:                                 ; preds = %if.else655
  %313 = load i32, i32* %tflags, align 4
  %and659 = and i32 %313, 1
  %tobool660 = icmp ne i32 %and659, 0
  br i1 %tobool660, label %land.lhs.true661, label %if.end671

land.lhs.true661:                                 ; preds = %land.lhs.true658
  %314 = load i32, i32* %ch, align 4
  %cmp662 = icmp eq i32 %314, 40
  br i1 %cmp662, label %if.then670, label %lor.lhs.false664

lor.lhs.false664:                                 ; preds = %land.lhs.true661
  %315 = load i32, i32* %ch, align 4
  %cmp665 = icmp eq i32 %315, 123
  br i1 %cmp665, label %if.then670, label %lor.lhs.false667

lor.lhs.false667:                                 ; preds = %lor.lhs.false664
  %316 = load i32, i32* %ch, align 4
  %cmp668 = icmp eq i32 %316, 91
  br i1 %cmp668, label %if.then670, label %if.end671

if.then670:                                       ; preds = %lor.lhs.false667, %lor.lhs.false664, %land.lhs.true661
  br label %parse_dollar_word

if.end671:                                        ; preds = %lor.lhs.false667, %land.lhs.true658, %if.else655
  br label %if.end672

if.end672:                                        ; preds = %if.end671, %do.end654
  br label %if.end810

if.else673:                                       ; preds = %if.end493
  %317 = load i32, i32* %open.addr, align 4
  %cmp674 = icmp eq i32 %317, 34
  br i1 %cmp674, label %land.lhs.true676, label %if.else724

land.lhs.true676:                                 ; preds = %if.else673
  %318 = load i32, i32* %ch, align 4
  %cmp677 = icmp eq i32 %318, 96
  br i1 %cmp677, label %land.lhs.true679, label %if.else724

land.lhs.true679:                                 ; preds = %land.lhs.true676
  %319 = load i32, i32* @shell_input_line_index, align 4
  %cmp680 = icmp ugt i32 %319, 1
  br i1 %cmp680, label %cond.true682, label %cond.false687

cond.true682:                                     ; preds = %land.lhs.true679
  %320 = load i8*, i8** @shell_input_line_property, align 4
  %321 = load i32, i32* @shell_input_line_index, align 4
  %sub683 = sub i32 %321, 1
  %arrayidx684 = getelementptr inbounds i8, i8* %320, i32 %sub683
  %322 = load i8, i8* %arrayidx684, align 1
  %conv685 = sext i8 %322 to i32
  %tobool686 = icmp ne i32 %conv685, 0
  br i1 %tobool686, label %if.then688, label %if.else724

cond.false687:                                    ; preds = %land.lhs.true679
  br i1 true, label %if.then688, label %if.else724

if.then688:                                       ; preds = %cond.false687, %cond.true682
  %323 = load i32, i32* %rflags, align 4
  %call689 = call i8* @parse_matched_pair(i32 0, i32 96, i32 96, i32* %nestlen, i32 %323)
  store i8* %call689, i8** %nestret, align 4
  br label %do.body690

do.body690:                                       ; preds = %if.then688
  %324 = load i8*, i8** %nestret, align 4
  %cmp691 = icmp eq i8* %324, @matched_pair_error
  br i1 %cmp691, label %if.then693, label %if.end694

if.then693:                                       ; preds = %do.body690
  %325 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %325, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3585)
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end694:                                        ; preds = %do.body690
  br label %do.end695

do.end695:                                        ; preds = %if.end694
  br label %do.body696

do.body696:                                       ; preds = %do.end695
  %326 = load i32, i32* %nestlen, align 4
  %tobool697 = icmp ne i32 %326, 0
  br i1 %tobool697, label %if.then698, label %if.end717

if.then698:                                       ; preds = %do.body696
  br label %do.body699

do.body699:                                       ; preds = %if.then698
  %327 = load i32, i32* %retind, align 4
  %328 = load i32, i32* %nestlen, align 4
  %add700 = add nsw i32 %327, %328
  %329 = load i32, i32* %retsize, align 4
  %cmp701 = icmp sge i32 %add700, %329
  br i1 %cmp701, label %if.then703, label %if.end712

if.then703:                                       ; preds = %do.body699
  br label %while.cond704

while.cond704:                                    ; preds = %while.body708, %if.then703
  %330 = load i32, i32* %retind, align 4
  %331 = load i32, i32* %nestlen, align 4
  %add705 = add nsw i32 %330, %331
  %332 = load i32, i32* %retsize, align 4
  %cmp706 = icmp sge i32 %add705, %332
  br i1 %cmp706, label %while.body708, label %while.end710

while.body708:                                    ; preds = %while.cond704
  %333 = load i32, i32* %retsize, align 4
  %add709 = add nsw i32 %333, 64
  store i32 %add709, i32* %retsize, align 4
  br label %while.cond704

while.end710:                                     ; preds = %while.cond704
  %334 = load i8*, i8** %ret, align 4
  %335 = load i32, i32* %retsize, align 4
  %call711 = call i8* @sh_xrealloc(i8* %334, i32 %335, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3586)
  store i8* %call711, i8** %ret, align 4
  br label %if.end712

if.end712:                                        ; preds = %while.end710, %do.body699
  br label %do.end713

do.end713:                                        ; preds = %if.end712
  %336 = load i8*, i8** %ret, align 4
  %337 = load i32, i32* %retind, align 4
  %add.ptr714 = getelementptr inbounds i8, i8* %336, i32 %337
  %338 = load i8*, i8** %nestret, align 4
  %call715 = call i8* @strcpy(i8* %add.ptr714, i8* %338)
  %339 = load i32, i32* %nestlen, align 4
  %340 = load i32, i32* %retind, align 4
  %add716 = add nsw i32 %340, %339
  store i32 %add716, i32* %retind, align 4
  br label %if.end717

if.end717:                                        ; preds = %do.end713, %do.body696
  br label %do.end718

do.end718:                                        ; preds = %if.end717
  br label %do.body719

do.body719:                                       ; preds = %do.end718
  %341 = load i8*, i8** %nestret, align 4
  %tobool720 = icmp ne i8* %341, null
  br i1 %tobool720, label %if.then721, label %if.end722

if.then721:                                       ; preds = %do.body719
  %342 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %342, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3588)
  br label %if.end722

if.end722:                                        ; preds = %if.then721, %do.body719
  br label %do.end723

do.end723:                                        ; preds = %if.end722
  br label %if.end809

if.else724:                                       ; preds = %cond.false687, %cond.true682, %land.lhs.true676, %if.else673
  %343 = load i32, i32* %open.addr, align 4
  %cmp725 = icmp ne i32 %343, 96
  br i1 %cmp725, label %land.lhs.true727, label %if.end808

land.lhs.true727:                                 ; preds = %if.else724
  %344 = load i32, i32* %tflags, align 4
  %and728 = and i32 %344, 1
  %tobool729 = icmp ne i32 %and728, 0
  br i1 %tobool729, label %land.lhs.true730, label %if.end808

land.lhs.true730:                                 ; preds = %land.lhs.true727
  %345 = load i32, i32* %ch, align 4
  %cmp731 = icmp eq i32 %345, 40
  br i1 %cmp731, label %land.lhs.true739, label %lor.lhs.false733

lor.lhs.false733:                                 ; preds = %land.lhs.true730
  %346 = load i32, i32* %ch, align 4
  %cmp734 = icmp eq i32 %346, 123
  br i1 %cmp734, label %land.lhs.true739, label %lor.lhs.false736

lor.lhs.false736:                                 ; preds = %lor.lhs.false733
  %347 = load i32, i32* %ch, align 4
  %cmp737 = icmp eq i32 %347, 91
  br i1 %cmp737, label %land.lhs.true739, label %if.end808

land.lhs.true739:                                 ; preds = %lor.lhs.false736, %lor.lhs.false733, %land.lhs.true730
  %348 = load i32, i32* @shell_input_line_index, align 4
  %cmp740 = icmp ugt i32 %348, 1
  br i1 %cmp740, label %cond.true742, label %cond.false747

cond.true742:                                     ; preds = %land.lhs.true739
  %349 = load i8*, i8** @shell_input_line_property, align 4
  %350 = load i32, i32* @shell_input_line_index, align 4
  %sub743 = sub i32 %350, 1
  %arrayidx744 = getelementptr inbounds i8, i8* %349, i32 %sub743
  %351 = load i8, i8* %arrayidx744, align 1
  %conv745 = sext i8 %351 to i32
  %tobool746 = icmp ne i32 %conv745, 0
  br i1 %tobool746, label %if.then748, label %if.end808

cond.false747:                                    ; preds = %land.lhs.true739
  br i1 true, label %if.then748, label %if.end808

if.then748:                                       ; preds = %cond.false747, %cond.true742
  br label %parse_dollar_word

parse_dollar_word:                                ; preds = %if.then748, %if.then670
  %352 = load i32, i32* %open.addr, align 4
  %353 = load i32, i32* %ch, align 4
  %cmp749 = icmp eq i32 %352, %353
  br i1 %cmp749, label %if.then751, label %if.end753

if.then751:                                       ; preds = %parse_dollar_word
  %354 = load i32, i32* %count, align 4
  %dec752 = add nsw i32 %354, -1
  store i32 %dec752, i32* %count, align 4
  br label %if.end753

if.end753:                                        ; preds = %if.then751, %parse_dollar_word
  %355 = load i32, i32* %ch, align 4
  %cmp754 = icmp eq i32 %355, 40
  br i1 %cmp754, label %if.then756, label %if.else760

if.then756:                                       ; preds = %if.end753
  %356 = load i32, i32* %rflags, align 4
  %or757 = or i32 %356, 8
  %and758 = and i32 %or757, -5
  %call759 = call i8* @parse_comsub(i32 0, i32 40, i32 41, i32* %nestlen, i32 %and758)
  store i8* %call759, i8** %nestret, align 4
  br label %if.end773

if.else760:                                       ; preds = %if.end753
  %357 = load i32, i32* %ch, align 4
  %cmp761 = icmp eq i32 %357, 123
  br i1 %cmp761, label %if.then763, label %if.else766

if.then763:                                       ; preds = %if.else760
  %358 = load i32, i32* %rflags, align 4
  %or764 = or i32 65, %358
  %call765 = call i8* @parse_matched_pair(i32 0, i32 123, i32 125, i32* %nestlen, i32 %or764)
  store i8* %call765, i8** %nestret, align 4
  br label %if.end772

if.else766:                                       ; preds = %if.else760
  %359 = load i32, i32* %ch, align 4
  %cmp767 = icmp eq i32 %359, 91
  br i1 %cmp767, label %if.then769, label %if.end771

if.then769:                                       ; preds = %if.else766
  %360 = load i32, i32* %rflags, align 4
  %call770 = call i8* @parse_matched_pair(i32 0, i32 91, i32 93, i32* %nestlen, i32 %360)
  store i8* %call770, i8** %nestret, align 4
  br label %if.end771

if.end771:                                        ; preds = %if.then769, %if.else766
  br label %if.end772

if.end772:                                        ; preds = %if.end771, %if.then763
  br label %if.end773

if.end773:                                        ; preds = %if.end772, %if.then756
  br label %do.body774

do.body774:                                       ; preds = %if.end773
  %361 = load i8*, i8** %nestret, align 4
  %cmp775 = icmp eq i8* %361, @matched_pair_error
  br i1 %cmp775, label %if.then777, label %if.end778

if.then777:                                       ; preds = %do.body774
  %362 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %362, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3603)
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end778:                                        ; preds = %do.body774
  br label %do.end779

do.end779:                                        ; preds = %if.end778
  br label %do.body780

do.body780:                                       ; preds = %do.end779
  %363 = load i32, i32* %nestlen, align 4
  %tobool781 = icmp ne i32 %363, 0
  br i1 %tobool781, label %if.then782, label %if.end801

if.then782:                                       ; preds = %do.body780
  br label %do.body783

do.body783:                                       ; preds = %if.then782
  %364 = load i32, i32* %retind, align 4
  %365 = load i32, i32* %nestlen, align 4
  %add784 = add nsw i32 %364, %365
  %366 = load i32, i32* %retsize, align 4
  %cmp785 = icmp sge i32 %add784, %366
  br i1 %cmp785, label %if.then787, label %if.end796

if.then787:                                       ; preds = %do.body783
  br label %while.cond788

while.cond788:                                    ; preds = %while.body792, %if.then787
  %367 = load i32, i32* %retind, align 4
  %368 = load i32, i32* %nestlen, align 4
  %add789 = add nsw i32 %367, %368
  %369 = load i32, i32* %retsize, align 4
  %cmp790 = icmp sge i32 %add789, %369
  br i1 %cmp790, label %while.body792, label %while.end794

while.body792:                                    ; preds = %while.cond788
  %370 = load i32, i32* %retsize, align 4
  %add793 = add nsw i32 %370, 64
  store i32 %add793, i32* %retsize, align 4
  br label %while.cond788

while.end794:                                     ; preds = %while.cond788
  %371 = load i8*, i8** %ret, align 4
  %372 = load i32, i32* %retsize, align 4
  %call795 = call i8* @sh_xrealloc(i8* %371, i32 %372, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3604)
  store i8* %call795, i8** %ret, align 4
  br label %if.end796

if.end796:                                        ; preds = %while.end794, %do.body783
  br label %do.end797

do.end797:                                        ; preds = %if.end796
  %373 = load i8*, i8** %ret, align 4
  %374 = load i32, i32* %retind, align 4
  %add.ptr798 = getelementptr inbounds i8, i8* %373, i32 %374
  %375 = load i8*, i8** %nestret, align 4
  %call799 = call i8* @strcpy(i8* %add.ptr798, i8* %375)
  %376 = load i32, i32* %nestlen, align 4
  %377 = load i32, i32* %retind, align 4
  %add800 = add nsw i32 %377, %376
  store i32 %add800, i32* %retind, align 4
  br label %if.end801

if.end801:                                        ; preds = %do.end797, %do.body780
  br label %do.end802

do.end802:                                        ; preds = %if.end801
  br label %do.body803

do.body803:                                       ; preds = %do.end802
  %378 = load i8*, i8** %nestret, align 4
  %tobool804 = icmp ne i8* %378, null
  br i1 %tobool804, label %if.then805, label %if.end806

if.then805:                                       ; preds = %do.body803
  %379 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %379, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3606)
  br label %if.end806

if.end806:                                        ; preds = %if.then805, %do.body803
  br label %do.end807

do.end807:                                        ; preds = %if.end806
  br label %if.end808

if.end808:                                        ; preds = %do.end807, %cond.false747, %cond.true742, %lor.lhs.false736, %land.lhs.true727, %if.else724
  br label %if.end809

if.end809:                                        ; preds = %if.end808, %do.end723
  br label %if.end810

if.end810:                                        ; preds = %if.end809, %if.end672
  %380 = load i32, i32* %ch, align 4
  %cmp811 = icmp eq i32 %380, 36
  br i1 %cmp811, label %land.lhs.true813, label %if.else824

land.lhs.true813:                                 ; preds = %if.end810
  %381 = load i32, i32* @shell_input_line_index, align 4
  %cmp814 = icmp ugt i32 %381, 1
  br i1 %cmp814, label %cond.true816, label %cond.false821

cond.true816:                                     ; preds = %land.lhs.true813
  %382 = load i8*, i8** @shell_input_line_property, align 4
  %383 = load i32, i32* @shell_input_line_index, align 4
  %sub817 = sub i32 %383, 1
  %arrayidx818 = getelementptr inbounds i8, i8* %382, i32 %sub817
  %384 = load i8, i8* %arrayidx818, align 1
  %conv819 = sext i8 %384 to i32
  %tobool820 = icmp ne i32 %conv819, 0
  br i1 %tobool820, label %if.then822, label %if.else824

cond.false821:                                    ; preds = %land.lhs.true813
  br i1 true, label %if.then822, label %if.else824

if.then822:                                       ; preds = %cond.false821, %cond.true816
  %385 = load i32, i32* %tflags, align 4
  %or823 = or i32 %385, 1
  store i32 %or823, i32* %tflags, align 4
  br label %if.end826

if.else824:                                       ; preds = %cond.false821, %cond.true816, %if.end810
  %386 = load i32, i32* %tflags, align 4
  %and825 = and i32 %386, -2
  store i32 %and825, i32* %tflags, align 4
  br label %if.end826

if.end826:                                        ; preds = %if.else824, %if.then822
  br label %while.cond

while.end827:                                     ; preds = %if.then288, %while.cond
  %387 = load i8*, i8** %ret, align 4
  %388 = load i32, i32* %retind, align 4
  %arrayidx828 = getelementptr inbounds i8, i8* %387, i32 %388
  store i8 0, i8* %arrayidx828, align 1
  %389 = load i32*, i32** %lenp.addr, align 4
  %tobool829 = icmp ne i32* %389, null
  br i1 %tobool829, label %if.then830, label %if.end831

if.then830:                                       ; preds = %while.end827
  %390 = load i32, i32* %retind, align 4
  %391 = load i32*, i32** %lenp.addr, align 4
  store i32 %390, i32* %391, align 4
  br label %if.end831

if.end831:                                        ; preds = %if.then830, %while.end827
  %392 = load i8*, i8** %ret, align 4
  store i8* %392, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end831, %if.then777, %if.then693, %if.then548, %if.then19
  %393 = load i8*, i8** %retval, align 4
  ret i8* %393
}

declare i8* @ansiexpand(i8*, i32, i32, i32*) #1

declare i8* @sh_single_quote(i8*) #1

declare i8* @localeexpand(i8*, i32, i32, i32, i32*) #1

declare i8* @sh_mkdoublequoted(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @parse_comsub(i32 %qc, i32 %open, i32 %close, i32* %lenp, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %qc.addr = alloca i32, align 4
  %open.addr = alloca i32, align 4
  %close.addr = alloca i32, align 4
  %lenp.addr = alloca i32*, align 4
  %flags.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %ch = alloca i32, align 4
  %peekc = alloca i32, align 4
  %tflags = alloca i32, align 4
  %lex_rwlen = alloca i32, align 4
  %lex_wlen = alloca i32, align 4
  %lex_firstind = alloca i32, align 4
  %nestlen = alloca i32, align 4
  %ttranslen = alloca i32, align 4
  %start_lineno = alloca i32, align 4
  %ret = alloca i8*, align 4
  %nestret = alloca i8*, align 4
  %ttrans = alloca i8*, align 4
  %heredelim = alloca i8*, align 4
  %retind = alloca i32, align 4
  %retsize = alloca i32, align 4
  %rflags = alloca i32, align 4
  %hdlen = alloca i32, align 4
  %tind = alloca i32, align 4
  %tind95 = alloca i32, align 4
  store i32 %qc, i32* %qc.addr, align 4
  store i32 %open, i32* %open.addr, align 4
  store i32 %close, i32* %close.addr, align 4
  store i32* %lenp, i32** %lenp.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %call = call i32 @shell_getc(i32 0)
  store i32 %call, i32* %peekc, align 4
  %0 = load i32, i32* %peekc, align 4
  call void @shell_ungetc(i32 %0)
  %1 = load i32, i32* %peekc, align 4
  %cmp = icmp eq i32 %1, 40
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %qc.addr, align 4
  %3 = load i32, i32* %open.addr, align 4
  %4 = load i32, i32* %close.addr, align 4
  %5 = load i32*, i32** %lenp.addr, align 4
  %call1 = call i8* @parse_matched_pair(i32 %2, i32 %3, i32 %4, i32* %5, i32 0)
  store i8* %call1, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 1, i32* %count, align 4
  store i32 16, i32* %tflags, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %and = and i32 %6, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end9

land.lhs.true:                                    ; preds = %if.end
  %7 = load i32, i32* %qc.addr, align 4
  %cmp2 = icmp ne i32 %7, 39
  br i1 %cmp2, label %land.lhs.true3, label %if.end9

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load i32, i32* %qc.addr, align 4
  %cmp4 = icmp ne i32 %8, 34
  br i1 %cmp4, label %land.lhs.true5, label %if.end9

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %9 = load i32, i32* %flags.addr, align 4
  %and6 = and i32 %9, 4
  %cmp7 = icmp eq i32 %and6, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true5
  %10 = load i32, i32* %tflags, align 4
  %or = or i32 %10, 32
  store i32 %or, i32* %tflags, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %if.end
  %11 = load i32, i32* %tflags, align 4
  %and10 = and i32 %11, 32
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %land.lhs.true12, label %if.end17

land.lhs.true12:                                  ; preds = %if.end9
  %12 = load i32, i32* @interactive, align 4
  %cmp13 = icmp eq i32 %12, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true12
  %13 = load i32, i32* @interactive_comments, align 4
  %tobool14 = icmp ne i32 %13, 0
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %lor.lhs.false, %land.lhs.true12
  %14 = load i32, i32* %tflags, align 4
  %or16 = or i32 %14, 2
  store i32 %or16, i32* %tflags, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %lor.lhs.false, %if.end9
  %15 = load i32, i32* %flags.addr, align 4
  %and18 = and i32 %15, 4
  store i32 %and18, i32* %rflags, align 4
  store i32 64, i32* %retsize, align 4
  %call19 = call i8* @sh_xmalloc(i32 64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3728)
  store i8* %call19, i8** %ret, align 4
  store i32 0, i32* %retind, align 4
  %16 = load i32, i32* @line_number, align 4
  store i32 %16, i32* %start_lineno, align 4
  store i32 0, i32* %lex_wlen, align 4
  store i32 0, i32* %lex_rwlen, align 4
  store i8* null, i8** %heredelim, align 4
  store i32 -1, i32* %lex_firstind, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end1246, %do.end916, %if.end849, %do.end497, %if.then454, %do.end437, %do.end275, %if.end206, %if.end175, %if.end160, %if.end17
  %17 = load i32, i32* %count, align 4
  %tobool20 = icmp ne i32 %17, 0
  br i1 %tobool20, label %while.body, label %while.end1247

while.body:                                       ; preds = %while.cond
  br label %comsub_readchar

comsub_readchar:                                  ; preds = %while.body
  %18 = load i32, i32* %qc.addr, align 4
  %cmp21 = icmp ne i32 %18, 39
  br i1 %cmp21, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %comsub_readchar
  %19 = load i32, i32* %tflags, align 4
  %and22 = and i32 %19, 12
  %cmp23 = icmp eq i32 %and22, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %comsub_readchar
  %20 = phi i1 [ false, %comsub_readchar ], [ %cmp23, %land.rhs ]
  %land.ext = zext i1 %20 to i32
  %call24 = call i32 @shell_getc(i32 %land.ext)
  store i32 %call24, i32* %ch, align 4
  %21 = load i32, i32* %ch, align 4
  %cmp25 = icmp eq i32 %21, -1
  br i1 %cmp25, label %if.then26, label %if.end31

if.then26:                                        ; preds = %land.end
  br label %eof_error

eof_error:                                        ; preds = %if.then819, %if.then793, %if.then459, %if.then26
  %22 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3745)
  br label %do.body

do.body:                                          ; preds = %eof_error
  %23 = load i8*, i8** %heredelim, align 4
  %tobool27 = icmp ne i8* %23, null
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %do.body
  %24 = load i8*, i8** %heredelim, align 4
  call void @sh_xfree(i8* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3746)
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end29
  %25 = load i32, i32* %start_lineno, align 4
  %call30 = call i8* @libintl_gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.103, i32 0, i32 0))
  %26 = load i32, i32* %close.addr, align 4
  call void (i32, i8*, ...) @parser_error(i32 %25, i8* %call30, i32 %26)
  store i32 1, i32* @EOF_Reached, align 4
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end31:                                         ; preds = %land.end
  %27 = load i32, i32* %ch, align 4
  %cmp32 = icmp eq i32 %27, 10
  br i1 %cmp32, label %if.then33, label %if.end73

if.then33:                                        ; preds = %if.end31
  %28 = load i32, i32* %tflags, align 4
  %and34 = and i32 %28, 256
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %land.lhs.true36, label %if.else

land.lhs.true36:                                  ; preds = %if.then33
  %29 = load i8*, i8** %heredelim, align 4
  %tobool37 = icmp ne i8* %29, null
  br i1 %tobool37, label %if.then38, label %if.else

if.then38:                                        ; preds = %land.lhs.true36
  %30 = load i32, i32* %tflags, align 4
  %and39 = and i32 %30, -257
  store i32 %and39, i32* %tflags, align 4
  %31 = load i32, i32* %tflags, align 4
  %or40 = or i32 %31, 128
  store i32 %or40, i32* %tflags, align 4
  %32 = load i32, i32* %retind, align 4
  %add = add nsw i32 %32, 1
  store i32 %add, i32* %lex_firstind, align 4
  br label %if.end72

if.else:                                          ; preds = %land.lhs.true36, %if.then33
  %33 = load i32, i32* %tflags, align 4
  %and41 = and i32 %33, 128
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.then43, label %if.end71

if.then43:                                        ; preds = %if.else
  %34 = load i32, i32* %lex_firstind, align 4
  store i32 %34, i32* %tind, align 4
  br label %while.cond44

while.cond44:                                     ; preds = %while.body52, %if.then43
  %35 = load i32, i32* %tflags, align 4
  %and45 = and i32 %35, 512
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %land.rhs47, label %land.end50

land.rhs47:                                       ; preds = %while.cond44
  %36 = load i8*, i8** %ret, align 4
  %37 = load i32, i32* %tind, align 4
  %arrayidx = getelementptr inbounds i8, i8* %36, i32 %37
  %38 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %38 to i32
  %cmp48 = icmp eq i32 %conv, 9
  br label %land.end50

land.end50:                                       ; preds = %land.rhs47, %while.cond44
  %39 = phi i1 [ false, %while.cond44 ], [ %cmp48, %land.rhs47 ]
  br i1 %39, label %while.body52, label %while.end

while.body52:                                     ; preds = %land.end50
  %40 = load i32, i32* %tind, align 4
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %tind, align 4
  br label %while.cond44

while.end:                                        ; preds = %land.end50
  %41 = load i32, i32* %hdlen, align 4
  %cmp53 = icmp eq i32 %41, 0
  br i1 %cmp53, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  br i1 true, label %if.then66, label %if.else68

cond.false:                                       ; preds = %while.end
  %42 = load i8*, i8** %ret, align 4
  %43 = load i32, i32* %tind, align 4
  %add.ptr = getelementptr inbounds i8, i8* %42, i32 %43
  %arrayidx55 = getelementptr inbounds i8, i8* %add.ptr, i32 0
  %44 = load i8, i8* %arrayidx55, align 1
  %conv56 = sext i8 %44 to i32
  %45 = load i8*, i8** %heredelim, align 4
  %arrayidx57 = getelementptr inbounds i8, i8* %45, i32 0
  %46 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %46 to i32
  %cmp59 = icmp eq i32 %conv56, %conv58
  br i1 %cmp59, label %land.lhs.true61, label %if.else68

land.lhs.true61:                                  ; preds = %cond.false
  %47 = load i8*, i8** %ret, align 4
  %48 = load i32, i32* %tind, align 4
  %add.ptr62 = getelementptr inbounds i8, i8* %47, i32 %48
  %49 = load i8*, i8** %heredelim, align 4
  %50 = load i32, i32* %hdlen, align 4
  %call63 = call i32 @strncmp(i8* %add.ptr62, i8* %49, i32 %50)
  %cmp64 = icmp eq i32 %call63, 0
  br i1 %cmp64, label %if.then66, label %if.else68

if.then66:                                        ; preds = %land.lhs.true61, %cond.true
  %51 = load i32, i32* %tflags, align 4
  %and67 = and i32 %51, -1665
  store i32 %and67, i32* %tflags, align 4
  %52 = load i8*, i8** %heredelim, align 4
  call void @sh_xfree(i8* %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3775)
  store i8* null, i8** %heredelim, align 4
  store i32 -1, i32* %lex_firstind, align 4
  br label %if.end70

if.else68:                                        ; preds = %land.lhs.true61, %cond.false, %cond.true
  %53 = load i32, i32* %retind, align 4
  %add69 = add nsw i32 %53, 1
  store i32 %add69, i32* %lex_firstind, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.else68, %if.then66
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.else
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then38
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end31
  %54 = load i32, i32* %ch, align 4
  %cmp74 = icmp eq i32 %54, 10
  br i1 %cmp74, label %land.lhs.true76, label %if.end85

land.lhs.true76:                                  ; preds = %if.end73
  %55 = load i32, i32* @interactive, align 4
  %tobool77 = icmp ne i32 %55, 0
  br i1 %tobool77, label %land.lhs.true78, label %if.end85

land.lhs.true78:                                  ; preds = %land.lhs.true76
  %56 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp79 = icmp eq i32 %56, 1
  br i1 %cmp79, label %if.then84, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %land.lhs.true78
  %57 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp82 = icmp eq i32 %57, 2
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %lor.lhs.false81, %land.lhs.true78
  call void @prompt_again()
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %lor.lhs.false81, %land.lhs.true76, %if.end73
  %58 = load i32, i32* %tflags, align 4
  %and86 = and i32 %58, 128
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %land.lhs.true88, label %if.end131

land.lhs.true88:                                  ; preds = %if.end85
  %59 = load i32, i32* %ch, align 4
  %60 = load i32, i32* %close.addr, align 4
  %cmp89 = icmp eq i32 %59, %60
  br i1 %cmp89, label %land.lhs.true91, label %if.end131

land.lhs.true91:                                  ; preds = %land.lhs.true88
  %61 = load i32, i32* %count, align 4
  %cmp92 = icmp eq i32 %61, 1
  br i1 %cmp92, label %if.then94, label %if.end131

if.then94:                                        ; preds = %land.lhs.true91
  %62 = load i32, i32* %lex_firstind, align 4
  store i32 %62, i32* %tind95, align 4
  br label %while.cond96

while.cond96:                                     ; preds = %while.body106, %if.then94
  %63 = load i32, i32* %tflags, align 4
  %and97 = and i32 %63, 512
  %tobool98 = icmp ne i32 %and97, 0
  br i1 %tobool98, label %land.rhs99, label %land.end104

land.rhs99:                                       ; preds = %while.cond96
  %64 = load i8*, i8** %ret, align 4
  %65 = load i32, i32* %tind95, align 4
  %arrayidx100 = getelementptr inbounds i8, i8* %64, i32 %65
  %66 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %66 to i32
  %cmp102 = icmp eq i32 %conv101, 9
  br label %land.end104

land.end104:                                      ; preds = %land.rhs99, %while.cond96
  %67 = phi i1 [ false, %while.cond96 ], [ %cmp102, %land.rhs99 ]
  br i1 %67, label %while.body106, label %while.end108

while.body106:                                    ; preds = %land.end104
  %68 = load i32, i32* %tind95, align 4
  %inc107 = add nsw i32 %68, 1
  store i32 %inc107, i32* %tind95, align 4
  br label %while.cond96

while.end108:                                     ; preds = %land.end104
  %69 = load i32, i32* %retind, align 4
  %70 = load i32, i32* %tind95, align 4
  %sub = sub nsw i32 %69, %70
  %71 = load i32, i32* %hdlen, align 4
  %cmp109 = icmp eq i32 %sub, %71
  br i1 %cmp109, label %land.lhs.true111, label %if.end130

land.lhs.true111:                                 ; preds = %while.end108
  %72 = load i32, i32* %hdlen, align 4
  %cmp112 = icmp eq i32 %72, 0
  br i1 %cmp112, label %cond.true114, label %cond.false115

cond.true114:                                     ; preds = %land.lhs.true111
  br i1 true, label %if.then128, label %if.end130

cond.false115:                                    ; preds = %land.lhs.true111
  %73 = load i8*, i8** %ret, align 4
  %74 = load i32, i32* %tind95, align 4
  %add.ptr116 = getelementptr inbounds i8, i8* %73, i32 %74
  %arrayidx117 = getelementptr inbounds i8, i8* %add.ptr116, i32 0
  %75 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %75 to i32
  %76 = load i8*, i8** %heredelim, align 4
  %arrayidx119 = getelementptr inbounds i8, i8* %76, i32 0
  %77 = load i8, i8* %arrayidx119, align 1
  %conv120 = sext i8 %77 to i32
  %cmp121 = icmp eq i32 %conv118, %conv120
  br i1 %cmp121, label %land.lhs.true123, label %if.end130

land.lhs.true123:                                 ; preds = %cond.false115
  %78 = load i8*, i8** %ret, align 4
  %79 = load i32, i32* %tind95, align 4
  %add.ptr124 = getelementptr inbounds i8, i8* %78, i32 %79
  %80 = load i8*, i8** %heredelim, align 4
  %81 = load i32, i32* %hdlen, align 4
  %call125 = call i32 @strncmp(i8* %add.ptr124, i8* %80, i32 %81)
  %cmp126 = icmp eq i32 %call125, 0
  br i1 %cmp126, label %if.then128, label %if.end130

if.then128:                                       ; preds = %land.lhs.true123, %cond.true114
  %82 = load i32, i32* %tflags, align 4
  %and129 = and i32 %82, -1665
  store i32 %and129, i32* %tflags, align 4
  %83 = load i8*, i8** %heredelim, align 4
  call void @sh_xfree(i8* %83, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3801)
  store i8* null, i8** %heredelim, align 4
  store i32 -1, i32* %lex_firstind, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.then128, %land.lhs.true123, %cond.false115, %cond.true114, %while.end108
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %land.lhs.true91, %land.lhs.true88, %if.end85
  %84 = load i32, i32* %tflags, align 4
  %and132 = and i32 %84, 132
  %tobool133 = icmp ne i32 %and132, 0
  br i1 %tobool133, label %if.then134, label %if.end161

if.then134:                                       ; preds = %if.end131
  br label %do.body135

do.body135:                                       ; preds = %if.then134
  %85 = load i32, i32* %retind, align 4
  %add136 = add nsw i32 %85, 1
  %86 = load i32, i32* %retsize, align 4
  %cmp137 = icmp sge i32 %add136, %86
  br i1 %cmp137, label %if.then139, label %if.end148

if.then139:                                       ; preds = %do.body135
  br label %while.cond140

while.cond140:                                    ; preds = %while.body144, %if.then139
  %87 = load i32, i32* %retind, align 4
  %add141 = add nsw i32 %87, 1
  %88 = load i32, i32* %retsize, align 4
  %cmp142 = icmp sge i32 %add141, %88
  br i1 %cmp142, label %while.body144, label %while.end146

while.body144:                                    ; preds = %while.cond140
  %89 = load i32, i32* %retsize, align 4
  %add145 = add nsw i32 %89, 64
  store i32 %add145, i32* %retsize, align 4
  br label %while.cond140

while.end146:                                     ; preds = %while.cond140
  %90 = load i8*, i8** %ret, align 4
  %91 = load i32, i32* %retsize, align 4
  %call147 = call i8* @sh_xrealloc(i8* %90, i32 %91, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3819)
  store i8* %call147, i8** %ret, align 4
  br label %if.end148

if.end148:                                        ; preds = %while.end146, %do.body135
  br label %do.end149

do.end149:                                        ; preds = %if.end148
  %92 = load i32, i32* %ch, align 4
  %conv150 = trunc i32 %92 to i8
  %93 = load i8*, i8** %ret, align 4
  %94 = load i32, i32* %retind, align 4
  %inc151 = add nsw i32 %94, 1
  store i32 %inc151, i32* %retind, align 4
  %arrayidx152 = getelementptr inbounds i8, i8* %93, i32 %94
  store i8 %conv150, i8* %arrayidx152, align 1
  %95 = load i32, i32* %tflags, align 4
  %and153 = and i32 %95, 4
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %land.lhs.true155, label %if.end160

land.lhs.true155:                                 ; preds = %do.end149
  %96 = load i32, i32* %ch, align 4
  %cmp156 = icmp eq i32 %96, 10
  br i1 %cmp156, label %if.then158, label %if.end160

if.then158:                                       ; preds = %land.lhs.true155
  %97 = load i32, i32* %tflags, align 4
  %and159 = and i32 %97, -5
  store i32 %and159, i32* %tflags, align 4
  br label %if.end160

if.end160:                                        ; preds = %if.then158, %land.lhs.true155, %do.end149
  br label %while.cond

if.end161:                                        ; preds = %if.end131
  %98 = load i32, i32* %tflags, align 4
  %and162 = and i32 %98, 8
  %tobool163 = icmp ne i32 %and162, 0
  br i1 %tobool163, label %if.then164, label %if.end210

if.then164:                                       ; preds = %if.end161
  %99 = load i32, i32* %tflags, align 4
  %and165 = and i32 %99, -9
  store i32 %and165, i32* %tflags, align 4
  %100 = load i32, i32* %qc.addr, align 4
  %cmp166 = icmp ne i32 %100, 39
  br i1 %cmp166, label %land.lhs.true168, label %if.end176

land.lhs.true168:                                 ; preds = %if.then164
  %101 = load i32, i32* %ch, align 4
  %cmp169 = icmp eq i32 %101, 10
  br i1 %cmp169, label %if.then171, label %if.end176

if.then171:                                       ; preds = %land.lhs.true168
  %102 = load i32, i32* %retind, align 4
  %cmp172 = icmp sgt i32 %102, 0
  br i1 %cmp172, label %if.then174, label %if.end175

if.then174:                                       ; preds = %if.then171
  %103 = load i32, i32* %retind, align 4
  %dec = add nsw i32 %103, -1
  store i32 %dec, i32* %retind, align 4
  br label %if.end175

if.end175:                                        ; preds = %if.then174, %if.then171
  br label %while.cond

if.end176:                                        ; preds = %land.lhs.true168, %if.then164
  br label %do.body177

do.body177:                                       ; preds = %if.end176
  %104 = load i32, i32* %retind, align 4
  %add178 = add nsw i32 %104, 2
  %105 = load i32, i32* %retsize, align 4
  %cmp179 = icmp sge i32 %add178, %105
  br i1 %cmp179, label %if.then181, label %if.end190

if.then181:                                       ; preds = %do.body177
  br label %while.cond182

while.cond182:                                    ; preds = %while.body186, %if.then181
  %106 = load i32, i32* %retind, align 4
  %add183 = add nsw i32 %106, 2
  %107 = load i32, i32* %retsize, align 4
  %cmp184 = icmp sge i32 %add183, %107
  br i1 %cmp184, label %while.body186, label %while.end188

while.body186:                                    ; preds = %while.cond182
  %108 = load i32, i32* %retsize, align 4
  %add187 = add nsw i32 %108, 64
  store i32 %add187, i32* %retsize, align 4
  br label %while.cond182

while.end188:                                     ; preds = %while.cond182
  %109 = load i8*, i8** %ret, align 4
  %110 = load i32, i32* %retsize, align 4
  %call189 = call i8* @sh_xrealloc(i8* %109, i32 %110, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3857)
  store i8* %call189, i8** %ret, align 4
  br label %if.end190

if.end190:                                        ; preds = %while.end188, %do.body177
  br label %do.end191

do.end191:                                        ; preds = %if.end190
  %111 = load i32, i32* %ch, align 4
  %cmp192 = icmp eq i32 %111, 1
  br i1 %cmp192, label %land.lhs.true194, label %if.end206

land.lhs.true194:                                 ; preds = %do.end191
  %112 = load i32, i32* @shell_input_line_index, align 4
  %cmp195 = icmp ugt i32 %112, 1
  br i1 %cmp195, label %cond.true197, label %cond.false202

cond.true197:                                     ; preds = %land.lhs.true194
  %113 = load i8*, i8** @shell_input_line_property, align 4
  %114 = load i32, i32* @shell_input_line_index, align 4
  %sub198 = sub i32 %114, 1
  %arrayidx199 = getelementptr inbounds i8, i8* %113, i32 %sub198
  %115 = load i8, i8* %arrayidx199, align 1
  %conv200 = sext i8 %115 to i32
  %tobool201 = icmp ne i32 %conv200, 0
  br i1 %tobool201, label %if.then203, label %if.end206

cond.false202:                                    ; preds = %land.lhs.true194
  br i1 true, label %if.then203, label %if.end206

if.then203:                                       ; preds = %cond.false202, %cond.true197
  %116 = load i8*, i8** %ret, align 4
  %117 = load i32, i32* %retind, align 4
  %inc204 = add nsw i32 %117, 1
  store i32 %inc204, i32* %retind, align 4
  %arrayidx205 = getelementptr inbounds i8, i8* %116, i32 %117
  store i8 1, i8* %arrayidx205, align 1
  br label %if.end206

if.end206:                                        ; preds = %if.then203, %cond.false202, %cond.true197, %do.end191
  %118 = load i32, i32* %ch, align 4
  %conv207 = trunc i32 %118 to i8
  %119 = load i8*, i8** %ret, align 4
  %120 = load i32, i32* %retind, align 4
  %inc208 = add nsw i32 %120, 1
  store i32 %inc208, i32* %retind, align 4
  %arrayidx209 = getelementptr inbounds i8, i8* %119, i32 %120
  store i8 %conv207, i8* %arrayidx209, align 1
  br label %while.cond

if.end210:                                        ; preds = %if.end161
  %121 = load i32, i32* %ch, align 4
  %conv211 = trunc i32 %121 to i8
  %idxprom = zext i8 %conv211 to i32
  %arrayidx212 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %122 = load i32, i32* %arrayidx212, align 4
  %and213 = and i32 %122, 2
  %tobool214 = icmp ne i32 %and213, 0
  br i1 %tobool214, label %land.lhs.true215, label %if.else226

land.lhs.true215:                                 ; preds = %if.end210
  %123 = load i32, i32* @shell_input_line_index, align 4
  %cmp216 = icmp ugt i32 %123, 1
  br i1 %cmp216, label %cond.true218, label %cond.false223

cond.true218:                                     ; preds = %land.lhs.true215
  %124 = load i8*, i8** @shell_input_line_property, align 4
  %125 = load i32, i32* @shell_input_line_index, align 4
  %sub219 = sub i32 %125, 1
  %arrayidx220 = getelementptr inbounds i8, i8* %124, i32 %sub219
  %126 = load i8, i8* %arrayidx220, align 1
  %conv221 = sext i8 %126 to i32
  %tobool222 = icmp ne i32 %conv221, 0
  br i1 %tobool222, label %if.then224, label %if.else226

cond.false223:                                    ; preds = %land.lhs.true215
  br i1 true, label %if.then224, label %if.else226

if.then224:                                       ; preds = %cond.false223, %cond.true218
  %127 = load i32, i32* %tflags, align 4
  %and225 = and i32 %127, -2049
  store i32 %and225, i32* %tflags, align 4
  br label %if.end238

if.else226:                                       ; preds = %cond.false223, %cond.true218, %if.end210
  %128 = load i32, i32* %tflags, align 4
  %and227 = and i32 %128, 2048
  %tobool228 = icmp ne i32 %and227, 0
  br i1 %tobool228, label %if.then229, label %if.else231

if.then229:                                       ; preds = %if.else226
  %129 = load i32, i32* %lex_wlen, align 4
  %inc230 = add nsw i32 %129, 1
  store i32 %inc230, i32* %lex_wlen, align 4
  br label %if.end237

if.else231:                                       ; preds = %if.else226
  %130 = load i32, i32* %tflags, align 4
  %or232 = or i32 %130, 2048
  store i32 %or232, i32* %tflags, align 4
  store i32 0, i32* %lex_wlen, align 4
  %131 = load i32, i32* %tflags, align 4
  %and233 = and i32 %131, 16
  %tobool234 = icmp ne i32 %and233, 0
  br i1 %tobool234, label %if.then235, label %if.end236

if.then235:                                       ; preds = %if.else231
  store i32 0, i32* %lex_rwlen, align 4
  br label %if.end236

if.end236:                                        ; preds = %if.then235, %if.else231
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.then229
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then224
  %132 = load i32, i32* %ch, align 4
  %conv239 = trunc i32 %132 to i8
  %idxprom240 = zext i8 %conv239 to i32
  %arrayidx241 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom240
  %133 = load i32, i32* %arrayidx241, align 4
  %and242 = and i32 %133, 8192
  %tobool243 = icmp ne i32 %and242, 0
  br i1 %tobool243, label %land.lhs.true244, label %if.end279

land.lhs.true244:                                 ; preds = %if.end238
  %134 = load i32, i32* %tflags, align 4
  %and245 = and i32 %134, 256
  %cmp246 = icmp eq i32 %and245, 0
  br i1 %cmp246, label %land.lhs.true248, label %if.end279

land.lhs.true248:                                 ; preds = %land.lhs.true244
  %135 = load i32, i32* %lex_rwlen, align 4
  %cmp249 = icmp eq i32 %135, 0
  br i1 %cmp249, label %land.lhs.true251, label %if.end279

land.lhs.true251:                                 ; preds = %land.lhs.true248
  %136 = load i32, i32* @shell_input_line_index, align 4
  %cmp252 = icmp ugt i32 %136, 1
  br i1 %cmp252, label %cond.true254, label %cond.false259

cond.true254:                                     ; preds = %land.lhs.true251
  %137 = load i8*, i8** @shell_input_line_property, align 4
  %138 = load i32, i32* @shell_input_line_index, align 4
  %sub255 = sub i32 %138, 1
  %arrayidx256 = getelementptr inbounds i8, i8* %137, i32 %sub255
  %139 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %139 to i32
  %tobool258 = icmp ne i32 %conv257, 0
  br i1 %tobool258, label %if.then260, label %if.end279

cond.false259:                                    ; preds = %land.lhs.true251
  br i1 true, label %if.then260, label %if.end279

if.then260:                                       ; preds = %cond.false259, %cond.true254
  br label %do.body261

do.body261:                                       ; preds = %if.then260
  %140 = load i32, i32* %retind, align 4
  %add262 = add nsw i32 %140, 1
  %141 = load i32, i32* %retsize, align 4
  %cmp263 = icmp sge i32 %add262, %141
  br i1 %cmp263, label %if.then265, label %if.end274

if.then265:                                       ; preds = %do.body261
  br label %while.cond266

while.cond266:                                    ; preds = %while.body270, %if.then265
  %142 = load i32, i32* %retind, align 4
  %add267 = add nsw i32 %142, 1
  %143 = load i32, i32* %retsize, align 4
  %cmp268 = icmp sge i32 %add267, %143
  br i1 %cmp268, label %while.body270, label %while.end272

while.body270:                                    ; preds = %while.cond266
  %144 = load i32, i32* %retsize, align 4
  %add271 = add nsw i32 %144, 64
  store i32 %add271, i32* %retsize, align 4
  br label %while.cond266

while.end272:                                     ; preds = %while.cond266
  %145 = load i8*, i8** %ret, align 4
  %146 = load i32, i32* %retsize, align 4
  %call273 = call i8* @sh_xrealloc(i8* %145, i32 %146, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3892)
  store i8* %call273, i8** %ret, align 4
  br label %if.end274

if.end274:                                        ; preds = %while.end272, %do.body261
  br label %do.end275

do.end275:                                        ; preds = %if.end274
  %147 = load i32, i32* %ch, align 4
  %conv276 = trunc i32 %147 to i8
  %148 = load i8*, i8** %ret, align 4
  %149 = load i32, i32* %retind, align 4
  %inc277 = add nsw i32 %149, 1
  store i32 %inc277, i32* %retind, align 4
  %arrayidx278 = getelementptr inbounds i8, i8* %148, i32 %149
  store i8 %conv276, i8* %arrayidx278, align 1
  br label %while.cond

if.end279:                                        ; preds = %cond.false259, %cond.true254, %land.lhs.true248, %land.lhs.true244, %if.end238
  %150 = load i32, i32* %tflags, align 4
  %and280 = and i32 %150, 256
  %tobool281 = icmp ne i32 %and280, 0
  br i1 %tobool281, label %if.then282, label %if.end362

if.then282:                                       ; preds = %if.end279
  %151 = load i32, i32* %lex_firstind, align 4
  %cmp283 = icmp eq i32 %151, -1
  br i1 %cmp283, label %land.lhs.true285, label %if.else293

land.lhs.true285:                                 ; preds = %if.then282
  %152 = load i32, i32* %ch, align 4
  %conv286 = trunc i32 %152 to i8
  %idxprom287 = zext i8 %conv286 to i32
  %arrayidx288 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom287
  %153 = load i32, i32* %arrayidx288, align 4
  %and289 = and i32 %153, 2
  %cmp290 = icmp eq i32 %and289, 0
  br i1 %cmp290, label %if.then292, label %if.else293

if.then292:                                       ; preds = %land.lhs.true285
  %154 = load i32, i32* %retind, align 4
  store i32 %154, i32* %lex_firstind, align 4
  br label %if.end361

if.else293:                                       ; preds = %land.lhs.true285, %if.then282
  %155 = load i32, i32* %lex_firstind, align 4
  %cmp294 = icmp sge i32 %155, 0
  br i1 %cmp294, label %land.lhs.true296, label %if.end360

land.lhs.true296:                                 ; preds = %if.else293
  %156 = load i32, i32* %tflags, align 4
  %and297 = and i32 %156, 8
  %cmp298 = icmp eq i32 %and297, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end360

land.lhs.true300:                                 ; preds = %land.lhs.true296
  %157 = load i32, i32* %ch, align 4
  %conv301 = trunc i32 %157 to i8
  %idxprom302 = zext i8 %conv301 to i32
  %arrayidx303 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom302
  %158 = load i32, i32* %arrayidx303, align 4
  %and304 = and i32 %158, 2
  %tobool305 = icmp ne i32 %and304, 0
  br i1 %tobool305, label %if.then306, label %if.end360

if.then306:                                       ; preds = %land.lhs.true300
  %159 = load i8*, i8** %heredelim, align 4
  %cmp307 = icmp eq i8* %159, null
  br i1 %cmp307, label %if.then309, label %if.end351

if.then309:                                       ; preds = %if.then306
  %160 = load i8*, i8** %ret, align 4
  %161 = load i32, i32* %lex_firstind, align 4
  %162 = load i32, i32* %retind, align 4
  %call310 = call i8* @substring(i8* %160, i32 %161, i32 %162)
  store i8* %call310, i8** %nestret, align 4
  %163 = load i8*, i8** %nestret, align 4
  %call311 = call i8* @string_quote_removal(i8* %163, i32 0)
  store i8* %call311, i8** %heredelim, align 4
  %164 = load i8*, i8** %heredelim, align 4
  %tobool312 = icmp ne i8* %164, null
  br i1 %tobool312, label %land.lhs.true313, label %cond.false331

land.lhs.true313:                                 ; preds = %if.then309
  %165 = load i8*, i8** %heredelim, align 4
  %arrayidx314 = getelementptr inbounds i8, i8* %165, i32 0
  %166 = load i8, i8* %arrayidx314, align 1
  %conv315 = sext i8 %166 to i32
  %tobool316 = icmp ne i32 %conv315, 0
  br i1 %tobool316, label %cond.true317, label %cond.false331

cond.true317:                                     ; preds = %land.lhs.true313
  %167 = load i8*, i8** %heredelim, align 4
  %arrayidx318 = getelementptr inbounds i8, i8* %167, i32 1
  %168 = load i8, i8* %arrayidx318, align 1
  %conv319 = sext i8 %168 to i32
  %tobool320 = icmp ne i32 %conv319, 0
  br i1 %tobool320, label %cond.true321, label %cond.false328

cond.true321:                                     ; preds = %cond.true317
  %169 = load i8*, i8** %heredelim, align 4
  %arrayidx322 = getelementptr inbounds i8, i8* %169, i32 2
  %170 = load i8, i8* %arrayidx322, align 1
  %conv323 = sext i8 %170 to i32
  %tobool324 = icmp ne i32 %conv323, 0
  br i1 %tobool324, label %cond.true325, label %cond.false327

cond.true325:                                     ; preds = %cond.true321
  %171 = load i8*, i8** %heredelim, align 4
  %call326 = call i32 @strlen(i8* %171)
  br label %cond.end

cond.false327:                                    ; preds = %cond.true321
  br label %cond.end

cond.end:                                         ; preds = %cond.false327, %cond.true325
  %cond = phi i32 [ %call326, %cond.true325 ], [ 2, %cond.false327 ]
  br label %cond.end329

cond.false328:                                    ; preds = %cond.true317
  br label %cond.end329

cond.end329:                                      ; preds = %cond.false328, %cond.end
  %cond330 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false328 ]
  br label %cond.end332

cond.false331:                                    ; preds = %land.lhs.true313, %if.then309
  br label %cond.end332

cond.end332:                                      ; preds = %cond.false331, %cond.end329
  %cond333 = phi i32 [ %cond330, %cond.end329 ], [ 0, %cond.false331 ]
  store i32 %cond333, i32* %hdlen, align 4
  %172 = load i8*, i8** %heredelim, align 4
  %arrayidx334 = getelementptr inbounds i8, i8* %172, i32 0
  %173 = load i8, i8* %arrayidx334, align 1
  %conv335 = sext i8 %173 to i32
  %174 = load i8*, i8** %nestret, align 4
  %arrayidx336 = getelementptr inbounds i8, i8* %174, i32 0
  %175 = load i8, i8* %arrayidx336, align 1
  %conv337 = sext i8 %175 to i32
  %cmp338 = icmp eq i32 %conv335, %conv337
  br i1 %cmp338, label %land.rhs340, label %land.end344

land.rhs340:                                      ; preds = %cond.end332
  %176 = load i8*, i8** %heredelim, align 4
  %177 = load i8*, i8** %nestret, align 4
  %call341 = call i32 @strcmp(i8* %176, i8* %177)
  %cmp342 = icmp eq i32 %call341, 0
  br label %land.end344

land.end344:                                      ; preds = %land.rhs340, %cond.end332
  %178 = phi i1 [ false, %cond.end332 ], [ %cmp342, %land.rhs340 ]
  %land.ext345 = zext i1 %178 to i32
  %cmp346 = icmp eq i32 %land.ext345, 0
  br i1 %cmp346, label %if.then348, label %if.end350

if.then348:                                       ; preds = %land.end344
  %179 = load i32, i32* %tflags, align 4
  %or349 = or i32 %179, 1024
  store i32 %or349, i32* %tflags, align 4
  br label %if.end350

if.end350:                                        ; preds = %if.then348, %land.end344
  %180 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %180, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3926)
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.then306
  %181 = load i32, i32* %ch, align 4
  %cmp352 = icmp eq i32 %181, 10
  br i1 %cmp352, label %if.then354, label %if.else358

if.then354:                                       ; preds = %if.end351
  %182 = load i32, i32* %tflags, align 4
  %or355 = or i32 %182, 128
  store i32 %or355, i32* %tflags, align 4
  %183 = load i32, i32* %tflags, align 4
  %and356 = and i32 %183, -257
  store i32 %and356, i32* %tflags, align 4
  %184 = load i32, i32* %retind, align 4
  %add357 = add nsw i32 %184, 1
  store i32 %add357, i32* %lex_firstind, align 4
  br label %if.end359

if.else358:                                       ; preds = %if.end351
  store i32 -1, i32* %lex_firstind, align 4
  br label %if.end359

if.end359:                                        ; preds = %if.else358, %if.then354
  br label %if.end360

if.end360:                                        ; preds = %if.end359, %land.lhs.true300, %land.lhs.true296, %if.else293
  br label %if.end361

if.end361:                                        ; preds = %if.end360, %if.then292
  br label %if.end362

if.end362:                                        ; preds = %if.end361, %if.end279
  %185 = load i32, i32* %tflags, align 4
  %and363 = and i32 %185, 16
  %cmp364 = icmp eq i32 %and363, 0
  br i1 %cmp364, label %land.lhs.true366, label %if.end465

land.lhs.true366:                                 ; preds = %if.end362
  %186 = load i32, i32* %tflags, align 4
  %and367 = and i32 %186, 32
  %tobool368 = icmp ne i32 %and367, 0
  br i1 %tobool368, label %land.lhs.true369, label %if.end465

land.lhs.true369:                                 ; preds = %land.lhs.true366
  %187 = load i32, i32* %tflags, align 4
  %and370 = and i32 %187, 4
  %cmp371 = icmp eq i32 %and370, 0
  br i1 %cmp371, label %land.lhs.true373, label %if.end465

land.lhs.true373:                                 ; preds = %land.lhs.true369
  %188 = load i32, i32* %ch, align 4
  %conv374 = trunc i32 %188 to i8
  %idxprom375 = zext i8 %conv374 to i32
  %arrayidx376 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom375
  %189 = load i32, i32* %arrayidx376, align 4
  %and377 = and i32 %189, 1
  %tobool378 = icmp ne i32 %and377, 0
  br i1 %tobool378, label %land.lhs.true382, label %lor.lhs.false379

lor.lhs.false379:                                 ; preds = %land.lhs.true373
  %190 = load i32, i32* %ch, align 4
  %cmp380 = icmp eq i32 %190, 10
  br i1 %cmp380, label %land.lhs.true382, label %if.end465

land.lhs.true382:                                 ; preds = %lor.lhs.false379, %land.lhs.true373
  %191 = load i32, i32* @shell_input_line_index, align 4
  %cmp383 = icmp ugt i32 %191, 1
  br i1 %cmp383, label %cond.true385, label %cond.false390

cond.true385:                                     ; preds = %land.lhs.true382
  %192 = load i8*, i8** @shell_input_line_property, align 4
  %193 = load i32, i32* @shell_input_line_index, align 4
  %sub386 = sub i32 %193, 1
  %arrayidx387 = getelementptr inbounds i8, i8* %192, i32 %sub386
  %194 = load i8, i8* %arrayidx387, align 1
  %conv388 = sext i8 %194 to i32
  %tobool389 = icmp ne i32 %conv388, 0
  br i1 %tobool389, label %if.then391, label %if.end465

cond.false390:                                    ; preds = %land.lhs.true382
  br i1 true, label %if.then391, label %if.end465

if.then391:                                       ; preds = %cond.false390, %cond.true385
  br label %do.body392

do.body392:                                       ; preds = %if.then391
  %195 = load i32, i32* %retind, align 4
  %add393 = add nsw i32 %195, 1
  %196 = load i32, i32* %retsize, align 4
  %cmp394 = icmp sge i32 %add393, %196
  br i1 %cmp394, label %if.then396, label %if.end405

if.then396:                                       ; preds = %do.body392
  br label %while.cond397

while.cond397:                                    ; preds = %while.body401, %if.then396
  %197 = load i32, i32* %retind, align 4
  %add398 = add nsw i32 %197, 1
  %198 = load i32, i32* %retsize, align 4
  %cmp399 = icmp sge i32 %add398, %198
  br i1 %cmp399, label %while.body401, label %while.end403

while.body401:                                    ; preds = %while.cond397
  %199 = load i32, i32* %retsize, align 4
  %add402 = add nsw i32 %199, 64
  store i32 %add402, i32* %retsize, align 4
  br label %while.cond397

while.end403:                                     ; preds = %while.cond397
  %200 = load i8*, i8** %ret, align 4
  %201 = load i32, i32* %retsize, align 4
  %call404 = call i8* @sh_xrealloc(i8* %200, i32 %201, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3943)
  store i8* %call404, i8** %ret, align 4
  br label %if.end405

if.end405:                                        ; preds = %while.end403, %do.body392
  br label %do.end406

do.end406:                                        ; preds = %if.end405
  %202 = load i32, i32* %ch, align 4
  %conv407 = trunc i32 %202 to i8
  %203 = load i8*, i8** %ret, align 4
  %204 = load i32, i32* %retind, align 4
  %inc408 = add nsw i32 %204, 1
  store i32 %inc408, i32* %retind, align 4
  %arrayidx409 = getelementptr inbounds i8, i8* %203, i32 %204
  store i8 %conv407, i8* %arrayidx409, align 1
  %call410 = call i32 @shell_getc(i32 1)
  store i32 %call410, i32* %peekc, align 4
  %205 = load i32, i32* %ch, align 4
  %206 = load i32, i32* %peekc, align 4
  %cmp411 = icmp eq i32 %205, %206
  br i1 %cmp411, label %land.lhs.true413, label %if.else442

land.lhs.true413:                                 ; preds = %do.end406
  %207 = load i32, i32* %ch, align 4
  %cmp414 = icmp eq i32 %207, 38
  br i1 %cmp414, label %if.then422, label %lor.lhs.false416

lor.lhs.false416:                                 ; preds = %land.lhs.true413
  %208 = load i32, i32* %ch, align 4
  %cmp417 = icmp eq i32 %208, 124
  br i1 %cmp417, label %if.then422, label %lor.lhs.false419

lor.lhs.false419:                                 ; preds = %lor.lhs.false416
  %209 = load i32, i32* %ch, align 4
  %cmp420 = icmp eq i32 %209, 59
  br i1 %cmp420, label %if.then422, label %if.else442

if.then422:                                       ; preds = %lor.lhs.false419, %lor.lhs.false416, %land.lhs.true413
  br label %do.body423

do.body423:                                       ; preds = %if.then422
  %210 = load i32, i32* %retind, align 4
  %add424 = add nsw i32 %210, 1
  %211 = load i32, i32* %retsize, align 4
  %cmp425 = icmp sge i32 %add424, %211
  br i1 %cmp425, label %if.then427, label %if.end436

if.then427:                                       ; preds = %do.body423
  br label %while.cond428

while.cond428:                                    ; preds = %while.body432, %if.then427
  %212 = load i32, i32* %retind, align 4
  %add429 = add nsw i32 %212, 1
  %213 = load i32, i32* %retsize, align 4
  %cmp430 = icmp sge i32 %add429, %213
  br i1 %cmp430, label %while.body432, label %while.end434

while.body432:                                    ; preds = %while.cond428
  %214 = load i32, i32* %retsize, align 4
  %add433 = add nsw i32 %214, 64
  store i32 %add433, i32* %retsize, align 4
  br label %while.cond428

while.end434:                                     ; preds = %while.cond428
  %215 = load i8*, i8** %ret, align 4
  %216 = load i32, i32* %retsize, align 4
  %call435 = call i8* @sh_xrealloc(i8* %215, i32 %216, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3948)
  store i8* %call435, i8** %ret, align 4
  br label %if.end436

if.end436:                                        ; preds = %while.end434, %do.body423
  br label %do.end437

do.end437:                                        ; preds = %if.end436
  %217 = load i32, i32* %peekc, align 4
  %conv438 = trunc i32 %217 to i8
  %218 = load i8*, i8** %ret, align 4
  %219 = load i32, i32* %retind, align 4
  %inc439 = add nsw i32 %219, 1
  store i32 %inc439, i32* %retind, align 4
  %arrayidx440 = getelementptr inbounds i8, i8* %218, i32 %219
  store i8 %conv438, i8* %arrayidx440, align 1
  %220 = load i32, i32* %tflags, align 4
  %or441 = or i32 %220, 16
  store i32 %or441, i32* %tflags, align 4
  store i32 0, i32* %lex_rwlen, align 4
  br label %while.cond

if.else442:                                       ; preds = %lor.lhs.false419, %do.end406
  %221 = load i32, i32* %ch, align 4
  %cmp443 = icmp eq i32 %221, 10
  br i1 %cmp443, label %if.then454, label %lor.lhs.false445

lor.lhs.false445:                                 ; preds = %if.else442
  %222 = load i32, i32* %ch, align 4
  %cmp446 = icmp eq i32 %222, 59
  br i1 %cmp446, label %if.then454, label %lor.lhs.false448

lor.lhs.false448:                                 ; preds = %lor.lhs.false445
  %223 = load i32, i32* %ch, align 4
  %cmp449 = icmp eq i32 %223, 38
  br i1 %cmp449, label %if.then454, label %lor.lhs.false451

lor.lhs.false451:                                 ; preds = %lor.lhs.false448
  %224 = load i32, i32* %ch, align 4
  %cmp452 = icmp eq i32 %224, 124
  br i1 %cmp452, label %if.then454, label %if.else456

if.then454:                                       ; preds = %lor.lhs.false451, %lor.lhs.false448, %lor.lhs.false445, %if.else442
  %225 = load i32, i32* %peekc, align 4
  call void @shell_ungetc(i32 %225)
  %226 = load i32, i32* %tflags, align 4
  %or455 = or i32 %226, 16
  store i32 %or455, i32* %tflags, align 4
  store i32 0, i32* %lex_rwlen, align 4
  br label %while.cond

if.else456:                                       ; preds = %lor.lhs.false451
  %227 = load i32, i32* %ch, align 4
  %cmp457 = icmp eq i32 %227, -1
  br i1 %cmp457, label %if.then459, label %if.else460

if.then459:                                       ; preds = %if.else456
  br label %eof_error

if.else460:                                       ; preds = %if.else456
  %228 = load i32, i32* %retind, align 4
  %dec461 = add nsw i32 %228, -1
  store i32 %dec461, i32* %retind, align 4
  %229 = load i32, i32* %peekc, align 4
  call void @shell_ungetc(i32 %229)
  br label %if.end462

if.end462:                                        ; preds = %if.else460
  br label %if.end463

if.end463:                                        ; preds = %if.end462
  br label %if.end464

if.end464:                                        ; preds = %if.end463
  br label %if.end465

if.end465:                                        ; preds = %if.end464, %cond.false390, %cond.true385, %lor.lhs.false379, %land.lhs.true369, %land.lhs.true366, %if.end362
  %230 = load i32, i32* %tflags, align 4
  %and466 = and i32 %230, 16
  %tobool467 = icmp ne i32 %and466, 0
  br i1 %tobool467, label %if.then468, label %if.end752

if.then468:                                       ; preds = %if.end465
  %231 = load i32, i32* %ch, align 4
  %conv469 = trunc i32 %231 to i8
  %conv470 = zext i8 %conv469 to i32
  %call471 = call i32 @islower(i32 %conv470) #6
  %tobool472 = icmp ne i32 %call471, 0
  br i1 %tobool472, label %land.lhs.true473, label %if.else502

land.lhs.true473:                                 ; preds = %if.then468
  %232 = load i32, i32* @shell_input_line_index, align 4
  %cmp474 = icmp ugt i32 %232, 1
  br i1 %cmp474, label %cond.true476, label %cond.false481

cond.true476:                                     ; preds = %land.lhs.true473
  %233 = load i8*, i8** @shell_input_line_property, align 4
  %234 = load i32, i32* @shell_input_line_index, align 4
  %sub477 = sub i32 %234, 1
  %arrayidx478 = getelementptr inbounds i8, i8* %233, i32 %sub477
  %235 = load i8, i8* %arrayidx478, align 1
  %conv479 = sext i8 %235 to i32
  %tobool480 = icmp ne i32 %conv479, 0
  br i1 %tobool480, label %if.then482, label %if.else502

cond.false481:                                    ; preds = %land.lhs.true473
  br i1 true, label %if.then482, label %if.else502

if.then482:                                       ; preds = %cond.false481, %cond.true476
  br label %do.body483

do.body483:                                       ; preds = %if.then482
  %236 = load i32, i32* %retind, align 4
  %add484 = add nsw i32 %236, 1
  %237 = load i32, i32* %retsize, align 4
  %cmp485 = icmp sge i32 %add484, %237
  br i1 %cmp485, label %if.then487, label %if.end496

if.then487:                                       ; preds = %do.body483
  br label %while.cond488

while.cond488:                                    ; preds = %while.body492, %if.then487
  %238 = load i32, i32* %retind, align 4
  %add489 = add nsw i32 %238, 1
  %239 = load i32, i32* %retsize, align 4
  %cmp490 = icmp sge i32 %add489, %239
  br i1 %cmp490, label %while.body492, label %while.end494

while.body492:                                    ; preds = %while.cond488
  %240 = load i32, i32* %retsize, align 4
  %add493 = add nsw i32 %240, 64
  store i32 %add493, i32* %retsize, align 4
  br label %while.cond488

while.end494:                                     ; preds = %while.cond488
  %241 = load i8*, i8** %ret, align 4
  %242 = load i32, i32* %retsize, align 4
  %call495 = call i8* @sh_xrealloc(i8* %241, i32 %242, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 3979)
  store i8* %call495, i8** %ret, align 4
  br label %if.end496

if.end496:                                        ; preds = %while.end494, %do.body483
  br label %do.end497

do.end497:                                        ; preds = %if.end496
  %243 = load i32, i32* %ch, align 4
  %conv498 = trunc i32 %243 to i8
  %244 = load i8*, i8** %ret, align 4
  %245 = load i32, i32* %retind, align 4
  %inc499 = add nsw i32 %245, 1
  store i32 %inc499, i32* %retind, align 4
  %arrayidx500 = getelementptr inbounds i8, i8* %244, i32 %245
  store i8 %conv498, i8* %arrayidx500, align 1
  %246 = load i32, i32* %lex_rwlen, align 4
  %inc501 = add nsw i32 %246, 1
  store i32 %inc501, i32* %lex_rwlen, align 4
  br label %while.cond

if.else502:                                       ; preds = %cond.false481, %cond.true476, %if.then468
  %247 = load i32, i32* %lex_rwlen, align 4
  %cmp503 = icmp eq i32 %247, 4
  br i1 %cmp503, label %land.lhs.true505, label %if.else645

land.lhs.true505:                                 ; preds = %if.else502
  %248 = load i32, i32* %ch, align 4
  %conv506 = trunc i32 %248 to i8
  %idxprom507 = zext i8 %conv506 to i32
  %arrayidx508 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom507
  %249 = load i32, i32* %arrayidx508, align 4
  %and509 = and i32 %249, 2
  %tobool510 = icmp ne i32 %and509, 0
  br i1 %tobool510, label %land.lhs.true511, label %if.else645

land.lhs.true511:                                 ; preds = %land.lhs.true505
  %250 = load i32, i32* @shell_input_line_index, align 4
  %cmp512 = icmp ugt i32 %250, 1
  br i1 %cmp512, label %cond.true514, label %cond.false519

cond.true514:                                     ; preds = %land.lhs.true511
  %251 = load i8*, i8** @shell_input_line_property, align 4
  %252 = load i32, i32* @shell_input_line_index, align 4
  %sub515 = sub i32 %252, 1
  %arrayidx516 = getelementptr inbounds i8, i8* %251, i32 %sub515
  %253 = load i8, i8* %arrayidx516, align 1
  %conv517 = sext i8 %253 to i32
  %tobool518 = icmp ne i32 %conv517, 0
  br i1 %tobool518, label %if.then520, label %if.else645

cond.false519:                                    ; preds = %land.lhs.true511
  br i1 true, label %if.then520, label %if.else645

if.then520:                                       ; preds = %cond.false519, %cond.true514
  br i1 false, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %if.then520
  br i1 true, label %if.then536, label %if.else539

cond.false522:                                    ; preds = %if.then520
  %254 = load i8*, i8** %ret, align 4
  %255 = load i32, i32* %retind, align 4
  %add.ptr523 = getelementptr inbounds i8, i8* %254, i32 %255
  %add.ptr524 = getelementptr inbounds i8, i8* %add.ptr523, i32 -4
  %arrayidx525 = getelementptr inbounds i8, i8* %add.ptr524, i32 0
  %256 = load i8, i8* %arrayidx525, align 1
  %conv526 = sext i8 %256 to i32
  %257 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), align 1
  %conv527 = sext i8 %257 to i32
  %cmp528 = icmp eq i32 %conv526, %conv527
  br i1 %cmp528, label %land.lhs.true530, label %if.else539

land.lhs.true530:                                 ; preds = %cond.false522
  %258 = load i8*, i8** %ret, align 4
  %259 = load i32, i32* %retind, align 4
  %add.ptr531 = getelementptr inbounds i8, i8* %258, i32 %259
  %add.ptr532 = getelementptr inbounds i8, i8* %add.ptr531, i32 -4
  %call533 = call i32 @strncmp(i8* %add.ptr532, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 4)
  %cmp534 = icmp eq i32 %call533, 0
  br i1 %cmp534, label %if.then536, label %if.else539

if.then536:                                       ; preds = %land.lhs.true530, %cond.true521
  %260 = load i32, i32* %tflags, align 4
  %or537 = or i32 %260, 64
  store i32 %or537, i32* %tflags, align 4
  %261 = load i32, i32* %tflags, align 4
  %and538 = and i32 %261, -17
  store i32 %and538, i32* %tflags, align 4
  br label %if.end644

if.else539:                                       ; preds = %land.lhs.true530, %cond.false522, %cond.true521
  br i1 false, label %cond.true540, label %cond.false541

cond.true540:                                     ; preds = %if.else539
  br i1 true, label %if.then555, label %if.else558

cond.false541:                                    ; preds = %if.else539
  %262 = load i8*, i8** %ret, align 4
  %263 = load i32, i32* %retind, align 4
  %add.ptr542 = getelementptr inbounds i8, i8* %262, i32 %263
  %add.ptr543 = getelementptr inbounds i8, i8* %add.ptr542, i32 -4
  %arrayidx544 = getelementptr inbounds i8, i8* %add.ptr543, i32 0
  %264 = load i8, i8* %arrayidx544, align 1
  %conv545 = sext i8 %264 to i32
  %265 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), align 1
  %conv546 = sext i8 %265 to i32
  %cmp547 = icmp eq i32 %conv545, %conv546
  br i1 %cmp547, label %land.lhs.true549, label %if.else558

land.lhs.true549:                                 ; preds = %cond.false541
  %266 = load i8*, i8** %ret, align 4
  %267 = load i32, i32* %retind, align 4
  %add.ptr550 = getelementptr inbounds i8, i8* %266, i32 %267
  %add.ptr551 = getelementptr inbounds i8, i8* %add.ptr550, i32 -4
  %call552 = call i32 @strncmp(i8* %add.ptr551, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i32 4)
  %cmp553 = icmp eq i32 %call552, 0
  br i1 %cmp553, label %if.then555, label %if.else558

if.then555:                                       ; preds = %land.lhs.true549, %cond.true540
  %268 = load i32, i32* %tflags, align 4
  %and556 = and i32 %268, -65
  store i32 %and556, i32* %tflags, align 4
  %269 = load i32, i32* %tflags, align 4
  %or557 = or i32 %269, 16
  store i32 %or557, i32* %tflags, align 4
  store i32 0, i32* %lex_rwlen, align 4
  br label %if.end643

if.else558:                                       ; preds = %land.lhs.true549, %cond.false541, %cond.true540
  br i1 false, label %cond.true559, label %cond.false560

cond.true559:                                     ; preds = %if.else558
  br i1 true, label %if.then638, label %lor.lhs.false574

cond.false560:                                    ; preds = %if.else558
  %270 = load i8*, i8** %ret, align 4
  %271 = load i32, i32* %retind, align 4
  %add.ptr561 = getelementptr inbounds i8, i8* %270, i32 %271
  %add.ptr562 = getelementptr inbounds i8, i8* %add.ptr561, i32 -4
  %arrayidx563 = getelementptr inbounds i8, i8* %add.ptr562, i32 0
  %272 = load i8, i8* %arrayidx563, align 1
  %conv564 = sext i8 %272 to i32
  %273 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), align 1
  %conv565 = sext i8 %273 to i32
  %cmp566 = icmp eq i32 %conv564, %conv565
  br i1 %cmp566, label %land.lhs.true568, label %lor.lhs.false574

land.lhs.true568:                                 ; preds = %cond.false560
  %274 = load i8*, i8** %ret, align 4
  %275 = load i32, i32* %retind, align 4
  %add.ptr569 = getelementptr inbounds i8, i8* %274, i32 %275
  %add.ptr570 = getelementptr inbounds i8, i8* %add.ptr569, i32 -4
  %call571 = call i32 @strncmp(i8* %add.ptr570, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i32 4)
  %cmp572 = icmp eq i32 %call571, 0
  br i1 %cmp572, label %if.then638, label %lor.lhs.false574

lor.lhs.false574:                                 ; preds = %land.lhs.true568, %cond.false560, %cond.true559
  br i1 false, label %cond.true575, label %cond.false576

cond.true575:                                     ; preds = %lor.lhs.false574
  br i1 true, label %if.then638, label %lor.lhs.false590

cond.false576:                                    ; preds = %lor.lhs.false574
  %276 = load i8*, i8** %ret, align 4
  %277 = load i32, i32* %retind, align 4
  %add.ptr577 = getelementptr inbounds i8, i8* %276, i32 %277
  %add.ptr578 = getelementptr inbounds i8, i8* %add.ptr577, i32 -4
  %arrayidx579 = getelementptr inbounds i8, i8* %add.ptr578, i32 0
  %278 = load i8, i8* %arrayidx579, align 1
  %conv580 = sext i8 %278 to i32
  %279 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), align 1
  %conv581 = sext i8 %279 to i32
  %cmp582 = icmp eq i32 %conv580, %conv581
  br i1 %cmp582, label %land.lhs.true584, label %lor.lhs.false590

land.lhs.true584:                                 ; preds = %cond.false576
  %280 = load i8*, i8** %ret, align 4
  %281 = load i32, i32* %retind, align 4
  %add.ptr585 = getelementptr inbounds i8, i8* %280, i32 %281
  %add.ptr586 = getelementptr inbounds i8, i8* %add.ptr585, i32 -4
  %call587 = call i32 @strncmp(i8* %add.ptr586, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 4)
  %cmp588 = icmp eq i32 %call587, 0
  br i1 %cmp588, label %if.then638, label %lor.lhs.false590

lor.lhs.false590:                                 ; preds = %land.lhs.true584, %cond.false576, %cond.true575
  br i1 false, label %cond.true591, label %cond.false592

cond.true591:                                     ; preds = %lor.lhs.false590
  br i1 true, label %if.then638, label %lor.lhs.false606

cond.false592:                                    ; preds = %lor.lhs.false590
  %282 = load i8*, i8** %ret, align 4
  %283 = load i32, i32* %retind, align 4
  %add.ptr593 = getelementptr inbounds i8, i8* %282, i32 %283
  %add.ptr594 = getelementptr inbounds i8, i8* %add.ptr593, i32 -4
  %arrayidx595 = getelementptr inbounds i8, i8* %add.ptr594, i32 0
  %284 = load i8, i8* %arrayidx595, align 1
  %conv596 = sext i8 %284 to i32
  %285 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), align 1
  %conv597 = sext i8 %285 to i32
  %cmp598 = icmp eq i32 %conv596, %conv597
  br i1 %cmp598, label %land.lhs.true600, label %lor.lhs.false606

land.lhs.true600:                                 ; preds = %cond.false592
  %286 = load i8*, i8** %ret, align 4
  %287 = load i32, i32* %retind, align 4
  %add.ptr601 = getelementptr inbounds i8, i8* %286, i32 %287
  %add.ptr602 = getelementptr inbounds i8, i8* %add.ptr601, i32 -4
  %call603 = call i32 @strncmp(i8* %add.ptr602, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i32 4)
  %cmp604 = icmp eq i32 %call603, 0
  br i1 %cmp604, label %if.then638, label %lor.lhs.false606

lor.lhs.false606:                                 ; preds = %land.lhs.true600, %cond.false592, %cond.true591
  br i1 false, label %cond.true607, label %cond.false608

cond.true607:                                     ; preds = %lor.lhs.false606
  br i1 true, label %if.then638, label %lor.lhs.false622

cond.false608:                                    ; preds = %lor.lhs.false606
  %288 = load i8*, i8** %ret, align 4
  %289 = load i32, i32* %retind, align 4
  %add.ptr609 = getelementptr inbounds i8, i8* %288, i32 %289
  %add.ptr610 = getelementptr inbounds i8, i8* %add.ptr609, i32 -4
  %arrayidx611 = getelementptr inbounds i8, i8* %add.ptr610, i32 0
  %290 = load i8, i8* %arrayidx611, align 1
  %conv612 = sext i8 %290 to i32
  %291 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), align 1
  %conv613 = sext i8 %291 to i32
  %cmp614 = icmp eq i32 %conv612, %conv613
  br i1 %cmp614, label %land.lhs.true616, label %lor.lhs.false622

land.lhs.true616:                                 ; preds = %cond.false608
  %292 = load i8*, i8** %ret, align 4
  %293 = load i32, i32* %retind, align 4
  %add.ptr617 = getelementptr inbounds i8, i8* %292, i32 %293
  %add.ptr618 = getelementptr inbounds i8, i8* %add.ptr617, i32 -4
  %call619 = call i32 @strncmp(i8* %add.ptr618, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 4)
  %cmp620 = icmp eq i32 %call619, 0
  br i1 %cmp620, label %if.then638, label %lor.lhs.false622

lor.lhs.false622:                                 ; preds = %land.lhs.true616, %cond.false608, %cond.true607
  br i1 false, label %cond.true623, label %cond.false624

cond.true623:                                     ; preds = %lor.lhs.false622
  br i1 true, label %if.then638, label %if.else640

cond.false624:                                    ; preds = %lor.lhs.false622
  %294 = load i8*, i8** %ret, align 4
  %295 = load i32, i32* %retind, align 4
  %add.ptr625 = getelementptr inbounds i8, i8* %294, i32 %295
  %add.ptr626 = getelementptr inbounds i8, i8* %add.ptr625, i32 -4
  %arrayidx627 = getelementptr inbounds i8, i8* %add.ptr626, i32 0
  %296 = load i8, i8* %arrayidx627, align 1
  %conv628 = sext i8 %296 to i32
  %297 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), align 1
  %conv629 = sext i8 %297 to i32
  %cmp630 = icmp eq i32 %conv628, %conv629
  br i1 %cmp630, label %land.lhs.true632, label %if.else640

land.lhs.true632:                                 ; preds = %cond.false624
  %298 = load i8*, i8** %ret, align 4
  %299 = load i32, i32* %retind, align 4
  %add.ptr633 = getelementptr inbounds i8, i8* %298, i32 %299
  %add.ptr634 = getelementptr inbounds i8, i8* %add.ptr633, i32 -4
  %call635 = call i32 @strncmp(i8* %add.ptr634, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 4)
  %cmp636 = icmp eq i32 %call635, 0
  br i1 %cmp636, label %if.then638, label %if.else640

if.then638:                                       ; preds = %land.lhs.true632, %cond.true623, %land.lhs.true616, %cond.true607, %land.lhs.true600, %cond.true591, %land.lhs.true584, %cond.true575, %land.lhs.true568, %cond.true559
  %300 = load i32, i32* %tflags, align 4
  %or639 = or i32 %300, 16
  store i32 %or639, i32* %tflags, align 4
  store i32 0, i32* %lex_rwlen, align 4
  br label %if.end642

if.else640:                                       ; preds = %land.lhs.true632, %cond.false624, %cond.true623
  %301 = load i32, i32* %tflags, align 4
  %and641 = and i32 %301, -17
  store i32 %and641, i32* %tflags, align 4
  br label %if.end642

if.end642:                                        ; preds = %if.else640, %if.then638
  br label %if.end643

if.end643:                                        ; preds = %if.end642, %if.then555
  br label %if.end644

if.end644:                                        ; preds = %if.end643, %if.then536
  br label %if.end750

if.else645:                                       ; preds = %cond.false519, %cond.true514, %land.lhs.true505, %if.else502
  %302 = load i32, i32* %tflags, align 4
  %and646 = and i32 %302, 2
  %tobool647 = icmp ne i32 %and646, 0
  br i1 %tobool647, label %land.lhs.true648, label %if.else670

land.lhs.true648:                                 ; preds = %if.else645
  %303 = load i32, i32* %ch, align 4
  %cmp649 = icmp eq i32 %303, 35
  br i1 %cmp649, label %land.lhs.true651, label %if.else670

land.lhs.true651:                                 ; preds = %land.lhs.true648
  %304 = load i32, i32* %lex_rwlen, align 4
  %cmp652 = icmp eq i32 %304, 0
  br i1 %cmp652, label %land.lhs.true660, label %lor.lhs.false654

lor.lhs.false654:                                 ; preds = %land.lhs.true651
  %305 = load i32, i32* %tflags, align 4
  %and655 = and i32 %305, 2048
  %tobool656 = icmp ne i32 %and655, 0
  br i1 %tobool656, label %land.lhs.true657, label %if.else670

land.lhs.true657:                                 ; preds = %lor.lhs.false654
  %306 = load i32, i32* %lex_wlen, align 4
  %cmp658 = icmp eq i32 %306, 0
  br i1 %cmp658, label %land.lhs.true660, label %if.else670

land.lhs.true660:                                 ; preds = %land.lhs.true657, %land.lhs.true651
  %307 = load i32, i32* @shell_input_line_index, align 4
  %cmp661 = icmp ugt i32 %307, 1
  br i1 %cmp661, label %cond.true663, label %cond.false668

cond.true663:                                     ; preds = %land.lhs.true660
  %308 = load i8*, i8** @shell_input_line_property, align 4
  %309 = load i32, i32* @shell_input_line_index, align 4
  %sub664 = sub i32 %309, 1
  %arrayidx665 = getelementptr inbounds i8, i8* %308, i32 %sub664
  %310 = load i8, i8* %arrayidx665, align 1
  %conv666 = sext i8 %310 to i32
  %tobool667 = icmp ne i32 %conv666, 0
  br i1 %tobool667, label %if.then669, label %if.else670

cond.false668:                                    ; preds = %land.lhs.true660
  br i1 true, label %if.then669, label %if.else670

if.then669:                                       ; preds = %cond.false668, %cond.true663
  br label %if.end749

if.else670:                                       ; preds = %cond.false668, %cond.true663, %land.lhs.true657, %lor.lhs.false654, %land.lhs.true648, %if.else645
  %311 = load i32, i32* %tflags, align 4
  %and671 = and i32 %311, 64
  %cmp672 = icmp eq i32 %and671, 0
  br i1 %cmp672, label %land.lhs.true674, label %if.else711

land.lhs.true674:                                 ; preds = %if.else670
  %312 = load i32, i32* %ch, align 4
  %conv675 = trunc i32 %312 to i8
  %conv676 = zext i8 %conv675 to i32
  %call677 = call i32 @isblank(i32 %conv676) #6
  %tobool678 = icmp ne i32 %call677, 0
  br i1 %tobool678, label %land.lhs.true682, label %lor.lhs.false679

lor.lhs.false679:                                 ; preds = %land.lhs.true674
  %313 = load i32, i32* %ch, align 4
  %cmp680 = icmp eq i32 %313, 10
  br i1 %cmp680, label %land.lhs.true682, label %if.else711

land.lhs.true682:                                 ; preds = %lor.lhs.false679, %land.lhs.true674
  %314 = load i32, i32* %lex_rwlen, align 4
  %cmp683 = icmp eq i32 %314, 2
  br i1 %cmp683, label %land.lhs.true685, label %if.else711

land.lhs.true685:                                 ; preds = %land.lhs.true682
  br i1 false, label %cond.true686, label %cond.false687

cond.true686:                                     ; preds = %land.lhs.true685
  br i1 true, label %land.lhs.true701, label %if.else711

cond.false687:                                    ; preds = %land.lhs.true685
  %315 = load i8*, i8** %ret, align 4
  %316 = load i32, i32* %retind, align 4
  %add.ptr688 = getelementptr inbounds i8, i8* %315, i32 %316
  %add.ptr689 = getelementptr inbounds i8, i8* %add.ptr688, i32 -2
  %arrayidx690 = getelementptr inbounds i8, i8* %add.ptr689, i32 0
  %317 = load i8, i8* %arrayidx690, align 1
  %conv691 = sext i8 %317 to i32
  %318 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), align 1
  %conv692 = sext i8 %318 to i32
  %cmp693 = icmp eq i32 %conv691, %conv692
  br i1 %cmp693, label %land.lhs.true695, label %if.else711

land.lhs.true695:                                 ; preds = %cond.false687
  %319 = load i8*, i8** %ret, align 4
  %320 = load i32, i32* %retind, align 4
  %add.ptr696 = getelementptr inbounds i8, i8* %319, i32 %320
  %add.ptr697 = getelementptr inbounds i8, i8* %add.ptr696, i32 -2
  %call698 = call i32 @strncmp(i8* %add.ptr697, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), i32 2)
  %cmp699 = icmp eq i32 %call698, 0
  br i1 %cmp699, label %land.lhs.true701, label %if.else711

land.lhs.true701:                                 ; preds = %land.lhs.true695, %cond.true686
  %321 = load i32, i32* @shell_input_line_index, align 4
  %cmp702 = icmp ugt i32 %321, 1
  br i1 %cmp702, label %cond.true704, label %cond.false709

cond.true704:                                     ; preds = %land.lhs.true701
  %322 = load i8*, i8** @shell_input_line_property, align 4
  %323 = load i32, i32* @shell_input_line_index, align 4
  %sub705 = sub i32 %323, 1
  %arrayidx706 = getelementptr inbounds i8, i8* %322, i32 %sub705
  %324 = load i8, i8* %arrayidx706, align 1
  %conv707 = sext i8 %324 to i32
  %tobool708 = icmp ne i32 %conv707, 0
  br i1 %tobool708, label %if.then710, label %if.else711

cond.false709:                                    ; preds = %land.lhs.true701
  br i1 true, label %if.then710, label %if.else711

if.then710:                                       ; preds = %cond.false709, %cond.true704
  store i32 0, i32* %lex_rwlen, align 4
  br label %if.end748

if.else711:                                       ; preds = %cond.false709, %cond.true704, %land.lhs.true695, %cond.false687, %cond.true686, %land.lhs.true682, %lor.lhs.false679, %if.else670
  %325 = load i32, i32* %tflags, align 4
  %and712 = and i32 %325, 64
  %tobool713 = icmp ne i32 %and712, 0
  br i1 %tobool713, label %land.lhs.true714, label %if.else728

land.lhs.true714:                                 ; preds = %if.else711
  %326 = load i32, i32* %ch, align 4
  %cmp715 = icmp ne i32 %326, 10
  br i1 %cmp715, label %land.lhs.true717, label %if.else728

land.lhs.true717:                                 ; preds = %land.lhs.true714
  %327 = load i32, i32* @shell_input_line_index, align 4
  %cmp718 = icmp ugt i32 %327, 1
  br i1 %cmp718, label %cond.true720, label %cond.false725

cond.true720:                                     ; preds = %land.lhs.true717
  %328 = load i8*, i8** @shell_input_line_property, align 4
  %329 = load i32, i32* @shell_input_line_index, align 4
  %sub721 = sub i32 %329, 1
  %arrayidx722 = getelementptr inbounds i8, i8* %328, i32 %sub721
  %330 = load i8, i8* %arrayidx722, align 1
  %conv723 = sext i8 %330 to i32
  %tobool724 = icmp ne i32 %conv723, 0
  br i1 %tobool724, label %if.then726, label %if.else728

cond.false725:                                    ; preds = %land.lhs.true717
  br i1 true, label %if.then726, label %if.else728

if.then726:                                       ; preds = %cond.false725, %cond.true720
  %331 = load i32, i32* %tflags, align 4
  %and727 = and i32 %331, -17
  store i32 %and727, i32* %tflags, align 4
  br label %if.end747

if.else728:                                       ; preds = %cond.false725, %cond.true720, %land.lhs.true714, %if.else711
  %332 = load i32, i32* %ch, align 4
  %conv729 = trunc i32 %332 to i8
  %idxprom730 = zext i8 %conv729 to i32
  %arrayidx731 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom730
  %333 = load i32, i32* %arrayidx731, align 4
  %and732 = and i32 %333, 2
  %cmp733 = icmp eq i32 %and732, 0
  br i1 %cmp733, label %land.lhs.true735, label %if.end746

land.lhs.true735:                                 ; preds = %if.else728
  %334 = load i32, i32* @shell_input_line_index, align 4
  %cmp736 = icmp ugt i32 %334, 1
  br i1 %cmp736, label %cond.true738, label %cond.false743

cond.true738:                                     ; preds = %land.lhs.true735
  %335 = load i8*, i8** @shell_input_line_property, align 4
  %336 = load i32, i32* @shell_input_line_index, align 4
  %sub739 = sub i32 %336, 1
  %arrayidx740 = getelementptr inbounds i8, i8* %335, i32 %sub739
  %337 = load i8, i8* %arrayidx740, align 1
  %conv741 = sext i8 %337 to i32
  %tobool742 = icmp ne i32 %conv741, 0
  br i1 %tobool742, label %if.then744, label %if.end746

cond.false743:                                    ; preds = %land.lhs.true735
  br i1 true, label %if.then744, label %if.end746

if.then744:                                       ; preds = %cond.false743, %cond.true738
  %338 = load i32, i32* %tflags, align 4
  %and745 = and i32 %338, -17
  store i32 %and745, i32* %tflags, align 4
  br label %if.end746

if.end746:                                        ; preds = %if.then744, %cond.false743, %cond.true738, %if.else728
  br label %if.end747

if.end747:                                        ; preds = %if.end746, %if.then726
  br label %if.end748

if.end748:                                        ; preds = %if.end747, %if.then710
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then669
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.end644
  br label %if.end751

if.end751:                                        ; preds = %if.end750
  br label %if.end752

if.end752:                                        ; preds = %if.end751, %if.end465
  %339 = load i32, i32* %tflags, align 4
  %and753 = and i32 %339, 4
  %cmp754 = icmp eq i32 %and753, 0
  br i1 %cmp754, label %land.lhs.true756, label %if.else852

land.lhs.true756:                                 ; preds = %if.end752
  %340 = load i32, i32* %tflags, align 4
  %and757 = and i32 %340, 32
  %tobool758 = icmp ne i32 %and757, 0
  br i1 %tobool758, label %land.lhs.true759, label %if.else852

land.lhs.true759:                                 ; preds = %land.lhs.true756
  %341 = load i32, i32* %ch, align 4
  %cmp760 = icmp eq i32 %341, 60
  br i1 %cmp760, label %land.lhs.true762, label %if.else852

land.lhs.true762:                                 ; preds = %land.lhs.true759
  %342 = load i32, i32* @shell_input_line_index, align 4
  %cmp763 = icmp ugt i32 %342, 1
  br i1 %cmp763, label %cond.true765, label %cond.false770

cond.true765:                                     ; preds = %land.lhs.true762
  %343 = load i8*, i8** @shell_input_line_property, align 4
  %344 = load i32, i32* @shell_input_line_index, align 4
  %sub766 = sub i32 %344, 1
  %arrayidx767 = getelementptr inbounds i8, i8* %343, i32 %sub766
  %345 = load i8, i8* %arrayidx767, align 1
  %conv768 = sext i8 %345 to i32
  %tobool769 = icmp ne i32 %conv768, 0
  br i1 %tobool769, label %if.then771, label %if.else852

cond.false770:                                    ; preds = %land.lhs.true762
  br i1 true, label %if.then771, label %if.else852

if.then771:                                       ; preds = %cond.false770, %cond.true765
  br label %do.body772

do.body772:                                       ; preds = %if.then771
  %346 = load i32, i32* %retind, align 4
  %add773 = add nsw i32 %346, 1
  %347 = load i32, i32* %retsize, align 4
  %cmp774 = icmp sge i32 %add773, %347
  br i1 %cmp774, label %if.then776, label %if.end785

if.then776:                                       ; preds = %do.body772
  br label %while.cond777

while.cond777:                                    ; preds = %while.body781, %if.then776
  %348 = load i32, i32* %retind, align 4
  %add778 = add nsw i32 %348, 1
  %349 = load i32, i32* %retsize, align 4
  %cmp779 = icmp sge i32 %add778, %349
  br i1 %cmp779, label %while.body781, label %while.end783

while.body781:                                    ; preds = %while.cond777
  %350 = load i32, i32* %retsize, align 4
  %add782 = add nsw i32 %350, 64
  store i32 %add782, i32* %retsize, align 4
  br label %while.cond777

while.end783:                                     ; preds = %while.cond777
  %351 = load i8*, i8** %ret, align 4
  %352 = load i32, i32* %retsize, align 4
  %call784 = call i8* @sh_xrealloc(i8* %351, i32 %352, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4061)
  store i8* %call784, i8** %ret, align 4
  br label %if.end785

if.end785:                                        ; preds = %while.end783, %do.body772
  br label %do.end786

do.end786:                                        ; preds = %if.end785
  %353 = load i32, i32* %ch, align 4
  %conv787 = trunc i32 %353 to i8
  %354 = load i8*, i8** %ret, align 4
  %355 = load i32, i32* %retind, align 4
  %inc788 = add nsw i32 %355, 1
  store i32 %inc788, i32* %retind, align 4
  %arrayidx789 = getelementptr inbounds i8, i8* %354, i32 %355
  store i8 %conv787, i8* %arrayidx789, align 1
  %call790 = call i32 @shell_getc(i32 1)
  store i32 %call790, i32* %peekc, align 4
  %356 = load i32, i32* %peekc, align 4
  %cmp791 = icmp eq i32 %356, -1
  br i1 %cmp791, label %if.then793, label %if.end794

if.then793:                                       ; preds = %do.end786
  br label %eof_error

if.end794:                                        ; preds = %do.end786
  %357 = load i32, i32* %peekc, align 4
  %358 = load i32, i32* %ch, align 4
  %cmp795 = icmp eq i32 %357, %358
  br i1 %cmp795, label %if.then797, label %if.else850

if.then797:                                       ; preds = %if.end794
  br label %do.body798

do.body798:                                       ; preds = %if.then797
  %359 = load i32, i32* %retind, align 4
  %add799 = add nsw i32 %359, 1
  %360 = load i32, i32* %retsize, align 4
  %cmp800 = icmp sge i32 %add799, %360
  br i1 %cmp800, label %if.then802, label %if.end811

if.then802:                                       ; preds = %do.body798
  br label %while.cond803

while.cond803:                                    ; preds = %while.body807, %if.then802
  %361 = load i32, i32* %retind, align 4
  %add804 = add nsw i32 %361, 1
  %362 = load i32, i32* %retsize, align 4
  %cmp805 = icmp sge i32 %add804, %362
  br i1 %cmp805, label %while.body807, label %while.end809

while.body807:                                    ; preds = %while.cond803
  %363 = load i32, i32* %retsize, align 4
  %add808 = add nsw i32 %363, 64
  store i32 %add808, i32* %retsize, align 4
  br label %while.cond803

while.end809:                                     ; preds = %while.cond803
  %364 = load i8*, i8** %ret, align 4
  %365 = load i32, i32* %retsize, align 4
  %call810 = call i8* @sh_xrealloc(i8* %364, i32 %365, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4068)
  store i8* %call810, i8** %ret, align 4
  br label %if.end811

if.end811:                                        ; preds = %while.end809, %do.body798
  br label %do.end812

do.end812:                                        ; preds = %if.end811
  %366 = load i32, i32* %peekc, align 4
  %conv813 = trunc i32 %366 to i8
  %367 = load i8*, i8** %ret, align 4
  %368 = load i32, i32* %retind, align 4
  %inc814 = add nsw i32 %368, 1
  store i32 %inc814, i32* %retind, align 4
  %arrayidx815 = getelementptr inbounds i8, i8* %367, i32 %368
  store i8 %conv813, i8* %arrayidx815, align 1
  %call816 = call i32 @shell_getc(i32 1)
  store i32 %call816, i32* %peekc, align 4
  %369 = load i32, i32* %peekc, align 4
  %cmp817 = icmp eq i32 %369, -1
  br i1 %cmp817, label %if.then819, label %if.end820

if.then819:                                       ; preds = %do.end812
  br label %eof_error

if.end820:                                        ; preds = %do.end812
  %370 = load i32, i32* %peekc, align 4
  %cmp821 = icmp eq i32 %370, 45
  br i1 %cmp821, label %if.then823, label %if.else843

if.then823:                                       ; preds = %if.end820
  br label %do.body824

do.body824:                                       ; preds = %if.then823
  %371 = load i32, i32* %retind, align 4
  %add825 = add nsw i32 %371, 1
  %372 = load i32, i32* %retsize, align 4
  %cmp826 = icmp sge i32 %add825, %372
  br i1 %cmp826, label %if.then828, label %if.end837

if.then828:                                       ; preds = %do.body824
  br label %while.cond829

while.cond829:                                    ; preds = %while.body833, %if.then828
  %373 = load i32, i32* %retind, align 4
  %add830 = add nsw i32 %373, 1
  %374 = load i32, i32* %retsize, align 4
  %cmp831 = icmp sge i32 %add830, %374
  br i1 %cmp831, label %while.body833, label %while.end835

while.body833:                                    ; preds = %while.cond829
  %375 = load i32, i32* %retsize, align 4
  %add834 = add nsw i32 %375, 64
  store i32 %add834, i32* %retsize, align 4
  br label %while.cond829

while.end835:                                     ; preds = %while.cond829
  %376 = load i8*, i8** %ret, align 4
  %377 = load i32, i32* %retsize, align 4
  %call836 = call i8* @sh_xrealloc(i8* %376, i32 %377, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4075)
  store i8* %call836, i8** %ret, align 4
  br label %if.end837

if.end837:                                        ; preds = %while.end835, %do.body824
  br label %do.end838

do.end838:                                        ; preds = %if.end837
  %378 = load i32, i32* %peekc, align 4
  %conv839 = trunc i32 %378 to i8
  %379 = load i8*, i8** %ret, align 4
  %380 = load i32, i32* %retind, align 4
  %inc840 = add nsw i32 %380, 1
  store i32 %inc840, i32* %retind, align 4
  %arrayidx841 = getelementptr inbounds i8, i8* %379, i32 %380
  store i8 %conv839, i8* %arrayidx841, align 1
  %381 = load i32, i32* %tflags, align 4
  %or842 = or i32 %381, 512
  store i32 %or842, i32* %tflags, align 4
  br label %if.end844

if.else843:                                       ; preds = %if.end820
  %382 = load i32, i32* %peekc, align 4
  call void @shell_ungetc(i32 %382)
  br label %if.end844

if.end844:                                        ; preds = %if.else843, %do.end838
  %383 = load i32, i32* %peekc, align 4
  %cmp845 = icmp ne i32 %383, 60
  br i1 %cmp845, label %if.then847, label %if.end849

if.then847:                                       ; preds = %if.end844
  %384 = load i32, i32* %tflags, align 4
  %or848 = or i32 %384, 256
  store i32 %or848, i32* %tflags, align 4
  store i32 -1, i32* %lex_firstind, align 4
  br label %if.end849

if.end849:                                        ; preds = %if.then847, %if.end844
  br label %while.cond

if.else850:                                       ; preds = %if.end794
  %385 = load i32, i32* %peekc, align 4
  store i32 %385, i32* %ch, align 4
  br label %if.end851

if.end851:                                        ; preds = %if.else850
  br label %if.end886

if.else852:                                       ; preds = %cond.false770, %cond.true765, %land.lhs.true759, %land.lhs.true756, %if.end752
  %386 = load i32, i32* %tflags, align 4
  %and853 = and i32 %386, 2
  %tobool854 = icmp ne i32 %and853, 0
  br i1 %tobool854, label %land.lhs.true855, label %if.end885

land.lhs.true855:                                 ; preds = %if.else852
  %387 = load i32, i32* %tflags, align 4
  %and856 = and i32 %387, 4
  %cmp857 = icmp eq i32 %and856, 0
  br i1 %cmp857, label %land.lhs.true859, label %if.end885

land.lhs.true859:                                 ; preds = %land.lhs.true855
  %388 = load i32, i32* %ch, align 4
  %cmp860 = icmp eq i32 %388, 35
  br i1 %cmp860, label %land.lhs.true862, label %if.end885

land.lhs.true862:                                 ; preds = %land.lhs.true859
  %389 = load i32, i32* %tflags, align 4
  %and863 = and i32 %389, 16
  %tobool864 = icmp ne i32 %and863, 0
  br i1 %tobool864, label %land.lhs.true865, label %lor.lhs.false868

land.lhs.true865:                                 ; preds = %land.lhs.true862
  %390 = load i32, i32* %lex_rwlen, align 4
  %cmp866 = icmp eq i32 %390, 0
  br i1 %cmp866, label %land.lhs.true874, label %lor.lhs.false868

lor.lhs.false868:                                 ; preds = %land.lhs.true865, %land.lhs.true862
  %391 = load i32, i32* %tflags, align 4
  %and869 = and i32 %391, 2048
  %tobool870 = icmp ne i32 %and869, 0
  br i1 %tobool870, label %land.lhs.true871, label %if.end885

land.lhs.true871:                                 ; preds = %lor.lhs.false868
  %392 = load i32, i32* %lex_wlen, align 4
  %cmp872 = icmp eq i32 %392, 0
  br i1 %cmp872, label %land.lhs.true874, label %if.end885

land.lhs.true874:                                 ; preds = %land.lhs.true871, %land.lhs.true865
  %393 = load i32, i32* @shell_input_line_index, align 4
  %cmp875 = icmp ugt i32 %393, 1
  br i1 %cmp875, label %cond.true877, label %cond.false882

cond.true877:                                     ; preds = %land.lhs.true874
  %394 = load i8*, i8** @shell_input_line_property, align 4
  %395 = load i32, i32* @shell_input_line_index, align 4
  %sub878 = sub i32 %395, 1
  %arrayidx879 = getelementptr inbounds i8, i8* %394, i32 %sub878
  %396 = load i8, i8* %arrayidx879, align 1
  %conv880 = sext i8 %396 to i32
  %tobool881 = icmp ne i32 %conv880, 0
  br i1 %tobool881, label %if.then883, label %if.end885

cond.false882:                                    ; preds = %land.lhs.true874
  br i1 true, label %if.then883, label %if.end885

if.then883:                                       ; preds = %cond.false882, %cond.true877
  %397 = load i32, i32* %tflags, align 4
  %or884 = or i32 %397, 4
  store i32 %or884, i32* %tflags, align 4
  br label %if.end885

if.end885:                                        ; preds = %if.then883, %cond.false882, %cond.true877, %land.lhs.true871, %lor.lhs.false868, %land.lhs.true859, %land.lhs.true855, %if.else852
  br label %if.end886

if.end886:                                        ; preds = %if.end885, %if.end851
  %398 = load i32, i32* %ch, align 4
  %cmp887 = icmp eq i32 %398, 1
  br i1 %cmp887, label %land.lhs.true892, label %lor.lhs.false889

lor.lhs.false889:                                 ; preds = %if.end886
  %399 = load i32, i32* %ch, align 4
  %cmp890 = icmp eq i32 %399, 127
  br i1 %cmp890, label %land.lhs.true892, label %if.else922

land.lhs.true892:                                 ; preds = %lor.lhs.false889, %if.end886
  %400 = load i32, i32* @shell_input_line_index, align 4
  %cmp893 = icmp ugt i32 %400, 1
  br i1 %cmp893, label %cond.true895, label %cond.false900

cond.true895:                                     ; preds = %land.lhs.true892
  %401 = load i8*, i8** @shell_input_line_property, align 4
  %402 = load i32, i32* @shell_input_line_index, align 4
  %sub896 = sub i32 %402, 1
  %arrayidx897 = getelementptr inbounds i8, i8* %401, i32 %sub896
  %403 = load i8, i8* %arrayidx897, align 1
  %conv898 = sext i8 %403 to i32
  %tobool899 = icmp ne i32 %conv898, 0
  br i1 %tobool899, label %if.then901, label %if.else922

cond.false900:                                    ; preds = %land.lhs.true892
  br i1 true, label %if.then901, label %if.else922

if.then901:                                       ; preds = %cond.false900, %cond.true895
  br label %do.body902

do.body902:                                       ; preds = %if.then901
  %404 = load i32, i32* %retind, align 4
  %add903 = add nsw i32 %404, 2
  %405 = load i32, i32* %retsize, align 4
  %cmp904 = icmp sge i32 %add903, %405
  br i1 %cmp904, label %if.then906, label %if.end915

if.then906:                                       ; preds = %do.body902
  br label %while.cond907

while.cond907:                                    ; preds = %while.body911, %if.then906
  %406 = load i32, i32* %retind, align 4
  %add908 = add nsw i32 %406, 2
  %407 = load i32, i32* %retsize, align 4
  %cmp909 = icmp sge i32 %add908, %407
  br i1 %cmp909, label %while.body911, label %while.end913

while.body911:                                    ; preds = %while.cond907
  %408 = load i32, i32* %retsize, align 4
  %add912 = add nsw i32 %408, 64
  store i32 %add912, i32* %retsize, align 4
  br label %while.cond907

while.end913:                                     ; preds = %while.cond907
  %409 = load i8*, i8** %ret, align 4
  %410 = load i32, i32* %retsize, align 4
  %call914 = call i8* @sh_xrealloc(i8* %409, i32 %410, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4099)
  store i8* %call914, i8** %ret, align 4
  br label %if.end915

if.end915:                                        ; preds = %while.end913, %do.body902
  br label %do.end916

do.end916:                                        ; preds = %if.end915
  %411 = load i8*, i8** %ret, align 4
  %412 = load i32, i32* %retind, align 4
  %inc917 = add nsw i32 %412, 1
  store i32 %inc917, i32* %retind, align 4
  %arrayidx918 = getelementptr inbounds i8, i8* %411, i32 %412
  store i8 1, i8* %arrayidx918, align 1
  %413 = load i32, i32* %ch, align 4
  %conv919 = trunc i32 %413 to i8
  %414 = load i8*, i8** %ret, align 4
  %415 = load i32, i32* %retind, align 4
  %inc920 = add nsw i32 %415, 1
  store i32 %inc920, i32* %retind, align 4
  %arrayidx921 = getelementptr inbounds i8, i8* %414, i32 %415
  store i8 %conv919, i8* %arrayidx921, align 1
  br label %while.cond

if.else922:                                       ; preds = %cond.false900, %cond.true895, %lor.lhs.false889
  %416 = load i32, i32* %ch, align 4
  %417 = load i32, i32* %close.addr, align 4
  %cmp923 = icmp eq i32 %416, %417
  br i1 %cmp923, label %land.lhs.true925, label %if.else940

land.lhs.true925:                                 ; preds = %if.else922
  %418 = load i32, i32* %tflags, align 4
  %and926 = and i32 %418, 64
  %cmp927 = icmp eq i32 %and926, 0
  br i1 %cmp927, label %land.lhs.true929, label %if.else940

land.lhs.true929:                                 ; preds = %land.lhs.true925
  %419 = load i32, i32* @shell_input_line_index, align 4
  %cmp930 = icmp ugt i32 %419, 1
  br i1 %cmp930, label %cond.true932, label %cond.false937

cond.true932:                                     ; preds = %land.lhs.true929
  %420 = load i8*, i8** @shell_input_line_property, align 4
  %421 = load i32, i32* @shell_input_line_index, align 4
  %sub933 = sub i32 %421, 1
  %arrayidx934 = getelementptr inbounds i8, i8* %420, i32 %sub933
  %422 = load i8, i8* %arrayidx934, align 1
  %conv935 = sext i8 %422 to i32
  %tobool936 = icmp ne i32 %conv935, 0
  br i1 %tobool936, label %if.then938, label %if.else940

cond.false937:                                    ; preds = %land.lhs.true929
  br i1 true, label %if.then938, label %if.else940

if.then938:                                       ; preds = %cond.false937, %cond.true932
  %423 = load i32, i32* %count, align 4
  %dec939 = add nsw i32 %423, -1
  store i32 %dec939, i32* %count, align 4
  br label %if.end963

if.else940:                                       ; preds = %cond.false937, %cond.true932, %land.lhs.true925, %if.else922
  %424 = load i32, i32* %flags.addr, align 4
  %and941 = and i32 %424, 1
  %cmp942 = icmp eq i32 %and941, 0
  br i1 %cmp942, label %land.lhs.true944, label %if.end962

land.lhs.true944:                                 ; preds = %if.else940
  %425 = load i32, i32* %tflags, align 4
  %and945 = and i32 %425, 64
  %cmp946 = icmp eq i32 %and945, 0
  br i1 %cmp946, label %land.lhs.true948, label %if.end962

land.lhs.true948:                                 ; preds = %land.lhs.true944
  %426 = load i32, i32* %ch, align 4
  %427 = load i32, i32* %open.addr, align 4
  %cmp949 = icmp eq i32 %426, %427
  br i1 %cmp949, label %land.lhs.true951, label %if.end962

land.lhs.true951:                                 ; preds = %land.lhs.true948
  %428 = load i32, i32* @shell_input_line_index, align 4
  %cmp952 = icmp ugt i32 %428, 1
  br i1 %cmp952, label %cond.true954, label %cond.false959

cond.true954:                                     ; preds = %land.lhs.true951
  %429 = load i8*, i8** @shell_input_line_property, align 4
  %430 = load i32, i32* @shell_input_line_index, align 4
  %sub955 = sub i32 %430, 1
  %arrayidx956 = getelementptr inbounds i8, i8* %429, i32 %sub955
  %431 = load i8, i8* %arrayidx956, align 1
  %conv957 = sext i8 %431 to i32
  %tobool958 = icmp ne i32 %conv957, 0
  br i1 %tobool958, label %if.then960, label %if.end962

cond.false959:                                    ; preds = %land.lhs.true951
  br i1 true, label %if.then960, label %if.end962

if.then960:                                       ; preds = %cond.false959, %cond.true954
  %432 = load i32, i32* %count, align 4
  %inc961 = add nsw i32 %432, 1
  store i32 %inc961, i32* %count, align 4
  br label %if.end962

if.end962:                                        ; preds = %if.then960, %cond.false959, %cond.true954, %land.lhs.true948, %land.lhs.true944, %if.else940
  br label %if.end963

if.end963:                                        ; preds = %if.end962, %if.then938
  br label %if.end964

if.end964:                                        ; preds = %if.end963
  br label %do.body965

do.body965:                                       ; preds = %if.end964
  %433 = load i32, i32* %retind, align 4
  %add966 = add nsw i32 %433, 1
  %434 = load i32, i32* %retsize, align 4
  %cmp967 = icmp sge i32 %add966, %434
  br i1 %cmp967, label %if.then969, label %if.end978

if.then969:                                       ; preds = %do.body965
  br label %while.cond970

while.cond970:                                    ; preds = %while.body974, %if.then969
  %435 = load i32, i32* %retind, align 4
  %add971 = add nsw i32 %435, 1
  %436 = load i32, i32* %retsize, align 4
  %cmp972 = icmp sge i32 %add971, %436
  br i1 %cmp972, label %while.body974, label %while.end976

while.body974:                                    ; preds = %while.cond970
  %437 = load i32, i32* %retsize, align 4
  %add975 = add nsw i32 %437, 64
  store i32 %add975, i32* %retsize, align 4
  br label %while.cond970

while.end976:                                     ; preds = %while.cond970
  %438 = load i8*, i8** %ret, align 4
  %439 = load i32, i32* %retsize, align 4
  %call977 = call i8* @sh_xrealloc(i8* %438, i32 %439, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4120)
  store i8* %call977, i8** %ret, align 4
  br label %if.end978

if.end978:                                        ; preds = %while.end976, %do.body965
  br label %do.end979

do.end979:                                        ; preds = %if.end978
  %440 = load i32, i32* %ch, align 4
  %conv980 = trunc i32 %440 to i8
  %441 = load i8*, i8** %ret, align 4
  %442 = load i32, i32* %retind, align 4
  %inc981 = add nsw i32 %442, 1
  store i32 %inc981, i32* %retind, align 4
  %arrayidx982 = getelementptr inbounds i8, i8* %441, i32 %442
  store i8 %conv980, i8* %arrayidx982, align 1
  %443 = load i32, i32* %count, align 4
  %cmp983 = icmp eq i32 %443, 0
  br i1 %cmp983, label %if.then985, label %if.end986

if.then985:                                       ; preds = %do.end979
  br label %while.end1247

if.end986:                                        ; preds = %do.end979
  %444 = load i32, i32* %ch, align 4
  %cmp987 = icmp eq i32 %444, 92
  br i1 %cmp987, label %land.lhs.true989, label %if.end1000

land.lhs.true989:                                 ; preds = %if.end986
  %445 = load i32, i32* @shell_input_line_index, align 4
  %cmp990 = icmp ugt i32 %445, 1
  br i1 %cmp990, label %cond.true992, label %cond.false997

cond.true992:                                     ; preds = %land.lhs.true989
  %446 = load i8*, i8** @shell_input_line_property, align 4
  %447 = load i32, i32* @shell_input_line_index, align 4
  %sub993 = sub i32 %447, 1
  %arrayidx994 = getelementptr inbounds i8, i8* %446, i32 %sub993
  %448 = load i8, i8* %arrayidx994, align 1
  %conv995 = sext i8 %448 to i32
  %tobool996 = icmp ne i32 %conv995, 0
  br i1 %tobool996, label %if.then998, label %if.end1000

cond.false997:                                    ; preds = %land.lhs.true989
  br i1 true, label %if.then998, label %if.end1000

if.then998:                                       ; preds = %cond.false997, %cond.true992
  %449 = load i32, i32* %tflags, align 4
  %or999 = or i32 %449, 8
  store i32 %or999, i32* %tflags, align 4
  br label %if.end1000

if.end1000:                                       ; preds = %if.then998, %cond.false997, %cond.true992, %if.end986
  %450 = load i32, i32* %ch, align 4
  %conv1001 = trunc i32 %450 to i8
  %idxprom1002 = zext i8 %conv1001 to i32
  %arrayidx1003 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom1002
  %451 = load i32, i32* %arrayidx1003, align 4
  %and1004 = and i32 %451, 8
  %tobool1005 = icmp ne i32 %and1004, 0
  br i1 %tobool1005, label %land.lhs.true1006, label %if.else1144

land.lhs.true1006:                                ; preds = %if.end1000
  %452 = load i32, i32* @shell_input_line_index, align 4
  %cmp1007 = icmp ugt i32 %452, 1
  br i1 %cmp1007, label %cond.true1009, label %cond.false1014

cond.true1009:                                    ; preds = %land.lhs.true1006
  %453 = load i8*, i8** @shell_input_line_property, align 4
  %454 = load i32, i32* @shell_input_line_index, align 4
  %sub1010 = sub i32 %454, 1
  %arrayidx1011 = getelementptr inbounds i8, i8* %453, i32 %sub1010
  %455 = load i8, i8* %arrayidx1011, align 1
  %conv1012 = sext i8 %455 to i32
  %tobool1013 = icmp ne i32 %conv1012, 0
  br i1 %tobool1013, label %if.then1015, label %if.else1144

cond.false1014:                                   ; preds = %land.lhs.true1006
  br i1 true, label %if.then1015, label %if.else1144

if.then1015:                                      ; preds = %cond.false1014, %cond.true1009
  br label %do.body1016

do.body1016:                                      ; preds = %if.then1015
  %456 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %add1017 = add nsw i32 %456, 2
  %457 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %cmp1018 = icmp sgt i32 %add1017, %457
  br i1 %cmp1018, label %if.then1020, label %if.end1023

if.then1020:                                      ; preds = %do.body1016
  %458 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %459 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %add1021 = add nsw i32 %459, 10
  store i32 %add1021, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 2), align 4
  %mul = mul i32 %add1021, 1
  %call1022 = call i8* @sh_xrealloc(i8* %458, i32 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4133)
  store i8* %call1022, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  br label %if.end1023

if.end1023:                                       ; preds = %if.then1020, %do.body1016
  %460 = load i32, i32* %ch, align 4
  %conv1024 = trunc i32 %460 to i8
  %461 = load i8*, i8** getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 0), align 4
  %462 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %arrayidx1025 = getelementptr inbounds i8, i8* %461, i32 %462
  store i8 %conv1024, i8* %arrayidx1025, align 1
  %463 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %inc1026 = add nsw i32 %463, 1
  store i32 %inc1026, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.end1027

do.end1027:                                       ; preds = %if.end1023
  %464 = load i32, i32* %tflags, align 4
  %and1028 = and i32 %464, 1
  %tobool1029 = icmp ne i32 %and1028, 0
  br i1 %tobool1029, label %land.lhs.true1030, label %if.else1045

land.lhs.true1030:                                ; preds = %do.end1027
  %465 = load i32, i32* %ch, align 4
  %cmp1031 = icmp eq i32 %465, 39
  br i1 %cmp1031, label %land.lhs.true1033, label %if.else1045

land.lhs.true1033:                                ; preds = %land.lhs.true1030
  %466 = load i32, i32* @shell_input_line_index, align 4
  %cmp1034 = icmp ugt i32 %466, 1
  br i1 %cmp1034, label %cond.true1036, label %cond.false1041

cond.true1036:                                    ; preds = %land.lhs.true1033
  %467 = load i8*, i8** @shell_input_line_property, align 4
  %468 = load i32, i32* @shell_input_line_index, align 4
  %sub1037 = sub i32 %468, 1
  %arrayidx1038 = getelementptr inbounds i8, i8* %467, i32 %sub1037
  %469 = load i8, i8* %arrayidx1038, align 1
  %conv1039 = sext i8 %469 to i32
  %tobool1040 = icmp ne i32 %conv1039, 0
  br i1 %tobool1040, label %if.then1042, label %if.else1045

cond.false1041:                                   ; preds = %land.lhs.true1033
  br i1 true, label %if.then1042, label %if.else1045

if.then1042:                                      ; preds = %cond.false1041, %cond.true1036
  %470 = load i32, i32* %ch, align 4
  %471 = load i32, i32* %ch, align 4
  %472 = load i32, i32* %ch, align 4
  %473 = load i32, i32* %rflags, align 4
  %or1043 = or i32 2, %473
  %call1044 = call i8* @parse_matched_pair(i32 %470, i32 %471, i32 %472, i32* %nestlen, i32 %or1043)
  store i8* %call1044, i8** %nestret, align 4
  br label %if.end1047

if.else1045:                                      ; preds = %cond.false1041, %cond.true1036, %land.lhs.true1030, %do.end1027
  %474 = load i32, i32* %ch, align 4
  %475 = load i32, i32* %ch, align 4
  %476 = load i32, i32* %ch, align 4
  %477 = load i32, i32* %rflags, align 4
  %call1046 = call i8* @parse_matched_pair(i32 %474, i32 %475, i32 %476, i32* %nestlen, i32 %477)
  store i8* %call1046, i8** %nestret, align 4
  br label %if.end1047

if.end1047:                                       ; preds = %if.else1045, %if.then1042
  %478 = load i32, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  %dec1048 = add nsw i32 %478, -1
  store i32 %dec1048, i32* getelementptr inbounds (%struct.dstack, %struct.dstack* @dstack, i32 0, i32 1), align 4
  br label %do.body1049

do.body1049:                                      ; preds = %if.end1047
  %479 = load i8*, i8** %nestret, align 4
  %cmp1050 = icmp eq i8* %479, @matched_pair_error
  br i1 %cmp1050, label %if.then1052, label %if.end1053

if.then1052:                                      ; preds = %do.body1049
  %480 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %480, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4139)
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end1053:                                       ; preds = %do.body1049
  br label %do.end1054

do.end1054:                                       ; preds = %if.end1053
  %481 = load i32, i32* %tflags, align 4
  %and1055 = and i32 %481, 1
  %tobool1056 = icmp ne i32 %and1055, 0
  br i1 %tobool1056, label %land.lhs.true1057, label %if.else1087

land.lhs.true1057:                                ; preds = %do.end1054
  %482 = load i32, i32* %ch, align 4
  %cmp1058 = icmp eq i32 %482, 39
  br i1 %cmp1058, label %land.lhs.true1060, label %if.else1087

land.lhs.true1060:                                ; preds = %land.lhs.true1057
  %483 = load i32, i32* @extended_quote, align 4
  %tobool1061 = icmp ne i32 %483, 0
  br i1 %tobool1061, label %land.lhs.true1066, label %lor.lhs.false1062

lor.lhs.false1062:                                ; preds = %land.lhs.true1060
  %484 = load i32, i32* %rflags, align 4
  %and1063 = and i32 %484, 4
  %cmp1064 = icmp eq i32 %and1063, 0
  br i1 %cmp1064, label %land.lhs.true1066, label %if.else1087

land.lhs.true1066:                                ; preds = %lor.lhs.false1062, %land.lhs.true1060
  %485 = load i32, i32* @shell_input_line_index, align 4
  %cmp1067 = icmp ugt i32 %485, 1
  br i1 %cmp1067, label %cond.true1069, label %cond.false1074

cond.true1069:                                    ; preds = %land.lhs.true1066
  %486 = load i8*, i8** @shell_input_line_property, align 4
  %487 = load i32, i32* @shell_input_line_index, align 4
  %sub1070 = sub i32 %487, 1
  %arrayidx1071 = getelementptr inbounds i8, i8* %486, i32 %sub1070
  %488 = load i8, i8* %arrayidx1071, align 1
  %conv1072 = sext i8 %488 to i32
  %tobool1073 = icmp ne i32 %conv1072, 0
  br i1 %tobool1073, label %if.then1075, label %if.else1087

cond.false1074:                                   ; preds = %land.lhs.true1066
  br i1 true, label %if.then1075, label %if.else1087

if.then1075:                                      ; preds = %cond.false1074, %cond.true1069
  %489 = load i8*, i8** %nestret, align 4
  %490 = load i32, i32* %nestlen, align 4
  %sub1076 = sub nsw i32 %490, 1
  %call1077 = call i8* @ansiexpand(i8* %489, i32 0, i32 %sub1076, i32* %ttranslen)
  store i8* %call1077, i8** %ttrans, align 4
  %491 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %491, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4145)
  %492 = load i32, i32* %rflags, align 4
  %and1078 = and i32 %492, 4
  %cmp1079 = icmp eq i32 %and1078, 0
  br i1 %cmp1079, label %if.then1081, label %if.else1084

if.then1081:                                      ; preds = %if.then1075
  %493 = load i8*, i8** %ttrans, align 4
  %call1082 = call i8* @sh_single_quote(i8* %493)
  store i8* %call1082, i8** %nestret, align 4
  %494 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %494, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4150)
  %495 = load i8*, i8** %nestret, align 4
  %call1083 = call i32 @strlen(i8* %495)
  store i32 %call1083, i32* %nestlen, align 4
  br label %if.end1085

if.else1084:                                      ; preds = %if.then1075
  %496 = load i8*, i8** %ttrans, align 4
  store i8* %496, i8** %nestret, align 4
  %497 = load i32, i32* %ttranslen, align 4
  store i32 %497, i32* %nestlen, align 4
  br label %if.end1085

if.end1085:                                       ; preds = %if.else1084, %if.then1081
  %498 = load i32, i32* %retind, align 4
  %sub1086 = sub nsw i32 %498, 2
  store i32 %sub1086, i32* %retind, align 4
  br label %if.end1115

if.else1087:                                      ; preds = %cond.false1074, %cond.true1069, %lor.lhs.false1062, %land.lhs.true1057, %do.end1054
  %499 = load i32, i32* %tflags, align 4
  %and1088 = and i32 %499, 1
  %tobool1089 = icmp ne i32 %and1088, 0
  br i1 %tobool1089, label %land.lhs.true1090, label %if.end1114

land.lhs.true1090:                                ; preds = %if.else1087
  %500 = load i32, i32* %ch, align 4
  %cmp1091 = icmp eq i32 %500, 34
  br i1 %cmp1091, label %land.lhs.true1093, label %if.end1114

land.lhs.true1093:                                ; preds = %land.lhs.true1090
  %501 = load i32, i32* @extended_quote, align 4
  %tobool1094 = icmp ne i32 %501, 0
  br i1 %tobool1094, label %land.lhs.true1099, label %lor.lhs.false1095

lor.lhs.false1095:                                ; preds = %land.lhs.true1093
  %502 = load i32, i32* %rflags, align 4
  %and1096 = and i32 %502, 4
  %cmp1097 = icmp eq i32 %and1096, 0
  br i1 %cmp1097, label %land.lhs.true1099, label %if.end1114

land.lhs.true1099:                                ; preds = %lor.lhs.false1095, %land.lhs.true1093
  %503 = load i32, i32* @shell_input_line_index, align 4
  %cmp1100 = icmp ugt i32 %503, 1
  br i1 %cmp1100, label %cond.true1102, label %cond.false1107

cond.true1102:                                    ; preds = %land.lhs.true1099
  %504 = load i8*, i8** @shell_input_line_property, align 4
  %505 = load i32, i32* @shell_input_line_index, align 4
  %sub1103 = sub i32 %505, 1
  %arrayidx1104 = getelementptr inbounds i8, i8* %504, i32 %sub1103
  %506 = load i8, i8* %arrayidx1104, align 1
  %conv1105 = sext i8 %506 to i32
  %tobool1106 = icmp ne i32 %conv1105, 0
  br i1 %tobool1106, label %if.then1108, label %if.end1114

cond.false1107:                                   ; preds = %land.lhs.true1099
  br i1 true, label %if.then1108, label %if.end1114

if.then1108:                                      ; preds = %cond.false1107, %cond.true1102
  %507 = load i8*, i8** %nestret, align 4
  %508 = load i32, i32* %nestlen, align 4
  %sub1109 = sub nsw i32 %508, 1
  %509 = load i32, i32* %start_lineno, align 4
  %call1110 = call i8* @localeexpand(i8* %507, i32 0, i32 %sub1109, i32 %509, i32* %ttranslen)
  store i8* %call1110, i8** %ttrans, align 4
  %510 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %510, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4164)
  %511 = load i8*, i8** %ttrans, align 4
  %512 = load i32, i32* %ttranslen, align 4
  %call1111 = call i8* @sh_mkdoublequoted(i8* %511, i32 %512, i32 0)
  store i8* %call1111, i8** %nestret, align 4
  %513 = load i8*, i8** %ttrans, align 4
  call void @sh_xfree(i8* %513, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4167)
  %514 = load i32, i32* %ttranslen, align 4
  %add1112 = add nsw i32 %514, 2
  store i32 %add1112, i32* %nestlen, align 4
  %515 = load i32, i32* %retind, align 4
  %sub1113 = sub nsw i32 %515, 2
  store i32 %sub1113, i32* %retind, align 4
  br label %if.end1114

if.end1114:                                       ; preds = %if.then1108, %cond.false1107, %cond.true1102, %lor.lhs.false1095, %land.lhs.true1090, %if.else1087
  br label %if.end1115

if.end1115:                                       ; preds = %if.end1114, %if.end1085
  br label %do.body1116

do.body1116:                                      ; preds = %if.end1115
  %516 = load i32, i32* %nestlen, align 4
  %tobool1117 = icmp ne i32 %516, 0
  br i1 %tobool1117, label %if.then1118, label %if.end1137

if.then1118:                                      ; preds = %do.body1116
  br label %do.body1119

do.body1119:                                      ; preds = %if.then1118
  %517 = load i32, i32* %retind, align 4
  %518 = load i32, i32* %nestlen, align 4
  %add1120 = add nsw i32 %517, %518
  %519 = load i32, i32* %retsize, align 4
  %cmp1121 = icmp sge i32 %add1120, %519
  br i1 %cmp1121, label %if.then1123, label %if.end1132

if.then1123:                                      ; preds = %do.body1119
  br label %while.cond1124

while.cond1124:                                   ; preds = %while.body1128, %if.then1123
  %520 = load i32, i32* %retind, align 4
  %521 = load i32, i32* %nestlen, align 4
  %add1125 = add nsw i32 %520, %521
  %522 = load i32, i32* %retsize, align 4
  %cmp1126 = icmp sge i32 %add1125, %522
  br i1 %cmp1126, label %while.body1128, label %while.end1130

while.body1128:                                   ; preds = %while.cond1124
  %523 = load i32, i32* %retsize, align 4
  %add1129 = add nsw i32 %523, 64
  store i32 %add1129, i32* %retsize, align 4
  br label %while.cond1124

while.end1130:                                    ; preds = %while.cond1124
  %524 = load i8*, i8** %ret, align 4
  %525 = load i32, i32* %retsize, align 4
  %call1131 = call i8* @sh_xrealloc(i8* %524, i32 %525, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4172)
  store i8* %call1131, i8** %ret, align 4
  br label %if.end1132

if.end1132:                                       ; preds = %while.end1130, %do.body1119
  br label %do.end1133

do.end1133:                                       ; preds = %if.end1132
  %526 = load i8*, i8** %ret, align 4
  %527 = load i32, i32* %retind, align 4
  %add.ptr1134 = getelementptr inbounds i8, i8* %526, i32 %527
  %528 = load i8*, i8** %nestret, align 4
  %call1135 = call i8* @strcpy(i8* %add.ptr1134, i8* %528)
  %529 = load i32, i32* %nestlen, align 4
  %530 = load i32, i32* %retind, align 4
  %add1136 = add nsw i32 %530, %529
  store i32 %add1136, i32* %retind, align 4
  br label %if.end1137

if.end1137:                                       ; preds = %do.end1133, %do.body1116
  br label %do.end1138

do.end1138:                                       ; preds = %if.end1137
  br label %do.body1139

do.body1139:                                      ; preds = %do.end1138
  %531 = load i8*, i8** %nestret, align 4
  %tobool1140 = icmp ne i8* %531, null
  br i1 %tobool1140, label %if.then1141, label %if.end1142

if.then1141:                                      ; preds = %do.body1139
  %532 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %532, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4173)
  br label %if.end1142

if.end1142:                                       ; preds = %if.then1141, %do.body1139
  br label %do.end1143

do.end1143:                                       ; preds = %if.end1142
  br label %if.end1230

if.else1144:                                      ; preds = %cond.false1014, %cond.true1009, %if.end1000
  %533 = load i32, i32* %tflags, align 4
  %and1145 = and i32 %533, 1
  %tobool1146 = icmp ne i32 %and1145, 0
  br i1 %tobool1146, label %land.lhs.true1147, label %if.end1229

land.lhs.true1147:                                ; preds = %if.else1144
  %534 = load i32, i32* %ch, align 4
  %cmp1148 = icmp eq i32 %534, 40
  br i1 %cmp1148, label %land.lhs.true1156, label %lor.lhs.false1150

lor.lhs.false1150:                                ; preds = %land.lhs.true1147
  %535 = load i32, i32* %ch, align 4
  %cmp1151 = icmp eq i32 %535, 123
  br i1 %cmp1151, label %land.lhs.true1156, label %lor.lhs.false1153

lor.lhs.false1153:                                ; preds = %lor.lhs.false1150
  %536 = load i32, i32* %ch, align 4
  %cmp1154 = icmp eq i32 %536, 91
  br i1 %cmp1154, label %land.lhs.true1156, label %if.end1229

land.lhs.true1156:                                ; preds = %lor.lhs.false1153, %lor.lhs.false1150, %land.lhs.true1147
  %537 = load i32, i32* @shell_input_line_index, align 4
  %cmp1157 = icmp ugt i32 %537, 1
  br i1 %cmp1157, label %cond.true1159, label %cond.false1164

cond.true1159:                                    ; preds = %land.lhs.true1156
  %538 = load i8*, i8** @shell_input_line_property, align 4
  %539 = load i32, i32* @shell_input_line_index, align 4
  %sub1160 = sub i32 %539, 1
  %arrayidx1161 = getelementptr inbounds i8, i8* %538, i32 %sub1160
  %540 = load i8, i8* %arrayidx1161, align 1
  %conv1162 = sext i8 %540 to i32
  %tobool1163 = icmp ne i32 %conv1162, 0
  br i1 %tobool1163, label %if.then1165, label %if.end1229

cond.false1164:                                   ; preds = %land.lhs.true1156
  br i1 true, label %if.then1165, label %if.end1229

if.then1165:                                      ; preds = %cond.false1164, %cond.true1159
  %541 = load i32, i32* %tflags, align 4
  %and1166 = and i32 %541, 64
  %cmp1167 = icmp eq i32 %and1166, 0
  br i1 %cmp1167, label %land.lhs.true1169, label %if.end1174

land.lhs.true1169:                                ; preds = %if.then1165
  %542 = load i32, i32* %open.addr, align 4
  %543 = load i32, i32* %ch, align 4
  %cmp1170 = icmp eq i32 %542, %543
  br i1 %cmp1170, label %if.then1172, label %if.end1174

if.then1172:                                      ; preds = %land.lhs.true1169
  %544 = load i32, i32* %count, align 4
  %dec1173 = add nsw i32 %544, -1
  store i32 %dec1173, i32* %count, align 4
  br label %if.end1174

if.end1174:                                       ; preds = %if.then1172, %land.lhs.true1169, %if.then1165
  %545 = load i32, i32* %ch, align 4
  %cmp1175 = icmp eq i32 %545, 40
  br i1 %cmp1175, label %if.then1177, label %if.else1181

if.then1177:                                      ; preds = %if.end1174
  %546 = load i32, i32* %rflags, align 4
  %or1178 = or i32 %546, 8
  %and1179 = and i32 %or1178, -5
  %call1180 = call i8* @parse_comsub(i32 0, i32 40, i32 41, i32* %nestlen, i32 %and1179)
  store i8* %call1180, i8** %nestret, align 4
  br label %if.end1194

if.else1181:                                      ; preds = %if.end1174
  %547 = load i32, i32* %ch, align 4
  %cmp1182 = icmp eq i32 %547, 123
  br i1 %cmp1182, label %if.then1184, label %if.else1187

if.then1184:                                      ; preds = %if.else1181
  %548 = load i32, i32* %rflags, align 4
  %or1185 = or i32 65, %548
  %call1186 = call i8* @parse_matched_pair(i32 0, i32 123, i32 125, i32* %nestlen, i32 %or1185)
  store i8* %call1186, i8** %nestret, align 4
  br label %if.end1193

if.else1187:                                      ; preds = %if.else1181
  %549 = load i32, i32* %ch, align 4
  %cmp1188 = icmp eq i32 %549, 91
  br i1 %cmp1188, label %if.then1190, label %if.end1192

if.then1190:                                      ; preds = %if.else1187
  %550 = load i32, i32* %rflags, align 4
  %call1191 = call i8* @parse_matched_pair(i32 0, i32 91, i32 93, i32* %nestlen, i32 %550)
  store i8* %call1191, i8** %nestret, align 4
  br label %if.end1192

if.end1192:                                       ; preds = %if.then1190, %if.else1187
  br label %if.end1193

if.end1193:                                       ; preds = %if.end1192, %if.then1184
  br label %if.end1194

if.end1194:                                       ; preds = %if.end1193, %if.then1177
  br label %do.body1195

do.body1195:                                      ; preds = %if.end1194
  %551 = load i8*, i8** %nestret, align 4
  %cmp1196 = icmp eq i8* %551, @matched_pair_error
  br i1 %cmp1196, label %if.then1198, label %if.end1199

if.then1198:                                      ; preds = %do.body1195
  %552 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4187)
  store i8* @matched_pair_error, i8** %retval, align 4
  br label %return

if.end1199:                                       ; preds = %do.body1195
  br label %do.end1200

do.end1200:                                       ; preds = %if.end1199
  br label %do.body1201

do.body1201:                                      ; preds = %do.end1200
  %553 = load i32, i32* %nestlen, align 4
  %tobool1202 = icmp ne i32 %553, 0
  br i1 %tobool1202, label %if.then1203, label %if.end1222

if.then1203:                                      ; preds = %do.body1201
  br label %do.body1204

do.body1204:                                      ; preds = %if.then1203
  %554 = load i32, i32* %retind, align 4
  %555 = load i32, i32* %nestlen, align 4
  %add1205 = add nsw i32 %554, %555
  %556 = load i32, i32* %retsize, align 4
  %cmp1206 = icmp sge i32 %add1205, %556
  br i1 %cmp1206, label %if.then1208, label %if.end1217

if.then1208:                                      ; preds = %do.body1204
  br label %while.cond1209

while.cond1209:                                   ; preds = %while.body1213, %if.then1208
  %557 = load i32, i32* %retind, align 4
  %558 = load i32, i32* %nestlen, align 4
  %add1210 = add nsw i32 %557, %558
  %559 = load i32, i32* %retsize, align 4
  %cmp1211 = icmp sge i32 %add1210, %559
  br i1 %cmp1211, label %while.body1213, label %while.end1215

while.body1213:                                   ; preds = %while.cond1209
  %560 = load i32, i32* %retsize, align 4
  %add1214 = add nsw i32 %560, 64
  store i32 %add1214, i32* %retsize, align 4
  br label %while.cond1209

while.end1215:                                    ; preds = %while.cond1209
  %561 = load i8*, i8** %ret, align 4
  %562 = load i32, i32* %retsize, align 4
  %call1216 = call i8* @sh_xrealloc(i8* %561, i32 %562, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4188)
  store i8* %call1216, i8** %ret, align 4
  br label %if.end1217

if.end1217:                                       ; preds = %while.end1215, %do.body1204
  br label %do.end1218

do.end1218:                                       ; preds = %if.end1217
  %563 = load i8*, i8** %ret, align 4
  %564 = load i32, i32* %retind, align 4
  %add.ptr1219 = getelementptr inbounds i8, i8* %563, i32 %564
  %565 = load i8*, i8** %nestret, align 4
  %call1220 = call i8* @strcpy(i8* %add.ptr1219, i8* %565)
  %566 = load i32, i32* %nestlen, align 4
  %567 = load i32, i32* %retind, align 4
  %add1221 = add nsw i32 %567, %566
  store i32 %add1221, i32* %retind, align 4
  br label %if.end1222

if.end1222:                                       ; preds = %do.end1218, %do.body1201
  br label %do.end1223

do.end1223:                                       ; preds = %if.end1222
  br label %do.body1224

do.body1224:                                      ; preds = %do.end1223
  %568 = load i8*, i8** %nestret, align 4
  %tobool1225 = icmp ne i8* %568, null
  br i1 %tobool1225, label %if.then1226, label %if.end1227

if.then1226:                                      ; preds = %do.body1224
  %569 = load i8*, i8** %nestret, align 4
  call void @sh_xfree(i8* %569, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4190)
  br label %if.end1227

if.end1227:                                       ; preds = %if.then1226, %do.body1224
  br label %do.end1228

do.end1228:                                       ; preds = %if.end1227
  br label %if.end1229

if.end1229:                                       ; preds = %do.end1228, %cond.false1164, %cond.true1159, %lor.lhs.false1153, %if.else1144
  br label %if.end1230

if.end1230:                                       ; preds = %if.end1229, %do.end1143
  %570 = load i32, i32* %ch, align 4
  %cmp1231 = icmp eq i32 %570, 36
  br i1 %cmp1231, label %land.lhs.true1233, label %if.else1244

land.lhs.true1233:                                ; preds = %if.end1230
  %571 = load i32, i32* @shell_input_line_index, align 4
  %cmp1234 = icmp ugt i32 %571, 1
  br i1 %cmp1234, label %cond.true1236, label %cond.false1241

cond.true1236:                                    ; preds = %land.lhs.true1233
  %572 = load i8*, i8** @shell_input_line_property, align 4
  %573 = load i32, i32* @shell_input_line_index, align 4
  %sub1237 = sub i32 %573, 1
  %arrayidx1238 = getelementptr inbounds i8, i8* %572, i32 %sub1237
  %574 = load i8, i8* %arrayidx1238, align 1
  %conv1239 = sext i8 %574 to i32
  %tobool1240 = icmp ne i32 %conv1239, 0
  br i1 %tobool1240, label %if.then1242, label %if.else1244

cond.false1241:                                   ; preds = %land.lhs.true1233
  br i1 true, label %if.then1242, label %if.else1244

if.then1242:                                      ; preds = %cond.false1241, %cond.true1236
  %575 = load i32, i32* %tflags, align 4
  %or1243 = or i32 %575, 1
  store i32 %or1243, i32* %tflags, align 4
  br label %if.end1246

if.else1244:                                      ; preds = %cond.false1241, %cond.true1236, %if.end1230
  %576 = load i32, i32* %tflags, align 4
  %and1245 = and i32 %576, -2
  store i32 %and1245, i32* %tflags, align 4
  br label %if.end1246

if.end1246:                                       ; preds = %if.else1244, %if.then1242
  br label %while.cond

while.end1247:                                    ; preds = %if.then985, %while.cond
  br label %do.body1248

do.body1248:                                      ; preds = %while.end1247
  %577 = load i8*, i8** %heredelim, align 4
  %tobool1249 = icmp ne i8* %577, null
  br i1 %tobool1249, label %if.then1250, label %if.end1251

if.then1250:                                      ; preds = %do.body1248
  %578 = load i8*, i8** %heredelim, align 4
  call void @sh_xfree(i8* %578, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 4198)
  br label %if.end1251

if.end1251:                                       ; preds = %if.then1250, %do.body1248
  br label %do.end1252

do.end1252:                                       ; preds = %if.end1251
  %579 = load i8*, i8** %ret, align 4
  %580 = load i32, i32* %retind, align 4
  %arrayidx1253 = getelementptr inbounds i8, i8* %579, i32 %580
  store i8 0, i8* %arrayidx1253, align 1
  %581 = load i32*, i32** %lenp.addr, align 4
  %tobool1254 = icmp ne i32* %581, null
  br i1 %tobool1254, label %if.then1255, label %if.end1256

if.then1255:                                      ; preds = %do.end1252
  %582 = load i32, i32* %retind, align 4
  %583 = load i32*, i32** %lenp.addr, align 4
  store i32 %582, i32* %583, align 4
  br label %if.end1256

if.end1256:                                       ; preds = %if.then1255, %do.end1252
  %584 = load i8*, i8** %ret, align 4
  store i8* %584, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end1256, %if.then1198, %if.then1052, %do.end, %if.then
  %585 = load i8*, i8** %retval, align 4
  ret i8* %585
}

declare i32 @strncmp(i8*, i8*, i32) #1

declare i8* @string_quote_removal(i8*, i32) #1

; Function Attrs: nounwind readonly
declare i32 @islower(i32) #4

; Function Attrs: nounwind readonly
declare i32 @isblank(i32) #4

; Function Attrs: noinline nounwind
define internal i32 @token_is_ident(i8* %t, i32 %i) #0 {
entry:
  %t.addr = alloca i8*, align 4
  %i.addr = alloca i32, align 4
  %c = alloca i8, align 1
  %r = alloca i32, align 4
  store i8* %t, i8** %t.addr, align 4
  store i32 %i, i32* %i.addr, align 4
  %0 = load i8*, i8** %t.addr, align 4
  %1 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  store i8 %2, i8* %c, align 1
  %3 = load i8*, i8** %t.addr, align 4
  %4 = load i32, i32* %i.addr, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i32 %4
  store i8 0, i8* %arrayidx1, align 1
  %5 = load i8*, i8** %t.addr, align 4
  %call = call i32 @legal_identifier(i8* %5)
  store i32 %call, i32* %r, align 4
  %6 = load i8, i8* %c, align 1
  %7 = load i8*, i8** %t.addr, align 4
  %8 = load i32, i32* %i.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %7, i32 %8
  store i8 %6, i8* %arrayidx2, align 1
  %9 = load i32, i32* %r, align 4
  ret i32 %9
}

; Function Attrs: noinline nounwind
define internal i32 @token_is_assignment(i8* %t, i32 %i) #0 {
entry:
  %t.addr = alloca i8*, align 4
  %i.addr = alloca i32, align 4
  %c = alloca i8, align 1
  %c1 = alloca i8, align 1
  %r = alloca i32, align 4
  store i8* %t, i8** %t.addr, align 4
  store i32 %i, i32* %i.addr, align 4
  %0 = load i8*, i8** %t.addr, align 4
  %1 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  store i8 %2, i8* %c, align 1
  %3 = load i8*, i8** %t.addr, align 4
  %4 = load i32, i32* %i.addr, align 4
  %add = add nsw i32 %4, 1
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i32 %add
  %5 = load i8, i8* %arrayidx1, align 1
  store i8 %5, i8* %c1, align 1
  %6 = load i8*, i8** %t.addr, align 4
  %7 = load i32, i32* %i.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i32 %7
  store i8 61, i8* %arrayidx2, align 1
  %8 = load i8*, i8** %t.addr, align 4
  %9 = load i32, i32* %i.addr, align 4
  %add3 = add nsw i32 %9, 1
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i32 %add3
  store i8 0, i8* %arrayidx4, align 1
  %10 = load i8*, i8** %t.addr, align 4
  %11 = load i32, i32* @parser_state, align 4
  %and = and i32 %11, 8192
  %cmp = icmp ne i32 %and, 0
  %conv = zext i1 %cmp to i32
  %call = call i32 @assignment(i8* %10, i32 %conv)
  store i32 %call, i32* %r, align 4
  %12 = load i8, i8* %c, align 1
  %13 = load i8*, i8** %t.addr, align 4
  %14 = load i32, i32* %i.addr, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %13, i32 %14
  store i8 %12, i8* %arrayidx5, align 1
  %15 = load i8, i8* %c1, align 1
  %16 = load i8*, i8** %t.addr, align 4
  %17 = load i32, i32* %i.addr, align 4
  %add6 = add nsw i32 %17, 1
  %arrayidx7 = getelementptr inbounds i8, i8* %16, i32 %add6
  store i8 %15, i8* %arrayidx7, align 1
  %18 = load i32, i32* %r, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind
define internal i8* @parse_compound_assignment(i32* %retlenp) #0 {
entry:
  %retlenp.addr = alloca i32*, align 4
  %wl = alloca %struct.word_list*, align 4
  %rl = alloca %struct.word_list*, align 4
  %tok = alloca i32, align 4
  %orig_line_number = alloca i32, align 4
  %orig_token_size = alloca i32, align 4
  %orig_last_token = alloca i32, align 4
  %assignok = alloca i32, align 4
  %saved_token = alloca i8*, align 4
  %ret = alloca i8*, align 4
  store i32* %retlenp, i32** %retlenp.addr, align 4
  %0 = load i8*, i8** @token, align 4
  store i8* %0, i8** %saved_token, align 4
  %1 = load i32, i32* @token_buffer_size, align 4
  store i32 %1, i32* %orig_token_size, align 4
  %2 = load i32, i32* @line_number, align 4
  store i32 %2, i32* %orig_line_number, align 4
  %3 = load i32, i32* @last_read_token, align 4
  store i32 %3, i32* %orig_last_token, align 4
  store i32 280, i32* @last_read_token, align 4
  store i8* null, i8** @token, align 4
  store i32 0, i32* @token_buffer_size, align 4
  %4 = load i32, i32* @parser_state, align 4
  %and = and i32 %4, 16384
  store i32 %and, i32* %assignok, align 4
  store %struct.word_list* null, %struct.word_list** %wl, align 4
  %5 = load i32, i32* @parser_state, align 4
  %or = or i32 %5, 8192
  store i32 %or, i32* @parser_state, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end18, %if.end, %entry
  %call = call i32 @read_token(i32 0)
  store i32 %call, i32* %tok, align 4
  %cmp = icmp ne i32 %call, 41
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %tok, align 4
  %cmp1 = icmp eq i32 %6, 10
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %while.body
  %7 = load i32, i32* @interactive, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp2 = icmp eq i32 %8, 1
  br i1 %cmp2, label %if.then4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i32, i32* getelementptr inbounds (%struct.BASH_INPUT, %struct.BASH_INPUT* @bash_input, i32 0, i32 0), align 4
  %cmp3 = icmp eq i32 %9, 2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %lor.lhs.false, %land.lhs.true
  call void @prompt_again()
  br label %if.end

if.end:                                           ; preds = %if.then4, %lor.lhs.false, %if.then
  br label %while.cond

if.end5:                                          ; preds = %while.body
  %10 = load i32, i32* %tok, align 4
  %cmp6 = icmp ne i32 %10, 280
  br i1 %cmp6, label %land.lhs.true7, label %if.end18

land.lhs.true7:                                   ; preds = %if.end5
  %11 = load i32, i32* %tok, align 4
  %cmp8 = icmp ne i32 %11, 281
  br i1 %cmp8, label %if.then9, label %if.end18

if.then9:                                         ; preds = %land.lhs.true7
  %12 = load i32, i32* %tok, align 4
  store i32 %12, i32* @current_token, align 4
  %13 = load i32, i32* %tok, align 4
  %cmp10 = icmp eq i32 %13, 303
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then9
  %14 = load i32, i32* %orig_line_number, align 4
  %call12 = call i8* @libintl_gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.107, i32 0, i32 0))
  call void (i32, i8*, ...) @parser_error(i32 %14, i8* %call12)
  br label %if.end14

if.else:                                          ; preds = %if.then9
  %call13 = call i32 @yyerror(i8* null)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then11
  %15 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %tobool15 = icmp ne %struct.word_list* %15, null
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end14
  %16 = load %struct.word_list*, %struct.word_list** %wl, align 4
  call void @dispose_words(%struct.word_list* %16)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14
  store %struct.word_list* @parse_string_error, %struct.word_list** %wl, align 4
  br label %while.end

if.end18:                                         ; preds = %land.lhs.true7, %if.end5
  %17 = load %struct.word_desc*, %struct.word_desc** getelementptr inbounds (%union.YYSTYPE, %union.YYSTYPE* @yylval, i32 0, i32 0, i32 0), align 4
  %18 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %call19 = call %struct.word_list* @make_word_list(%struct.word_desc* %17, %struct.word_list* %18)
  store %struct.word_list* %call19, %struct.word_list** %wl, align 4
  br label %while.cond

while.end:                                        ; preds = %if.end17, %while.cond
  br label %do.body

do.body:                                          ; preds = %while.end
  %19 = load i8*, i8** @token, align 4
  %tobool20 = icmp ne i8* %19, null
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %do.body
  %20 = load i8*, i8** @token, align 4
  call void @sh_xfree(i8* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 6253)
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end22
  %21 = load i8*, i8** %saved_token, align 4
  store i8* %21, i8** @token, align 4
  %22 = load i32, i32* %orig_token_size, align 4
  store i32 %22, i32* @token_buffer_size, align 4
  %23 = load i32, i32* @parser_state, align 4
  %and23 = and i32 %23, -8193
  store i32 %and23, i32* @parser_state, align 4
  %24 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %cmp24 = icmp eq %struct.word_list* %24, @parse_string_error
  br i1 %cmp24, label %if.then25, label %if.end31

if.then25:                                        ; preds = %do.end
  store i32 1, i32* @last_command_exit_value, align 4
  store i32 10, i32* @last_read_token, align 4
  %25 = load i32, i32* @interactive_shell, align 4
  %cmp26 = icmp eq i32 %25, 0
  br i1 %cmp26, label %land.lhs.true27, label %if.else30

land.lhs.true27:                                  ; preds = %if.then25
  %26 = load i32, i32* @posixly_correct, align 4
  %tobool28 = icmp ne i32 %26, 0
  br i1 %tobool28, label %if.then29, label %if.else30

if.then29:                                        ; preds = %land.lhs.true27
  call void @jump_to_top_level(i32 1) #5
  unreachable

if.else30:                                        ; preds = %land.lhs.true27, %if.then25
  call void @jump_to_top_level(i32 2) #5
  unreachable

if.end31:                                         ; preds = %do.end
  %27 = load i32, i32* %orig_last_token, align 4
  store i32 %27, i32* @last_read_token, align 4
  %28 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %tobool32 = icmp ne %struct.word_list* %28, null
  br i1 %tobool32, label %if.then33, label %if.else39

if.then33:                                        ; preds = %if.end31
  %29 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %tobool34 = icmp ne %struct.word_list* %29, null
  br i1 %tobool34, label %land.lhs.true35, label %cond.false

land.lhs.true35:                                  ; preds = %if.then33
  %30 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %30, i32 0, i32 0
  %31 = load %struct.word_list*, %struct.word_list** %next, align 4
  %tobool36 = icmp ne %struct.word_list* %31, null
  br i1 %tobool36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true35
  %32 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %33 = bitcast %struct.word_list* %32 to %struct.g_list*
  %call37 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %33)
  %34 = bitcast %struct.g_list* %call37 to %struct.word_list*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true35, %if.then33
  %35 = load %struct.word_list*, %struct.word_list** %wl, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %34, %cond.true ], [ %35, %cond.false ]
  store %struct.word_list* %cond, %struct.word_list** %rl, align 4
  %36 = load %struct.word_list*, %struct.word_list** %rl, align 4
  %call38 = call i8* @string_list(%struct.word_list* %36)
  store i8* %call38, i8** %ret, align 4
  %37 = load %struct.word_list*, %struct.word_list** %rl, align 4
  call void @dispose_words(%struct.word_list* %37)
  br label %if.end40

if.else39:                                        ; preds = %if.end31
  store i8* null, i8** %ret, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %cond.end
  %38 = load i32*, i32** %retlenp.addr, align 4
  %tobool41 = icmp ne i32* %38, null
  br i1 %tobool41, label %if.then42, label %if.end51

if.then42:                                        ; preds = %if.end40
  %39 = load i8*, i8** %ret, align 4
  %tobool43 = icmp ne i8* %39, null
  br i1 %tobool43, label %land.lhs.true44, label %cond.false48

land.lhs.true44:                                  ; preds = %if.then42
  %40 = load i8*, i8** %ret, align 4
  %41 = load i8, i8* %40, align 1
  %conv = sext i8 %41 to i32
  %tobool45 = icmp ne i32 %conv, 0
  br i1 %tobool45, label %cond.true46, label %cond.false48

cond.true46:                                      ; preds = %land.lhs.true44
  %42 = load i8*, i8** %ret, align 4
  %call47 = call i32 @strlen(i8* %42)
  br label %cond.end49

cond.false48:                                     ; preds = %land.lhs.true44, %if.then42
  br label %cond.end49

cond.end49:                                       ; preds = %cond.false48, %cond.true46
  %cond50 = phi i32 [ %call47, %cond.true46 ], [ 0, %cond.false48 ]
  %43 = load i32*, i32** %retlenp.addr, align 4
  store i32 %cond50, i32* %43, align 4
  br label %if.end51

if.end51:                                         ; preds = %cond.end49, %if.end40
  %44 = load i32, i32* %assignok, align 4
  %tobool52 = icmp ne i32 %44, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end51
  %45 = load i32, i32* @parser_state, align 4
  %or54 = or i32 %45, 16384
  store i32 %or54, i32* @parser_state, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end51
  %46 = load i8*, i8** %ret, align 4
  ret i8* %46
}

declare i32 @legal_number(i8*, i64*) #1

; Function Attrs: noinline nounwind
define internal i32 @special_case_tokens(i8* %tokstr) #0 {
entry:
  %retval = alloca i32, align 4
  %tokstr.addr = alloca i8*, align 4
  store i8* %tokstr, i8** %tokstr.addr, align 4
  %0 = load i32, i32* @last_read_token, align 4
  %cmp = icmp eq i32 %0, 280
  br i1 %cmp, label %land.lhs.true, label %if.end21

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @token_before_that, align 4
  %cmp1 = icmp eq i32 %1, 264
  br i1 %cmp1, label %land.lhs.true5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i32, i32* @token_before_that, align 4
  %cmp2 = icmp eq i32 %2, 262
  br i1 %cmp2, label %land.lhs.true5, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* @token_before_that, align 4
  %cmp4 = icmp eq i32 %3, 265
  br i1 %cmp4, label %land.lhs.true5, label %if.end21

land.lhs.true5:                                   ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  %4 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp6 = icmp eq i32 %conv, 105
  br i1 %cmp6, label %land.lhs.true8, label %if.end21

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %6 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx9 = getelementptr inbounds i8, i8* %6, i32 1
  %7 = load i8, i8* %arrayidx9, align 1
  %conv10 = sext i8 %7 to i32
  %cmp11 = icmp eq i32 %conv10, 110
  br i1 %cmp11, label %land.lhs.true13, label %if.end21

land.lhs.true13:                                  ; preds = %land.lhs.true8
  %8 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %8, i32 2
  %9 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %9 to i32
  %cmp16 = icmp eq i32 %conv15, 0
  br i1 %cmp16, label %if.then, label %if.end21

if.then:                                          ; preds = %land.lhs.true13
  %10 = load i32, i32* @token_before_that, align 4
  %cmp18 = icmp eq i32 %10, 262
  br i1 %cmp18, label %if.then20, label %if.end

if.then20:                                        ; preds = %if.then
  %11 = load i32, i32* @parser_state, align 4
  %or = or i32 %11, 1
  store i32 %or, i32* @parser_state, align 4
  %12 = load i32, i32* @esacs_needed_count, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* @esacs_needed_count, align 4
  br label %if.end

if.end:                                           ; preds = %if.then20, %if.then
  store i32 275, i32* %retval, align 4
  br label %return

if.end21:                                         ; preds = %land.lhs.true13, %land.lhs.true8, %land.lhs.true5, %lor.lhs.false3, %entry
  %13 = load i32, i32* @last_read_token, align 4
  %cmp22 = icmp eq i32 %13, 280
  br i1 %cmp22, label %land.lhs.true24, label %if.end46

land.lhs.true24:                                  ; preds = %if.end21
  %14 = load i32, i32* @token_before_that, align 4
  %cmp25 = icmp eq i32 %14, 264
  br i1 %cmp25, label %land.lhs.true30, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %land.lhs.true24
  %15 = load i32, i32* @token_before_that, align 4
  %cmp28 = icmp eq i32 %15, 265
  br i1 %cmp28, label %land.lhs.true30, label %if.end46

land.lhs.true30:                                  ; preds = %lor.lhs.false27, %land.lhs.true24
  %16 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx31 = getelementptr inbounds i8, i8* %16, i32 0
  %17 = load i8, i8* %arrayidx31, align 1
  %conv32 = sext i8 %17 to i32
  %cmp33 = icmp eq i32 %conv32, 100
  br i1 %cmp33, label %land.lhs.true35, label %if.end46

land.lhs.true35:                                  ; preds = %land.lhs.true30
  %18 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %18, i32 1
  %19 = load i8, i8* %arrayidx36, align 1
  %conv37 = sext i8 %19 to i32
  %cmp38 = icmp eq i32 %conv37, 111
  br i1 %cmp38, label %land.lhs.true40, label %if.end46

land.lhs.true40:                                  ; preds = %land.lhs.true35
  %20 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx41 = getelementptr inbounds i8, i8* %20, i32 2
  %21 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %21 to i32
  %cmp43 = icmp eq i32 %conv42, 0
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %land.lhs.true40
  store i32 268, i32* %retval, align 4
  br label %return

if.end46:                                         ; preds = %land.lhs.true40, %land.lhs.true35, %land.lhs.true30, %lor.lhs.false27, %if.end21
  %22 = load i32, i32* @esacs_needed_count, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then47, label %if.end58

if.then47:                                        ; preds = %if.end46
  %23 = load i32, i32* @esacs_needed_count, align 4
  %dec = add nsw i32 %23, -1
  store i32 %dec, i32* @esacs_needed_count, align 4
  %24 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %24, i32 0
  %25 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %25 to i32
  %26 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), align 1
  %conv50 = sext i8 %26 to i32
  %cmp51 = icmp eq i32 %conv49, %conv50
  br i1 %cmp51, label %land.lhs.true53, label %if.end57

land.lhs.true53:                                  ; preds = %if.then47
  %27 = load i8*, i8** %tokstr.addr, align 4
  %call = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0))
  %cmp54 = icmp eq i32 %call, 0
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %land.lhs.true53
  %28 = load i32, i32* @parser_state, align 4
  %and = and i32 %28, -2
  store i32 %and, i32* @parser_state, align 4
  store i32 263, i32* %retval, align 4
  br label %return

if.end57:                                         ; preds = %land.lhs.true53, %if.then47
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end46
  %29 = load i32, i32* @parser_state, align 4
  %and59 = and i32 %29, 4
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %if.then61, label %if.end75

if.then61:                                        ; preds = %if.end58
  %30 = load i32, i32* @parser_state, align 4
  %and62 = and i32 %30, -5
  store i32 %and62, i32* @parser_state, align 4
  %31 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx63 = getelementptr inbounds i8, i8* %31, i32 0
  %32 = load i8, i8* %arrayidx63, align 1
  %conv64 = sext i8 %32 to i32
  %cmp65 = icmp eq i32 %conv64, 123
  br i1 %cmp65, label %land.lhs.true67, label %if.end74

land.lhs.true67:                                  ; preds = %if.then61
  %33 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx68 = getelementptr inbounds i8, i8* %33, i32 1
  %34 = load i8, i8* %arrayidx68, align 1
  %conv69 = sext i8 %34 to i32
  %cmp70 = icmp eq i32 %conv69, 0
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %land.lhs.true67
  %35 = load i32, i32* @open_brace_count, align 4
  %inc73 = add nsw i32 %35, 1
  store i32 %inc73, i32* @open_brace_count, align 4
  %36 = load i32, i32* @line_number, align 4
  store i32 %36, i32* @function_bstart, align 4
  store i32 123, i32* %retval, align 4
  br label %return

if.end74:                                         ; preds = %land.lhs.true67, %if.then61
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end58
  %37 = load i32, i32* @last_read_token, align 4
  %cmp76 = icmp eq i32 %37, 285
  br i1 %cmp76, label %land.lhs.true78, label %if.end92

land.lhs.true78:                                  ; preds = %if.end75
  %38 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx79 = getelementptr inbounds i8, i8* %38, i32 0
  %39 = load i8, i8* %arrayidx79, align 1
  %conv80 = sext i8 %39 to i32
  %cmp81 = icmp eq i32 %conv80, 100
  br i1 %cmp81, label %land.lhs.true83, label %if.end92

land.lhs.true83:                                  ; preds = %land.lhs.true78
  %40 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx84 = getelementptr inbounds i8, i8* %40, i32 1
  %41 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %41 to i32
  %cmp86 = icmp eq i32 %conv85, 111
  br i1 %cmp86, label %land.lhs.true88, label %if.end92

land.lhs.true88:                                  ; preds = %land.lhs.true83
  %42 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx89 = getelementptr inbounds i8, i8* %42, i32 2
  %43 = load i8, i8* %arrayidx89, align 1
  %tobool90 = icmp ne i8 %43, 0
  br i1 %tobool90, label %if.end92, label %if.then91

if.then91:                                        ; preds = %land.lhs.true88
  store i32 268, i32* %retval, align 4
  br label %return

if.end92:                                         ; preds = %land.lhs.true88, %land.lhs.true83, %land.lhs.true78, %if.end75
  %44 = load i32, i32* @last_read_token, align 4
  %cmp93 = icmp eq i32 %44, 285
  br i1 %cmp93, label %land.lhs.true95, label %if.end107

land.lhs.true95:                                  ; preds = %if.end92
  %45 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx96 = getelementptr inbounds i8, i8* %45, i32 0
  %46 = load i8, i8* %arrayidx96, align 1
  %conv97 = sext i8 %46 to i32
  %cmp98 = icmp eq i32 %conv97, 123
  br i1 %cmp98, label %land.lhs.true100, label %if.end107

land.lhs.true100:                                 ; preds = %land.lhs.true95
  %47 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx101 = getelementptr inbounds i8, i8* %47, i32 1
  %48 = load i8, i8* %arrayidx101, align 1
  %conv102 = sext i8 %48 to i32
  %cmp103 = icmp eq i32 %conv102, 0
  br i1 %cmp103, label %if.then105, label %if.end107

if.then105:                                       ; preds = %land.lhs.true100
  %49 = load i32, i32* @open_brace_count, align 4
  %inc106 = add nsw i32 %49, 1
  store i32 %inc106, i32* @open_brace_count, align 4
  store i32 123, i32* %retval, align 4
  br label %return

if.end107:                                        ; preds = %land.lhs.true100, %land.lhs.true95, %if.end92
  %50 = load i32, i32* @open_brace_count, align 4
  %tobool108 = icmp ne i32 %50, 0
  br i1 %tobool108, label %land.lhs.true109, label %if.end122

land.lhs.true109:                                 ; preds = %if.end107
  %51 = load i32, i32* @last_read_token, align 4
  %call110 = call i32 @reserved_word_acceptable(i32 %51)
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %land.lhs.true112, label %if.end122

land.lhs.true112:                                 ; preds = %land.lhs.true109
  %52 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx113 = getelementptr inbounds i8, i8* %52, i32 0
  %53 = load i8, i8* %arrayidx113, align 1
  %conv114 = sext i8 %53 to i32
  %cmp115 = icmp eq i32 %conv114, 125
  br i1 %cmp115, label %land.lhs.true117, label %if.end122

land.lhs.true117:                                 ; preds = %land.lhs.true112
  %54 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %54, i32 1
  %55 = load i8, i8* %arrayidx118, align 1
  %tobool119 = icmp ne i8 %55, 0
  br i1 %tobool119, label %if.end122, label %if.then120

if.then120:                                       ; preds = %land.lhs.true117
  %56 = load i32, i32* @open_brace_count, align 4
  %dec121 = add nsw i32 %56, -1
  store i32 %dec121, i32* @open_brace_count, align 4
  store i32 125, i32* %retval, align 4
  br label %return

if.end122:                                        ; preds = %land.lhs.true117, %land.lhs.true112, %land.lhs.true109, %if.end107
  %57 = load i32, i32* @last_read_token, align 4
  %cmp123 = icmp eq i32 %57, 277
  br i1 %cmp123, label %land.lhs.true125, label %if.end139

land.lhs.true125:                                 ; preds = %if.end122
  %58 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx126 = getelementptr inbounds i8, i8* %58, i32 0
  %59 = load i8, i8* %arrayidx126, align 1
  %conv127 = sext i8 %59 to i32
  %cmp128 = icmp eq i32 %conv127, 45
  br i1 %cmp128, label %land.lhs.true130, label %if.end139

land.lhs.true130:                                 ; preds = %land.lhs.true125
  %60 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx131 = getelementptr inbounds i8, i8* %60, i32 1
  %61 = load i8, i8* %arrayidx131, align 1
  %conv132 = sext i8 %61 to i32
  %cmp133 = icmp eq i32 %conv132, 112
  br i1 %cmp133, label %land.lhs.true135, label %if.end139

land.lhs.true135:                                 ; preds = %land.lhs.true130
  %62 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %62, i32 2
  %63 = load i8, i8* %arrayidx136, align 1
  %tobool137 = icmp ne i8 %63, 0
  br i1 %tobool137, label %if.end139, label %if.then138

if.then138:                                       ; preds = %land.lhs.true135
  store i32 278, i32* %retval, align 4
  br label %return

if.end139:                                        ; preds = %land.lhs.true135, %land.lhs.true130, %land.lhs.true125, %if.end122
  %64 = load i32, i32* @last_read_token, align 4
  %cmp140 = icmp eq i32 %64, 278
  br i1 %cmp140, label %land.lhs.true142, label %if.end156

land.lhs.true142:                                 ; preds = %if.end139
  %65 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx143 = getelementptr inbounds i8, i8* %65, i32 0
  %66 = load i8, i8* %arrayidx143, align 1
  %conv144 = sext i8 %66 to i32
  %cmp145 = icmp eq i32 %conv144, 45
  br i1 %cmp145, label %land.lhs.true147, label %if.end156

land.lhs.true147:                                 ; preds = %land.lhs.true142
  %67 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx148 = getelementptr inbounds i8, i8* %67, i32 1
  %68 = load i8, i8* %arrayidx148, align 1
  %conv149 = sext i8 %68 to i32
  %cmp150 = icmp eq i32 %conv149, 45
  br i1 %cmp150, label %land.lhs.true152, label %if.end156

land.lhs.true152:                                 ; preds = %land.lhs.true147
  %69 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx153 = getelementptr inbounds i8, i8* %69, i32 2
  %70 = load i8, i8* %arrayidx153, align 1
  %tobool154 = icmp ne i8 %70, 0
  br i1 %tobool154, label %if.end156, label %if.then155

if.then155:                                       ; preds = %land.lhs.true152
  store i32 279, i32* %retval, align 4
  br label %return

if.end156:                                        ; preds = %land.lhs.true152, %land.lhs.true147, %land.lhs.true142, %if.end139
  %71 = load i32, i32* @parser_state, align 4
  %and157 = and i32 %71, 512
  %tobool158 = icmp ne i32 %and157, 0
  br i1 %tobool158, label %land.lhs.true159, label %if.end175

land.lhs.true159:                                 ; preds = %if.end156
  %72 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx160 = getelementptr inbounds i8, i8* %72, i32 0
  %73 = load i8, i8* %arrayidx160, align 1
  %conv161 = sext i8 %73 to i32
  %cmp162 = icmp eq i32 %conv161, 93
  br i1 %cmp162, label %land.lhs.true164, label %if.end175

land.lhs.true164:                                 ; preds = %land.lhs.true159
  %74 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx165 = getelementptr inbounds i8, i8* %74, i32 1
  %75 = load i8, i8* %arrayidx165, align 1
  %conv166 = sext i8 %75 to i32
  %cmp167 = icmp eq i32 %conv166, 93
  br i1 %cmp167, label %land.lhs.true169, label %if.end175

land.lhs.true169:                                 ; preds = %land.lhs.true164
  %76 = load i8*, i8** %tokstr.addr, align 4
  %arrayidx170 = getelementptr inbounds i8, i8* %76, i32 2
  %77 = load i8, i8* %arrayidx170, align 1
  %conv171 = sext i8 %77 to i32
  %cmp172 = icmp eq i32 %conv171, 0
  br i1 %cmp172, label %if.then174, label %if.end175

if.then174:                                       ; preds = %land.lhs.true169
  store i32 273, i32* %retval, align 4
  br label %return

if.end175:                                        ; preds = %land.lhs.true169, %land.lhs.true164, %land.lhs.true159, %if.end156
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end175, %if.then174, %if.then155, %if.then138, %if.then120, %if.then105, %if.then91, %if.then72, %if.then56, %if.then45, %if.end
  %78 = load i32, i32* %retval, align 4
  ret i32 %78
}

; Function Attrs: noinline nounwind
define internal i32 @time_command_acceptable() #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = load i32, i32* @posixly_correct, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @shell_compatibility_level, align 4
  %cmp = icmp sgt i32 %1, 41
  br i1 %cmp, label %if.then, label %if.end13

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @shell_input_line_index, align 4
  store i32 %2, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* @shell_input_line_len, align 4
  %cmp1 = icmp ult i32 %3, %4
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %5 = load i8*, i8** @shell_input_line, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %7 to i32
  %cmp2 = icmp eq i32 %conv, 32
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %8 = load i8*, i8** @shell_input_line, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx4, align 1
  %conv5 = sext i8 %10 to i32
  %cmp6 = icmp eq i32 %conv5, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %cmp6, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %11, %lor.end ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %14 = load i8*, i8** @shell_input_line, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %16 to i32
  %cmp10 = icmp eq i32 %conv9, 45
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %while.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %while.end
  br label %if.end13

if.end13:                                         ; preds = %if.end, %land.lhs.true, %entry
  %17 = load i32, i32* @last_read_token, align 4
  switch i32 %17, label %sw.default [
    i32 0, label %sw.bb
    i32 59, label %sw.bb
    i32 10, label %sw.bb
    i32 287, label %sw.bb18
    i32 288, label %sw.bb18
    i32 38, label %sw.bb18
    i32 266, label %sw.bb18
    i32 268, label %sw.bb18
    i32 267, label %sw.bb18
    i32 257, label %sw.bb18
    i32 258, label %sw.bb18
    i32 260, label %sw.bb18
    i32 259, label %sw.bb18
    i32 123, label %sw.bb18
    i32 40, label %sw.bb18
    i32 41, label %sw.bb18
    i32 276, label %sw.bb18
    i32 277, label %sw.bb18
    i32 278, label %sw.bb18
    i32 279, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.end13, %if.end13, %if.end13
  %18 = load i32, i32* @token_before_that, align 4
  %cmp14 = icmp eq i32 %18, 124
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %sw.bb
  store i32 0, i32* %retval, align 4
  br label %return

if.end17:                                         ; preds = %sw.bb
  br label %sw.bb18

sw.bb18:                                          ; preds = %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end13, %if.end17
  store i32 1, i32* %retval, align 4
  br label %return

sw.default:                                       ; preds = %if.end13
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.default, %sw.bb18, %if.then16, %if.then12
  %19 = load i32, i32* %retval, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind
define internal i32 @alias_expand_token(i8* %tokstr) #0 {
entry:
  %retval = alloca i32, align 4
  %tokstr.addr = alloca i8*, align 4
  %expanded = alloca i8*, align 4
  %ap = alloca %struct.alias*, align 4
  store i8* %tokstr, i8** %tokstr.addr, align 4
  %0 = load i32, i32* @parser_state, align 4
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true33, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @last_read_token, align 4
  %cmp = icmp eq i32 %1, 281
  br i1 %cmp, label %land.lhs.true33, label %lor.lhs.false1

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* @parser_state, align 4
  %and2 = and i32 %2, 524288
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false25

land.lhs.true:                                    ; preds = %lor.lhs.false1
  %3 = load i32, i32* @last_read_token, align 4
  %cmp4 = icmp eq i32 %3, 60
  br i1 %cmp4, label %lor.end, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* @last_read_token, align 4
  %cmp6 = icmp eq i32 %4, 62
  br i1 %cmp6, label %lor.end, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %5 = load i32, i32* @last_read_token, align 4
  %cmp8 = icmp eq i32 %5, 289
  br i1 %cmp8, label %lor.end, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %6 = load i32, i32* @last_read_token, align 4
  %cmp10 = icmp eq i32 %6, 301
  br i1 %cmp10, label %lor.end, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %7 = load i32, i32* @last_read_token, align 4
  %cmp12 = icmp eq i32 %7, 300
  br i1 %cmp12, label %lor.end, label %lor.lhs.false13

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %8 = load i32, i32* @last_read_token, align 4
  %cmp14 = icmp eq i32 %8, 297
  br i1 %cmp14, label %lor.end, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %9 = load i32, i32* @last_read_token, align 4
  %cmp16 = icmp eq i32 %9, 290
  br i1 %cmp16, label %lor.end, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %10 = load i32, i32* @last_read_token, align 4
  %cmp18 = icmp eq i32 %10, 292
  br i1 %cmp18, label %lor.end, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %lor.lhs.false17
  %11 = load i32, i32* @last_read_token, align 4
  %cmp20 = icmp eq i32 %11, 291
  br i1 %cmp20, label %lor.end, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false19
  %12 = load i32, i32* @last_read_token, align 4
  %cmp22 = icmp eq i32 %12, 293
  br i1 %cmp22, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false21
  %13 = load i32, i32* @last_read_token, align 4
  %cmp23 = icmp eq i32 %13, 298
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false21, %lor.lhs.false19, %lor.lhs.false17, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false5, %land.lhs.true
  %14 = phi i1 [ true, %lor.lhs.false21 ], [ true, %lor.lhs.false19 ], [ true, %lor.lhs.false17 ], [ true, %lor.lhs.false15 ], [ true, %lor.lhs.false13 ], [ true, %lor.lhs.false11 ], [ true, %lor.lhs.false9 ], [ true, %lor.lhs.false7 ], [ true, %lor.lhs.false5 ], [ true, %land.lhs.true ], [ %cmp23, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32
  %cmp24 = icmp eq i32 %lor.ext, 0
  br i1 %cmp24, label %land.lhs.true33, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %lor.end, %lor.lhs.false1
  %15 = load i32, i32* @last_read_token, align 4
  %cmp26 = icmp ne i32 %15, 294
  br i1 %cmp26, label %land.lhs.true27, label %if.end49

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %16 = load i32, i32* @last_read_token, align 4
  %cmp28 = icmp ne i32 %16, 295
  br i1 %cmp28, label %land.lhs.true29, label %if.end49

land.lhs.true29:                                  ; preds = %land.lhs.true27
  %17 = load i32, i32* @last_read_token, align 4
  %cmp30 = icmp ne i32 %17, 296
  br i1 %cmp30, label %land.lhs.true31, label %if.end49

land.lhs.true31:                                  ; preds = %land.lhs.true29
  %18 = load i32, i32* @last_read_token, align 4
  %call = call i32 @reserved_word_acceptable(i32 %18)
  %tobool32 = icmp ne i32 %call, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.end49

land.lhs.true33:                                  ; preds = %land.lhs.true31, %lor.end, %lor.lhs.false, %entry
  %19 = load i32, i32* @parser_state, align 4
  %and34 = and i32 %19, 1
  %cmp35 = icmp eq i32 %and34, 0
  br i1 %cmp35, label %if.then, label %if.end49

if.then:                                          ; preds = %land.lhs.true33
  %20 = load i8*, i8** %tokstr.addr, align 4
  %call36 = call %struct.alias* @find_alias(i8* %20)
  store %struct.alias* %call36, %struct.alias** %ap, align 4
  %21 = load %struct.alias*, %struct.alias** %ap, align 4
  %tobool37 = icmp ne %struct.alias* %21, null
  br i1 %tobool37, label %land.lhs.true38, label %if.end

land.lhs.true38:                                  ; preds = %if.then
  %22 = load %struct.alias*, %struct.alias** %ap, align 4
  %flags = getelementptr inbounds %struct.alias, %struct.alias* %22, i32 0, i32 2
  %23 = load i8, i8* %flags, align 4
  %conv = sext i8 %23 to i32
  %and39 = and i32 %conv, 2
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %if.then41, label %if.end

if.then41:                                        ; preds = %land.lhs.true38
  store i32 -100, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true38, %if.then
  %24 = load %struct.alias*, %struct.alias** %ap, align 4
  %tobool42 = icmp ne %struct.alias* %24, null
  br i1 %tobool42, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %25 = load %struct.alias*, %struct.alias** %ap, align 4
  %value = getelementptr inbounds %struct.alias, %struct.alias* %25, i32 0, i32 1
  %26 = load i8*, i8** %value, align 4
  %call43 = call i8* @mk_alexpansion(i8* %26)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call43, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %expanded, align 4
  %27 = load i8*, i8** %expanded, align 4
  %tobool44 = icmp ne i8* %27, null
  br i1 %tobool44, label %if.then45, label %if.else

if.then45:                                        ; preds = %cond.end
  %28 = load i8*, i8** %expanded, align 4
  %29 = load %struct.alias*, %struct.alias** %ap, align 4
  %flags46 = getelementptr inbounds %struct.alias, %struct.alias* %29, i32 0, i32 2
  %30 = load i8, i8* %flags46, align 4
  %conv47 = sext i8 %30 to i32
  %and48 = and i32 %conv47, 1
  %31 = load %struct.alias*, %struct.alias** %ap, align 4
  call void @push_string(i8* %28, i32 %and48, %struct.alias* %31)
  store i32 -99, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %cond.end
  store i32 -100, i32* %retval, align 4
  br label %return

if.end49:                                         ; preds = %land.lhs.true33, %land.lhs.true31, %land.lhs.true29, %land.lhs.true27, %lor.lhs.false25
  store i32 -100, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end49, %if.else, %if.then45, %if.then41
  %32 = load i32, i32* %retval, align 4
  ret i32 %32
}

declare i32 @assignment(i8*, i32) #1

declare %struct.builtin* @builtin_address_internal(i8*, i32) #1

declare i32 @legal_identifier(i8*) #1

declare i32 @valid_array_reference(i8*, i32) #1

declare %struct.alias* @find_alias(i8*) #1

; Function Attrs: noinline nounwind
define internal i8* @mk_alexpansion(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 4
  %l = alloca i32, align 4
  %r = alloca i8*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i32 @strlen(i8* %0)
  store i32 %call, i32* %l, align 4
  %1 = load i32, i32* %l, align 4
  %add = add nsw i32 %1, 2
  %call1 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 2809)
  store i8* %call1, i8** %r, align 4
  %2 = load i8*, i8** %r, align 4
  %3 = load i8*, i8** %s.addr, align 4
  %call2 = call i8* @strcpy(i8* %2, i8* %3)
  %4 = load i8*, i8** %r, align 4
  %5 = load i32, i32* %l, align 4
  %sub = sub nsw i32 %5, 1
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %sub
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %cmp = icmp ne i32 %conv, 32
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %r, align 4
  %8 = load i32, i32* %l, align 4
  %sub4 = sub nsw i32 %8, 1
  %arrayidx5 = getelementptr inbounds i8, i8* %7, i32 %sub4
  %9 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %9 to i32
  %cmp7 = icmp ne i32 %conv6, 10
  br i1 %cmp7, label %land.lhs.true9, label %if.end

land.lhs.true9:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %r, align 4
  %11 = load i32, i32* %l, align 4
  %sub10 = sub nsw i32 %11, 1
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i32 %sub10
  %12 = load i8, i8* %arrayidx11, align 1
  %idxprom = zext i8 %12 to i32
  %arrayidx12 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %13 = load i32, i32* %arrayidx12, align 4
  %and = and i32 %13, 1
  %cmp13 = icmp eq i32 %and, 0
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true9
  %14 = load i8*, i8** %r, align 4
  %15 = load i32, i32* %l, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %l, align 4
  %arrayidx15 = getelementptr inbounds i8, i8* %14, i32 %15
  store i8 32, i8* %arrayidx15, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true9, %land.lhs.true, %entry
  %16 = load i8*, i8** %r, align 4
  %17 = load i32, i32* %l, align 4
  %arrayidx16 = getelementptr inbounds i8, i8* %16, i32 %17
  store i8 0, i8* %arrayidx16, align 1
  %18 = load i8*, i8** %r, align 4
  ret i8* %18
}

declare i32 @mbrlen(i8*, i32, %struct.__mbstate_t*) #1

declare i8* @realloc(i8*, i32) #1

declare i32 @time_to_check_mail() #1

declare void @check_mail() #1

declare void @reset_mail_timer() #1

declare i32 @exit_builtin(%struct.word_list*) #1

; Function Attrs: noreturn
declare void @exit_shell(i32) #3

attributes #0 = { noinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn }
attributes #6 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0  (emscripten 1.37.22 : 1.37.22)"}
