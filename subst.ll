; ModuleID = 'subst.c'
source_filename = "subst.c"
target datalayout = "e-p:32:32-i64:64-v128:32:128-n32-S128"
target triple = "asmjs-unknown-emscripten"

%struct.word_list = type { %struct.word_list*, %struct.word_desc* }
%struct.word_desc = type { i8*, i32 }
%struct.variable = type { i8*, i8*, i8*, %struct.variable* (%struct.variable*)*, %struct.variable* (%struct.variable*, i8*, i64, i8*)*, i32, i32 }
%struct._IO_FILE = type opaque
%struct.__jmp_buf_tag = type { [6 x i32], i32, [32 x i32] }
%struct.fd_bitmap = type { i32, i8* }
%struct.__mbstate_t = type { i32, i32 }
%struct.g_list = type { %struct.g_list* }
%struct.array = type { i32, i64, i32, %struct.array_element* }
%struct.array_element = type { i64, i8*, %struct.array_element*, %struct.array_element* }
%struct.hash_table = type { %struct.bucket_contents**, i32, i32 }
%struct.bucket_contents = type { %struct.bucket_contents*, i8*, i8*, i32, i32 }

@last_command_subst_pid = global i32 -1, align 4
@current_command_subst_pid = global i32 -1, align 4
@inherit_errexit = global i32 0, align 4
@subst_assign_varlist = global %struct.word_list* null, align 4
@no_longjmp_on_fatal_error = global i32 0, align 4
@.str = private unnamed_addr constant [8 x i8] c"subst.c\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"$(\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"$[\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@locale_mb_cur_max = external global i32, align 4
@.str.7 = private unnamed_addr constant [3 x i8] c"<(\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c">(\00", align 1
@extended_glob = external global i32, align 4
@.str.9 = private unnamed_addr constant [6 x i8] c"?*+!@\00", align 1
@posixly_correct = external global i32, align 4
@ifs_value = common global i8* null, align 4
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [2 x i8] c" \00", align 1
@ifs_firstc_len = common global i32 0, align 4
@ifs_firstc = common global [16 x i8] zeroinitializer, align 1
@ifs_var = common global %struct.variable* null, align 4
@ifs_cmap = common global [256 x i8] zeroinitializer, align 1
@dollar_vars = external global [0 x i8*], align 4
@rest_of_args = external global %struct.word_list*, align 4
@expand_no_split_dollar_star = internal global i32 0, align 4
@expand_word_error = internal global %struct.word_list zeroinitializer, align 4
@expand_word_fatal = internal global %struct.word_list zeroinitializer, align 4
@dev_fd_list = internal global i8* null, align 4
@nfds = internal global i32 0, align 4
@totfds = internal global i32 0, align 4
@sh_syntaxtab = external global [0 x i32], align 4
@wordexp_only = external global i32, align 4
@read_but_dont_execute = external global i32, align 4
@last_command_exit_value = external global i32, align 4
@garglist = internal global %struct.word_list* null, align 4
@interactive = external global i32, align 4
@sourcelevel = external global i32, align 4
@.str.12 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"cannot make pipe for command substitution\00", align 1
@last_made_pid = external global i32, align 4
@last_asynchronous_pid = external global i32, align 4
@subshell_environment = external global i32, align 4
@interrupt_state = external global i32, align 4
@terminating_signal = external global i32, align 4
@.str.14 = private unnamed_addr constant [43 x i8] c"cannot make child for command substitution\00", align 1
@stdout = external constant %struct._IO_FILE*, align 4
@.str.15 = private unnamed_addr constant [50 x i8] c"command_substitute: cannot duplicate pipe as fd 1\00", align 1
@stdin = external constant %struct._IO_FILE*, align 4
@stderr = external constant %struct._IO_FILE*, align 4
@builtin_ignoring_errexit = external global i32, align 4
@expanding_redir = external global i32, align 4
@startup_state = external global i32, align 4
@top_level = external global [1 x %struct.__jmp_buf_tag], align 4
@return_catch_flag = external global i32, align 4
@return_catch = external global [1 x %struct.__jmp_buf_tag], align 4
@return_catch_value = external global i32, align 4
@subshell_level = external global i32, align 4
@.str.16 = private unnamed_addr constant [21 x i8] c"command substitution\00", align 1
@cached_quoted_dollar_at = internal global %struct.word_list* null, align 4
@.str.17 = private unnamed_addr constant [4 x i8] c" \09\0A\00", align 1
@ifs_is_set = common global i32 0, align 4
@ifs_is_null = common global i32 0, align 4
@assigning_in_environment = common global i32 0, align 4
@allow_null_glob_expansion = common global i32 0, align 4
@fail_glob_expansion = common global i32 0, align 4
@.str.18 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"bad substitution: no closing `%s' in %s\00", align 1
@extract_string_error = internal global i8 0, align 1
@parse_and_execute_level = external global i32, align 4
@is_basic_table = external constant [0 x i32], align 4
@shell_compatibility_level = external global i32, align 4
@.str.20 = private unnamed_addr constant [12 x i8] c"#%^,~:-=?+/\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@echo_command_at_execute = external global i32, align 4
@.str.22 = private unnamed_addr constant [39 x i8] c"%s: cannot assign list to array member\00", align 1
@variable_context = external global i32, align 4
@.str.23 = private unnamed_addr constant [49 x i8] c"command substitution: ignored null byte in input\00", align 1
@match_ignore_case = external global i32, align 4
@.str.24 = private unnamed_addr constant [5 x i8] c"\22$@\22\00", align 1
@expand_wdesc_error = internal global %struct.word_desc zeroinitializer, align 4
@expand_wdesc_fatal = internal global %struct.word_desc zeroinitializer, align 4
@extract_string_fatal = internal global i8 0, align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"bad substitution: no closing \22`\22 in %s\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"cannot make pipe for process substitution\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"cannot make child for process substitution\00", align 1
@.str.28 = private unnamed_addr constant [40 x i8] c"cannot duplicate named pipe %s as fd %d\00", align 1
@current_fds_to_close = external global %struct.fd_bitmap*, align 4
@.str.29 = private unnamed_addr constant [21 x i8] c"process substitution\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"/dev/fd/\00", align 1
@unbound_vars_is_error = external global i32, align 4
@interactive_shell = external global i32, align 4
@dollar_dollar_pid = external global i32, align 4
@this_command_name = external global i8*, align 4
@.str.31 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.32 = private unnamed_addr constant [45 x i8] c"%s: invalid variable name for name reference\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"#%^,~:-=?+/@}\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"#%:-=?+/@}\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"%:=+/\00", align 1
@expand_param_error = internal global i8 0, align 1
@expand_param_fatal = internal global i8 0, align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"%s: bad substitution\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"??\00", align 1
@.str.38 = private unnamed_addr constant [31 x i8] c"$%s: cannot assign in this way\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"%s: substring expression < 0\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"declare -%s %s=%s\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"%s=%s\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"set -- \00", align 1
@.str.44 = private unnamed_addr constant [31 x i8] c"%s: invalid indirect expansion\00", align 1
@.str.45 = private unnamed_addr constant [26 x i8] c"%s: invalid variable name\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"%s: parameter null or not set\00", align 1
@tempenv_assign_error = external global i32, align 4
@brace_expansion = external global i32, align 4
@disallow_filename_globbing = external global i32, align 4
@place_keywords_in_env = external global i32, align 4
@glob_error_return = external global i8*, align 4
@.str.48 = private unnamed_addr constant [13 x i8] c"no match: %s\00", align 1

; Function Attrs: noinline nounwind
define i8* @sub_append_string(i8* %source, i8* %target, i32* %indx, i32* %size) #0 {
entry:
  %source.addr = alloca i8*, align 4
  %target.addr = alloca i8*, align 4
  %indx.addr = alloca i32*, align 4
  %size.addr = alloca i32*, align 4
  %n = alloca i32, align 4
  %srclen = alloca i32, align 4
  store i8* %source, i8** %source.addr, align 4
  store i8* %target, i8** %target.addr, align 4
  store i32* %indx, i32** %indx.addr, align 4
  store i32* %size, i32** %size.addr, align 4
  %0 = load i8*, i8** %source.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end24

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %source.addr, align 4
  %tobool1 = icmp ne i8* %1, null
  br i1 %tobool1, label %land.lhs.true, label %cond.false14

land.lhs.true:                                    ; preds = %if.then
  %2 = load i8*, i8** %source.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %tobool2 = icmp ne i32 %conv, 0
  br i1 %tobool2, label %cond.true, label %cond.false14

cond.true:                                        ; preds = %land.lhs.true
  %4 = load i8*, i8** %source.addr, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %5 to i32
  %tobool5 = icmp ne i32 %conv4, 0
  br i1 %tobool5, label %cond.true6, label %cond.false11

cond.true6:                                       ; preds = %cond.true
  %6 = load i8*, i8** %source.addr, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i32 2
  %7 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %7 to i32
  %tobool9 = icmp ne i32 %conv8, 0
  br i1 %tobool9, label %cond.true10, label %cond.false

cond.true10:                                      ; preds = %cond.true6
  %8 = load i8*, i8** %source.addr, align 4
  %call = call i32 @strlen(i8* %8)
  br label %cond.end

cond.false:                                       ; preds = %cond.true6
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi i32 [ %call, %cond.true10 ], [ 2, %cond.false ]
  br label %cond.end12

cond.false11:                                     ; preds = %cond.true
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.end
  %cond13 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false11 ]
  br label %cond.end15

cond.false14:                                     ; preds = %land.lhs.true, %if.then
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.end12
  %cond16 = phi i32 [ %cond13, %cond.end12 ], [ 0, %cond.false14 ]
  store i32 %cond16, i32* %srclen, align 4
  %9 = load i32, i32* %srclen, align 4
  %10 = load i32*, i32** %size.addr, align 4
  %11 = load i32, i32* %10, align 4
  %12 = load i32*, i32** %indx.addr, align 4
  %13 = load i32, i32* %12, align 4
  %sub = sub i32 %11, %13
  %cmp = icmp uge i32 %9, %sub
  br i1 %cmp, label %if.then18, label %if.end

if.then18:                                        ; preds = %cond.end15
  %14 = load i32, i32* %srclen, align 4
  %15 = load i32*, i32** %indx.addr, align 4
  %16 = load i32, i32* %15, align 4
  %add = add i32 %14, %16
  store i32 %add, i32* %n, align 4
  %17 = load i32, i32* %n, align 4
  %add19 = add nsw i32 %17, 128
  %18 = load i32, i32* %n, align 4
  %rem = srem i32 %18, 128
  %sub20 = sub nsw i32 %add19, %rem
  store i32 %sub20, i32* %n, align 4
  %19 = load i8*, i8** %target.addr, align 4
  %20 = load i32, i32* %n, align 4
  %21 = load i32*, i32** %size.addr, align 4
  store i32 %20, i32* %21, align 4
  %call21 = call i8* @sh_xrealloc(i8* %19, i32 %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 736)
  store i8* %call21, i8** %target.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then18, %cond.end15
  %22 = load i8*, i8** %target.addr, align 4
  %23 = load i32*, i32** %indx.addr, align 4
  %24 = load i32, i32* %23, align 4
  %add.ptr = getelementptr inbounds i8, i8* %22, i32 %24
  %25 = load i8*, i8** %source.addr, align 4
  %26 = load i32, i32* %srclen, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %add.ptr, i8* %25, i32 %26, i32 1, i1 false)
  %27 = load i32, i32* %srclen, align 4
  %28 = load i32*, i32** %indx.addr, align 4
  %29 = load i32, i32* %28, align 4
  %add22 = add i32 %29, %27
  store i32 %add22, i32* %28, align 4
  %30 = load i8*, i8** %target.addr, align 4
  %31 = load i32*, i32** %indx.addr, align 4
  %32 = load i32, i32* %31, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %30, i32 %32
  store i8 0, i8* %arrayidx23, align 1
  %33 = load i8*, i8** %source.addr, align 4
  call void @sh_xfree(i8* %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 743)
  br label %if.end24

if.end24:                                         ; preds = %if.end, %entry
  %34 = load i8*, i8** %target.addr, align 4
  ret i8* %34
}

declare i32 @strlen(i8*) #1

declare i8* @sh_xrealloc(i8*, i32, i8*, i32) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture writeonly, i8* nocapture readonly, i32, i32, i1) #2

declare void @sh_xfree(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define i8* @extract_command_subst(i8* %string, i32* %sindex, i32 %xflags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %xflags.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i32 %xflags, i32* %xflags.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i32*, i32** %sindex.addr, align 4
  %2 = load i32, i32* %1, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 %2
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 40
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %xflags.addr, align 4
  %and = and i32 %4, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i32*, i32** %sindex.addr, align 4
  %7 = load i32, i32* %xflags.addr, align 4
  %or = or i32 %7, 8
  %call = call i8* @extract_delimited_string(i8* %5, i32* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i32 %or)
  store i8* %call, i8** %retval, align 4
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  %tobool2 = icmp ne i32 %8, 0
  %cond = select i1 %tobool2, i32 64, i32 0
  %9 = load i32, i32* %xflags.addr, align 4
  %or3 = or i32 %9, %cond
  store i32 %or3, i32* %xflags.addr, align 4
  %10 = load i8*, i8** %string.addr, align 4
  %11 = load i8*, i8** %string.addr, align 4
  %12 = load i32*, i32** %sindex.addr, align 4
  %13 = load i32, i32* %12, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 %13
  %14 = load i32*, i32** %sindex.addr, align 4
  %15 = load i32, i32* %xflags.addr, align 4
  %call4 = call i8* @xparse_dolparen(i8* %10, i8* %add.ptr, i32* %14, i32 %15)
  store i8* %call4, i8** %ret, align 4
  %16 = load i8*, i8** %ret, align 4
  store i8* %16, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %17 = load i8*, i8** %retval, align 4
  ret i8* %17
}

; Function Attrs: noinline nounwind
define internal i8* @extract_delimited_string(i8* %string, i32* %sindex, i8* %opener, i8* %alt_opener, i8* %closer, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %opener.addr = alloca i8*, align 4
  %alt_opener.addr = alloca i8*, align 4
  %closer.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %si = alloca i32, align 4
  %slen = alloca i32, align 4
  %t = alloca i8*, align 4
  %result = alloca i8*, align 4
  %pass_character = alloca i32, align 4
  %nesting_level = alloca i32, align 4
  %in_comment = alloca i32, align 4
  %len_closer = alloca i32, align 4
  %len_opener = alloca i32, align 4
  %len_alt_opener = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak115 = alloca %struct.__mbstate_t, align 4
  %mblength116 = alloca i32, align 4
  %_f117 = alloca i32, align 4
  %state_bak172 = alloca %struct.__mbstate_t, align 4
  %mblength173 = alloca i32, align 4
  %_f174 = alloca i32, align 4
  %state_bak330 = alloca %struct.__mbstate_t, align 4
  %mblength331 = alloca i32, align 4
  %_f332 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i8* %opener, i8** %opener.addr, align 4
  store i8* %alt_opener, i8** %alt_opener.addr, align 4
  store i8* %closer, i8** %closer.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32*, i32** %sindex.addr, align 4
  %3 = load i32, i32* %2, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %3
  %call = call i32 @strlen(i8* %add.ptr)
  %4 = load i32*, i32** %sindex.addr, align 4
  %5 = load i32, i32* %4, align 4
  %add = add i32 %call, %5
  store i32 %add, i32* %slen, align 4
  %6 = load i8*, i8** %opener.addr, align 4
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %land.lhs.true, label %cond.false14

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %opener.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %7, i32 0
  %8 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %8 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %cond.true, label %cond.false14

cond.true:                                        ; preds = %land.lhs.true
  %9 = load i8*, i8** %opener.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %9, i32 1
  %10 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %10 to i32
  %tobool4 = icmp ne i32 %conv3, 0
  br i1 %tobool4, label %cond.true5, label %cond.false11

cond.true5:                                       ; preds = %cond.true
  %11 = load i8*, i8** %opener.addr, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i32 2
  %12 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %12 to i32
  %tobool8 = icmp ne i32 %conv7, 0
  br i1 %tobool8, label %cond.true9, label %cond.false

cond.true9:                                       ; preds = %cond.true5
  %13 = load i8*, i8** %opener.addr, align 4
  %call10 = call i32 @strlen(i8* %13)
  br label %cond.end

cond.false:                                       ; preds = %cond.true5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true9
  %cond = phi i32 [ %call10, %cond.true9 ], [ 2, %cond.false ]
  br label %cond.end12

cond.false11:                                     ; preds = %cond.true
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.end
  %cond13 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false11 ]
  br label %cond.end15

cond.false14:                                     ; preds = %land.lhs.true, %entry
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.end12
  %cond16 = phi i32 [ %cond13, %cond.end12 ], [ 0, %cond.false14 ]
  store i32 %cond16, i32* %len_opener, align 4
  %14 = load i8*, i8** %alt_opener.addr, align 4
  %tobool17 = icmp ne i8* %14, null
  br i1 %tobool17, label %land.lhs.true18, label %cond.false38

land.lhs.true18:                                  ; preds = %cond.end15
  %15 = load i8*, i8** %alt_opener.addr, align 4
  %arrayidx19 = getelementptr inbounds i8, i8* %15, i32 0
  %16 = load i8, i8* %arrayidx19, align 1
  %conv20 = sext i8 %16 to i32
  %tobool21 = icmp ne i32 %conv20, 0
  br i1 %tobool21, label %cond.true22, label %cond.false38

cond.true22:                                      ; preds = %land.lhs.true18
  %17 = load i8*, i8** %alt_opener.addr, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %17, i32 1
  %18 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %18 to i32
  %tobool25 = icmp ne i32 %conv24, 0
  br i1 %tobool25, label %cond.true26, label %cond.false35

cond.true26:                                      ; preds = %cond.true22
  %19 = load i8*, i8** %alt_opener.addr, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i32 2
  %20 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %20 to i32
  %tobool29 = icmp ne i32 %conv28, 0
  br i1 %tobool29, label %cond.true30, label %cond.false32

cond.true30:                                      ; preds = %cond.true26
  %21 = load i8*, i8** %alt_opener.addr, align 4
  %call31 = call i32 @strlen(i8* %21)
  br label %cond.end33

cond.false32:                                     ; preds = %cond.true26
  br label %cond.end33

cond.end33:                                       ; preds = %cond.false32, %cond.true30
  %cond34 = phi i32 [ %call31, %cond.true30 ], [ 2, %cond.false32 ]
  br label %cond.end36

cond.false35:                                     ; preds = %cond.true22
  br label %cond.end36

cond.end36:                                       ; preds = %cond.false35, %cond.end33
  %cond37 = phi i32 [ %cond34, %cond.end33 ], [ 1, %cond.false35 ]
  br label %cond.end39

cond.false38:                                     ; preds = %land.lhs.true18, %cond.end15
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.end36
  %cond40 = phi i32 [ %cond37, %cond.end36 ], [ 0, %cond.false38 ]
  store i32 %cond40, i32* %len_alt_opener, align 4
  %22 = load i8*, i8** %closer.addr, align 4
  %tobool41 = icmp ne i8* %22, null
  br i1 %tobool41, label %land.lhs.true42, label %cond.false62

land.lhs.true42:                                  ; preds = %cond.end39
  %23 = load i8*, i8** %closer.addr, align 4
  %arrayidx43 = getelementptr inbounds i8, i8* %23, i32 0
  %24 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %24 to i32
  %tobool45 = icmp ne i32 %conv44, 0
  br i1 %tobool45, label %cond.true46, label %cond.false62

cond.true46:                                      ; preds = %land.lhs.true42
  %25 = load i8*, i8** %closer.addr, align 4
  %arrayidx47 = getelementptr inbounds i8, i8* %25, i32 1
  %26 = load i8, i8* %arrayidx47, align 1
  %conv48 = sext i8 %26 to i32
  %tobool49 = icmp ne i32 %conv48, 0
  br i1 %tobool49, label %cond.true50, label %cond.false59

cond.true50:                                      ; preds = %cond.true46
  %27 = load i8*, i8** %closer.addr, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %27, i32 2
  %28 = load i8, i8* %arrayidx51, align 1
  %conv52 = sext i8 %28 to i32
  %tobool53 = icmp ne i32 %conv52, 0
  br i1 %tobool53, label %cond.true54, label %cond.false56

cond.true54:                                      ; preds = %cond.true50
  %29 = load i8*, i8** %closer.addr, align 4
  %call55 = call i32 @strlen(i8* %29)
  br label %cond.end57

cond.false56:                                     ; preds = %cond.true50
  br label %cond.end57

cond.end57:                                       ; preds = %cond.false56, %cond.true54
  %cond58 = phi i32 [ %call55, %cond.true54 ], [ 2, %cond.false56 ]
  br label %cond.end60

cond.false59:                                     ; preds = %cond.true46
  br label %cond.end60

cond.end60:                                       ; preds = %cond.false59, %cond.end57
  %cond61 = phi i32 [ %cond58, %cond.end57 ], [ 1, %cond.false59 ]
  br label %cond.end63

cond.false62:                                     ; preds = %land.lhs.true42, %cond.end39
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false62, %cond.end60
  %cond64 = phi i32 [ %cond61, %cond.end60 ], [ 0, %cond.false62 ]
  store i32 %cond64, i32* %len_closer, align 4
  store i32 0, i32* %in_comment, align 4
  store i32 0, i32* %pass_character, align 4
  store i32 1, i32* %nesting_level, align 4
  %30 = load i32*, i32** %sindex.addr, align 4
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end361, %cond.end323, %if.then304, %if.then272, %if.then248, %if.then227, %if.then210, %do.end203, %do.end146, %do.end, %cond.end63
  %32 = load i32, i32* %nesting_level, align 4
  %tobool65 = icmp ne i32 %32, 0
  br i1 %tobool65, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %33 = load i8*, i8** %string.addr, align 4
  %34 = load i32, i32* %i, align 4
  %arrayidx66 = getelementptr inbounds i8, i8* %33, i32 %34
  %35 = load i8, i8* %arrayidx66, align 1
  %conv67 = sext i8 %35 to i32
  store i32 %conv67, i32* %c, align 4
  %36 = load i32, i32* %i, align 4
  %37 = load i32, i32* %slen, align 4
  %cmp = icmp ugt i32 %36, %37
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %38 = load i32, i32* %slen, align 4
  store i32 %38, i32* %i, align 4
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %slen, align 4
  store i32 %40, i32* %i, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %41 to i32
  store i32 %conv70, i32* %c, align 4
  br label %while.end

if.end:                                           ; preds = %while.body
  %42 = load i32, i32* %c, align 4
  %cmp71 = icmp eq i32 %42, 0
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.end
  br label %while.end

if.end74:                                         ; preds = %if.end
  %43 = load i32, i32* %in_comment, align 4
  %tobool75 = icmp ne i32 %43, 0
  br i1 %tobool75, label %if.then76, label %if.end108

if.then76:                                        ; preds = %if.end74
  %44 = load i32, i32* %c, align 4
  %cmp77 = icmp eq i32 %44, 10
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.then76
  store i32 0, i32* %in_comment, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %if.then76
  br label %do.body

do.body:                                          ; preds = %if.end80
  %45 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp81 = icmp sgt i32 %45, 1
  br i1 %cmp81, label %if.then83, label %if.else105

if.then83:                                        ; preds = %do.body
  %46 = load i8*, i8** %string.addr, align 4
  %47 = load i32, i32* %i, align 4
  %arrayidx84 = getelementptr inbounds i8, i8* %46, i32 %47
  %48 = load i8, i8* %arrayidx84, align 1
  %call85 = call i32 @is_basic(i8 signext %48)
  store i32 %call85, i32* %_f, align 4
  %49 = load i32, i32* %_f, align 4
  %tobool86 = icmp ne i32 %49, 0
  br i1 %tobool86, label %if.then87, label %if.else

if.then87:                                        ; preds = %if.then83
  store i32 1, i32* %mblength, align 4
  br label %if.end90

if.else:                                          ; preds = %if.then83
  %50 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %51 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %50, i8* %51, i32 8, i32 4, i1 false)
  %52 = load i8*, i8** %string.addr, align 4
  %53 = load i32, i32* %i, align 4
  %add.ptr88 = getelementptr inbounds i8, i8* %52, i32 %53
  %54 = load i32, i32* %slen, align 4
  %55 = load i32, i32* %i, align 4
  %sub = sub i32 %54, %55
  %call89 = call i32 @mbrlen(i8* %add.ptr88, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call89, i32* %mblength, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.then87
  %56 = load i32, i32* %mblength, align 4
  %cmp91 = icmp eq i32 %56, -2
  br i1 %cmp91, label %if.then95, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end90
  %57 = load i32, i32* %mblength, align 4
  %cmp93 = icmp eq i32 %57, -1
  br i1 %cmp93, label %if.then95, label %if.else96

if.then95:                                        ; preds = %lor.lhs.false, %if.end90
  %58 = bitcast %struct.__mbstate_t* %state to i8*
  %59 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %58, i8* %59, i32 8, i32 4, i1 false)
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end104

if.else96:                                        ; preds = %lor.lhs.false
  %61 = load i32, i32* %mblength, align 4
  %cmp97 = icmp eq i32 %61, 0
  br i1 %cmp97, label %if.then99, label %if.else101

if.then99:                                        ; preds = %if.else96
  %62 = load i32, i32* %i, align 4
  %inc100 = add nsw i32 %62, 1
  store i32 %inc100, i32* %i, align 4
  br label %if.end103

if.else101:                                       ; preds = %if.else96
  %63 = load i32, i32* %mblength, align 4
  %64 = load i32, i32* %i, align 4
  %add102 = add i32 %64, %63
  store i32 %add102, i32* %i, align 4
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.then99
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then95
  br label %if.end107

if.else105:                                       ; preds = %do.body
  %65 = load i32, i32* %i, align 4
  %inc106 = add nsw i32 %65, 1
  store i32 %inc106, i32* %i, align 4
  br label %if.end107

if.end107:                                        ; preds = %if.else105, %if.end104
  br label %do.end

do.end:                                           ; preds = %if.end107
  br label %while.cond

if.end108:                                        ; preds = %if.end74
  %66 = load i32, i32* %pass_character, align 4
  %tobool109 = icmp ne i32 %66, 0
  br i1 %tobool109, label %if.then110, label %if.end147

if.then110:                                       ; preds = %if.end108
  store i32 0, i32* %pass_character, align 4
  br label %do.body111

do.body111:                                       ; preds = %if.then110
  %67 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp112 = icmp sgt i32 %67, 1
  br i1 %cmp112, label %if.then114, label %if.else143

if.then114:                                       ; preds = %do.body111
  %68 = load i8*, i8** %string.addr, align 4
  %69 = load i32, i32* %i, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %68, i32 %69
  %70 = load i8, i8* %arrayidx118, align 1
  %call119 = call i32 @is_basic(i8 signext %70)
  store i32 %call119, i32* %_f117, align 4
  %71 = load i32, i32* %_f117, align 4
  %tobool120 = icmp ne i32 %71, 0
  br i1 %tobool120, label %if.then121, label %if.else122

if.then121:                                       ; preds = %if.then114
  store i32 1, i32* %mblength116, align 4
  br label %if.end126

if.else122:                                       ; preds = %if.then114
  %72 = bitcast %struct.__mbstate_t* %state_bak115 to i8*
  %73 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %72, i8* %73, i32 8, i32 4, i1 false)
  %74 = load i8*, i8** %string.addr, align 4
  %75 = load i32, i32* %i, align 4
  %add.ptr123 = getelementptr inbounds i8, i8* %74, i32 %75
  %76 = load i32, i32* %slen, align 4
  %77 = load i32, i32* %i, align 4
  %sub124 = sub i32 %76, %77
  %call125 = call i32 @mbrlen(i8* %add.ptr123, i32 %sub124, %struct.__mbstate_t* %state)
  store i32 %call125, i32* %mblength116, align 4
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %if.then121
  %78 = load i32, i32* %mblength116, align 4
  %cmp127 = icmp eq i32 %78, -2
  br i1 %cmp127, label %if.then132, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %if.end126
  %79 = load i32, i32* %mblength116, align 4
  %cmp130 = icmp eq i32 %79, -1
  br i1 %cmp130, label %if.then132, label %if.else134

if.then132:                                       ; preds = %lor.lhs.false129, %if.end126
  %80 = bitcast %struct.__mbstate_t* %state to i8*
  %81 = bitcast %struct.__mbstate_t* %state_bak115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %80, i8* %81, i32 8, i32 4, i1 false)
  %82 = load i32, i32* %i, align 4
  %inc133 = add nsw i32 %82, 1
  store i32 %inc133, i32* %i, align 4
  br label %if.end142

if.else134:                                       ; preds = %lor.lhs.false129
  %83 = load i32, i32* %mblength116, align 4
  %cmp135 = icmp eq i32 %83, 0
  br i1 %cmp135, label %if.then137, label %if.else139

if.then137:                                       ; preds = %if.else134
  %84 = load i32, i32* %i, align 4
  %inc138 = add nsw i32 %84, 1
  store i32 %inc138, i32* %i, align 4
  br label %if.end141

if.else139:                                       ; preds = %if.else134
  %85 = load i32, i32* %mblength116, align 4
  %86 = load i32, i32* %i, align 4
  %add140 = add i32 %86, %85
  store i32 %add140, i32* %i, align 4
  br label %if.end141

if.end141:                                        ; preds = %if.else139, %if.then137
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then132
  br label %if.end145

if.else143:                                       ; preds = %do.body111
  %87 = load i32, i32* %i, align 4
  %inc144 = add nsw i32 %87, 1
  store i32 %inc144, i32* %i, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.else143, %if.end142
  br label %do.end146

do.end146:                                        ; preds = %if.end145
  br label %while.cond

if.end147:                                        ; preds = %if.end108
  %88 = load i32, i32* %flags.addr, align 4
  %and = and i32 %88, 8
  %tobool148 = icmp ne i32 %and, 0
  br i1 %tobool148, label %land.lhs.true149, label %if.end204

land.lhs.true149:                                 ; preds = %if.end147
  %89 = load i32, i32* %c, align 4
  %cmp150 = icmp eq i32 %89, 35
  br i1 %cmp150, label %land.lhs.true152, label %if.end204

land.lhs.true152:                                 ; preds = %land.lhs.true149
  %90 = load i32, i32* %i, align 4
  %cmp153 = icmp eq i32 %90, 0
  br i1 %cmp153, label %if.then167, label %lor.lhs.false155

lor.lhs.false155:                                 ; preds = %land.lhs.true152
  %91 = load i8*, i8** %string.addr, align 4
  %92 = load i32, i32* %i, align 4
  %sub156 = sub nsw i32 %92, 1
  %arrayidx157 = getelementptr inbounds i8, i8* %91, i32 %sub156
  %93 = load i8, i8* %arrayidx157, align 1
  %conv158 = sext i8 %93 to i32
  %cmp159 = icmp eq i32 %conv158, 10
  br i1 %cmp159, label %if.then167, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %lor.lhs.false155
  %94 = load i8*, i8** %string.addr, align 4
  %95 = load i32, i32* %i, align 4
  %sub162 = sub nsw i32 %95, 1
  %arrayidx163 = getelementptr inbounds i8, i8* %94, i32 %sub162
  %96 = load i8, i8* %arrayidx163, align 1
  %idxprom = zext i8 %96 to i32
  %arrayidx164 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %97 = load i32, i32* %arrayidx164, align 4
  %and165 = and i32 %97, 8192
  %tobool166 = icmp ne i32 %and165, 0
  br i1 %tobool166, label %if.then167, label %if.end204

if.then167:                                       ; preds = %lor.lhs.false161, %lor.lhs.false155, %land.lhs.true152
  store i32 1, i32* %in_comment, align 4
  br label %do.body168

do.body168:                                       ; preds = %if.then167
  %98 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp169 = icmp sgt i32 %98, 1
  br i1 %cmp169, label %if.then171, label %if.else200

if.then171:                                       ; preds = %do.body168
  %99 = load i8*, i8** %string.addr, align 4
  %100 = load i32, i32* %i, align 4
  %arrayidx175 = getelementptr inbounds i8, i8* %99, i32 %100
  %101 = load i8, i8* %arrayidx175, align 1
  %call176 = call i32 @is_basic(i8 signext %101)
  store i32 %call176, i32* %_f174, align 4
  %102 = load i32, i32* %_f174, align 4
  %tobool177 = icmp ne i32 %102, 0
  br i1 %tobool177, label %if.then178, label %if.else179

if.then178:                                       ; preds = %if.then171
  store i32 1, i32* %mblength173, align 4
  br label %if.end183

if.else179:                                       ; preds = %if.then171
  %103 = bitcast %struct.__mbstate_t* %state_bak172 to i8*
  %104 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %103, i8* %104, i32 8, i32 4, i1 false)
  %105 = load i8*, i8** %string.addr, align 4
  %106 = load i32, i32* %i, align 4
  %add.ptr180 = getelementptr inbounds i8, i8* %105, i32 %106
  %107 = load i32, i32* %slen, align 4
  %108 = load i32, i32* %i, align 4
  %sub181 = sub i32 %107, %108
  %call182 = call i32 @mbrlen(i8* %add.ptr180, i32 %sub181, %struct.__mbstate_t* %state)
  store i32 %call182, i32* %mblength173, align 4
  br label %if.end183

if.end183:                                        ; preds = %if.else179, %if.then178
  %109 = load i32, i32* %mblength173, align 4
  %cmp184 = icmp eq i32 %109, -2
  br i1 %cmp184, label %if.then189, label %lor.lhs.false186

lor.lhs.false186:                                 ; preds = %if.end183
  %110 = load i32, i32* %mblength173, align 4
  %cmp187 = icmp eq i32 %110, -1
  br i1 %cmp187, label %if.then189, label %if.else191

if.then189:                                       ; preds = %lor.lhs.false186, %if.end183
  %111 = bitcast %struct.__mbstate_t* %state to i8*
  %112 = bitcast %struct.__mbstate_t* %state_bak172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %111, i8* %112, i32 8, i32 4, i1 false)
  %113 = load i32, i32* %i, align 4
  %inc190 = add nsw i32 %113, 1
  store i32 %inc190, i32* %i, align 4
  br label %if.end199

if.else191:                                       ; preds = %lor.lhs.false186
  %114 = load i32, i32* %mblength173, align 4
  %cmp192 = icmp eq i32 %114, 0
  br i1 %cmp192, label %if.then194, label %if.else196

if.then194:                                       ; preds = %if.else191
  %115 = load i32, i32* %i, align 4
  %inc195 = add nsw i32 %115, 1
  store i32 %inc195, i32* %i, align 4
  br label %if.end198

if.else196:                                       ; preds = %if.else191
  %116 = load i32, i32* %mblength173, align 4
  %117 = load i32, i32* %i, align 4
  %add197 = add i32 %117, %116
  store i32 %add197, i32* %i, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.else196, %if.then194
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.then189
  br label %if.end202

if.else200:                                       ; preds = %do.body168
  %118 = load i32, i32* %i, align 4
  %inc201 = add nsw i32 %118, 1
  store i32 %inc201, i32* %i, align 4
  br label %if.end202

if.end202:                                        ; preds = %if.else200, %if.end199
  br label %do.end203

do.end203:                                        ; preds = %if.end202
  br label %while.cond

if.end204:                                        ; preds = %lor.lhs.false161, %land.lhs.true149, %if.end147
  %119 = load i32, i32* %c, align 4
  %cmp205 = icmp eq i32 %119, 1
  br i1 %cmp205, label %if.then210, label %lor.lhs.false207

lor.lhs.false207:                                 ; preds = %if.end204
  %120 = load i32, i32* %c, align 4
  %cmp208 = icmp eq i32 %120, 92
  br i1 %cmp208, label %if.then210, label %if.end213

if.then210:                                       ; preds = %lor.lhs.false207, %if.end204
  %121 = load i32, i32* %pass_character, align 4
  %inc211 = add nsw i32 %121, 1
  store i32 %inc211, i32* %pass_character, align 4
  %122 = load i32, i32* %i, align 4
  %inc212 = add nsw i32 %122, 1
  store i32 %inc212, i32* %i, align 4
  br label %while.cond

if.end213:                                        ; preds = %lor.lhs.false207
  %123 = load i32, i32* %flags.addr, align 4
  %and214 = and i32 %123, 8
  %tobool215 = icmp ne i32 %and214, 0
  br i1 %tobool215, label %land.lhs.true216, label %if.end231

land.lhs.true216:                                 ; preds = %if.end213
  %124 = load i8*, i8** %string.addr, align 4
  %125 = load i32, i32* %i, align 4
  %arrayidx217 = getelementptr inbounds i8, i8* %124, i32 %125
  %126 = load i8, i8* %arrayidx217, align 1
  %conv218 = sext i8 %126 to i32
  %cmp219 = icmp eq i32 %conv218, 36
  br i1 %cmp219, label %land.lhs.true221, label %if.end231

land.lhs.true221:                                 ; preds = %land.lhs.true216
  %127 = load i8*, i8** %string.addr, align 4
  %128 = load i32, i32* %i, align 4
  %add222 = add nsw i32 %128, 1
  %arrayidx223 = getelementptr inbounds i8, i8* %127, i32 %add222
  %129 = load i8, i8* %arrayidx223, align 1
  %conv224 = sext i8 %129 to i32
  %cmp225 = icmp eq i32 %conv224, 40
  br i1 %cmp225, label %if.then227, label %if.end231

if.then227:                                       ; preds = %land.lhs.true221
  %130 = load i32, i32* %i, align 4
  %add228 = add nsw i32 %130, 2
  store i32 %add228, i32* %si, align 4
  %131 = load i8*, i8** %string.addr, align 4
  %132 = load i32, i32* %flags.addr, align 4
  %or = or i32 %132, 1
  %call229 = call i8* @extract_command_subst(i8* %131, i32* %si, i32 %or)
  store i8* %call229, i8** %t, align 4
  %133 = load i32, i32* %si, align 4
  %add230 = add nsw i32 %133, 1
  store i32 %add230, i32* %i, align 4
  br label %while.cond

if.end231:                                        ; preds = %land.lhs.true221, %land.lhs.true216, %if.end213
  %134 = load i32, i32* %len_opener, align 4
  %cmp232 = icmp eq i32 %134, 0
  br i1 %cmp232, label %cond.true234, label %cond.false235

cond.true234:                                     ; preds = %if.end231
  br i1 true, label %if.then248, label %if.end253

cond.false235:                                    ; preds = %if.end231
  %135 = load i8*, i8** %string.addr, align 4
  %136 = load i32, i32* %i, align 4
  %add.ptr236 = getelementptr inbounds i8, i8* %135, i32 %136
  %arrayidx237 = getelementptr inbounds i8, i8* %add.ptr236, i32 0
  %137 = load i8, i8* %arrayidx237, align 1
  %conv238 = sext i8 %137 to i32
  %138 = load i8*, i8** %opener.addr, align 4
  %arrayidx239 = getelementptr inbounds i8, i8* %138, i32 0
  %139 = load i8, i8* %arrayidx239, align 1
  %conv240 = sext i8 %139 to i32
  %cmp241 = icmp eq i32 %conv238, %conv240
  br i1 %cmp241, label %land.lhs.true243, label %if.end253

land.lhs.true243:                                 ; preds = %cond.false235
  %140 = load i8*, i8** %string.addr, align 4
  %141 = load i32, i32* %i, align 4
  %add.ptr244 = getelementptr inbounds i8, i8* %140, i32 %141
  %142 = load i8*, i8** %opener.addr, align 4
  %143 = load i32, i32* %len_opener, align 4
  %call245 = call i32 @strncmp(i8* %add.ptr244, i8* %142, i32 %143)
  %cmp246 = icmp eq i32 %call245, 0
  br i1 %cmp246, label %if.then248, label %if.end253

if.then248:                                       ; preds = %land.lhs.true243, %cond.true234
  %144 = load i32, i32* %i, align 4
  %145 = load i32, i32* %len_opener, align 4
  %add249 = add nsw i32 %144, %145
  store i32 %add249, i32* %si, align 4
  %146 = load i8*, i8** %string.addr, align 4
  %147 = load i8*, i8** %opener.addr, align 4
  %148 = load i8*, i8** %alt_opener.addr, align 4
  %149 = load i8*, i8** %closer.addr, align 4
  %150 = load i32, i32* %flags.addr, align 4
  %or250 = or i32 %150, 1
  %call251 = call i8* @extract_delimited_string(i8* %146, i32* %si, i8* %147, i8* %148, i8* %149, i32 %or250)
  store i8* %call251, i8** %t, align 4
  %151 = load i32, i32* %si, align 4
  %add252 = add nsw i32 %151, 1
  store i32 %add252, i32* %i, align 4
  br label %while.cond

if.end253:                                        ; preds = %land.lhs.true243, %cond.false235, %cond.true234
  %152 = load i32, i32* %len_alt_opener, align 4
  %tobool254 = icmp ne i32 %152, 0
  br i1 %tobool254, label %land.lhs.true255, label %if.end277

land.lhs.true255:                                 ; preds = %if.end253
  %153 = load i32, i32* %len_alt_opener, align 4
  %cmp256 = icmp eq i32 %153, 0
  br i1 %cmp256, label %cond.true258, label %cond.false259

cond.true258:                                     ; preds = %land.lhs.true255
  br i1 true, label %if.then272, label %if.end277

cond.false259:                                    ; preds = %land.lhs.true255
  %154 = load i8*, i8** %string.addr, align 4
  %155 = load i32, i32* %i, align 4
  %add.ptr260 = getelementptr inbounds i8, i8* %154, i32 %155
  %arrayidx261 = getelementptr inbounds i8, i8* %add.ptr260, i32 0
  %156 = load i8, i8* %arrayidx261, align 1
  %conv262 = sext i8 %156 to i32
  %157 = load i8*, i8** %alt_opener.addr, align 4
  %arrayidx263 = getelementptr inbounds i8, i8* %157, i32 0
  %158 = load i8, i8* %arrayidx263, align 1
  %conv264 = sext i8 %158 to i32
  %cmp265 = icmp eq i32 %conv262, %conv264
  br i1 %cmp265, label %land.lhs.true267, label %if.end277

land.lhs.true267:                                 ; preds = %cond.false259
  %159 = load i8*, i8** %string.addr, align 4
  %160 = load i32, i32* %i, align 4
  %add.ptr268 = getelementptr inbounds i8, i8* %159, i32 %160
  %161 = load i8*, i8** %alt_opener.addr, align 4
  %162 = load i32, i32* %len_alt_opener, align 4
  %call269 = call i32 @strncmp(i8* %add.ptr268, i8* %161, i32 %162)
  %cmp270 = icmp eq i32 %call269, 0
  br i1 %cmp270, label %if.then272, label %if.end277

if.then272:                                       ; preds = %land.lhs.true267, %cond.true258
  %163 = load i32, i32* %i, align 4
  %164 = load i32, i32* %len_alt_opener, align 4
  %add273 = add nsw i32 %163, %164
  store i32 %add273, i32* %si, align 4
  %165 = load i8*, i8** %string.addr, align 4
  %166 = load i8*, i8** %alt_opener.addr, align 4
  %167 = load i8*, i8** %alt_opener.addr, align 4
  %168 = load i8*, i8** %closer.addr, align 4
  %169 = load i32, i32* %flags.addr, align 4
  %or274 = or i32 %169, 1
  %call275 = call i8* @extract_delimited_string(i8* %165, i32* %si, i8* %166, i8* %167, i8* %168, i32 %or274)
  store i8* %call275, i8** %t, align 4
  %170 = load i32, i32* %si, align 4
  %add276 = add nsw i32 %170, 1
  store i32 %add276, i32* %i, align 4
  br label %while.cond

if.end277:                                        ; preds = %land.lhs.true267, %cond.false259, %cond.true258, %if.end253
  %171 = load i32, i32* %len_closer, align 4
  %cmp278 = icmp eq i32 %171, 0
  br i1 %cmp278, label %cond.true280, label %cond.false281

cond.true280:                                     ; preds = %if.end277
  br i1 true, label %if.then294, label %if.end301

cond.false281:                                    ; preds = %if.end277
  %172 = load i8*, i8** %string.addr, align 4
  %173 = load i32, i32* %i, align 4
  %add.ptr282 = getelementptr inbounds i8, i8* %172, i32 %173
  %arrayidx283 = getelementptr inbounds i8, i8* %add.ptr282, i32 0
  %174 = load i8, i8* %arrayidx283, align 1
  %conv284 = sext i8 %174 to i32
  %175 = load i8*, i8** %closer.addr, align 4
  %arrayidx285 = getelementptr inbounds i8, i8* %175, i32 0
  %176 = load i8, i8* %arrayidx285, align 1
  %conv286 = sext i8 %176 to i32
  %cmp287 = icmp eq i32 %conv284, %conv286
  br i1 %cmp287, label %land.lhs.true289, label %if.end301

land.lhs.true289:                                 ; preds = %cond.false281
  %177 = load i8*, i8** %string.addr, align 4
  %178 = load i32, i32* %i, align 4
  %add.ptr290 = getelementptr inbounds i8, i8* %177, i32 %178
  %179 = load i8*, i8** %closer.addr, align 4
  %180 = load i32, i32* %len_closer, align 4
  %call291 = call i32 @strncmp(i8* %add.ptr290, i8* %179, i32 %180)
  %cmp292 = icmp eq i32 %call291, 0
  br i1 %cmp292, label %if.then294, label %if.end301

if.then294:                                       ; preds = %land.lhs.true289, %cond.true280
  %181 = load i32, i32* %len_closer, align 4
  %sub295 = sub nsw i32 %181, 1
  %182 = load i32, i32* %i, align 4
  %add296 = add nsw i32 %182, %sub295
  store i32 %add296, i32* %i, align 4
  %183 = load i32, i32* %nesting_level, align 4
  %dec = add nsw i32 %183, -1
  store i32 %dec, i32* %nesting_level, align 4
  %184 = load i32, i32* %nesting_level, align 4
  %cmp297 = icmp eq i32 %184, 0
  br i1 %cmp297, label %if.then299, label %if.end300

if.then299:                                       ; preds = %if.then294
  br label %while.end

if.end300:                                        ; preds = %if.then294
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %land.lhs.true289, %cond.false281, %cond.true280
  %185 = load i32, i32* %c, align 4
  %cmp302 = icmp eq i32 %185, 96
  br i1 %cmp302, label %if.then304, label %if.end309

if.then304:                                       ; preds = %if.end301
  %186 = load i32, i32* %i, align 4
  %add305 = add nsw i32 %186, 1
  store i32 %add305, i32* %si, align 4
  %187 = load i8*, i8** %string.addr, align 4
  %188 = load i32, i32* %flags.addr, align 4
  %or306 = or i32 %188, 1
  %call307 = call i8* @string_extract(i8* %187, i32* %si, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i32 %or306)
  store i8* %call307, i8** %t, align 4
  %189 = load i32, i32* %si, align 4
  %add308 = add nsw i32 %189, 1
  store i32 %add308, i32* %i, align 4
  br label %while.cond

if.end309:                                        ; preds = %if.end301
  %190 = load i32, i32* %c, align 4
  %cmp310 = icmp eq i32 %190, 39
  br i1 %cmp310, label %if.then315, label %lor.lhs.false312

lor.lhs.false312:                                 ; preds = %if.end309
  %191 = load i32, i32* %c, align 4
  %cmp313 = icmp eq i32 %191, 34
  br i1 %cmp313, label %if.then315, label %if.end325

if.then315:                                       ; preds = %lor.lhs.false312, %if.end309
  %192 = load i32, i32* %i, align 4
  %add316 = add nsw i32 %192, 1
  store i32 %add316, i32* %si, align 4
  %193 = load i32, i32* %c, align 4
  %cmp317 = icmp eq i32 %193, 39
  br i1 %cmp317, label %cond.true319, label %cond.false321

cond.true319:                                     ; preds = %if.then315
  %194 = load i8*, i8** %string.addr, align 4
  %195 = load i32, i32* %slen, align 4
  %196 = load i32, i32* %si, align 4
  %call320 = call i32 @skip_single_quoted(i8* %194, i32 %195, i32 %196, i32 0)
  br label %cond.end323

cond.false321:                                    ; preds = %if.then315
  %197 = load i8*, i8** %string.addr, align 4
  %198 = load i32, i32* %slen, align 4
  %199 = load i32, i32* %si, align 4
  %call322 = call i32 @skip_double_quoted(i8* %197, i32 %198, i32 %199, i32 0)
  br label %cond.end323

cond.end323:                                      ; preds = %cond.false321, %cond.true319
  %cond324 = phi i32 [ %call320, %cond.true319 ], [ %call322, %cond.false321 ]
  store i32 %cond324, i32* %i, align 4
  br label %while.cond

if.end325:                                        ; preds = %lor.lhs.false312
  br label %do.body326

do.body326:                                       ; preds = %if.end325
  %200 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp327 = icmp sgt i32 %200, 1
  br i1 %cmp327, label %if.then329, label %if.else358

if.then329:                                       ; preds = %do.body326
  %201 = load i8*, i8** %string.addr, align 4
  %202 = load i32, i32* %i, align 4
  %arrayidx333 = getelementptr inbounds i8, i8* %201, i32 %202
  %203 = load i8, i8* %arrayidx333, align 1
  %call334 = call i32 @is_basic(i8 signext %203)
  store i32 %call334, i32* %_f332, align 4
  %204 = load i32, i32* %_f332, align 4
  %tobool335 = icmp ne i32 %204, 0
  br i1 %tobool335, label %if.then336, label %if.else337

if.then336:                                       ; preds = %if.then329
  store i32 1, i32* %mblength331, align 4
  br label %if.end341

if.else337:                                       ; preds = %if.then329
  %205 = bitcast %struct.__mbstate_t* %state_bak330 to i8*
  %206 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %205, i8* %206, i32 8, i32 4, i1 false)
  %207 = load i8*, i8** %string.addr, align 4
  %208 = load i32, i32* %i, align 4
  %add.ptr338 = getelementptr inbounds i8, i8* %207, i32 %208
  %209 = load i32, i32* %slen, align 4
  %210 = load i32, i32* %i, align 4
  %sub339 = sub i32 %209, %210
  %call340 = call i32 @mbrlen(i8* %add.ptr338, i32 %sub339, %struct.__mbstate_t* %state)
  store i32 %call340, i32* %mblength331, align 4
  br label %if.end341

if.end341:                                        ; preds = %if.else337, %if.then336
  %211 = load i32, i32* %mblength331, align 4
  %cmp342 = icmp eq i32 %211, -2
  br i1 %cmp342, label %if.then347, label %lor.lhs.false344

lor.lhs.false344:                                 ; preds = %if.end341
  %212 = load i32, i32* %mblength331, align 4
  %cmp345 = icmp eq i32 %212, -1
  br i1 %cmp345, label %if.then347, label %if.else349

if.then347:                                       ; preds = %lor.lhs.false344, %if.end341
  %213 = bitcast %struct.__mbstate_t* %state to i8*
  %214 = bitcast %struct.__mbstate_t* %state_bak330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %213, i8* %214, i32 8, i32 4, i1 false)
  %215 = load i32, i32* %i, align 4
  %inc348 = add nsw i32 %215, 1
  store i32 %inc348, i32* %i, align 4
  br label %if.end357

if.else349:                                       ; preds = %lor.lhs.false344
  %216 = load i32, i32* %mblength331, align 4
  %cmp350 = icmp eq i32 %216, 0
  br i1 %cmp350, label %if.then352, label %if.else354

if.then352:                                       ; preds = %if.else349
  %217 = load i32, i32* %i, align 4
  %inc353 = add nsw i32 %217, 1
  store i32 %inc353, i32* %i, align 4
  br label %if.end356

if.else354:                                       ; preds = %if.else349
  %218 = load i32, i32* %mblength331, align 4
  %219 = load i32, i32* %i, align 4
  %add355 = add i32 %219, %218
  store i32 %add355, i32* %i, align 4
  br label %if.end356

if.end356:                                        ; preds = %if.else354, %if.then352
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %if.then347
  br label %if.end360

if.else358:                                       ; preds = %do.body326
  %220 = load i32, i32* %i, align 4
  %inc359 = add nsw i32 %220, 1
  store i32 %inc359, i32* %i, align 4
  br label %if.end360

if.end360:                                        ; preds = %if.else358, %if.end357
  br label %do.end361

do.end361:                                        ; preds = %if.end360
  br label %while.cond

while.end:                                        ; preds = %if.then299, %if.then73, %if.then, %while.cond
  %221 = load i32, i32* %c, align 4
  %cmp362 = icmp eq i32 %221, 0
  br i1 %cmp362, label %land.lhs.true364, label %if.end373

land.lhs.true364:                                 ; preds = %while.end
  %222 = load i32, i32* %nesting_level, align 4
  %tobool365 = icmp ne i32 %222, 0
  br i1 %tobool365, label %if.then366, label %if.end373

if.then366:                                       ; preds = %land.lhs.true364
  %223 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  %cmp367 = icmp eq i32 %223, 0
  br i1 %cmp367, label %if.then369, label %if.else371

if.then369:                                       ; preds = %if.then366
  store i32 1, i32* @last_command_exit_value, align 4
  %call370 = call i8* @libintl_gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i32 0, i32 0))
  %224 = load i8*, i8** %closer.addr, align 4
  %225 = load i8*, i8** %string.addr, align 4
  call void (i8*, ...) @report_error(i8* %call370, i8* %224, i8* %225)
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end372

if.else371:                                       ; preds = %if.then366
  %226 = load i32, i32* %i, align 4
  %227 = load i32*, i32** %sindex.addr, align 4
  store i32 %226, i32* %227, align 4
  store i8* null, i8** %retval, align 4
  br label %return

if.end372:                                        ; preds = %if.then369
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true364, %while.end
  %228 = load i32, i32* %i, align 4
  %229 = load i32*, i32** %sindex.addr, align 4
  %230 = load i32, i32* %229, align 4
  %sub374 = sub nsw i32 %228, %230
  %231 = load i32, i32* %len_closer, align 4
  %sub375 = sub nsw i32 %sub374, %231
  %add376 = add nsw i32 %sub375, 1
  store i32 %add376, i32* %si, align 4
  %232 = load i32, i32* %flags.addr, align 4
  %and377 = and i32 %232, 1
  %tobool378 = icmp ne i32 %and377, 0
  br i1 %tobool378, label %if.then379, label %if.else380

if.then379:                                       ; preds = %if.end373
  store i8* null, i8** %result, align 4
  br label %if.end386

if.else380:                                       ; preds = %if.end373
  %233 = load i32, i32* %si, align 4
  %add381 = add nsw i32 1, %233
  %call382 = call i8* @sh_xmalloc(i32 %add381, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1460)
  store i8* %call382, i8** %result, align 4
  %234 = load i8*, i8** %result, align 4
  %235 = load i8*, i8** %string.addr, align 4
  %236 = load i32*, i32** %sindex.addr, align 4
  %237 = load i32, i32* %236, align 4
  %add.ptr383 = getelementptr inbounds i8, i8* %235, i32 %237
  %238 = load i32, i32* %si, align 4
  %call384 = call i8* @strncpy(i8* %234, i8* %add.ptr383, i32 %238)
  %239 = load i8*, i8** %result, align 4
  %240 = load i32, i32* %si, align 4
  %arrayidx385 = getelementptr inbounds i8, i8* %239, i32 %240
  store i8 0, i8* %arrayidx385, align 1
  br label %if.end386

if.end386:                                        ; preds = %if.else380, %if.then379
  %241 = load i32, i32* %i, align 4
  %242 = load i32*, i32** %sindex.addr, align 4
  store i32 %241, i32* %242, align 4
  %243 = load i8*, i8** %result, align 4
  store i8* %243, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end386, %if.else371
  %244 = load i8*, i8** %retval, align 4
  ret i8* %244
}

declare i8* @xparse_dolparen(i8*, i8*, i32*, i32) #1

; Function Attrs: noinline nounwind
define i8* @extract_arithmetic_subst(i8* %string, i32* %sindex) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i32*, i32** %sindex.addr, align 4
  %call = call i8* @extract_delimited_string(i8* %0, i32* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i32 0)
  ret i8* %call
}

; Function Attrs: noinline nounwind
define i8* @extract_process_subst(i8* %string, i8* %starter, i32* %sindex, i32 %xflags) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %starter.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %xflags.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %starter, i8** %starter.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i32 %xflags, i32* %xflags.addr, align 4
  %0 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  %tobool = icmp ne i32 %0, 0
  %cond = select i1 %tobool, i32 64, i32 0
  %1 = load i32, i32* %xflags.addr, align 4
  %or = or i32 %1, %cond
  store i32 %or, i32* %xflags.addr, align 4
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %4 = load i32*, i32** %sindex.addr, align 4
  %5 = load i32, i32* %4, align 4
  %add.ptr = getelementptr inbounds i8, i8* %3, i32 %5
  %6 = load i32*, i32** %sindex.addr, align 4
  %7 = load i32, i32* %xflags.addr, align 4
  %call = call i8* @xparse_dolparen(i8* %2, i8* %add.ptr, i32* %6, i32 %7)
  ret i8* %call
}

; Function Attrs: noinline nounwind
define i8* @extract_array_assignment_list(i8* %string, i32* %sindex) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %slen = alloca i32, align 4
  %ret = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %0)
  store i32 %call, i32* %slen, align 4
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32, i32* %slen, align 4
  %sub = sub nsw i32 %2, 1
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 %sub
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 41
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %string.addr, align 4
  %5 = load i32*, i32** %sindex.addr, align 4
  %6 = load i32, i32* %5, align 4
  %7 = load i32, i32* %slen, align 4
  %sub2 = sub nsw i32 %7, 1
  %call3 = call i8* @substring(i8* %4, i32 %6, i32 %sub2)
  store i8* %call3, i8** %ret, align 4
  %8 = load i32, i32* %slen, align 4
  %sub4 = sub nsw i32 %8, 1
  %9 = load i32*, i32** %sindex.addr, align 4
  store i32 %sub4, i32* %9, align 4
  %10 = load i8*, i8** %ret, align 4
  store i8* %10, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load i8*, i8** %retval, align 4
  ret i8* %11
}

declare i8* @substring(i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define i8* @de_backslash(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %slen = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %prev_i = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %slen, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end57, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %slen, align 4
  %cmp = icmp ult i32 %2, %3
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %string.addr, align 4
  %5 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %cmp1 = icmp eq i32 %conv, 92
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.body
  %7 = load i8*, i8** %string.addr, align 4
  %8 = load i32, i32* %i, align 4
  %add = add nsw i32 %8, 1
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i32 %add
  %9 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %9 to i32
  %cmp5 = icmp eq i32 %conv4, 96
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i8*, i8** %string.addr, align 4
  %11 = load i32, i32* %i, align 4
  %add7 = add nsw i32 %11, 1
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i32 %add7
  %12 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %12 to i32
  %cmp10 = icmp eq i32 %conv9, 92
  br i1 %cmp10, label %if.then, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %13 = load i8*, i8** %string.addr, align 4
  %14 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %14, 1
  %arrayidx14 = getelementptr inbounds i8, i8* %13, i32 %add13
  %15 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %15 to i32
  %cmp16 = icmp eq i32 %conv15, 36
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %land.lhs.true
  %16 = load i32, i32* %i, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false12, %while.body
  %17 = load i32, i32* %i, align 4
  store i32 %17, i32* %prev_i, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %18 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp18 = icmp sgt i32 %18, 1
  br i1 %cmp18, label %if.then20, label %if.else42

if.then20:                                        ; preds = %do.body
  %19 = load i8*, i8** %string.addr, align 4
  %20 = load i32, i32* %i, align 4
  %arrayidx21 = getelementptr inbounds i8, i8* %19, i32 %20
  %21 = load i8, i8* %arrayidx21, align 1
  %call22 = call i32 @is_basic(i8 signext %21)
  store i32 %call22, i32* %_f, align 4
  %22 = load i32, i32* %_f, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.then20
  store i32 1, i32* %mblength, align 4
  br label %if.end25

if.else:                                          ; preds = %if.then20
  %23 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %24 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %23, i8* %24, i32 8, i32 4, i1 false)
  %25 = load i8*, i8** %string.addr, align 4
  %26 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %25, i32 %26
  %27 = load i32, i32* %slen, align 4
  %28 = load i32, i32* %i, align 4
  %sub = sub i32 %27, %28
  %call24 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call24, i32* %mblength, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then23
  %29 = load i32, i32* %mblength, align 4
  %cmp26 = icmp eq i32 %29, -2
  br i1 %cmp26, label %if.then31, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %if.end25
  %30 = load i32, i32* %mblength, align 4
  %cmp29 = icmp eq i32 %30, -1
  br i1 %cmp29, label %if.then31, label %if.else33

if.then31:                                        ; preds = %lor.lhs.false28, %if.end25
  %31 = bitcast %struct.__mbstate_t* %state to i8*
  %32 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %31, i8* %32, i32 8, i32 4, i1 false)
  %33 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %33, 1
  store i32 %inc32, i32* %i, align 4
  br label %if.end41

if.else33:                                        ; preds = %lor.lhs.false28
  %34 = load i32, i32* %mblength, align 4
  %cmp34 = icmp eq i32 %34, 0
  br i1 %cmp34, label %if.then36, label %if.else38

if.then36:                                        ; preds = %if.else33
  %35 = load i32, i32* %i, align 4
  %inc37 = add nsw i32 %35, 1
  store i32 %inc37, i32* %i, align 4
  br label %if.end40

if.else38:                                        ; preds = %if.else33
  %36 = load i32, i32* %mblength, align 4
  %37 = load i32, i32* %i, align 4
  %add39 = add i32 %37, %36
  store i32 %add39, i32* %i, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then36
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then31
  br label %if.end44

if.else42:                                        ; preds = %do.body
  %38 = load i32, i32* %i, align 4
  %inc43 = add nsw i32 %38, 1
  store i32 %inc43, i32* %i, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.end41
  br label %do.end

do.end:                                           ; preds = %if.end44
  %39 = load i32, i32* %j, align 4
  %40 = load i32, i32* %prev_i, align 4
  %cmp45 = icmp slt i32 %39, %40
  br i1 %cmp45, label %if.then47, label %if.else56

if.then47:                                        ; preds = %do.end
  br label %do.body48

do.body48:                                        ; preds = %do.cond, %if.then47
  %41 = load i8*, i8** %string.addr, align 4
  %42 = load i32, i32* %prev_i, align 4
  %inc49 = add nsw i32 %42, 1
  store i32 %inc49, i32* %prev_i, align 4
  %arrayidx50 = getelementptr inbounds i8, i8* %41, i32 %42
  %43 = load i8, i8* %arrayidx50, align 1
  %44 = load i8*, i8** %string.addr, align 4
  %45 = load i32, i32* %j, align 4
  %inc51 = add nsw i32 %45, 1
  store i32 %inc51, i32* %j, align 4
  %arrayidx52 = getelementptr inbounds i8, i8* %44, i32 %45
  store i8 %43, i8* %arrayidx52, align 1
  br label %do.cond

do.cond:                                          ; preds = %do.body48
  %46 = load i32, i32* %prev_i, align 4
  %47 = load i32, i32* %i, align 4
  %cmp53 = icmp slt i32 %46, %47
  br i1 %cmp53, label %do.body48, label %do.end55

do.end55:                                         ; preds = %do.cond
  br label %if.end57

if.else56:                                        ; preds = %do.end
  %48 = load i32, i32* %i, align 4
  store i32 %48, i32* %j, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %do.end55
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %49 = load i8*, i8** %string.addr, align 4
  %50 = load i32, i32* %j, align 4
  %arrayidx58 = getelementptr inbounds i8, i8* %49, i32 %50
  store i8 0, i8* %arrayidx58, align 1
  %51 = load i8*, i8** %string.addr, align 4
  ret i8* %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i32, i1) #2

; Function Attrs: noinline nounwind
define internal i32 @is_basic(i8 signext %c) #0 {
entry:
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1
  %0 = load i8, i8* %c.addr, align 1
  %conv = zext i8 %0 to i32
  %shr = ashr i32 %conv, 5
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @is_basic_table, i32 0, i32 %shr
  %1 = load i32, i32* %arrayidx, align 4
  %2 = load i8, i8* %c.addr, align 1
  %conv1 = zext i8 %2 to i32
  %and = and i32 %conv1, 31
  %shr2 = lshr i32 %1, %and
  %and3 = and i32 %shr2, 1
  ret i32 %and3
}

declare i32 @mbrlen(i8*, i32, %struct.__mbstate_t*) #1

; Function Attrs: noinline nounwind
define i32 @skipsubscript(i8* %string, i32 %start, i32 %flags) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %start.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i32, i32* %start.addr, align 4
  %2 = load i32, i32* %flags.addr, align 4
  %call = call i32 @skip_matched_pair(i8* %0, i32 %1, i32 91, i32 93, i32 %2)
  ret i32 %call
}

; Function Attrs: noinline nounwind
define internal i32 @skip_matched_pair(i8* %string, i32 %start, i32 %open, i32 %close, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %start.addr = alloca i32, align 4
  %open.addr = alloca i32, align 4
  %close.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pass_next = alloca i32, align 4
  %backq = alloca i32, align 4
  %si = alloca i32, align 4
  %c = alloca i32, align 4
  %count = alloca i32, align 4
  %oldjmp = alloca i32, align 4
  %slen = alloca i32, align 4
  %temp = alloca i8*, align 4
  %ss = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak50 = alloca %struct.__mbstate_t, align 4
  %mblength51 = alloca i32, align 4
  %_f52 = alloca i32, align 4
  %state_bak181 = alloca %struct.__mbstate_t, align 4
  %mblength182 = alloca i32, align 4
  %_f183 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i32 %open, i32* %open.addr, align 4
  store i32 %close, i32* %close.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32, i32* %start.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %2
  %call = call i32 @strlen(i8* %add.ptr)
  %3 = load i32, i32* %start.addr, align 4
  %add = add i32 %call, %3
  store i32 %add, i32* %slen, align 4
  %4 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  store i32 %4, i32* %oldjmp, align 4
  store i32 1, i32* @no_longjmp_on_fatal_error, align 4
  %5 = load i32, i32* %start.addr, align 4
  %add1 = add nsw i32 %5, 1
  store i32 %add1, i32* %i, align 4
  store i32 1, i32* %count, align 4
  store i32 0, i32* %backq, align 4
  store i32 0, i32* %pass_next, align 4
  %6 = load i8*, i8** %string.addr, align 4
  store i8* %6, i8** %ss, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end220, %if.end174, %if.end106, %if.then96, %if.then87, %do.end81, %if.then37, %do.end33, %entry
  %7 = load i8*, i8** %string.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %7, i32 %8
  %9 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %9 to i32
  store i32 %conv, i32* %c, align 4
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %pass_next, align 4
  %tobool2 = icmp ne i32 %10, 0
  br i1 %tobool2, label %if.then, label %if.else34

if.then:                                          ; preds = %while.body
  store i32 0, i32* %pass_next, align 4
  %11 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.then4
  %12 = load i32, i32* %oldjmp, align 4
  store i32 %12, i32* @no_longjmp_on_fatal_error, align 4
  %13 = load i32, i32* %i, align 4
  store i32 %13, i32* %retval, align 4
  br label %do.end222

do.end:                                           ; No predecessors!
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  br label %do.body5

do.body5:                                         ; preds = %if.end
  %14 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp6 = icmp sgt i32 %14, 1
  br i1 %cmp6, label %if.then8, label %if.else30

if.then8:                                         ; preds = %do.body5
  %15 = load i8*, i8** %string.addr, align 4
  %16 = load i32, i32* %i, align 4
  %arrayidx9 = getelementptr inbounds i8, i8* %15, i32 %16
  %17 = load i8, i8* %arrayidx9, align 1
  %call10 = call i32 @is_basic(i8 signext %17)
  store i32 %call10, i32* %_f, align 4
  %18 = load i32, i32* %_f, align 4
  %tobool11 = icmp ne i32 %18, 0
  br i1 %tobool11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.then8
  store i32 1, i32* %mblength, align 4
  br label %if.end15

if.else:                                          ; preds = %if.then8
  %19 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %20 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %19, i8* %20, i32 8, i32 4, i1 false)
  %21 = load i8*, i8** %string.addr, align 4
  %22 = load i32, i32* %i, align 4
  %add.ptr13 = getelementptr inbounds i8, i8* %21, i32 %22
  %23 = load i32, i32* %slen, align 4
  %24 = load i32, i32* %i, align 4
  %sub = sub i32 %23, %24
  %call14 = call i32 @mbrlen(i8* %add.ptr13, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call14, i32* %mblength, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  %25 = load i32, i32* %mblength, align 4
  %cmp16 = icmp eq i32 %25, -2
  br i1 %cmp16, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end15
  %26 = load i32, i32* %mblength, align 4
  %cmp18 = icmp eq i32 %26, -1
  br i1 %cmp18, label %if.then20, label %if.else21

if.then20:                                        ; preds = %lor.lhs.false, %if.end15
  %27 = bitcast %struct.__mbstate_t* %state to i8*
  %28 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %28, i32 8, i32 4, i1 false)
  %29 = load i32, i32* %i, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end29

if.else21:                                        ; preds = %lor.lhs.false
  %30 = load i32, i32* %mblength, align 4
  %cmp22 = icmp eq i32 %30, 0
  br i1 %cmp22, label %if.then24, label %if.else26

if.then24:                                        ; preds = %if.else21
  %31 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %31, 1
  store i32 %inc25, i32* %i, align 4
  br label %if.end28

if.else26:                                        ; preds = %if.else21
  %32 = load i32, i32* %mblength, align 4
  %33 = load i32, i32* %i, align 4
  %add27 = add i32 %33, %32
  store i32 %add27, i32* %i, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then20
  br label %if.end32

if.else30:                                        ; preds = %do.body5
  %34 = load i32, i32* %i, align 4
  %inc31 = add nsw i32 %34, 1
  store i32 %inc31, i32* %i, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.end29
  br label %do.end33

do.end33:                                         ; preds = %if.end32
  br label %while.cond

if.else34:                                        ; preds = %while.body
  %35 = load i32, i32* %c, align 4
  %cmp35 = icmp eq i32 %35, 92
  br i1 %cmp35, label %if.then37, label %if.else39

if.then37:                                        ; preds = %if.else34
  store i32 1, i32* %pass_next, align 4
  %36 = load i32, i32* %i, align 4
  %inc38 = add nsw i32 %36, 1
  store i32 %inc38, i32* %i, align 4
  br label %while.cond

if.else39:                                        ; preds = %if.else34
  %37 = load i32, i32* %backq, align 4
  %tobool40 = icmp ne i32 %37, 0
  br i1 %tobool40, label %if.then41, label %if.else82

if.then41:                                        ; preds = %if.else39
  %38 = load i32, i32* %c, align 4
  %cmp42 = icmp eq i32 %38, 96
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.then41
  store i32 0, i32* %backq, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.then41
  br label %do.body46

do.body46:                                        ; preds = %if.end45
  %39 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp47 = icmp sgt i32 %39, 1
  br i1 %cmp47, label %if.then49, label %if.else78

if.then49:                                        ; preds = %do.body46
  %40 = load i8*, i8** %string.addr, align 4
  %41 = load i32, i32* %i, align 4
  %arrayidx53 = getelementptr inbounds i8, i8* %40, i32 %41
  %42 = load i8, i8* %arrayidx53, align 1
  %call54 = call i32 @is_basic(i8 signext %42)
  store i32 %call54, i32* %_f52, align 4
  %43 = load i32, i32* %_f52, align 4
  %tobool55 = icmp ne i32 %43, 0
  br i1 %tobool55, label %if.then56, label %if.else57

if.then56:                                        ; preds = %if.then49
  store i32 1, i32* %mblength51, align 4
  br label %if.end61

if.else57:                                        ; preds = %if.then49
  %44 = bitcast %struct.__mbstate_t* %state_bak50 to i8*
  %45 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %44, i8* %45, i32 8, i32 4, i1 false)
  %46 = load i8*, i8** %string.addr, align 4
  %47 = load i32, i32* %i, align 4
  %add.ptr58 = getelementptr inbounds i8, i8* %46, i32 %47
  %48 = load i32, i32* %slen, align 4
  %49 = load i32, i32* %i, align 4
  %sub59 = sub i32 %48, %49
  %call60 = call i32 @mbrlen(i8* %add.ptr58, i32 %sub59, %struct.__mbstate_t* %state)
  store i32 %call60, i32* %mblength51, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.else57, %if.then56
  %50 = load i32, i32* %mblength51, align 4
  %cmp62 = icmp eq i32 %50, -2
  br i1 %cmp62, label %if.then67, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %if.end61
  %51 = load i32, i32* %mblength51, align 4
  %cmp65 = icmp eq i32 %51, -1
  br i1 %cmp65, label %if.then67, label %if.else69

if.then67:                                        ; preds = %lor.lhs.false64, %if.end61
  %52 = bitcast %struct.__mbstate_t* %state to i8*
  %53 = bitcast %struct.__mbstate_t* %state_bak50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %52, i8* %53, i32 8, i32 4, i1 false)
  %54 = load i32, i32* %i, align 4
  %inc68 = add nsw i32 %54, 1
  store i32 %inc68, i32* %i, align 4
  br label %if.end77

if.else69:                                        ; preds = %lor.lhs.false64
  %55 = load i32, i32* %mblength51, align 4
  %cmp70 = icmp eq i32 %55, 0
  br i1 %cmp70, label %if.then72, label %if.else74

if.then72:                                        ; preds = %if.else69
  %56 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %56, 1
  store i32 %inc73, i32* %i, align 4
  br label %if.end76

if.else74:                                        ; preds = %if.else69
  %57 = load i32, i32* %mblength51, align 4
  %58 = load i32, i32* %i, align 4
  %add75 = add i32 %58, %57
  store i32 %add75, i32* %i, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else74, %if.then72
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then67
  br label %if.end80

if.else78:                                        ; preds = %do.body46
  %59 = load i32, i32* %i, align 4
  %inc79 = add nsw i32 %59, 1
  store i32 %inc79, i32* %i, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.end77
  br label %do.end81

do.end81:                                         ; preds = %if.end80
  br label %while.cond

if.else82:                                        ; preds = %if.else39
  %60 = load i32, i32* %flags.addr, align 4
  %and = and i32 %60, 1
  %cmp83 = icmp eq i32 %and, 0
  br i1 %cmp83, label %land.lhs.true, label %if.else89

land.lhs.true:                                    ; preds = %if.else82
  %61 = load i32, i32* %c, align 4
  %cmp85 = icmp eq i32 %61, 96
  br i1 %cmp85, label %if.then87, label %if.else89

if.then87:                                        ; preds = %land.lhs.true
  store i32 1, i32* %backq, align 4
  %62 = load i32, i32* %i, align 4
  %inc88 = add nsw i32 %62, 1
  store i32 %inc88, i32* %i, align 4
  br label %while.cond

if.else89:                                        ; preds = %land.lhs.true, %if.else82
  %63 = load i32, i32* %flags.addr, align 4
  %and90 = and i32 %63, 1
  %cmp91 = icmp eq i32 %and90, 0
  br i1 %cmp91, label %land.lhs.true93, label %if.else99

land.lhs.true93:                                  ; preds = %if.else89
  %64 = load i32, i32* %c, align 4
  %65 = load i32, i32* %open.addr, align 4
  %cmp94 = icmp eq i32 %64, %65
  br i1 %cmp94, label %if.then96, label %if.else99

if.then96:                                        ; preds = %land.lhs.true93
  %66 = load i32, i32* %count, align 4
  %inc97 = add nsw i32 %66, 1
  store i32 %inc97, i32* %count, align 4
  %67 = load i32, i32* %i, align 4
  %inc98 = add nsw i32 %67, 1
  store i32 %inc98, i32* %i, align 4
  br label %while.cond

if.else99:                                        ; preds = %land.lhs.true93, %if.else89
  %68 = load i32, i32* %c, align 4
  %69 = load i32, i32* %close.addr, align 4
  %cmp100 = icmp eq i32 %68, %69
  br i1 %cmp100, label %if.then102, label %if.else108

if.then102:                                       ; preds = %if.else99
  %70 = load i32, i32* %count, align 4
  %dec = add nsw i32 %70, -1
  store i32 %dec, i32* %count, align 4
  %71 = load i32, i32* %count, align 4
  %cmp103 = icmp eq i32 %71, 0
  br i1 %cmp103, label %if.then105, label %if.end106

if.then105:                                       ; preds = %if.then102
  br label %while.end

if.end106:                                        ; preds = %if.then102
  %72 = load i32, i32* %i, align 4
  %inc107 = add nsw i32 %72, 1
  store i32 %inc107, i32* %i, align 4
  br label %while.cond

if.else108:                                       ; preds = %if.else99
  %73 = load i32, i32* %flags.addr, align 4
  %and109 = and i32 %73, 1
  %cmp110 = icmp eq i32 %and109, 0
  br i1 %cmp110, label %land.lhs.true112, label %if.else125

land.lhs.true112:                                 ; preds = %if.else108
  %74 = load i32, i32* %c, align 4
  %cmp113 = icmp eq i32 %74, 39
  br i1 %cmp113, label %if.then118, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %land.lhs.true112
  %75 = load i32, i32* %c, align 4
  %cmp116 = icmp eq i32 %75, 34
  br i1 %cmp116, label %if.then118, label %if.else125

if.then118:                                       ; preds = %lor.lhs.false115, %land.lhs.true112
  %76 = load i32, i32* %c, align 4
  %cmp119 = icmp eq i32 %76, 39
  br i1 %cmp119, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then118
  %77 = load i8*, i8** %ss, align 4
  %78 = load i32, i32* %slen, align 4
  %79 = load i32, i32* %i, align 4
  %inc121 = add nsw i32 %79, 1
  store i32 %inc121, i32* %i, align 4
  %call122 = call i32 @skip_single_quoted(i8* %77, i32 %78, i32 %inc121, i32 0)
  br label %cond.end

cond.false:                                       ; preds = %if.then118
  %80 = load i8*, i8** %ss, align 4
  %81 = load i32, i32* %slen, align 4
  %82 = load i32, i32* %i, align 4
  %inc123 = add nsw i32 %82, 1
  store i32 %inc123, i32* %i, align 4
  %call124 = call i32 @skip_double_quoted(i8* %80, i32 %81, i32 %inc123, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call122, %cond.true ], [ %call124, %cond.false ]
  store i32 %cond, i32* %i, align 4
  br label %if.end214

if.else125:                                       ; preds = %lor.lhs.false115, %if.else108
  %83 = load i32, i32* %flags.addr, align 4
  %and126 = and i32 %83, 1
  %cmp127 = icmp eq i32 %and126, 0
  br i1 %cmp127, label %land.lhs.true129, label %if.else176

land.lhs.true129:                                 ; preds = %if.else125
  %84 = load i32, i32* %c, align 4
  %cmp130 = icmp eq i32 %84, 36
  br i1 %cmp130, label %land.lhs.true132, label %if.else176

land.lhs.true132:                                 ; preds = %land.lhs.true129
  %85 = load i8*, i8** %string.addr, align 4
  %86 = load i32, i32* %i, align 4
  %add133 = add nsw i32 %86, 1
  %arrayidx134 = getelementptr inbounds i8, i8* %85, i32 %add133
  %87 = load i8, i8* %arrayidx134, align 1
  %conv135 = sext i8 %87 to i32
  %cmp136 = icmp eq i32 %conv135, 40
  br i1 %cmp136, label %if.then144, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %land.lhs.true132
  %88 = load i8*, i8** %string.addr, align 4
  %89 = load i32, i32* %i, align 4
  %add139 = add nsw i32 %89, 1
  %arrayidx140 = getelementptr inbounds i8, i8* %88, i32 %add139
  %90 = load i8, i8* %arrayidx140, align 1
  %conv141 = sext i8 %90 to i32
  %cmp142 = icmp eq i32 %conv141, 123
  br i1 %cmp142, label %if.then144, label %if.else176

if.then144:                                       ; preds = %lor.lhs.false138, %land.lhs.true132
  %91 = load i32, i32* %i, align 4
  %add145 = add nsw i32 %91, 2
  store i32 %add145, i32* %si, align 4
  %92 = load i8*, i8** %string.addr, align 4
  %93 = load i32, i32* %si, align 4
  %arrayidx146 = getelementptr inbounds i8, i8* %92, i32 %93
  %94 = load i8, i8* %arrayidx146, align 1
  %conv147 = sext i8 %94 to i32
  %cmp148 = icmp eq i32 %conv147, 0
  br i1 %cmp148, label %if.then150, label %if.end153

if.then150:                                       ; preds = %if.then144
  br label %do.body151

do.body151:                                       ; preds = %if.then150
  %95 = load i32, i32* %oldjmp, align 4
  store i32 %95, i32* @no_longjmp_on_fatal_error, align 4
  %96 = load i32, i32* %si, align 4
  store i32 %96, i32* %retval, align 4
  br label %do.end222

do.end152:                                        ; No predecessors!
  br label %if.end153

if.end153:                                        ; preds = %do.end152, %if.then144
  %97 = load i8*, i8** %string.addr, align 4
  %98 = load i32, i32* %i, align 4
  %add154 = add nsw i32 %98, 1
  %arrayidx155 = getelementptr inbounds i8, i8* %97, i32 %add154
  %99 = load i8, i8* %arrayidx155, align 1
  %conv156 = sext i8 %99 to i32
  %cmp157 = icmp eq i32 %conv156, 40
  br i1 %cmp157, label %if.then159, label %if.else161

if.then159:                                       ; preds = %if.end153
  %100 = load i8*, i8** %ss, align 4
  %call160 = call i8* @extract_delimited_string(i8* %100, i32* %si, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i32 9)
  store i8* %call160, i8** %temp, align 4
  br label %if.end163

if.else161:                                       ; preds = %if.end153
  %101 = load i8*, i8** %ss, align 4
  %call162 = call i8* @extract_dollar_brace_string(i8* %101, i32* %si, i32 0, i32 1)
  store i8* %call162, i8** %temp, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.else161, %if.then159
  %102 = load i32, i32* %si, align 4
  %103 = load i32, i32* %slen, align 4
  %cmp164 = icmp uge i32 %102, %103
  br i1 %cmp164, label %if.then166, label %if.else167

if.then166:                                       ; preds = %if.end163
  %104 = load i32, i32* %slen, align 4
  store i32 %104, i32* %i, align 4
  store i32 0, i32* %c, align 4
  br label %while.end

if.else167:                                       ; preds = %if.end163
  br label %if.end168

if.end168:                                        ; preds = %if.else167
  %105 = load i32, i32* %si, align 4
  store i32 %105, i32* %i, align 4
  %106 = load i8*, i8** %string.addr, align 4
  %107 = load i32, i32* %i, align 4
  %arrayidx169 = getelementptr inbounds i8, i8* %106, i32 %107
  %108 = load i8, i8* %arrayidx169, align 1
  %conv170 = sext i8 %108 to i32
  %cmp171 = icmp eq i32 %conv170, 0
  br i1 %cmp171, label %if.then173, label %if.end174

if.then173:                                       ; preds = %if.end168
  br label %while.end

if.end174:                                        ; preds = %if.end168
  %109 = load i32, i32* %i, align 4
  %inc175 = add nsw i32 %109, 1
  store i32 %inc175, i32* %i, align 4
  br label %while.cond

if.else176:                                       ; preds = %lor.lhs.false138, %land.lhs.true129, %if.else125
  br label %do.body177

do.body177:                                       ; preds = %if.else176
  %110 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp178 = icmp sgt i32 %110, 1
  br i1 %cmp178, label %if.then180, label %if.else209

if.then180:                                       ; preds = %do.body177
  %111 = load i8*, i8** %string.addr, align 4
  %112 = load i32, i32* %i, align 4
  %arrayidx184 = getelementptr inbounds i8, i8* %111, i32 %112
  %113 = load i8, i8* %arrayidx184, align 1
  %call185 = call i32 @is_basic(i8 signext %113)
  store i32 %call185, i32* %_f183, align 4
  %114 = load i32, i32* %_f183, align 4
  %tobool186 = icmp ne i32 %114, 0
  br i1 %tobool186, label %if.then187, label %if.else188

if.then187:                                       ; preds = %if.then180
  store i32 1, i32* %mblength182, align 4
  br label %if.end192

if.else188:                                       ; preds = %if.then180
  %115 = bitcast %struct.__mbstate_t* %state_bak181 to i8*
  %116 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %115, i8* %116, i32 8, i32 4, i1 false)
  %117 = load i8*, i8** %string.addr, align 4
  %118 = load i32, i32* %i, align 4
  %add.ptr189 = getelementptr inbounds i8, i8* %117, i32 %118
  %119 = load i32, i32* %slen, align 4
  %120 = load i32, i32* %i, align 4
  %sub190 = sub i32 %119, %120
  %call191 = call i32 @mbrlen(i8* %add.ptr189, i32 %sub190, %struct.__mbstate_t* %state)
  store i32 %call191, i32* %mblength182, align 4
  br label %if.end192

if.end192:                                        ; preds = %if.else188, %if.then187
  %121 = load i32, i32* %mblength182, align 4
  %cmp193 = icmp eq i32 %121, -2
  br i1 %cmp193, label %if.then198, label %lor.lhs.false195

lor.lhs.false195:                                 ; preds = %if.end192
  %122 = load i32, i32* %mblength182, align 4
  %cmp196 = icmp eq i32 %122, -1
  br i1 %cmp196, label %if.then198, label %if.else200

if.then198:                                       ; preds = %lor.lhs.false195, %if.end192
  %123 = bitcast %struct.__mbstate_t* %state to i8*
  %124 = bitcast %struct.__mbstate_t* %state_bak181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %123, i8* %124, i32 8, i32 4, i1 false)
  %125 = load i32, i32* %i, align 4
  %inc199 = add nsw i32 %125, 1
  store i32 %inc199, i32* %i, align 4
  br label %if.end208

if.else200:                                       ; preds = %lor.lhs.false195
  %126 = load i32, i32* %mblength182, align 4
  %cmp201 = icmp eq i32 %126, 0
  br i1 %cmp201, label %if.then203, label %if.else205

if.then203:                                       ; preds = %if.else200
  %127 = load i32, i32* %i, align 4
  %inc204 = add nsw i32 %127, 1
  store i32 %inc204, i32* %i, align 4
  br label %if.end207

if.else205:                                       ; preds = %if.else200
  %128 = load i32, i32* %mblength182, align 4
  %129 = load i32, i32* %i, align 4
  %add206 = add i32 %129, %128
  store i32 %add206, i32* %i, align 4
  br label %if.end207

if.end207:                                        ; preds = %if.else205, %if.then203
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then198
  br label %if.end211

if.else209:                                       ; preds = %do.body177
  %130 = load i32, i32* %i, align 4
  %inc210 = add nsw i32 %130, 1
  store i32 %inc210, i32* %i, align 4
  br label %if.end211

if.end211:                                        ; preds = %if.else209, %if.end208
  br label %do.end212

do.end212:                                        ; preds = %if.end211
  br label %if.end213

if.end213:                                        ; preds = %do.end212
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %cond.end
  br label %if.end215

if.end215:                                        ; preds = %if.end214
  br label %if.end216

if.end216:                                        ; preds = %if.end215
  br label %if.end217

if.end217:                                        ; preds = %if.end216
  br label %if.end218

if.end218:                                        ; preds = %if.end217
  br label %if.end219

if.end219:                                        ; preds = %if.end218
  br label %if.end220

if.end220:                                        ; preds = %if.end219
  br label %while.cond

while.end:                                        ; preds = %if.then173, %if.then166, %if.then105, %while.cond
  br label %do.body221

do.body221:                                       ; preds = %while.end
  %131 = load i32, i32* %oldjmp, align 4
  store i32 %131, i32* @no_longjmp_on_fatal_error, align 4
  %132 = load i32, i32* %i, align 4
  store i32 %132, i32* %retval, align 4
  br label %do.end222

do.end222:                                        ; preds = %do.body, %do.body151, %do.body221
  %133 = load i32, i32* %retval, align 4
  ret i32 %133
}

; Function Attrs: noinline nounwind
define i32 @skip_to_delim(i8* %string, i32 %start, i8* %delims, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %start.addr = alloca i32, align 4
  %delims.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pass_next = alloca i32, align 4
  %backq = alloca i32, align 4
  %dquote = alloca i32, align 4
  %si = alloca i32, align 4
  %c = alloca i32, align 4
  %oldjmp = alloca i32, align 4
  %invert = alloca i32, align 4
  %skipquote = alloca i32, align 4
  %skipcmd = alloca i32, align 4
  %noprocsub = alloca i32, align 4
  %completeflag = alloca i32, align 4
  %arithexp = alloca i32, align 4
  %skipcol = alloca i32, align 4
  %slen = alloca i32, align 4
  %temp = alloca i8*, align 4
  %open = alloca [3 x i8], align 1
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak66 = alloca %struct.__mbstate_t, align 4
  %mblength67 = alloca i32, align 4
  %_f68 = alloca i32, align 4
  %state_bak349 = alloca %struct.__mbstate_t, align 4
  %mblength350 = alloca i32, align 4
  %_f351 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i8* %delims, i8** %delims.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32, i32* %start.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %2
  %call = call i32 @strlen(i8* %add.ptr)
  %3 = load i32, i32* %start.addr, align 4
  %add = add i32 %call, %3
  store i32 %add, i32* %slen, align 4
  %4 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  store i32 %4, i32* %oldjmp, align 4
  %5 = load i32, i32* %flags.addr, align 4
  %and = and i32 %5, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* @no_longjmp_on_fatal_error, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %6, 2
  store i32 %and1, i32* %invert, align 4
  %7 = load i32, i32* %flags.addr, align 4
  %and2 = and i32 %7, 8
  %cmp = icmp eq i32 %and2, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %skipcmd, align 4
  %8 = load i32, i32* %flags.addr, align 4
  %and3 = and i32 %8, 128
  store i32 %and3, i32* %noprocsub, align 4
  %9 = load i32, i32* %flags.addr, align 4
  %and4 = and i32 %9, 256
  %tobool5 = icmp ne i32 %and4, 0
  %cond = select i1 %tobool5, i32 1024, i32 0
  store i32 %cond, i32* %completeflag, align 4
  %10 = load i32, i32* %flags.addr, align 4
  %and6 = and i32 %10, 1024
  store i32 %and6, i32* %arithexp, align 4
  store i32 0, i32* %skipcol, align 4
  %11 = load i32, i32* %start.addr, align 4
  store i32 %11, i32* %i, align 4
  store i32 0, i32* %dquote, align 4
  store i32 0, i32* %backq, align 4
  store i32 0, i32* %pass_next, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end396, %if.end327, %if.end303, %if.end263, %if.end225, %if.end181, %if.then116, %if.then109, %if.then101, %do.end97, %if.then53, %do.end49, %if.end
  %12 = load i8*, i8** %string.addr, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %12, i32 %13
  %14 = load i8, i8* %arrayidx, align 1
  %conv7 = sext i8 %14 to i32
  store i32 %conv7, i32* %c, align 4
  %tobool8 = icmp ne i32 %conv7, 0
  br i1 %tobool8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %15 = load i32, i32* %flags.addr, align 4
  %and9 = and i32 %15, 4
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.body
  %16 = load i32, i32* %c, align 4
  %cmp11 = icmp eq i32 %16, 39
  br i1 %cmp11, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %17 = load i32, i32* %c, align 4
  %cmp13 = icmp eq i32 %17, 34
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %18 = phi i1 [ true, %land.rhs ], [ %cmp13, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.body
  %19 = phi i1 [ false, %while.body ], [ %18, %lor.end ]
  %land.ext = zext i1 %19 to i32
  store i32 %land.ext, i32* %skipquote, align 4
  %20 = load i32, i32* %pass_next, align 4
  %tobool15 = icmp ne i32 %20, 0
  br i1 %tobool15, label %if.then16, label %if.else50

if.then16:                                        ; preds = %land.end
  store i32 0, i32* %pass_next, align 4
  %21 = load i32, i32* %c, align 4
  %cmp17 = icmp eq i32 %21, 0
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then16
  br label %do.body

do.body:                                          ; preds = %if.then19
  %22 = load i32, i32* %oldjmp, align 4
  store i32 %22, i32* @no_longjmp_on_fatal_error, align 4
  %23 = load i32, i32* %i, align 4
  store i32 %23, i32* %retval, align 4
  br label %do.end398

do.end:                                           ; No predecessors!
  br label %if.end20

if.end20:                                         ; preds = %do.end, %if.then16
  br label %do.body21

do.body21:                                        ; preds = %if.end20
  %24 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp22 = icmp sgt i32 %24, 1
  br i1 %cmp22, label %if.then24, label %if.else46

if.then24:                                        ; preds = %do.body21
  %25 = load i8*, i8** %string.addr, align 4
  %26 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %25, i32 %26
  %27 = load i8, i8* %arrayidx25, align 1
  %call26 = call i32 @is_basic(i8 signext %27)
  store i32 %call26, i32* %_f, align 4
  %28 = load i32, i32* %_f, align 4
  %tobool27 = icmp ne i32 %28, 0
  br i1 %tobool27, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then24
  store i32 1, i32* %mblength, align 4
  br label %if.end31

if.else:                                          ; preds = %if.then24
  %29 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %30 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %29, i8* %30, i32 8, i32 4, i1 false)
  %31 = load i8*, i8** %string.addr, align 4
  %32 = load i32, i32* %i, align 4
  %add.ptr29 = getelementptr inbounds i8, i8* %31, i32 %32
  %33 = load i32, i32* %slen, align 4
  %34 = load i32, i32* %i, align 4
  %sub = sub i32 %33, %34
  %call30 = call i32 @mbrlen(i8* %add.ptr29, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call30, i32* %mblength, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then28
  %35 = load i32, i32* %mblength, align 4
  %cmp32 = icmp eq i32 %35, -2
  br i1 %cmp32, label %if.then36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end31
  %36 = load i32, i32* %mblength, align 4
  %cmp34 = icmp eq i32 %36, -1
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  %37 = bitcast %struct.__mbstate_t* %state to i8*
  %38 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %37, i8* %38, i32 8, i32 4, i1 false)
  %39 = load i32, i32* %i, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end45

if.else37:                                        ; preds = %lor.lhs.false
  %40 = load i32, i32* %mblength, align 4
  %cmp38 = icmp eq i32 %40, 0
  br i1 %cmp38, label %if.then40, label %if.else42

if.then40:                                        ; preds = %if.else37
  %41 = load i32, i32* %i, align 4
  %inc41 = add nsw i32 %41, 1
  store i32 %inc41, i32* %i, align 4
  br label %if.end44

if.else42:                                        ; preds = %if.else37
  %42 = load i32, i32* %mblength, align 4
  %43 = load i32, i32* %i, align 4
  %add43 = add i32 %43, %42
  store i32 %add43, i32* %i, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then40
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then36
  br label %if.end48

if.else46:                                        ; preds = %do.body21
  %44 = load i32, i32* %i, align 4
  %inc47 = add nsw i32 %44, 1
  store i32 %inc47, i32* %i, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.end45
  br label %do.end49

do.end49:                                         ; preds = %if.end48
  br label %while.cond

if.else50:                                        ; preds = %land.end
  %45 = load i32, i32* %c, align 4
  %cmp51 = icmp eq i32 %45, 92
  br i1 %cmp51, label %if.then53, label %if.else55

if.then53:                                        ; preds = %if.else50
  store i32 1, i32* %pass_next, align 4
  %46 = load i32, i32* %i, align 4
  %inc54 = add nsw i32 %46, 1
  store i32 %inc54, i32* %i, align 4
  br label %while.cond

if.else55:                                        ; preds = %if.else50
  %47 = load i32, i32* %backq, align 4
  %tobool56 = icmp ne i32 %47, 0
  br i1 %tobool56, label %if.then57, label %if.else98

if.then57:                                        ; preds = %if.else55
  %48 = load i32, i32* %c, align 4
  %cmp58 = icmp eq i32 %48, 96
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.then57
  store i32 0, i32* %backq, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.then57
  br label %do.body62

do.body62:                                        ; preds = %if.end61
  %49 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp63 = icmp sgt i32 %49, 1
  br i1 %cmp63, label %if.then65, label %if.else94

if.then65:                                        ; preds = %do.body62
  %50 = load i8*, i8** %string.addr, align 4
  %51 = load i32, i32* %i, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %50, i32 %51
  %52 = load i8, i8* %arrayidx69, align 1
  %call70 = call i32 @is_basic(i8 signext %52)
  store i32 %call70, i32* %_f68, align 4
  %53 = load i32, i32* %_f68, align 4
  %tobool71 = icmp ne i32 %53, 0
  br i1 %tobool71, label %if.then72, label %if.else73

if.then72:                                        ; preds = %if.then65
  store i32 1, i32* %mblength67, align 4
  br label %if.end77

if.else73:                                        ; preds = %if.then65
  %54 = bitcast %struct.__mbstate_t* %state_bak66 to i8*
  %55 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %54, i8* %55, i32 8, i32 4, i1 false)
  %56 = load i8*, i8** %string.addr, align 4
  %57 = load i32, i32* %i, align 4
  %add.ptr74 = getelementptr inbounds i8, i8* %56, i32 %57
  %58 = load i32, i32* %slen, align 4
  %59 = load i32, i32* %i, align 4
  %sub75 = sub i32 %58, %59
  %call76 = call i32 @mbrlen(i8* %add.ptr74, i32 %sub75, %struct.__mbstate_t* %state)
  store i32 %call76, i32* %mblength67, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.else73, %if.then72
  %60 = load i32, i32* %mblength67, align 4
  %cmp78 = icmp eq i32 %60, -2
  br i1 %cmp78, label %if.then83, label %lor.lhs.false80

lor.lhs.false80:                                  ; preds = %if.end77
  %61 = load i32, i32* %mblength67, align 4
  %cmp81 = icmp eq i32 %61, -1
  br i1 %cmp81, label %if.then83, label %if.else85

if.then83:                                        ; preds = %lor.lhs.false80, %if.end77
  %62 = bitcast %struct.__mbstate_t* %state to i8*
  %63 = bitcast %struct.__mbstate_t* %state_bak66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %62, i8* %63, i32 8, i32 4, i1 false)
  %64 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %64, 1
  store i32 %inc84, i32* %i, align 4
  br label %if.end93

if.else85:                                        ; preds = %lor.lhs.false80
  %65 = load i32, i32* %mblength67, align 4
  %cmp86 = icmp eq i32 %65, 0
  br i1 %cmp86, label %if.then88, label %if.else90

if.then88:                                        ; preds = %if.else85
  %66 = load i32, i32* %i, align 4
  %inc89 = add nsw i32 %66, 1
  store i32 %inc89, i32* %i, align 4
  br label %if.end92

if.else90:                                        ; preds = %if.else85
  %67 = load i32, i32* %mblength67, align 4
  %68 = load i32, i32* %i, align 4
  %add91 = add i32 %68, %67
  store i32 %add91, i32* %i, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %if.then88
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end96

if.else94:                                        ; preds = %do.body62
  %69 = load i32, i32* %i, align 4
  %inc95 = add nsw i32 %69, 1
  store i32 %inc95, i32* %i, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.end93
  br label %do.end97

do.end97:                                         ; preds = %if.end96
  br label %while.cond

if.else98:                                        ; preds = %if.else55
  %70 = load i32, i32* %c, align 4
  %cmp99 = icmp eq i32 %70, 96
  br i1 %cmp99, label %if.then101, label %if.else103

if.then101:                                       ; preds = %if.else98
  store i32 1, i32* %backq, align 4
  %71 = load i32, i32* %i, align 4
  %inc102 = add nsw i32 %71, 1
  store i32 %inc102, i32* %i, align 4
  br label %while.cond

if.else103:                                       ; preds = %if.else98
  %72 = load i32, i32* %arithexp, align 4
  %tobool104 = icmp ne i32 %72, 0
  br i1 %tobool104, label %land.lhs.true, label %if.else111

land.lhs.true:                                    ; preds = %if.else103
  %73 = load i32, i32* %skipcol, align 4
  %tobool105 = icmp ne i32 %73, 0
  br i1 %tobool105, label %land.lhs.true106, label %if.else111

land.lhs.true106:                                 ; preds = %land.lhs.true
  %74 = load i32, i32* %c, align 4
  %cmp107 = icmp eq i32 %74, 58
  br i1 %cmp107, label %if.then109, label %if.else111

if.then109:                                       ; preds = %land.lhs.true106
  %75 = load i32, i32* %skipcol, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %skipcol, align 4
  %76 = load i32, i32* %i, align 4
  %inc110 = add nsw i32 %76, 1
  store i32 %inc110, i32* %i, align 4
  br label %while.cond

if.else111:                                       ; preds = %land.lhs.true106, %land.lhs.true, %if.else103
  %77 = load i32, i32* %arithexp, align 4
  %tobool112 = icmp ne i32 %77, 0
  br i1 %tobool112, label %land.lhs.true113, label %if.else119

land.lhs.true113:                                 ; preds = %if.else111
  %78 = load i32, i32* %c, align 4
  %cmp114 = icmp eq i32 %78, 63
  br i1 %cmp114, label %if.then116, label %if.else119

if.then116:                                       ; preds = %land.lhs.true113
  %79 = load i32, i32* %skipcol, align 4
  %inc117 = add nsw i32 %79, 1
  store i32 %inc117, i32* %skipcol, align 4
  %80 = load i32, i32* %i, align 4
  %inc118 = add nsw i32 %80, 1
  store i32 %inc118, i32* %i, align 4
  br label %while.cond

if.else119:                                       ; preds = %land.lhs.true113, %if.else111
  %81 = load i32, i32* %skipquote, align 4
  %cmp120 = icmp eq i32 %81, 0
  br i1 %cmp120, label %land.lhs.true122, label %if.else131

land.lhs.true122:                                 ; preds = %if.else119
  %82 = load i32, i32* %invert, align 4
  %cmp123 = icmp eq i32 %82, 0
  br i1 %cmp123, label %land.lhs.true125, label %if.else131

land.lhs.true125:                                 ; preds = %land.lhs.true122
  %83 = load i32, i32* %c, align 4
  %tobool126 = icmp ne i32 %83, 0
  br i1 %tobool126, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true125
  %84 = load i8*, i8** %delims.addr, align 4
  %85 = load i32, i32* %c, align 4
  %call127 = call i8* @mbschr(i8* %84, i32 %85)
  %cmp128 = icmp ne i8* %call127, null
  br i1 %cmp128, label %if.then130, label %if.else131

cond.false:                                       ; preds = %land.lhs.true125
  br i1 false, label %if.then130, label %if.else131

if.then130:                                       ; preds = %cond.false, %cond.true
  br label %while.end

if.else131:                                       ; preds = %cond.false, %cond.true, %land.lhs.true122, %if.else119
  %86 = load i32, i32* %completeflag, align 4
  %tobool132 = icmp ne i32 %86, 0
  br i1 %tobool132, label %land.lhs.true133, label %if.else148

land.lhs.true133:                                 ; preds = %if.else131
  %87 = load i32, i32* %i, align 4
  %cmp134 = icmp sgt i32 %87, 0
  br i1 %cmp134, label %land.lhs.true136, label %if.else148

land.lhs.true136:                                 ; preds = %land.lhs.true133
  %88 = load i8*, i8** %string.addr, align 4
  %89 = load i32, i32* %i, align 4
  %sub137 = sub nsw i32 %89, 1
  %arrayidx138 = getelementptr inbounds i8, i8* %88, i32 %sub137
  %90 = load i8, i8* %arrayidx138, align 1
  %conv139 = sext i8 %90 to i32
  %cmp140 = icmp eq i32 %conv139, 36
  br i1 %cmp140, label %land.lhs.true142, label %if.else148

land.lhs.true142:                                 ; preds = %land.lhs.true136
  %91 = load i32, i32* %c, align 4
  %cmp143 = icmp eq i32 %91, 39
  br i1 %cmp143, label %if.then145, label %if.else148

if.then145:                                       ; preds = %land.lhs.true142
  %92 = load i8*, i8** %string.addr, align 4
  %93 = load i32, i32* %slen, align 4
  %94 = load i32, i32* %i, align 4
  %inc146 = add nsw i32 %94, 1
  store i32 %inc146, i32* %i, align 4
  %call147 = call i32 @skip_single_quoted(i8* %92, i32 %93, i32 %inc146, i32 1024)
  store i32 %call147, i32* %i, align 4
  br label %if.end389

if.else148:                                       ; preds = %land.lhs.true142, %land.lhs.true136, %land.lhs.true133, %if.else131
  %95 = load i32, i32* %c, align 4
  %cmp149 = icmp eq i32 %95, 39
  br i1 %cmp149, label %if.then151, label %if.else154

if.then151:                                       ; preds = %if.else148
  %96 = load i8*, i8** %string.addr, align 4
  %97 = load i32, i32* %slen, align 4
  %98 = load i32, i32* %i, align 4
  %inc152 = add nsw i32 %98, 1
  store i32 %inc152, i32* %i, align 4
  %call153 = call i32 @skip_single_quoted(i8* %96, i32 %97, i32 %inc152, i32 0)
  store i32 %call153, i32* %i, align 4
  br label %if.end388

if.else154:                                       ; preds = %if.else148
  %99 = load i32, i32* %c, align 4
  %cmp155 = icmp eq i32 %99, 34
  br i1 %cmp155, label %if.then157, label %if.else160

if.then157:                                       ; preds = %if.else154
  %100 = load i8*, i8** %string.addr, align 4
  %101 = load i32, i32* %slen, align 4
  %102 = load i32, i32* %i, align 4
  %inc158 = add nsw i32 %102, 1
  store i32 %inc158, i32* %i, align 4
  %103 = load i32, i32* %completeflag, align 4
  %call159 = call i32 @skip_double_quoted(i8* %100, i32 %101, i32 %inc158, i32 %103)
  store i32 %call159, i32* %i, align 4
  br label %if.end387

if.else160:                                       ; preds = %if.else154
  %104 = load i32, i32* %c, align 4
  %cmp161 = icmp eq i32 %104, 40
  br i1 %cmp161, label %land.lhs.true163, label %if.else183

land.lhs.true163:                                 ; preds = %if.else160
  %105 = load i32, i32* %arithexp, align 4
  %tobool164 = icmp ne i32 %105, 0
  br i1 %tobool164, label %if.then165, label %if.else183

if.then165:                                       ; preds = %land.lhs.true163
  %106 = load i32, i32* %i, align 4
  %add166 = add nsw i32 %106, 1
  store i32 %add166, i32* %si, align 4
  %107 = load i8*, i8** %string.addr, align 4
  %108 = load i32, i32* %si, align 4
  %arrayidx167 = getelementptr inbounds i8, i8* %107, i32 %108
  %109 = load i8, i8* %arrayidx167, align 1
  %conv168 = sext i8 %109 to i32
  %cmp169 = icmp eq i32 %conv168, 0
  br i1 %cmp169, label %if.then171, label %if.end174

if.then171:                                       ; preds = %if.then165
  br label %do.body172

do.body172:                                       ; preds = %if.then171
  %110 = load i32, i32* %oldjmp, align 4
  store i32 %110, i32* @no_longjmp_on_fatal_error, align 4
  %111 = load i32, i32* %si, align 4
  store i32 %111, i32* %retval, align 4
  br label %do.end398

do.end173:                                        ; No predecessors!
  br label %if.end174

if.end174:                                        ; preds = %do.end173, %if.then165
  %112 = load i8*, i8** %string.addr, align 4
  %call175 = call i8* @extract_delimited_string(i8* %112, i32* %si, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i32 1)
  store i8* %call175, i8** %temp, align 4
  %113 = load i32, i32* %si, align 4
  store i32 %113, i32* %i, align 4
  %114 = load i8*, i8** %string.addr, align 4
  %115 = load i32, i32* %i, align 4
  %arrayidx176 = getelementptr inbounds i8, i8* %114, i32 %115
  %116 = load i8, i8* %arrayidx176, align 1
  %conv177 = sext i8 %116 to i32
  %cmp178 = icmp eq i32 %conv177, 0
  br i1 %cmp178, label %if.then180, label %if.end181

if.then180:                                       ; preds = %if.end174
  br label %while.end

if.end181:                                        ; preds = %if.end174
  %117 = load i32, i32* %i, align 4
  %inc182 = add nsw i32 %117, 1
  store i32 %inc182, i32* %i, align 4
  br label %while.cond

if.else183:                                       ; preds = %land.lhs.true163, %if.else160
  %118 = load i32, i32* %c, align 4
  %cmp184 = icmp eq i32 %118, 36
  br i1 %cmp184, label %land.lhs.true186, label %if.else227

land.lhs.true186:                                 ; preds = %if.else183
  %119 = load i32, i32* %skipcmd, align 4
  %tobool187 = icmp ne i32 %119, 0
  br i1 %tobool187, label %land.lhs.true188, label %lor.lhs.false194

land.lhs.true188:                                 ; preds = %land.lhs.true186
  %120 = load i8*, i8** %string.addr, align 4
  %121 = load i32, i32* %i, align 4
  %add189 = add nsw i32 %121, 1
  %arrayidx190 = getelementptr inbounds i8, i8* %120, i32 %add189
  %122 = load i8, i8* %arrayidx190, align 1
  %conv191 = sext i8 %122 to i32
  %cmp192 = icmp eq i32 %conv191, 40
  br i1 %cmp192, label %if.then200, label %lor.lhs.false194

lor.lhs.false194:                                 ; preds = %land.lhs.true188, %land.lhs.true186
  %123 = load i8*, i8** %string.addr, align 4
  %124 = load i32, i32* %i, align 4
  %add195 = add nsw i32 %124, 1
  %arrayidx196 = getelementptr inbounds i8, i8* %123, i32 %add195
  %125 = load i8, i8* %arrayidx196, align 1
  %conv197 = sext i8 %125 to i32
  %cmp198 = icmp eq i32 %conv197, 123
  br i1 %cmp198, label %if.then200, label %if.else227

if.then200:                                       ; preds = %lor.lhs.false194, %land.lhs.true188
  %126 = load i32, i32* %i, align 4
  %add201 = add nsw i32 %126, 2
  store i32 %add201, i32* %si, align 4
  %127 = load i8*, i8** %string.addr, align 4
  %128 = load i32, i32* %si, align 4
  %arrayidx202 = getelementptr inbounds i8, i8* %127, i32 %128
  %129 = load i8, i8* %arrayidx202, align 1
  %conv203 = sext i8 %129 to i32
  %cmp204 = icmp eq i32 %conv203, 0
  br i1 %cmp204, label %if.then206, label %if.end209

if.then206:                                       ; preds = %if.then200
  br label %do.body207

do.body207:                                       ; preds = %if.then206
  %130 = load i32, i32* %oldjmp, align 4
  store i32 %130, i32* @no_longjmp_on_fatal_error, align 4
  %131 = load i32, i32* %si, align 4
  store i32 %131, i32* %retval, align 4
  br label %do.end398

do.end208:                                        ; No predecessors!
  br label %if.end209

if.end209:                                        ; preds = %do.end208, %if.then200
  %132 = load i8*, i8** %string.addr, align 4
  %133 = load i32, i32* %i, align 4
  %add210 = add nsw i32 %133, 1
  %arrayidx211 = getelementptr inbounds i8, i8* %132, i32 %add210
  %134 = load i8, i8* %arrayidx211, align 1
  %conv212 = sext i8 %134 to i32
  %cmp213 = icmp eq i32 %conv212, 40
  br i1 %cmp213, label %if.then215, label %if.else217

if.then215:                                       ; preds = %if.end209
  %135 = load i8*, i8** %string.addr, align 4
  %call216 = call i8* @extract_delimited_string(i8* %135, i32* %si, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i32 9)
  store i8* %call216, i8** %temp, align 4
  br label %if.end219

if.else217:                                       ; preds = %if.end209
  %136 = load i8*, i8** %string.addr, align 4
  %call218 = call i8* @extract_dollar_brace_string(i8* %136, i32* %si, i32 0, i32 1)
  store i8* %call218, i8** %temp, align 4
  br label %if.end219

if.end219:                                        ; preds = %if.else217, %if.then215
  %137 = load i32, i32* %si, align 4
  store i32 %137, i32* %i, align 4
  %138 = load i8*, i8** %string.addr, align 4
  %139 = load i32, i32* %i, align 4
  %arrayidx220 = getelementptr inbounds i8, i8* %138, i32 %139
  %140 = load i8, i8* %arrayidx220, align 1
  %conv221 = sext i8 %140 to i32
  %cmp222 = icmp eq i32 %conv221, 0
  br i1 %cmp222, label %if.then224, label %if.end225

if.then224:                                       ; preds = %if.end219
  br label %while.end

if.end225:                                        ; preds = %if.end219
  %141 = load i32, i32* %i, align 4
  %inc226 = add nsw i32 %141, 1
  store i32 %inc226, i32* %i, align 4
  br label %while.cond

if.else227:                                       ; preds = %lor.lhs.false194, %if.else183
  %142 = load i32, i32* %skipcmd, align 4
  %tobool228 = icmp ne i32 %142, 0
  br i1 %tobool228, label %land.lhs.true229, label %if.else265

land.lhs.true229:                                 ; preds = %if.else227
  %143 = load i32, i32* %noprocsub, align 4
  %cmp230 = icmp eq i32 %143, 0
  br i1 %cmp230, label %land.lhs.true232, label %if.else265

land.lhs.true232:                                 ; preds = %land.lhs.true229
  %144 = load i32, i32* %c, align 4
  %cmp233 = icmp eq i32 %144, 60
  br i1 %cmp233, label %land.lhs.true238, label %lor.lhs.false235

lor.lhs.false235:                                 ; preds = %land.lhs.true232
  %145 = load i32, i32* %c, align 4
  %cmp236 = icmp eq i32 %145, 62
  br i1 %cmp236, label %land.lhs.true238, label %if.else265

land.lhs.true238:                                 ; preds = %lor.lhs.false235, %land.lhs.true232
  %146 = load i8*, i8** %string.addr, align 4
  %147 = load i32, i32* %i, align 4
  %add239 = add nsw i32 %147, 1
  %arrayidx240 = getelementptr inbounds i8, i8* %146, i32 %add239
  %148 = load i8, i8* %arrayidx240, align 1
  %conv241 = sext i8 %148 to i32
  %cmp242 = icmp eq i32 %conv241, 40
  br i1 %cmp242, label %if.then244, label %if.else265

if.then244:                                       ; preds = %land.lhs.true238
  %149 = load i32, i32* %i, align 4
  %add245 = add nsw i32 %149, 2
  store i32 %add245, i32* %si, align 4
  %150 = load i8*, i8** %string.addr, align 4
  %151 = load i32, i32* %si, align 4
  %arrayidx246 = getelementptr inbounds i8, i8* %150, i32 %151
  %152 = load i8, i8* %arrayidx246, align 1
  %conv247 = sext i8 %152 to i32
  %cmp248 = icmp eq i32 %conv247, 0
  br i1 %cmp248, label %if.then250, label %if.end253

if.then250:                                       ; preds = %if.then244
  br label %do.body251

do.body251:                                       ; preds = %if.then250
  %153 = load i32, i32* %oldjmp, align 4
  store i32 %153, i32* @no_longjmp_on_fatal_error, align 4
  %154 = load i32, i32* %si, align 4
  store i32 %154, i32* %retval, align 4
  br label %do.end398

do.end252:                                        ; No predecessors!
  br label %if.end253

if.end253:                                        ; preds = %do.end252, %if.then244
  %155 = load i8*, i8** %string.addr, align 4
  %156 = load i32, i32* %c, align 4
  %cmp254 = icmp eq i32 %156, 60
  %cond256 = select i1 %cmp254, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0)
  %call257 = call i8* @extract_delimited_string(i8* %155, i32* %si, i8* %cond256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i32 9)
  store i8* %call257, i8** %temp, align 4
  %157 = load i32, i32* %si, align 4
  store i32 %157, i32* %i, align 4
  %158 = load i8*, i8** %string.addr, align 4
  %159 = load i32, i32* %i, align 4
  %arrayidx258 = getelementptr inbounds i8, i8* %158, i32 %159
  %160 = load i8, i8* %arrayidx258, align 1
  %conv259 = sext i8 %160 to i32
  %cmp260 = icmp eq i32 %conv259, 0
  br i1 %cmp260, label %if.then262, label %if.end263

if.then262:                                       ; preds = %if.end253
  br label %while.end

if.end263:                                        ; preds = %if.end253
  %161 = load i32, i32* %i, align 4
  %inc264 = add nsw i32 %161, 1
  store i32 %inc264, i32* %i, align 4
  br label %while.cond

if.else265:                                       ; preds = %land.lhs.true238, %lor.lhs.false235, %land.lhs.true229, %if.else227
  %162 = load i32, i32* %flags.addr, align 4
  %and266 = and i32 %162, 16
  %tobool267 = icmp ne i32 %and266, 0
  br i1 %tobool267, label %land.lhs.true268, label %if.else305

land.lhs.true268:                                 ; preds = %if.else265
  %163 = load i32, i32* @extended_glob, align 4
  %tobool269 = icmp ne i32 %163, 0
  br i1 %tobool269, label %land.lhs.true270, label %if.else305

land.lhs.true270:                                 ; preds = %land.lhs.true268
  %164 = load i8*, i8** %string.addr, align 4
  %165 = load i32, i32* %i, align 4
  %add271 = add nsw i32 %165, 1
  %arrayidx272 = getelementptr inbounds i8, i8* %164, i32 %add271
  %166 = load i8, i8* %arrayidx272, align 1
  %conv273 = sext i8 %166 to i32
  %cmp274 = icmp eq i32 %conv273, 40
  br i1 %cmp274, label %land.lhs.true276, label %if.else305

land.lhs.true276:                                 ; preds = %land.lhs.true270
  %167 = load i32, i32* %c, align 4
  %tobool277 = icmp ne i32 %167, 0
  br i1 %tobool277, label %cond.true278, label %cond.false282

cond.true278:                                     ; preds = %land.lhs.true276
  %168 = load i32, i32* %c, align 4
  %call279 = call i8* @mbschr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), i32 %168)
  %cmp280 = icmp ne i8* %call279, null
  br i1 %cmp280, label %if.then283, label %if.else305

cond.false282:                                    ; preds = %land.lhs.true276
  br i1 false, label %if.then283, label %if.else305

if.then283:                                       ; preds = %cond.false282, %cond.true278
  %169 = load i32, i32* %i, align 4
  %add284 = add nsw i32 %169, 2
  store i32 %add284, i32* %si, align 4
  %170 = load i8*, i8** %string.addr, align 4
  %171 = load i32, i32* %si, align 4
  %arrayidx285 = getelementptr inbounds i8, i8* %170, i32 %171
  %172 = load i8, i8* %arrayidx285, align 1
  %conv286 = sext i8 %172 to i32
  %cmp287 = icmp eq i32 %conv286, 0
  br i1 %cmp287, label %if.then289, label %if.end292

if.then289:                                       ; preds = %if.then283
  br label %do.body290

do.body290:                                       ; preds = %if.then289
  %173 = load i32, i32* %oldjmp, align 4
  store i32 %173, i32* @no_longjmp_on_fatal_error, align 4
  %174 = load i32, i32* %si, align 4
  store i32 %174, i32* %retval, align 4
  br label %do.end398

do.end291:                                        ; No predecessors!
  br label %if.end292

if.end292:                                        ; preds = %do.end291, %if.then283
  %175 = load i32, i32* %c, align 4
  %conv293 = trunc i32 %175 to i8
  %arrayidx294 = getelementptr inbounds [3 x i8], [3 x i8]* %open, i32 0, i32 0
  store i8 %conv293, i8* %arrayidx294, align 1
  %arrayidx295 = getelementptr inbounds [3 x i8], [3 x i8]* %open, i32 0, i32 1
  store i8 40, i8* %arrayidx295, align 1
  %arrayidx296 = getelementptr inbounds [3 x i8], [3 x i8]* %open, i32 0, i32 2
  store i8 0, i8* %arrayidx296, align 1
  %176 = load i8*, i8** %string.addr, align 4
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %open, i32 0, i32 0
  %call297 = call i8* @extract_delimited_string(i8* %176, i32* %si, i8* %arraydecay, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i32 1)
  store i8* %call297, i8** %temp, align 4
  %177 = load i32, i32* %si, align 4
  store i32 %177, i32* %i, align 4
  %178 = load i8*, i8** %string.addr, align 4
  %179 = load i32, i32* %i, align 4
  %arrayidx298 = getelementptr inbounds i8, i8* %178, i32 %179
  %180 = load i8, i8* %arrayidx298, align 1
  %conv299 = sext i8 %180 to i32
  %cmp300 = icmp eq i32 %conv299, 0
  br i1 %cmp300, label %if.then302, label %if.end303

if.then302:                                       ; preds = %if.end292
  br label %while.end

if.end303:                                        ; preds = %if.end292
  %181 = load i32, i32* %i, align 4
  %inc304 = add nsw i32 %181, 1
  store i32 %inc304, i32* %i, align 4
  br label %while.cond

if.else305:                                       ; preds = %cond.false282, %cond.true278, %land.lhs.true270, %land.lhs.true268, %if.else265
  %182 = load i32, i32* %flags.addr, align 4
  %and306 = and i32 %182, 64
  %tobool307 = icmp ne i32 %and306, 0
  br i1 %tobool307, label %land.lhs.true308, label %if.else329

land.lhs.true308:                                 ; preds = %if.else305
  %183 = load i32, i32* %c, align 4
  %cmp309 = icmp eq i32 %183, 91
  br i1 %cmp309, label %if.then311, label %if.else329

if.then311:                                       ; preds = %land.lhs.true308
  %184 = load i32, i32* %i, align 4
  %add312 = add nsw i32 %184, 1
  store i32 %add312, i32* %si, align 4
  %185 = load i8*, i8** %string.addr, align 4
  %186 = load i32, i32* %si, align 4
  %arrayidx313 = getelementptr inbounds i8, i8* %185, i32 %186
  %187 = load i8, i8* %arrayidx313, align 1
  %conv314 = sext i8 %187 to i32
  %cmp315 = icmp eq i32 %conv314, 0
  br i1 %cmp315, label %if.then317, label %if.end320

if.then317:                                       ; preds = %if.then311
  br label %do.body318

do.body318:                                       ; preds = %if.then317
  %188 = load i32, i32* %oldjmp, align 4
  store i32 %188, i32* @no_longjmp_on_fatal_error, align 4
  %189 = load i32, i32* %si, align 4
  store i32 %189, i32* %retval, align 4
  br label %do.end398

do.end319:                                        ; No predecessors!
  br label %if.end320

if.end320:                                        ; preds = %do.end319, %if.then311
  %190 = load i8*, i8** %string.addr, align 4
  %call321 = call i8* @extract_delimited_string(i8* %190, i32* %si, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i32 1)
  store i8* %call321, i8** %temp, align 4
  %191 = load i32, i32* %si, align 4
  store i32 %191, i32* %i, align 4
  %192 = load i8*, i8** %string.addr, align 4
  %193 = load i32, i32* %i, align 4
  %arrayidx322 = getelementptr inbounds i8, i8* %192, i32 %193
  %194 = load i8, i8* %arrayidx322, align 1
  %conv323 = sext i8 %194 to i32
  %cmp324 = icmp eq i32 %conv323, 0
  br i1 %cmp324, label %if.then326, label %if.end327

if.then326:                                       ; preds = %if.end320
  br label %while.end

if.end327:                                        ; preds = %if.end320
  %195 = load i32, i32* %i, align 4
  %inc328 = add nsw i32 %195, 1
  store i32 %inc328, i32* %i, align 4
  br label %while.cond

if.else329:                                       ; preds = %land.lhs.true308, %if.else305
  %196 = load i32, i32* %skipquote, align 4
  %tobool330 = icmp ne i32 %196, 0
  br i1 %tobool330, label %land.lhs.true333, label %lor.lhs.false331

lor.lhs.false331:                                 ; preds = %if.else329
  %197 = load i32, i32* %invert, align 4
  %tobool332 = icmp ne i32 %197, 0
  br i1 %tobool332, label %land.lhs.true333, label %if.else344

land.lhs.true333:                                 ; preds = %lor.lhs.false331, %if.else329
  %198 = load i32, i32* %c, align 4
  %tobool334 = icmp ne i32 %198, 0
  br i1 %tobool334, label %cond.true335, label %cond.false339

cond.true335:                                     ; preds = %land.lhs.true333
  %199 = load i8*, i8** %delims.addr, align 4
  %200 = load i32, i32* %c, align 4
  %call336 = call i8* @mbschr(i8* %199, i32 %200)
  %cmp337 = icmp ne i8* %call336, null
  %conv338 = zext i1 %cmp337 to i32
  br label %cond.end

cond.false339:                                    ; preds = %land.lhs.true333
  br label %cond.end

cond.end:                                         ; preds = %cond.false339, %cond.true335
  %cond340 = phi i32 [ %conv338, %cond.true335 ], [ 0, %cond.false339 ]
  %cmp341 = icmp eq i32 %cond340, 0
  br i1 %cmp341, label %if.then343, label %if.else344

if.then343:                                       ; preds = %cond.end
  br label %while.end

if.else344:                                       ; preds = %cond.end, %lor.lhs.false331
  br label %do.body345

do.body345:                                       ; preds = %if.else344
  %201 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp346 = icmp sgt i32 %201, 1
  br i1 %cmp346, label %if.then348, label %if.else377

if.then348:                                       ; preds = %do.body345
  %202 = load i8*, i8** %string.addr, align 4
  %203 = load i32, i32* %i, align 4
  %arrayidx352 = getelementptr inbounds i8, i8* %202, i32 %203
  %204 = load i8, i8* %arrayidx352, align 1
  %call353 = call i32 @is_basic(i8 signext %204)
  store i32 %call353, i32* %_f351, align 4
  %205 = load i32, i32* %_f351, align 4
  %tobool354 = icmp ne i32 %205, 0
  br i1 %tobool354, label %if.then355, label %if.else356

if.then355:                                       ; preds = %if.then348
  store i32 1, i32* %mblength350, align 4
  br label %if.end360

if.else356:                                       ; preds = %if.then348
  %206 = bitcast %struct.__mbstate_t* %state_bak349 to i8*
  %207 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %206, i8* %207, i32 8, i32 4, i1 false)
  %208 = load i8*, i8** %string.addr, align 4
  %209 = load i32, i32* %i, align 4
  %add.ptr357 = getelementptr inbounds i8, i8* %208, i32 %209
  %210 = load i32, i32* %slen, align 4
  %211 = load i32, i32* %i, align 4
  %sub358 = sub i32 %210, %211
  %call359 = call i32 @mbrlen(i8* %add.ptr357, i32 %sub358, %struct.__mbstate_t* %state)
  store i32 %call359, i32* %mblength350, align 4
  br label %if.end360

if.end360:                                        ; preds = %if.else356, %if.then355
  %212 = load i32, i32* %mblength350, align 4
  %cmp361 = icmp eq i32 %212, -2
  br i1 %cmp361, label %if.then366, label %lor.lhs.false363

lor.lhs.false363:                                 ; preds = %if.end360
  %213 = load i32, i32* %mblength350, align 4
  %cmp364 = icmp eq i32 %213, -1
  br i1 %cmp364, label %if.then366, label %if.else368

if.then366:                                       ; preds = %lor.lhs.false363, %if.end360
  %214 = bitcast %struct.__mbstate_t* %state to i8*
  %215 = bitcast %struct.__mbstate_t* %state_bak349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %214, i8* %215, i32 8, i32 4, i1 false)
  %216 = load i32, i32* %i, align 4
  %inc367 = add nsw i32 %216, 1
  store i32 %inc367, i32* %i, align 4
  br label %if.end376

if.else368:                                       ; preds = %lor.lhs.false363
  %217 = load i32, i32* %mblength350, align 4
  %cmp369 = icmp eq i32 %217, 0
  br i1 %cmp369, label %if.then371, label %if.else373

if.then371:                                       ; preds = %if.else368
  %218 = load i32, i32* %i, align 4
  %inc372 = add nsw i32 %218, 1
  store i32 %inc372, i32* %i, align 4
  br label %if.end375

if.else373:                                       ; preds = %if.else368
  %219 = load i32, i32* %mblength350, align 4
  %220 = load i32, i32* %i, align 4
  %add374 = add i32 %220, %219
  store i32 %add374, i32* %i, align 4
  br label %if.end375

if.end375:                                        ; preds = %if.else373, %if.then371
  br label %if.end376

if.end376:                                        ; preds = %if.end375, %if.then366
  br label %if.end379

if.else377:                                       ; preds = %do.body345
  %221 = load i32, i32* %i, align 4
  %inc378 = add nsw i32 %221, 1
  store i32 %inc378, i32* %i, align 4
  br label %if.end379

if.end379:                                        ; preds = %if.else377, %if.end376
  br label %do.end380

do.end380:                                        ; preds = %if.end379
  br label %if.end381

if.end381:                                        ; preds = %do.end380
  br label %if.end382

if.end382:                                        ; preds = %if.end381
  br label %if.end383

if.end383:                                        ; preds = %if.end382
  br label %if.end384

if.end384:                                        ; preds = %if.end383
  br label %if.end385

if.end385:                                        ; preds = %if.end384
  br label %if.end386

if.end386:                                        ; preds = %if.end385
  br label %if.end387

if.end387:                                        ; preds = %if.end386, %if.then157
  br label %if.end388

if.end388:                                        ; preds = %if.end387, %if.then151
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.then145
  br label %if.end390

if.end390:                                        ; preds = %if.end389
  br label %if.end391

if.end391:                                        ; preds = %if.end390
  br label %if.end392

if.end392:                                        ; preds = %if.end391
  br label %if.end393

if.end393:                                        ; preds = %if.end392
  br label %if.end394

if.end394:                                        ; preds = %if.end393
  br label %if.end395

if.end395:                                        ; preds = %if.end394
  br label %if.end396

if.end396:                                        ; preds = %if.end395
  br label %while.cond

while.end:                                        ; preds = %if.then343, %if.then326, %if.then302, %if.then262, %if.then224, %if.then180, %if.then130, %while.cond
  br label %do.body397

do.body397:                                       ; preds = %while.end
  %222 = load i32, i32* %oldjmp, align 4
  store i32 %222, i32* @no_longjmp_on_fatal_error, align 4
  %223 = load i32, i32* %i, align 4
  store i32 %223, i32* %retval, align 4
  br label %do.end398

do.end398:                                        ; preds = %do.body, %do.body172, %do.body207, %do.body251, %do.body290, %do.body318, %do.body397
  %224 = load i32, i32* %retval, align 4
  ret i32 %224
}

declare i8* @mbschr(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @skip_single_quoted(i8* %string, i32 %slen, i32 %sind, i32 %flags) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %slen.addr = alloca i32, align 4
  %sind.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak48 = alloca %struct.__mbstate_t, align 4
  %mblength49 = alloca i32, align 4
  %_f50 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %slen, i32* %slen.addr, align 4
  store i32 %sind, i32* %sind.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i32, i32* %sind.addr, align 4
  store i32 %1, i32* %c, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end79, %entry
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %c, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i32, i32* %c, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx1, align 1
  %conv2 = sext i8 %7 to i32
  %cmp = icmp ne i32 %conv2, 39
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %8, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %9 = load i32, i32* %flags.addr, align 4
  %and = and i32 %9, 1024
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %land.lhs.true, label %if.end43

land.lhs.true:                                    ; preds = %while.body
  %10 = load i8*, i8** %string.addr, align 4
  %11 = load i32, i32* %c, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i32 %11
  %12 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %12 to i32
  %cmp7 = icmp eq i32 %conv6, 92
  br i1 %cmp7, label %land.lhs.true9, label %if.end43

land.lhs.true9:                                   ; preds = %land.lhs.true
  %13 = load i8*, i8** %string.addr, align 4
  %14 = load i32, i32* %c, align 4
  %add = add nsw i32 %14, 1
  %arrayidx10 = getelementptr inbounds i8, i8* %13, i32 %add
  %15 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %15 to i32
  %cmp12 = icmp eq i32 %conv11, 39
  br i1 %cmp12, label %land.lhs.true14, label %if.end43

land.lhs.true14:                                  ; preds = %land.lhs.true9
  %16 = load i8*, i8** %string.addr, align 4
  %17 = load i32, i32* %c, align 4
  %add15 = add nsw i32 %17, 2
  %arrayidx16 = getelementptr inbounds i8, i8* %16, i32 %add15
  %18 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %18 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  br i1 %tobool18, label %if.then, label %if.end43

if.then:                                          ; preds = %land.lhs.true14
  br label %do.body

do.body:                                          ; preds = %if.then
  %19 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp19 = icmp sgt i32 %19, 1
  br i1 %cmp19, label %if.then21, label %if.else40

if.then21:                                        ; preds = %do.body
  %20 = load i8*, i8** %string.addr, align 4
  %21 = load i32, i32* %c, align 4
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %arrayidx22, align 1
  %call = call i32 @is_basic(i8 signext %22)
  store i32 %call, i32* %_f, align 4
  %23 = load i32, i32* %_f, align 4
  %tobool23 = icmp ne i32 %23, 0
  br i1 %tobool23, label %if.then24, label %if.else

if.then24:                                        ; preds = %if.then21
  store i32 1, i32* %mblength, align 4
  br label %if.end

if.else:                                          ; preds = %if.then21
  %24 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %25 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %24, i8* %25, i32 8, i32 4, i1 false)
  %26 = load i8*, i8** %string.addr, align 4
  %27 = load i32, i32* %c, align 4
  %add.ptr = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i32, i32* %slen.addr, align 4
  %29 = load i32, i32* %c, align 4
  %sub = sub i32 %28, %29
  %call25 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call25, i32* %mblength, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then24
  %30 = load i32, i32* %mblength, align 4
  %cmp26 = icmp eq i32 %30, -2
  br i1 %cmp26, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %31 = load i32, i32* %mblength, align 4
  %cmp28 = icmp eq i32 %31, -1
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %lor.lhs.false, %if.end
  %32 = bitcast %struct.__mbstate_t* %state to i8*
  %33 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %32, i8* %33, i32 8, i32 4, i1 false)
  %34 = load i32, i32* %c, align 4
  %inc = add nsw i32 %34, 1
  store i32 %inc, i32* %c, align 4
  br label %if.end39

if.else31:                                        ; preds = %lor.lhs.false
  %35 = load i32, i32* %mblength, align 4
  %cmp32 = icmp eq i32 %35, 0
  br i1 %cmp32, label %if.then34, label %if.else36

if.then34:                                        ; preds = %if.else31
  %36 = load i32, i32* %c, align 4
  %inc35 = add nsw i32 %36, 1
  store i32 %inc35, i32* %c, align 4
  br label %if.end38

if.else36:                                        ; preds = %if.else31
  %37 = load i32, i32* %mblength, align 4
  %38 = load i32, i32* %c, align 4
  %add37 = add i32 %38, %37
  store i32 %add37, i32* %c, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then30
  br label %if.end42

if.else40:                                        ; preds = %do.body
  %39 = load i32, i32* %c, align 4
  %inc41 = add nsw i32 %39, 1
  store i32 %inc41, i32* %c, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.else40, %if.end39
  br label %do.end

do.end:                                           ; preds = %if.end42
  br label %if.end43

if.end43:                                         ; preds = %do.end, %land.lhs.true14, %land.lhs.true9, %land.lhs.true, %while.body
  br label %do.body44

do.body44:                                        ; preds = %if.end43
  %40 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp45 = icmp sgt i32 %40, 1
  br i1 %cmp45, label %if.then47, label %if.else76

if.then47:                                        ; preds = %do.body44
  %41 = load i8*, i8** %string.addr, align 4
  %42 = load i32, i32* %c, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %41, i32 %42
  %43 = load i8, i8* %arrayidx51, align 1
  %call52 = call i32 @is_basic(i8 signext %43)
  store i32 %call52, i32* %_f50, align 4
  %44 = load i32, i32* %_f50, align 4
  %tobool53 = icmp ne i32 %44, 0
  br i1 %tobool53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then47
  store i32 1, i32* %mblength49, align 4
  br label %if.end59

if.else55:                                        ; preds = %if.then47
  %45 = bitcast %struct.__mbstate_t* %state_bak48 to i8*
  %46 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 8, i32 4, i1 false)
  %47 = load i8*, i8** %string.addr, align 4
  %48 = load i32, i32* %c, align 4
  %add.ptr56 = getelementptr inbounds i8, i8* %47, i32 %48
  %49 = load i32, i32* %slen.addr, align 4
  %50 = load i32, i32* %c, align 4
  %sub57 = sub i32 %49, %50
  %call58 = call i32 @mbrlen(i8* %add.ptr56, i32 %sub57, %struct.__mbstate_t* %state)
  store i32 %call58, i32* %mblength49, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.else55, %if.then54
  %51 = load i32, i32* %mblength49, align 4
  %cmp60 = icmp eq i32 %51, -2
  br i1 %cmp60, label %if.then65, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %if.end59
  %52 = load i32, i32* %mblength49, align 4
  %cmp63 = icmp eq i32 %52, -1
  br i1 %cmp63, label %if.then65, label %if.else67

if.then65:                                        ; preds = %lor.lhs.false62, %if.end59
  %53 = bitcast %struct.__mbstate_t* %state to i8*
  %54 = bitcast %struct.__mbstate_t* %state_bak48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %53, i8* %54, i32 8, i32 4, i1 false)
  %55 = load i32, i32* %c, align 4
  %inc66 = add nsw i32 %55, 1
  store i32 %inc66, i32* %c, align 4
  br label %if.end75

if.else67:                                        ; preds = %lor.lhs.false62
  %56 = load i32, i32* %mblength49, align 4
  %cmp68 = icmp eq i32 %56, 0
  br i1 %cmp68, label %if.then70, label %if.else72

if.then70:                                        ; preds = %if.else67
  %57 = load i32, i32* %c, align 4
  %inc71 = add nsw i32 %57, 1
  store i32 %inc71, i32* %c, align 4
  br label %if.end74

if.else72:                                        ; preds = %if.else67
  %58 = load i32, i32* %mblength49, align 4
  %59 = load i32, i32* %c, align 4
  %add73 = add i32 %59, %58
  store i32 %add73, i32* %c, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then65
  br label %if.end78

if.else76:                                        ; preds = %do.body44
  %60 = load i32, i32* %c, align 4
  %inc77 = add nsw i32 %60, 1
  store i32 %inc77, i32* %c, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.end75
  br label %do.end79

do.end79:                                         ; preds = %if.end78
  br label %while.cond

while.end:                                        ; preds = %land.end
  %61 = load i8*, i8** %string.addr, align 4
  %62 = load i32, i32* %c, align 4
  %arrayidx80 = getelementptr inbounds i8, i8* %61, i32 %62
  %63 = load i8, i8* %arrayidx80, align 1
  %tobool81 = icmp ne i8 %63, 0
  br i1 %tobool81, label %if.then82, label %if.end84

if.then82:                                        ; preds = %while.end
  %64 = load i32, i32* %c, align 4
  %inc83 = add nsw i32 %64, 1
  store i32 %inc83, i32* %c, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %while.end
  %65 = load i32, i32* %c, align 4
  ret i32 %65
}

; Function Attrs: noinline nounwind
define internal i32 @skip_double_quoted(i8* %string, i32 %slen, i32 %sind, i32 %flags) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %slen.addr = alloca i32, align 4
  %sind.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i8*, align 4
  %pass_next = alloca i32, align 4
  %backquote = alloca i32, align 4
  %si = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak41 = alloca %struct.__mbstate_t, align 4
  %mblength42 = alloca i32, align 4
  %_f43 = alloca i32, align 4
  %state_bak119 = alloca %struct.__mbstate_t, align 4
  %mblength120 = alloca i32, align 4
  %_f121 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %slen, i32* %slen.addr, align 4
  store i32 %sind, i32* %sind.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  store i32 0, i32* %backquote, align 4
  store i32 0, i32* %pass_next, align 4
  %1 = load i32, i32* %sind.addr, align 4
  store i32 %1, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end150, %if.end109, %if.then76, %do.end72, %if.then27, %do.end, %entry
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  store i32 %conv, i32* %c, align 4
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %pass_next, align 4
  %tobool1 = icmp ne i32 %5, 0
  br i1 %tobool1, label %if.then, label %if.else24

if.then:                                          ; preds = %while.body
  store i32 0, i32* %pass_next, align 4
  br label %do.body

do.body:                                          ; preds = %if.then
  %6 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp = icmp sgt i32 %6, 1
  br i1 %cmp, label %if.then3, label %if.else21

if.then3:                                         ; preds = %do.body
  %7 = load i8*, i8** %string.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i32 %8
  %9 = load i8, i8* %arrayidx4, align 1
  %call = call i32 @is_basic(i8 signext %9)
  store i32 %call, i32* %_f, align 4
  %10 = load i32, i32* %_f, align 4
  %tobool5 = icmp ne i32 %10, 0
  br i1 %tobool5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then3
  store i32 1, i32* %mblength, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %11 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %12 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %11, i8* %12, i32 8, i32 4, i1 false)
  %13 = load i8*, i8** %string.addr, align 4
  %14 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %13, i32 %14
  %15 = load i32, i32* %slen.addr, align 4
  %16 = load i32, i32* %i, align 4
  %sub = sub i32 %15, %16
  %call7 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call7, i32* %mblength, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %17 = load i32, i32* %mblength, align 4
  %cmp8 = icmp eq i32 %17, -2
  br i1 %cmp8, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %18 = load i32, i32* %mblength, align 4
  %cmp10 = icmp eq i32 %18, -1
  br i1 %cmp10, label %if.then12, label %if.else13

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  %19 = bitcast %struct.__mbstate_t* %state to i8*
  %20 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %19, i8* %20, i32 8, i32 4, i1 false)
  %21 = load i32, i32* %i, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end20

if.else13:                                        ; preds = %lor.lhs.false
  %22 = load i32, i32* %mblength, align 4
  %cmp14 = icmp eq i32 %22, 0
  br i1 %cmp14, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else13
  %23 = load i32, i32* %i, align 4
  %inc17 = add nsw i32 %23, 1
  store i32 %inc17, i32* %i, align 4
  br label %if.end19

if.else18:                                        ; preds = %if.else13
  %24 = load i32, i32* %mblength, align 4
  %25 = load i32, i32* %i, align 4
  %add = add i32 %25, %24
  store i32 %add, i32* %i, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then16
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then12
  br label %if.end23

if.else21:                                        ; preds = %do.body
  %26 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %26, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.end20
  br label %do.end

do.end:                                           ; preds = %if.end23
  br label %while.cond

if.else24:                                        ; preds = %while.body
  %27 = load i32, i32* %c, align 4
  %cmp25 = icmp eq i32 %27, 92
  br i1 %cmp25, label %if.then27, label %if.else30

if.then27:                                        ; preds = %if.else24
  %28 = load i32, i32* %pass_next, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %pass_next, align 4
  %29 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %29, 1
  store i32 %inc29, i32* %i, align 4
  br label %while.cond

if.else30:                                        ; preds = %if.else24
  %30 = load i32, i32* %backquote, align 4
  %tobool31 = icmp ne i32 %30, 0
  br i1 %tobool31, label %if.then32, label %if.else73

if.then32:                                        ; preds = %if.else30
  %31 = load i32, i32* %c, align 4
  %cmp33 = icmp eq i32 %31, 96
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.then32
  store i32 0, i32* %backquote, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then32
  br label %do.body37

do.body37:                                        ; preds = %if.end36
  %32 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp38 = icmp sgt i32 %32, 1
  br i1 %cmp38, label %if.then40, label %if.else69

if.then40:                                        ; preds = %do.body37
  %33 = load i8*, i8** %string.addr, align 4
  %34 = load i32, i32* %i, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %33, i32 %34
  %35 = load i8, i8* %arrayidx44, align 1
  %call45 = call i32 @is_basic(i8 signext %35)
  store i32 %call45, i32* %_f43, align 4
  %36 = load i32, i32* %_f43, align 4
  %tobool46 = icmp ne i32 %36, 0
  br i1 %tobool46, label %if.then47, label %if.else48

if.then47:                                        ; preds = %if.then40
  store i32 1, i32* %mblength42, align 4
  br label %if.end52

if.else48:                                        ; preds = %if.then40
  %37 = bitcast %struct.__mbstate_t* %state_bak41 to i8*
  %38 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %37, i8* %38, i32 8, i32 4, i1 false)
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %i, align 4
  %add.ptr49 = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i32, i32* %slen.addr, align 4
  %42 = load i32, i32* %i, align 4
  %sub50 = sub i32 %41, %42
  %call51 = call i32 @mbrlen(i8* %add.ptr49, i32 %sub50, %struct.__mbstate_t* %state)
  store i32 %call51, i32* %mblength42, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.else48, %if.then47
  %43 = load i32, i32* %mblength42, align 4
  %cmp53 = icmp eq i32 %43, -2
  br i1 %cmp53, label %if.then58, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %if.end52
  %44 = load i32, i32* %mblength42, align 4
  %cmp56 = icmp eq i32 %44, -1
  br i1 %cmp56, label %if.then58, label %if.else60

if.then58:                                        ; preds = %lor.lhs.false55, %if.end52
  %45 = bitcast %struct.__mbstate_t* %state to i8*
  %46 = bitcast %struct.__mbstate_t* %state_bak41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 8, i32 4, i1 false)
  %47 = load i32, i32* %i, align 4
  %inc59 = add nsw i32 %47, 1
  store i32 %inc59, i32* %i, align 4
  br label %if.end68

if.else60:                                        ; preds = %lor.lhs.false55
  %48 = load i32, i32* %mblength42, align 4
  %cmp61 = icmp eq i32 %48, 0
  br i1 %cmp61, label %if.then63, label %if.else65

if.then63:                                        ; preds = %if.else60
  %49 = load i32, i32* %i, align 4
  %inc64 = add nsw i32 %49, 1
  store i32 %inc64, i32* %i, align 4
  br label %if.end67

if.else65:                                        ; preds = %if.else60
  %50 = load i32, i32* %mblength42, align 4
  %51 = load i32, i32* %i, align 4
  %add66 = add i32 %51, %50
  store i32 %add66, i32* %i, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then63
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then58
  br label %if.end71

if.else69:                                        ; preds = %do.body37
  %52 = load i32, i32* %i, align 4
  %inc70 = add nsw i32 %52, 1
  store i32 %inc70, i32* %i, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.end68
  br label %do.end72

do.end72:                                         ; preds = %if.end71
  br label %while.cond

if.else73:                                        ; preds = %if.else30
  %53 = load i32, i32* %c, align 4
  %cmp74 = icmp eq i32 %53, 96
  br i1 %cmp74, label %if.then76, label %if.else79

if.then76:                                        ; preds = %if.else73
  %54 = load i32, i32* %backquote, align 4
  %inc77 = add nsw i32 %54, 1
  store i32 %inc77, i32* %backquote, align 4
  %55 = load i32, i32* %i, align 4
  %inc78 = add nsw i32 %55, 1
  store i32 %inc78, i32* %i, align 4
  br label %while.cond

if.else79:                                        ; preds = %if.else73
  %56 = load i32, i32* %c, align 4
  %cmp80 = icmp eq i32 %56, 36
  br i1 %cmp80, label %land.lhs.true, label %if.else111

land.lhs.true:                                    ; preds = %if.else79
  %57 = load i8*, i8** %string.addr, align 4
  %58 = load i32, i32* %i, align 4
  %add82 = add nsw i32 %58, 1
  %arrayidx83 = getelementptr inbounds i8, i8* %57, i32 %add82
  %59 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %59 to i32
  %cmp85 = icmp eq i32 %conv84, 40
  br i1 %cmp85, label %if.then93, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %land.lhs.true
  %60 = load i8*, i8** %string.addr, align 4
  %61 = load i32, i32* %i, align 4
  %add88 = add nsw i32 %61, 1
  %arrayidx89 = getelementptr inbounds i8, i8* %60, i32 %add88
  %62 = load i8, i8* %arrayidx89, align 1
  %conv90 = sext i8 %62 to i32
  %cmp91 = icmp eq i32 %conv90, 123
  br i1 %cmp91, label %if.then93, label %if.else111

if.then93:                                        ; preds = %lor.lhs.false87, %land.lhs.true
  %63 = load i32, i32* %i, align 4
  %add94 = add nsw i32 %63, 2
  store i32 %add94, i32* %si, align 4
  %64 = load i8*, i8** %string.addr, align 4
  %65 = load i32, i32* %i, align 4
  %add95 = add nsw i32 %65, 1
  %arrayidx96 = getelementptr inbounds i8, i8* %64, i32 %add95
  %66 = load i8, i8* %arrayidx96, align 1
  %conv97 = sext i8 %66 to i32
  %cmp98 = icmp eq i32 %conv97, 40
  br i1 %cmp98, label %if.then100, label %if.else102

if.then100:                                       ; preds = %if.then93
  %67 = load i8*, i8** %string.addr, align 4
  %68 = load i32, i32* %flags.addr, align 4
  %and = and i32 %68, 1024
  %or = or i32 1, %and
  %call101 = call i8* @extract_command_subst(i8* %67, i32* %si, i32 %or)
  store i8* %call101, i8** %ret, align 4
  br label %if.end104

if.else102:                                       ; preds = %if.then93
  %69 = load i8*, i8** %string.addr, align 4
  %call103 = call i8* @extract_dollar_brace_string(i8* %69, i32* %si, i32 1, i32 1)
  store i8* %call103, i8** %ret, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then100
  %70 = load i32, i32* %si, align 4
  %71 = load i32, i32* %slen.addr, align 4
  %cmp105 = icmp uge i32 %70, %71
  br i1 %cmp105, label %if.then107, label %if.else108

if.then107:                                       ; preds = %if.end104
  %72 = load i32, i32* %slen.addr, align 4
  store i32 %72, i32* %i, align 4
  store i32 0, i32* %c, align 4
  br label %while.end

if.else108:                                       ; preds = %if.end104
  br label %if.end109

if.end109:                                        ; preds = %if.else108
  %73 = load i32, i32* %si, align 4
  %add110 = add nsw i32 %73, 1
  store i32 %add110, i32* %i, align 4
  br label %while.cond

if.else111:                                       ; preds = %lor.lhs.false87, %if.else79
  %74 = load i32, i32* %c, align 4
  %cmp112 = icmp ne i32 %74, 34
  br i1 %cmp112, label %if.then114, label %if.else151

if.then114:                                       ; preds = %if.else111
  br label %do.body115

do.body115:                                       ; preds = %if.then114
  %75 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp116 = icmp sgt i32 %75, 1
  br i1 %cmp116, label %if.then118, label %if.else147

if.then118:                                       ; preds = %do.body115
  %76 = load i8*, i8** %string.addr, align 4
  %77 = load i32, i32* %i, align 4
  %arrayidx122 = getelementptr inbounds i8, i8* %76, i32 %77
  %78 = load i8, i8* %arrayidx122, align 1
  %call123 = call i32 @is_basic(i8 signext %78)
  store i32 %call123, i32* %_f121, align 4
  %79 = load i32, i32* %_f121, align 4
  %tobool124 = icmp ne i32 %79, 0
  br i1 %tobool124, label %if.then125, label %if.else126

if.then125:                                       ; preds = %if.then118
  store i32 1, i32* %mblength120, align 4
  br label %if.end130

if.else126:                                       ; preds = %if.then118
  %80 = bitcast %struct.__mbstate_t* %state_bak119 to i8*
  %81 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %80, i8* %81, i32 8, i32 4, i1 false)
  %82 = load i8*, i8** %string.addr, align 4
  %83 = load i32, i32* %i, align 4
  %add.ptr127 = getelementptr inbounds i8, i8* %82, i32 %83
  %84 = load i32, i32* %slen.addr, align 4
  %85 = load i32, i32* %i, align 4
  %sub128 = sub i32 %84, %85
  %call129 = call i32 @mbrlen(i8* %add.ptr127, i32 %sub128, %struct.__mbstate_t* %state)
  store i32 %call129, i32* %mblength120, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.else126, %if.then125
  %86 = load i32, i32* %mblength120, align 4
  %cmp131 = icmp eq i32 %86, -2
  br i1 %cmp131, label %if.then136, label %lor.lhs.false133

lor.lhs.false133:                                 ; preds = %if.end130
  %87 = load i32, i32* %mblength120, align 4
  %cmp134 = icmp eq i32 %87, -1
  br i1 %cmp134, label %if.then136, label %if.else138

if.then136:                                       ; preds = %lor.lhs.false133, %if.end130
  %88 = bitcast %struct.__mbstate_t* %state to i8*
  %89 = bitcast %struct.__mbstate_t* %state_bak119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %88, i8* %89, i32 8, i32 4, i1 false)
  %90 = load i32, i32* %i, align 4
  %inc137 = add nsw i32 %90, 1
  store i32 %inc137, i32* %i, align 4
  br label %if.end146

if.else138:                                       ; preds = %lor.lhs.false133
  %91 = load i32, i32* %mblength120, align 4
  %cmp139 = icmp eq i32 %91, 0
  br i1 %cmp139, label %if.then141, label %if.else143

if.then141:                                       ; preds = %if.else138
  %92 = load i32, i32* %i, align 4
  %inc142 = add nsw i32 %92, 1
  store i32 %inc142, i32* %i, align 4
  br label %if.end145

if.else143:                                       ; preds = %if.else138
  %93 = load i32, i32* %mblength120, align 4
  %94 = load i32, i32* %i, align 4
  %add144 = add i32 %94, %93
  store i32 %add144, i32* %i, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.else143, %if.then141
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then136
  br label %if.end149

if.else147:                                       ; preds = %do.body115
  %95 = load i32, i32* %i, align 4
  %inc148 = add nsw i32 %95, 1
  store i32 %inc148, i32* %i, align 4
  br label %if.end149

if.end149:                                        ; preds = %if.else147, %if.end146
  br label %do.end150

do.end150:                                        ; preds = %if.end149
  br label %while.cond

if.else151:                                       ; preds = %if.else111
  br label %while.end

while.end:                                        ; preds = %if.else151, %if.then107, %while.cond
  %96 = load i32, i32* %c, align 4
  %tobool152 = icmp ne i32 %96, 0
  br i1 %tobool152, label %if.then153, label %if.end155

if.then153:                                       ; preds = %while.end
  %97 = load i32, i32* %i, align 4
  %inc154 = add nsw i32 %97, 1
  store i32 %inc154, i32* %i, align 4
  br label %if.end155

if.end155:                                        ; preds = %if.then153, %while.end
  %98 = load i32, i32* %i, align 4
  ret i32 %98
}

; Function Attrs: noinline nounwind
define internal i8* @extract_dollar_brace_string(i8* %string, i32* %sindex, i32 %quoted, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %slen = alloca i32, align 4
  %pass_character = alloca i32, align 4
  %nesting_level = alloca i32, align 4
  %si = alloca i32, align 4
  %dolbrace_state = alloca i32, align 4
  %result = alloca i8*, align 4
  %t = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak119 = alloca %struct.__mbstate_t, align 4
  %mblength120 = alloca i32, align 4
  %_f121 = alloca i32, align 4
  %state_bak160 = alloca %struct.__mbstate_t, align 4
  %mblength161 = alloca i32, align 4
  %_f162 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  store i32 0, i32* %pass_character, align 4
  store i32 1, i32* %nesting_level, align 4
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32*, i32** %sindex.addr, align 4
  %3 = load i32, i32* %2, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %3
  %call = call i32 @strlen(i8* %add.ptr)
  %4 = load i32*, i32** %sindex.addr, align 4
  %5 = load i32, i32* %4, align 4
  %add = add i32 %call, %5
  store i32 %add, i32* %slen, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %and = and i32 %6, 512
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 4, i32 1
  store i32 %cond, i32* %dolbrace_state, align 4
  %7 = load i32, i32* %quoted.addr, align 4
  %and1 = and i32 %7, 3
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* %flags.addr, align 4
  %and3 = and i32 %8, 256
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load i32*, i32** %sindex.addr, align 4
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end268, %if.end154, %if.then97, %if.then89, %if.end76, %if.end64, %if.then54, %if.then40, %do.end, %if.end
  %11 = load i8*, i8** %string.addr, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %11, i32 %12
  %13 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %13 to i32
  store i32 %conv, i32* %c, align 4
  %tobool5 = icmp ne i32 %conv, 0
  br i1 %tobool5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load i32, i32* %pass_character, align 4
  %tobool6 = icmp ne i32 %14, 0
  br i1 %tobool6, label %if.then7, label %if.end34

if.then7:                                         ; preds = %while.body
  store i32 0, i32* %pass_character, align 4
  br label %do.body

do.body:                                          ; preds = %if.then7
  %15 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp = icmp sgt i32 %15, 1
  br i1 %cmp, label %if.then9, label %if.else31

if.then9:                                         ; preds = %do.body
  %16 = load i8*, i8** %string.addr, align 4
  %17 = load i32, i32* %i, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8, i8* %arrayidx10, align 1
  %call11 = call i32 @is_basic(i8 signext %18)
  store i32 %call11, i32* %_f, align 4
  %19 = load i32, i32* %_f, align 4
  %tobool12 = icmp ne i32 %19, 0
  br i1 %tobool12, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then9
  store i32 1, i32* %mblength, align 4
  br label %if.end16

if.else:                                          ; preds = %if.then9
  %20 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %21 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 8, i32 4, i1 false)
  %22 = load i8*, i8** %string.addr, align 4
  %23 = load i32, i32* %i, align 4
  %add.ptr14 = getelementptr inbounds i8, i8* %22, i32 %23
  %24 = load i32, i32* %slen, align 4
  %25 = load i32, i32* %i, align 4
  %sub = sub i32 %24, %25
  %call15 = call i32 @mbrlen(i8* %add.ptr14, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call15, i32* %mblength, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  %26 = load i32, i32* %mblength, align 4
  %cmp17 = icmp eq i32 %26, -2
  br i1 %cmp17, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end16
  %27 = load i32, i32* %mblength, align 4
  %cmp19 = icmp eq i32 %27, -1
  br i1 %cmp19, label %if.then21, label %if.else22

if.then21:                                        ; preds = %lor.lhs.false, %if.end16
  %28 = bitcast %struct.__mbstate_t* %state to i8*
  %29 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %28, i8* %29, i32 8, i32 4, i1 false)
  %30 = load i32, i32* %i, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end30

if.else22:                                        ; preds = %lor.lhs.false
  %31 = load i32, i32* %mblength, align 4
  %cmp23 = icmp eq i32 %31, 0
  br i1 %cmp23, label %if.then25, label %if.else27

if.then25:                                        ; preds = %if.else22
  %32 = load i32, i32* %i, align 4
  %inc26 = add nsw i32 %32, 1
  store i32 %inc26, i32* %i, align 4
  br label %if.end29

if.else27:                                        ; preds = %if.else22
  %33 = load i32, i32* %mblength, align 4
  %34 = load i32, i32* %i, align 4
  %add28 = add i32 %34, %33
  store i32 %add28, i32* %i, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then25
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then21
  br label %if.end33

if.else31:                                        ; preds = %do.body
  %35 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %35, 1
  store i32 %inc32, i32* %i, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.end30
  br label %do.end

do.end:                                           ; preds = %if.end33
  br label %while.cond

if.end34:                                         ; preds = %while.body
  %36 = load i32, i32* %c, align 4
  %cmp35 = icmp eq i32 %36, 1
  br i1 %cmp35, label %if.then40, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %if.end34
  %37 = load i32, i32* %c, align 4
  %cmp38 = icmp eq i32 %37, 92
  br i1 %cmp38, label %if.then40, label %if.end43

if.then40:                                        ; preds = %lor.lhs.false37, %if.end34
  %38 = load i32, i32* %pass_character, align 4
  %inc41 = add nsw i32 %38, 1
  store i32 %inc41, i32* %pass_character, align 4
  %39 = load i32, i32* %i, align 4
  %inc42 = add nsw i32 %39, 1
  store i32 %inc42, i32* %i, align 4
  br label %while.cond

if.end43:                                         ; preds = %lor.lhs.false37
  %40 = load i8*, i8** %string.addr, align 4
  %41 = load i32, i32* %i, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %40, i32 %41
  %42 = load i8, i8* %arrayidx44, align 1
  %conv45 = sext i8 %42 to i32
  %cmp46 = icmp eq i32 %conv45, 36
  br i1 %cmp46, label %land.lhs.true48, label %if.end57

land.lhs.true48:                                  ; preds = %if.end43
  %43 = load i8*, i8** %string.addr, align 4
  %44 = load i32, i32* %i, align 4
  %add49 = add nsw i32 %44, 1
  %arrayidx50 = getelementptr inbounds i8, i8* %43, i32 %add49
  %45 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %45 to i32
  %cmp52 = icmp eq i32 %conv51, 123
  br i1 %cmp52, label %if.then54, label %if.end57

if.then54:                                        ; preds = %land.lhs.true48
  %46 = load i32, i32* %nesting_level, align 4
  %inc55 = add nsw i32 %46, 1
  store i32 %inc55, i32* %nesting_level, align 4
  %47 = load i32, i32* %i, align 4
  %add56 = add nsw i32 %47, 2
  store i32 %add56, i32* %i, align 4
  br label %while.cond

if.end57:                                         ; preds = %land.lhs.true48, %if.end43
  %48 = load i32, i32* %c, align 4
  %cmp58 = icmp eq i32 %48, 125
  br i1 %cmp58, label %if.then60, label %if.end66

if.then60:                                        ; preds = %if.end57
  %49 = load i32, i32* %nesting_level, align 4
  %dec = add nsw i32 %49, -1
  store i32 %dec, i32* %nesting_level, align 4
  %50 = load i32, i32* %nesting_level, align 4
  %cmp61 = icmp eq i32 %50, 0
  br i1 %cmp61, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.then60
  br label %while.end

if.end64:                                         ; preds = %if.then60
  %51 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %51, 1
  store i32 %inc65, i32* %i, align 4
  br label %while.cond

if.end66:                                         ; preds = %if.end57
  %52 = load i32, i32* %c, align 4
  %cmp67 = icmp eq i32 %52, 96
  br i1 %cmp67, label %if.then69, label %if.end78

if.then69:                                        ; preds = %if.end66
  %53 = load i32, i32* %i, align 4
  %add70 = add nsw i32 %53, 1
  store i32 %add70, i32* %si, align 4
  %54 = load i8*, i8** %string.addr, align 4
  %55 = load i32, i32* %flags.addr, align 4
  %or = or i32 %55, 1
  %call71 = call i8* @string_extract(i8* %54, i32* %si, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i32 %or)
  store i8* %call71, i8** %t, align 4
  %56 = load i32, i32* %si, align 4
  %57 = load i32, i32* %slen, align 4
  %cmp72 = icmp uge i32 %56, %57
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.then69
  %58 = load i32, i32* %slen, align 4
  store i32 %58, i32* %i, align 4
  store i32 0, i32* %c, align 4
  br label %while.end

if.else75:                                        ; preds = %if.then69
  br label %if.end76

if.end76:                                         ; preds = %if.else75
  %59 = load i32, i32* %si, align 4
  %add77 = add nsw i32 %59, 1
  store i32 %add77, i32* %i, align 4
  br label %while.cond

if.end78:                                         ; preds = %if.end66
  %60 = load i8*, i8** %string.addr, align 4
  %61 = load i32, i32* %i, align 4
  %arrayidx79 = getelementptr inbounds i8, i8* %60, i32 %61
  %62 = load i8, i8* %arrayidx79, align 1
  %conv80 = sext i8 %62 to i32
  %cmp81 = icmp eq i32 %conv80, 36
  br i1 %cmp81, label %land.lhs.true83, label %if.end94

land.lhs.true83:                                  ; preds = %if.end78
  %63 = load i8*, i8** %string.addr, align 4
  %64 = load i32, i32* %i, align 4
  %add84 = add nsw i32 %64, 1
  %arrayidx85 = getelementptr inbounds i8, i8* %63, i32 %add84
  %65 = load i8, i8* %arrayidx85, align 1
  %conv86 = sext i8 %65 to i32
  %cmp87 = icmp eq i32 %conv86, 40
  br i1 %cmp87, label %if.then89, label %if.end94

if.then89:                                        ; preds = %land.lhs.true83
  %66 = load i32, i32* %i, align 4
  %add90 = add nsw i32 %66, 2
  store i32 %add90, i32* %si, align 4
  %67 = load i8*, i8** %string.addr, align 4
  %68 = load i32, i32* %flags.addr, align 4
  %or91 = or i32 %68, 1
  %call92 = call i8* @extract_command_subst(i8* %67, i32* %si, i32 %or91)
  store i8* %call92, i8** %t, align 4
  %69 = load i32, i32* %si, align 4
  %add93 = add nsw i32 %69, 1
  store i32 %add93, i32* %i, align 4
  br label %while.cond

if.end94:                                         ; preds = %land.lhs.true83, %if.end78
  %70 = load i32, i32* %c, align 4
  %cmp95 = icmp eq i32 %70, 34
  br i1 %cmp95, label %if.then97, label %if.end100

if.then97:                                        ; preds = %if.end94
  %71 = load i32, i32* %i, align 4
  %add98 = add nsw i32 %71, 1
  store i32 %add98, i32* %si, align 4
  %72 = load i8*, i8** %string.addr, align 4
  %73 = load i32, i32* %slen, align 4
  %74 = load i32, i32* %si, align 4
  %call99 = call i32 @skip_double_quoted(i8* %72, i32 %73, i32 %74, i32 0)
  store i32 %call99, i32* %i, align 4
  br label %while.cond

if.end100:                                        ; preds = %if.end94
  %75 = load i32, i32* %c, align 4
  %cmp101 = icmp eq i32 %75, 39
  br i1 %cmp101, label %if.then103, label %if.end155

if.then103:                                       ; preds = %if.end100
  %76 = load i32, i32* @posixly_correct, align 4
  %tobool104 = icmp ne i32 %76, 0
  br i1 %tobool104, label %land.lhs.true105, label %if.else151

land.lhs.true105:                                 ; preds = %if.then103
  %77 = load i32, i32* @shell_compatibility_level, align 4
  %cmp106 = icmp sgt i32 %77, 42
  br i1 %cmp106, label %land.lhs.true108, label %if.else151

land.lhs.true108:                                 ; preds = %land.lhs.true105
  %78 = load i32, i32* %dolbrace_state, align 4
  %cmp109 = icmp ne i32 %78, 64
  br i1 %cmp109, label %land.lhs.true111, label %if.else151

land.lhs.true111:                                 ; preds = %land.lhs.true108
  %79 = load i32, i32* %quoted.addr, align 4
  %and112 = and i32 %79, 3
  %tobool113 = icmp ne i32 %and112, 0
  br i1 %tobool113, label %if.then114, label %if.else151

if.then114:                                       ; preds = %land.lhs.true111
  br label %do.body115

do.body115:                                       ; preds = %if.then114
  %80 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp116 = icmp sgt i32 %80, 1
  br i1 %cmp116, label %if.then118, label %if.else147

if.then118:                                       ; preds = %do.body115
  %81 = load i8*, i8** %string.addr, align 4
  %82 = load i32, i32* %i, align 4
  %arrayidx122 = getelementptr inbounds i8, i8* %81, i32 %82
  %83 = load i8, i8* %arrayidx122, align 1
  %call123 = call i32 @is_basic(i8 signext %83)
  store i32 %call123, i32* %_f121, align 4
  %84 = load i32, i32* %_f121, align 4
  %tobool124 = icmp ne i32 %84, 0
  br i1 %tobool124, label %if.then125, label %if.else126

if.then125:                                       ; preds = %if.then118
  store i32 1, i32* %mblength120, align 4
  br label %if.end130

if.else126:                                       ; preds = %if.then118
  %85 = bitcast %struct.__mbstate_t* %state_bak119 to i8*
  %86 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %85, i8* %86, i32 8, i32 4, i1 false)
  %87 = load i8*, i8** %string.addr, align 4
  %88 = load i32, i32* %i, align 4
  %add.ptr127 = getelementptr inbounds i8, i8* %87, i32 %88
  %89 = load i32, i32* %slen, align 4
  %90 = load i32, i32* %i, align 4
  %sub128 = sub i32 %89, %90
  %call129 = call i32 @mbrlen(i8* %add.ptr127, i32 %sub128, %struct.__mbstate_t* %state)
  store i32 %call129, i32* %mblength120, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.else126, %if.then125
  %91 = load i32, i32* %mblength120, align 4
  %cmp131 = icmp eq i32 %91, -2
  br i1 %cmp131, label %if.then136, label %lor.lhs.false133

lor.lhs.false133:                                 ; preds = %if.end130
  %92 = load i32, i32* %mblength120, align 4
  %cmp134 = icmp eq i32 %92, -1
  br i1 %cmp134, label %if.then136, label %if.else138

if.then136:                                       ; preds = %lor.lhs.false133, %if.end130
  %93 = bitcast %struct.__mbstate_t* %state to i8*
  %94 = bitcast %struct.__mbstate_t* %state_bak119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %93, i8* %94, i32 8, i32 4, i1 false)
  %95 = load i32, i32* %i, align 4
  %inc137 = add nsw i32 %95, 1
  store i32 %inc137, i32* %i, align 4
  br label %if.end146

if.else138:                                       ; preds = %lor.lhs.false133
  %96 = load i32, i32* %mblength120, align 4
  %cmp139 = icmp eq i32 %96, 0
  br i1 %cmp139, label %if.then141, label %if.else143

if.then141:                                       ; preds = %if.else138
  %97 = load i32, i32* %i, align 4
  %inc142 = add nsw i32 %97, 1
  store i32 %inc142, i32* %i, align 4
  br label %if.end145

if.else143:                                       ; preds = %if.else138
  %98 = load i32, i32* %mblength120, align 4
  %99 = load i32, i32* %i, align 4
  %add144 = add i32 %99, %98
  store i32 %add144, i32* %i, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.else143, %if.then141
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then136
  br label %if.end149

if.else147:                                       ; preds = %do.body115
  %100 = load i32, i32* %i, align 4
  %inc148 = add nsw i32 %100, 1
  store i32 %inc148, i32* %i, align 4
  br label %if.end149

if.end149:                                        ; preds = %if.else147, %if.end146
  br label %do.end150

do.end150:                                        ; preds = %if.end149
  br label %if.end154

if.else151:                                       ; preds = %land.lhs.true111, %land.lhs.true108, %land.lhs.true105, %if.then103
  %101 = load i32, i32* %i, align 4
  %add152 = add nsw i32 %101, 1
  store i32 %add152, i32* %si, align 4
  %102 = load i8*, i8** %string.addr, align 4
  %103 = load i32, i32* %slen, align 4
  %104 = load i32, i32* %si, align 4
  %call153 = call i32 @skip_single_quoted(i8* %102, i32 %103, i32 %104, i32 0)
  store i32 %call153, i32* %i, align 4
  br label %if.end154

if.end154:                                        ; preds = %if.else151, %do.end150
  br label %while.cond

if.end155:                                        ; preds = %if.end100
  br label %do.body156

do.body156:                                       ; preds = %if.end155
  %105 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp157 = icmp sgt i32 %105, 1
  br i1 %cmp157, label %if.then159, label %if.else188

if.then159:                                       ; preds = %do.body156
  %106 = load i8*, i8** %string.addr, align 4
  %107 = load i32, i32* %i, align 4
  %arrayidx163 = getelementptr inbounds i8, i8* %106, i32 %107
  %108 = load i8, i8* %arrayidx163, align 1
  %call164 = call i32 @is_basic(i8 signext %108)
  store i32 %call164, i32* %_f162, align 4
  %109 = load i32, i32* %_f162, align 4
  %tobool165 = icmp ne i32 %109, 0
  br i1 %tobool165, label %if.then166, label %if.else167

if.then166:                                       ; preds = %if.then159
  store i32 1, i32* %mblength161, align 4
  br label %if.end171

if.else167:                                       ; preds = %if.then159
  %110 = bitcast %struct.__mbstate_t* %state_bak160 to i8*
  %111 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %110, i8* %111, i32 8, i32 4, i1 false)
  %112 = load i8*, i8** %string.addr, align 4
  %113 = load i32, i32* %i, align 4
  %add.ptr168 = getelementptr inbounds i8, i8* %112, i32 %113
  %114 = load i32, i32* %slen, align 4
  %115 = load i32, i32* %i, align 4
  %sub169 = sub i32 %114, %115
  %call170 = call i32 @mbrlen(i8* %add.ptr168, i32 %sub169, %struct.__mbstate_t* %state)
  store i32 %call170, i32* %mblength161, align 4
  br label %if.end171

if.end171:                                        ; preds = %if.else167, %if.then166
  %116 = load i32, i32* %mblength161, align 4
  %cmp172 = icmp eq i32 %116, -2
  br i1 %cmp172, label %if.then177, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %if.end171
  %117 = load i32, i32* %mblength161, align 4
  %cmp175 = icmp eq i32 %117, -1
  br i1 %cmp175, label %if.then177, label %if.else179

if.then177:                                       ; preds = %lor.lhs.false174, %if.end171
  %118 = bitcast %struct.__mbstate_t* %state to i8*
  %119 = bitcast %struct.__mbstate_t* %state_bak160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %118, i8* %119, i32 8, i32 4, i1 false)
  %120 = load i32, i32* %i, align 4
  %inc178 = add nsw i32 %120, 1
  store i32 %inc178, i32* %i, align 4
  br label %if.end187

if.else179:                                       ; preds = %lor.lhs.false174
  %121 = load i32, i32* %mblength161, align 4
  %cmp180 = icmp eq i32 %121, 0
  br i1 %cmp180, label %if.then182, label %if.else184

if.then182:                                       ; preds = %if.else179
  %122 = load i32, i32* %i, align 4
  %inc183 = add nsw i32 %122, 1
  store i32 %inc183, i32* %i, align 4
  br label %if.end186

if.else184:                                       ; preds = %if.else179
  %123 = load i32, i32* %mblength161, align 4
  %124 = load i32, i32* %i, align 4
  %add185 = add i32 %124, %123
  store i32 %add185, i32* %i, align 4
  br label %if.end186

if.end186:                                        ; preds = %if.else184, %if.then182
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then177
  br label %if.end190

if.else188:                                       ; preds = %do.body156
  %125 = load i32, i32* %i, align 4
  %inc189 = add nsw i32 %125, 1
  store i32 %inc189, i32* %i, align 4
  br label %if.end190

if.end190:                                        ; preds = %if.else188, %if.end187
  br label %do.end191

do.end191:                                        ; preds = %if.end190
  %126 = load i32, i32* %dolbrace_state, align 4
  %cmp192 = icmp eq i32 %126, 1
  br i1 %cmp192, label %land.lhs.true194, label %if.else202

land.lhs.true194:                                 ; preds = %do.end191
  %127 = load i32, i32* %c, align 4
  %cmp195 = icmp eq i32 %127, 37
  br i1 %cmp195, label %land.lhs.true197, label %if.else202

land.lhs.true197:                                 ; preds = %land.lhs.true194
  %128 = load i32, i32* %i, align 4
  %129 = load i32*, i32** %sindex.addr, align 4
  %130 = load i32, i32* %129, align 4
  %sub198 = sub nsw i32 %128, %130
  %cmp199 = icmp sgt i32 %sub198, 1
  br i1 %cmp199, label %if.then201, label %if.else202

if.then201:                                       ; preds = %land.lhs.true197
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end268

if.else202:                                       ; preds = %land.lhs.true197, %land.lhs.true194, %do.end191
  %131 = load i32, i32* %dolbrace_state, align 4
  %cmp203 = icmp eq i32 %131, 1
  br i1 %cmp203, label %land.lhs.true205, label %if.else213

land.lhs.true205:                                 ; preds = %if.else202
  %132 = load i32, i32* %c, align 4
  %cmp206 = icmp eq i32 %132, 35
  br i1 %cmp206, label %land.lhs.true208, label %if.else213

land.lhs.true208:                                 ; preds = %land.lhs.true205
  %133 = load i32, i32* %i, align 4
  %134 = load i32*, i32** %sindex.addr, align 4
  %135 = load i32, i32* %134, align 4
  %sub209 = sub nsw i32 %133, %135
  %cmp210 = icmp sgt i32 %sub209, 1
  br i1 %cmp210, label %if.then212, label %if.else213

if.then212:                                       ; preds = %land.lhs.true208
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end267

if.else213:                                       ; preds = %land.lhs.true208, %land.lhs.true205, %if.else202
  %136 = load i32, i32* %dolbrace_state, align 4
  %cmp214 = icmp eq i32 %136, 1
  br i1 %cmp214, label %land.lhs.true216, label %if.else224

land.lhs.true216:                                 ; preds = %if.else213
  %137 = load i32, i32* %c, align 4
  %cmp217 = icmp eq i32 %137, 47
  br i1 %cmp217, label %land.lhs.true219, label %if.else224

land.lhs.true219:                                 ; preds = %land.lhs.true216
  %138 = load i32, i32* %i, align 4
  %139 = load i32*, i32** %sindex.addr, align 4
  %140 = load i32, i32* %139, align 4
  %sub220 = sub nsw i32 %138, %140
  %cmp221 = icmp sgt i32 %sub220, 1
  br i1 %cmp221, label %if.then223, label %if.else224

if.then223:                                       ; preds = %land.lhs.true219
  store i32 128, i32* %dolbrace_state, align 4
  br label %if.end266

if.else224:                                       ; preds = %land.lhs.true219, %land.lhs.true216, %if.else213
  %141 = load i32, i32* %dolbrace_state, align 4
  %cmp225 = icmp eq i32 %141, 1
  br i1 %cmp225, label %land.lhs.true227, label %if.else235

land.lhs.true227:                                 ; preds = %if.else224
  %142 = load i32, i32* %c, align 4
  %cmp228 = icmp eq i32 %142, 94
  br i1 %cmp228, label %land.lhs.true230, label %if.else235

land.lhs.true230:                                 ; preds = %land.lhs.true227
  %143 = load i32, i32* %i, align 4
  %144 = load i32*, i32** %sindex.addr, align 4
  %145 = load i32, i32* %144, align 4
  %sub231 = sub nsw i32 %143, %145
  %cmp232 = icmp sgt i32 %sub231, 1
  br i1 %cmp232, label %if.then234, label %if.else235

if.then234:                                       ; preds = %land.lhs.true230
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end265

if.else235:                                       ; preds = %land.lhs.true230, %land.lhs.true227, %if.else224
  %146 = load i32, i32* %dolbrace_state, align 4
  %cmp236 = icmp eq i32 %146, 1
  br i1 %cmp236, label %land.lhs.true238, label %if.else246

land.lhs.true238:                                 ; preds = %if.else235
  %147 = load i32, i32* %c, align 4
  %cmp239 = icmp eq i32 %147, 44
  br i1 %cmp239, label %land.lhs.true241, label %if.else246

land.lhs.true241:                                 ; preds = %land.lhs.true238
  %148 = load i32, i32* %i, align 4
  %149 = load i32*, i32** %sindex.addr, align 4
  %150 = load i32, i32* %149, align 4
  %sub242 = sub nsw i32 %148, %150
  %cmp243 = icmp sgt i32 %sub242, 1
  br i1 %cmp243, label %if.then245, label %if.else246

if.then245:                                       ; preds = %land.lhs.true241
  store i32 64, i32* %dolbrace_state, align 4
  br label %if.end264

if.else246:                                       ; preds = %land.lhs.true241, %land.lhs.true238, %if.else235
  %151 = load i32, i32* %dolbrace_state, align 4
  %cmp247 = icmp eq i32 %151, 1
  br i1 %cmp247, label %land.lhs.true249, label %if.else254

land.lhs.true249:                                 ; preds = %if.else246
  %152 = load i32, i32* %c, align 4
  %call250 = call i8* @strchr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i32 %152)
  %cmp251 = icmp ne i8* %call250, null
  br i1 %cmp251, label %if.then253, label %if.else254

if.then253:                                       ; preds = %land.lhs.true249
  store i32 2, i32* %dolbrace_state, align 4
  br label %if.end263

if.else254:                                       ; preds = %land.lhs.true249, %if.else246
  %153 = load i32, i32* %dolbrace_state, align 4
  %cmp255 = icmp eq i32 %153, 2
  br i1 %cmp255, label %land.lhs.true257, label %if.end262

land.lhs.true257:                                 ; preds = %if.else254
  %154 = load i32, i32* %c, align 4
  %call258 = call i8* @strchr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i32 %154)
  %cmp259 = icmp eq i8* %call258, null
  br i1 %cmp259, label %if.then261, label %if.end262

if.then261:                                       ; preds = %land.lhs.true257
  store i32 4, i32* %dolbrace_state, align 4
  br label %if.end262

if.end262:                                        ; preds = %if.then261, %land.lhs.true257, %if.else254
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then253
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then245
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.then234
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then223
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then212
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then201
  br label %while.cond

while.end:                                        ; preds = %if.then74, %if.then63, %while.cond
  %155 = load i32, i32* %c, align 4
  %cmp269 = icmp eq i32 %155, 0
  br i1 %cmp269, label %land.lhs.true271, label %if.end280

land.lhs.true271:                                 ; preds = %while.end
  %156 = load i32, i32* %nesting_level, align 4
  %tobool272 = icmp ne i32 %156, 0
  br i1 %tobool272, label %if.then273, label %if.end280

if.then273:                                       ; preds = %land.lhs.true271
  %157 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  %cmp274 = icmp eq i32 %157, 0
  br i1 %cmp274, label %if.then276, label %if.else278

if.then276:                                       ; preds = %if.then273
  store i32 1, i32* @last_command_exit_value, align 4
  %call277 = call i8* @libintl_gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i32 0, i32 0))
  %158 = load i8*, i8** %string.addr, align 4
  call void (i8*, ...) @report_error(i8* %call277, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i8* %158)
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end279

if.else278:                                       ; preds = %if.then273
  %159 = load i32, i32* %i, align 4
  %160 = load i32*, i32** %sindex.addr, align 4
  store i32 %159, i32* %160, align 4
  store i8* null, i8** %retval, align 4
  br label %return

if.end279:                                        ; preds = %if.then276
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %land.lhs.true271, %while.end
  %161 = load i32, i32* %flags.addr, align 4
  %and281 = and i32 %161, 1
  %tobool282 = icmp ne i32 %and281, 0
  br i1 %tobool282, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end280
  br label %cond.end

cond.false:                                       ; preds = %if.end280
  %162 = load i8*, i8** %string.addr, align 4
  %163 = load i32*, i32** %sindex.addr, align 4
  %164 = load i32, i32* %163, align 4
  %165 = load i32, i32* %i, align 4
  %call283 = call i8* @substring(i8* %162, i32 %164, i32 %165)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond284 = phi i8* [ null, %cond.true ], [ %call283, %cond.false ]
  store i8* %cond284, i8** %result, align 4
  %166 = load i32, i32* %i, align 4
  %167 = load i32*, i32** %sindex.addr, align 4
  store i32 %166, i32* %167, align 4
  %168 = load i8*, i8** %result, align 4
  store i8* %168, i8** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.else278
  %169 = load i8*, i8** %retval, align 4
  ret i8* %169
}

; Function Attrs: noinline nounwind
define i32 @skip_to_histexp(i8* %string, i32 %start, i8* %delims, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %start.addr = alloca i32, align 4
  %delims.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pass_next = alloca i32, align 4
  %backq = alloca i32, align 4
  %dquote = alloca i32, align 4
  %si = alloca i32, align 4
  %c = alloca i32, align 4
  %oldjmp = alloca i32, align 4
  %histexp_comsub = alloca i32, align 4
  %histexp_backq = alloca i32, align 4
  %old_dquote = alloca i32, align 4
  %slen = alloca i32, align 4
  %temp = alloca i8*, align 4
  %open = alloca [3 x i8], align 1
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak151 = alloca %struct.__mbstate_t, align 4
  %mblength152 = alloca i32, align 4
  %_f153 = alloca i32, align 4
  %state_bak188 = alloca %struct.__mbstate_t, align 4
  %mblength189 = alloca i32, align 4
  %_f190 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i8* %delims, i8** %delims.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32, i32* %start.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %2
  %call = call i32 @strlen(i8* %add.ptr)
  %3 = load i32, i32* %start.addr, align 4
  %add = add i32 %call, %3
  store i32 %add, i32* %slen, align 4
  %4 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  store i32 %4, i32* %oldjmp, align 4
  %5 = load i32, i32* %flags.addr, align 4
  %and = and i32 %5, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* @no_longjmp_on_fatal_error, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %old_dquote, align 4
  store i32 0, i32* %histexp_backq, align 4
  store i32 0, i32* %histexp_comsub, align 4
  %6 = load i32, i32* %start.addr, align 4
  store i32 %6, i32* %i, align 4
  store i32 0, i32* %dquote, align 4
  store i32 0, i32* %backq, align 4
  store i32 0, i32* %pass_next, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end232, %do.end182, %if.then141, %if.then93, %if.then79, %if.then66, %if.then50, %if.then45, %if.then39, %do.end35, %if.end
  %7 = load i8*, i8** %string.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %7, i32 %8
  %9 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %9 to i32
  store i32 %conv, i32* %c, align 4
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %pass_next, align 4
  %tobool2 = icmp ne i32 %10, 0
  br i1 %tobool2, label %if.then3, label %if.else36

if.then3:                                         ; preds = %while.body
  store i32 0, i32* %pass_next, align 4
  %11 = load i32, i32* %c, align 4
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.then3
  br label %do.body

do.body:                                          ; preds = %if.then5
  %12 = load i32, i32* %oldjmp, align 4
  store i32 %12, i32* @no_longjmp_on_fatal_error, align 4
  %13 = load i32, i32* %i, align 4
  store i32 %13, i32* %retval, align 4
  br label %do.end234

do.end:                                           ; No predecessors!
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.then3
  br label %do.body7

do.body7:                                         ; preds = %if.end6
  %14 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp8 = icmp sgt i32 %14, 1
  br i1 %cmp8, label %if.then10, label %if.else32

if.then10:                                        ; preds = %do.body7
  %15 = load i8*, i8** %string.addr, align 4
  %16 = load i32, i32* %i, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i32 %16
  %17 = load i8, i8* %arrayidx11, align 1
  %call12 = call i32 @is_basic(i8 signext %17)
  store i32 %call12, i32* %_f, align 4
  %18 = load i32, i32* %_f, align 4
  %tobool13 = icmp ne i32 %18, 0
  br i1 %tobool13, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then10
  store i32 1, i32* %mblength, align 4
  br label %if.end17

if.else:                                          ; preds = %if.then10
  %19 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %20 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %19, i8* %20, i32 8, i32 4, i1 false)
  %21 = load i8*, i8** %string.addr, align 4
  %22 = load i32, i32* %i, align 4
  %add.ptr15 = getelementptr inbounds i8, i8* %21, i32 %22
  %23 = load i32, i32* %slen, align 4
  %24 = load i32, i32* %i, align 4
  %sub = sub i32 %23, %24
  %call16 = call i32 @mbrlen(i8* %add.ptr15, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call16, i32* %mblength, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then14
  %25 = load i32, i32* %mblength, align 4
  %cmp18 = icmp eq i32 %25, -2
  br i1 %cmp18, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %26 = load i32, i32* %mblength, align 4
  %cmp20 = icmp eq i32 %26, -1
  br i1 %cmp20, label %if.then22, label %if.else23

if.then22:                                        ; preds = %lor.lhs.false, %if.end17
  %27 = bitcast %struct.__mbstate_t* %state to i8*
  %28 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %28, i32 8, i32 4, i1 false)
  %29 = load i32, i32* %i, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end31

if.else23:                                        ; preds = %lor.lhs.false
  %30 = load i32, i32* %mblength, align 4
  %cmp24 = icmp eq i32 %30, 0
  br i1 %cmp24, label %if.then26, label %if.else28

if.then26:                                        ; preds = %if.else23
  %31 = load i32, i32* %i, align 4
  %inc27 = add nsw i32 %31, 1
  store i32 %inc27, i32* %i, align 4
  br label %if.end30

if.else28:                                        ; preds = %if.else23
  %32 = load i32, i32* %mblength, align 4
  %33 = load i32, i32* %i, align 4
  %add29 = add i32 %33, %32
  store i32 %add29, i32* %i, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.then26
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then22
  br label %if.end34

if.else32:                                        ; preds = %do.body7
  %34 = load i32, i32* %i, align 4
  %inc33 = add nsw i32 %34, 1
  store i32 %inc33, i32* %i, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.end31
  br label %do.end35

do.end35:                                         ; preds = %if.end34
  br label %while.cond

if.else36:                                        ; preds = %while.body
  %35 = load i32, i32* %c, align 4
  %cmp37 = icmp eq i32 %35, 92
  br i1 %cmp37, label %if.then39, label %if.else41

if.then39:                                        ; preds = %if.else36
  store i32 1, i32* %pass_next, align 4
  %36 = load i32, i32* %i, align 4
  %inc40 = add nsw i32 %36, 1
  store i32 %inc40, i32* %i, align 4
  br label %while.cond

if.else41:                                        ; preds = %if.else36
  %37 = load i32, i32* %backq, align 4
  %tobool42 = icmp ne i32 %37, 0
  br i1 %tobool42, label %land.lhs.true, label %if.else47

land.lhs.true:                                    ; preds = %if.else41
  %38 = load i32, i32* %c, align 4
  %cmp43 = icmp eq i32 %38, 96
  br i1 %cmp43, label %if.then45, label %if.else47

if.then45:                                        ; preds = %land.lhs.true
  store i32 0, i32* %backq, align 4
  %39 = load i32, i32* %histexp_backq, align 4
  %dec = add nsw i32 %39, -1
  store i32 %dec, i32* %histexp_backq, align 4
  %40 = load i32, i32* %old_dquote, align 4
  store i32 %40, i32* %dquote, align 4
  %41 = load i32, i32* %i, align 4
  %inc46 = add nsw i32 %41, 1
  store i32 %inc46, i32* %i, align 4
  br label %while.cond

if.else47:                                        ; preds = %land.lhs.true, %if.else41
  %42 = load i32, i32* %c, align 4
  %cmp48 = icmp eq i32 %42, 96
  br i1 %cmp48, label %if.then50, label %if.else53

if.then50:                                        ; preds = %if.else47
  store i32 1, i32* %backq, align 4
  %43 = load i32, i32* %histexp_backq, align 4
  %inc51 = add nsw i32 %43, 1
  store i32 %inc51, i32* %histexp_backq, align 4
  %44 = load i32, i32* %dquote, align 4
  store i32 %44, i32* %old_dquote, align 4
  store i32 0, i32* %dquote, align 4
  %45 = load i32, i32* %i, align 4
  %inc52 = add nsw i32 %45, 1
  store i32 %inc52, i32* %i, align 4
  br label %while.cond

if.else53:                                        ; preds = %if.else47
  %46 = load i32, i32* %dquote, align 4
  %tobool54 = icmp ne i32 %46, 0
  br i1 %tobool54, label %land.lhs.true55, label %if.else68

land.lhs.true55:                                  ; preds = %if.else53
  %47 = load i32, i32* %c, align 4
  %48 = load i8*, i8** %delims.addr, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %48, i32 0
  %49 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %49 to i32
  %cmp58 = icmp eq i32 %47, %conv57
  br i1 %cmp58, label %land.lhs.true60, label %if.else68

land.lhs.true60:                                  ; preds = %land.lhs.true55
  %50 = load i8*, i8** %string.addr, align 4
  %51 = load i32, i32* %i, align 4
  %add61 = add nsw i32 %51, 1
  %arrayidx62 = getelementptr inbounds i8, i8* %50, i32 %add61
  %52 = load i8, i8* %arrayidx62, align 1
  %conv63 = sext i8 %52 to i32
  %cmp64 = icmp eq i32 %conv63, 34
  br i1 %cmp64, label %if.then66, label %if.else68

if.then66:                                        ; preds = %land.lhs.true60
  %53 = load i32, i32* %i, align 4
  %inc67 = add nsw i32 %53, 1
  store i32 %inc67, i32* %i, align 4
  br label %while.cond

if.else68:                                        ; preds = %land.lhs.true60, %land.lhs.true55, %if.else53
  %54 = load i32, i32* %c, align 4
  %55 = load i8*, i8** %delims.addr, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %55, i32 0
  %56 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %56 to i32
  %cmp71 = icmp eq i32 %54, %conv70
  br i1 %cmp71, label %if.then73, label %if.else74

if.then73:                                        ; preds = %if.else68
  br label %while.end

if.else74:                                        ; preds = %if.else68
  %57 = load i32, i32* %dquote, align 4
  %tobool75 = icmp ne i32 %57, 0
  br i1 %tobool75, label %land.lhs.true76, label %if.else81

land.lhs.true76:                                  ; preds = %if.else74
  %58 = load i32, i32* %c, align 4
  %cmp77 = icmp eq i32 %58, 39
  br i1 %cmp77, label %if.then79, label %if.else81

if.then79:                                        ; preds = %land.lhs.true76
  %59 = load i32, i32* %i, align 4
  %inc80 = add nsw i32 %59, 1
  store i32 %inc80, i32* %i, align 4
  br label %while.cond

if.else81:                                        ; preds = %land.lhs.true76, %if.else74
  %60 = load i32, i32* %c, align 4
  %cmp82 = icmp eq i32 %60, 39
  br i1 %cmp82, label %if.then84, label %if.else87

if.then84:                                        ; preds = %if.else81
  %61 = load i8*, i8** %string.addr, align 4
  %62 = load i32, i32* %slen, align 4
  %63 = load i32, i32* %i, align 4
  %inc85 = add nsw i32 %63, 1
  store i32 %inc85, i32* %i, align 4
  %call86 = call i32 @skip_single_quoted(i8* %61, i32 %62, i32 %inc85, i32 0)
  store i32 %call86, i32* %i, align 4
  br label %if.end225

if.else87:                                        ; preds = %if.else81
  %64 = load i32, i32* @posixly_correct, align 4
  %cmp88 = icmp eq i32 %64, 0
  br i1 %cmp88, label %land.lhs.true90, label %if.else96

land.lhs.true90:                                  ; preds = %if.else87
  %65 = load i32, i32* %c, align 4
  %cmp91 = icmp eq i32 %65, 34
  br i1 %cmp91, label %if.then93, label %if.else96

if.then93:                                        ; preds = %land.lhs.true90
  %66 = load i32, i32* %dquote, align 4
  %sub94 = sub nsw i32 1, %66
  store i32 %sub94, i32* %dquote, align 4
  %67 = load i32, i32* %i, align 4
  %inc95 = add nsw i32 %67, 1
  store i32 %inc95, i32* %i, align 4
  br label %while.cond

if.else96:                                        ; preds = %land.lhs.true90, %if.else87
  %68 = load i32, i32* %c, align 4
  %cmp97 = icmp eq i32 %68, 34
  br i1 %cmp97, label %if.then99, label %if.else102

if.then99:                                        ; preds = %if.else96
  %69 = load i8*, i8** %string.addr, align 4
  %70 = load i32, i32* %slen, align 4
  %71 = load i32, i32* %i, align 4
  %inc100 = add nsw i32 %71, 1
  store i32 %inc100, i32* %i, align 4
  %call101 = call i32 @skip_double_quoted(i8* %69, i32 %70, i32 %inc100, i32 0)
  store i32 %call101, i32* %i, align 4
  br label %if.end223

if.else102:                                       ; preds = %if.else96
  %72 = load i32, i32* %c, align 4
  %cmp103 = icmp eq i32 %72, 36
  br i1 %cmp103, label %land.lhs.true111, label %lor.lhs.false105

lor.lhs.false105:                                 ; preds = %if.else102
  %73 = load i32, i32* %c, align 4
  %cmp106 = icmp eq i32 %73, 60
  br i1 %cmp106, label %land.lhs.true111, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %lor.lhs.false105
  %74 = load i32, i32* %c, align 4
  %cmp109 = icmp eq i32 %74, 62
  br i1 %cmp109, label %land.lhs.true111, label %if.else136

land.lhs.true111:                                 ; preds = %lor.lhs.false108, %lor.lhs.false105, %if.else102
  %75 = load i8*, i8** %string.addr, align 4
  %76 = load i32, i32* %i, align 4
  %add112 = add nsw i32 %76, 1
  %arrayidx113 = getelementptr inbounds i8, i8* %75, i32 %add112
  %77 = load i8, i8* %arrayidx113, align 1
  %conv114 = sext i8 %77 to i32
  %cmp115 = icmp eq i32 %conv114, 40
  br i1 %cmp115, label %land.lhs.true117, label %if.else136

land.lhs.true117:                                 ; preds = %land.lhs.true111
  %78 = load i8*, i8** %string.addr, align 4
  %79 = load i32, i32* %i, align 4
  %add118 = add nsw i32 %79, 2
  %arrayidx119 = getelementptr inbounds i8, i8* %78, i32 %add118
  %80 = load i8, i8* %arrayidx119, align 1
  %conv120 = sext i8 %80 to i32
  %cmp121 = icmp ne i32 %conv120, 40
  br i1 %cmp121, label %if.then123, label %if.else136

if.then123:                                       ; preds = %land.lhs.true117
  %81 = load i8*, i8** %string.addr, align 4
  %82 = load i32, i32* %i, align 4
  %add124 = add nsw i32 %82, 2
  %arrayidx125 = getelementptr inbounds i8, i8* %81, i32 %add124
  %83 = load i8, i8* %arrayidx125, align 1
  %conv126 = sext i8 %83 to i32
  %cmp127 = icmp eq i32 %conv126, 0
  br i1 %cmp127, label %if.then129, label %if.end133

if.then129:                                       ; preds = %if.then123
  br label %do.body130

do.body130:                                       ; preds = %if.then129
  %84 = load i32, i32* %oldjmp, align 4
  store i32 %84, i32* @no_longjmp_on_fatal_error, align 4
  %85 = load i32, i32* %i, align 4
  %add131 = add nsw i32 %85, 2
  store i32 %add131, i32* %retval, align 4
  br label %do.end234

do.end132:                                        ; No predecessors!
  br label %if.end133

if.end133:                                        ; preds = %do.end132, %if.then123
  %86 = load i32, i32* %i, align 4
  %add134 = add nsw i32 %86, 2
  store i32 %add134, i32* %i, align 4
  %87 = load i32, i32* %histexp_comsub, align 4
  %inc135 = add nsw i32 %87, 1
  store i32 %inc135, i32* %histexp_comsub, align 4
  %88 = load i32, i32* %dquote, align 4
  store i32 %88, i32* %old_dquote, align 4
  store i32 0, i32* %dquote, align 4
  br label %if.end222

if.else136:                                       ; preds = %land.lhs.true117, %land.lhs.true111, %lor.lhs.false108
  %89 = load i32, i32* %histexp_comsub, align 4
  %tobool137 = icmp ne i32 %89, 0
  br i1 %tobool137, label %land.lhs.true138, label %if.else144

land.lhs.true138:                                 ; preds = %if.else136
  %90 = load i32, i32* %c, align 4
  %cmp139 = icmp eq i32 %90, 41
  br i1 %cmp139, label %if.then141, label %if.else144

if.then141:                                       ; preds = %land.lhs.true138
  %91 = load i32, i32* %histexp_comsub, align 4
  %dec142 = add nsw i32 %91, -1
  store i32 %dec142, i32* %histexp_comsub, align 4
  %92 = load i32, i32* %old_dquote, align 4
  store i32 %92, i32* %dquote, align 4
  %93 = load i32, i32* %i, align 4
  %inc143 = add nsw i32 %93, 1
  store i32 %inc143, i32* %i, align 4
  br label %while.cond

if.else144:                                       ; preds = %land.lhs.true138, %if.else136
  %94 = load i32, i32* %backq, align 4
  %tobool145 = icmp ne i32 %94, 0
  br i1 %tobool145, label %if.then146, label %if.else183

if.then146:                                       ; preds = %if.else144
  br label %do.body147

do.body147:                                       ; preds = %if.then146
  %95 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp148 = icmp sgt i32 %95, 1
  br i1 %cmp148, label %if.then150, label %if.else179

if.then150:                                       ; preds = %do.body147
  %96 = load i8*, i8** %string.addr, align 4
  %97 = load i32, i32* %i, align 4
  %arrayidx154 = getelementptr inbounds i8, i8* %96, i32 %97
  %98 = load i8, i8* %arrayidx154, align 1
  %call155 = call i32 @is_basic(i8 signext %98)
  store i32 %call155, i32* %_f153, align 4
  %99 = load i32, i32* %_f153, align 4
  %tobool156 = icmp ne i32 %99, 0
  br i1 %tobool156, label %if.then157, label %if.else158

if.then157:                                       ; preds = %if.then150
  store i32 1, i32* %mblength152, align 4
  br label %if.end162

if.else158:                                       ; preds = %if.then150
  %100 = bitcast %struct.__mbstate_t* %state_bak151 to i8*
  %101 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %100, i8* %101, i32 8, i32 4, i1 false)
  %102 = load i8*, i8** %string.addr, align 4
  %103 = load i32, i32* %i, align 4
  %add.ptr159 = getelementptr inbounds i8, i8* %102, i32 %103
  %104 = load i32, i32* %slen, align 4
  %105 = load i32, i32* %i, align 4
  %sub160 = sub i32 %104, %105
  %call161 = call i32 @mbrlen(i8* %add.ptr159, i32 %sub160, %struct.__mbstate_t* %state)
  store i32 %call161, i32* %mblength152, align 4
  br label %if.end162

if.end162:                                        ; preds = %if.else158, %if.then157
  %106 = load i32, i32* %mblength152, align 4
  %cmp163 = icmp eq i32 %106, -2
  br i1 %cmp163, label %if.then168, label %lor.lhs.false165

lor.lhs.false165:                                 ; preds = %if.end162
  %107 = load i32, i32* %mblength152, align 4
  %cmp166 = icmp eq i32 %107, -1
  br i1 %cmp166, label %if.then168, label %if.else170

if.then168:                                       ; preds = %lor.lhs.false165, %if.end162
  %108 = bitcast %struct.__mbstate_t* %state to i8*
  %109 = bitcast %struct.__mbstate_t* %state_bak151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %108, i8* %109, i32 8, i32 4, i1 false)
  %110 = load i32, i32* %i, align 4
  %inc169 = add nsw i32 %110, 1
  store i32 %inc169, i32* %i, align 4
  br label %if.end178

if.else170:                                       ; preds = %lor.lhs.false165
  %111 = load i32, i32* %mblength152, align 4
  %cmp171 = icmp eq i32 %111, 0
  br i1 %cmp171, label %if.then173, label %if.else175

if.then173:                                       ; preds = %if.else170
  %112 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %112, 1
  store i32 %inc174, i32* %i, align 4
  br label %if.end177

if.else175:                                       ; preds = %if.else170
  %113 = load i32, i32* %mblength152, align 4
  %114 = load i32, i32* %i, align 4
  %add176 = add i32 %114, %113
  store i32 %add176, i32* %i, align 4
  br label %if.end177

if.end177:                                        ; preds = %if.else175, %if.then173
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then168
  br label %if.end181

if.else179:                                       ; preds = %do.body147
  %115 = load i32, i32* %i, align 4
  %inc180 = add nsw i32 %115, 1
  store i32 %inc180, i32* %i, align 4
  br label %if.end181

if.end181:                                        ; preds = %if.else179, %if.end178
  br label %do.end182

do.end182:                                        ; preds = %if.end181
  br label %while.cond

if.else183:                                       ; preds = %if.else144
  br label %do.body184

do.body184:                                       ; preds = %if.else183
  %116 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp185 = icmp sgt i32 %116, 1
  br i1 %cmp185, label %if.then187, label %if.else216

if.then187:                                       ; preds = %do.body184
  %117 = load i8*, i8** %string.addr, align 4
  %118 = load i32, i32* %i, align 4
  %arrayidx191 = getelementptr inbounds i8, i8* %117, i32 %118
  %119 = load i8, i8* %arrayidx191, align 1
  %call192 = call i32 @is_basic(i8 signext %119)
  store i32 %call192, i32* %_f190, align 4
  %120 = load i32, i32* %_f190, align 4
  %tobool193 = icmp ne i32 %120, 0
  br i1 %tobool193, label %if.then194, label %if.else195

if.then194:                                       ; preds = %if.then187
  store i32 1, i32* %mblength189, align 4
  br label %if.end199

if.else195:                                       ; preds = %if.then187
  %121 = bitcast %struct.__mbstate_t* %state_bak188 to i8*
  %122 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %121, i8* %122, i32 8, i32 4, i1 false)
  %123 = load i8*, i8** %string.addr, align 4
  %124 = load i32, i32* %i, align 4
  %add.ptr196 = getelementptr inbounds i8, i8* %123, i32 %124
  %125 = load i32, i32* %slen, align 4
  %126 = load i32, i32* %i, align 4
  %sub197 = sub i32 %125, %126
  %call198 = call i32 @mbrlen(i8* %add.ptr196, i32 %sub197, %struct.__mbstate_t* %state)
  store i32 %call198, i32* %mblength189, align 4
  br label %if.end199

if.end199:                                        ; preds = %if.else195, %if.then194
  %127 = load i32, i32* %mblength189, align 4
  %cmp200 = icmp eq i32 %127, -2
  br i1 %cmp200, label %if.then205, label %lor.lhs.false202

lor.lhs.false202:                                 ; preds = %if.end199
  %128 = load i32, i32* %mblength189, align 4
  %cmp203 = icmp eq i32 %128, -1
  br i1 %cmp203, label %if.then205, label %if.else207

if.then205:                                       ; preds = %lor.lhs.false202, %if.end199
  %129 = bitcast %struct.__mbstate_t* %state to i8*
  %130 = bitcast %struct.__mbstate_t* %state_bak188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %129, i8* %130, i32 8, i32 4, i1 false)
  %131 = load i32, i32* %i, align 4
  %inc206 = add nsw i32 %131, 1
  store i32 %inc206, i32* %i, align 4
  br label %if.end215

if.else207:                                       ; preds = %lor.lhs.false202
  %132 = load i32, i32* %mblength189, align 4
  %cmp208 = icmp eq i32 %132, 0
  br i1 %cmp208, label %if.then210, label %if.else212

if.then210:                                       ; preds = %if.else207
  %133 = load i32, i32* %i, align 4
  %inc211 = add nsw i32 %133, 1
  store i32 %inc211, i32* %i, align 4
  br label %if.end214

if.else212:                                       ; preds = %if.else207
  %134 = load i32, i32* %mblength189, align 4
  %135 = load i32, i32* %i, align 4
  %add213 = add i32 %135, %134
  store i32 %add213, i32* %i, align 4
  br label %if.end214

if.end214:                                        ; preds = %if.else212, %if.then210
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.then205
  br label %if.end218

if.else216:                                       ; preds = %do.body184
  %136 = load i32, i32* %i, align 4
  %inc217 = add nsw i32 %136, 1
  store i32 %inc217, i32* %i, align 4
  br label %if.end218

if.end218:                                        ; preds = %if.else216, %if.end215
  br label %do.end219

do.end219:                                        ; preds = %if.end218
  br label %if.end220

if.end220:                                        ; preds = %do.end219
  br label %if.end221

if.end221:                                        ; preds = %if.end220
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.end133
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.then99
  br label %if.end224

if.end224:                                        ; preds = %if.end223
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.then84
  br label %if.end226

if.end226:                                        ; preds = %if.end225
  br label %if.end227

if.end227:                                        ; preds = %if.end226
  br label %if.end228

if.end228:                                        ; preds = %if.end227
  br label %if.end229

if.end229:                                        ; preds = %if.end228
  br label %if.end230

if.end230:                                        ; preds = %if.end229
  br label %if.end231

if.end231:                                        ; preds = %if.end230
  br label %if.end232

if.end232:                                        ; preds = %if.end231
  br label %while.cond

while.end:                                        ; preds = %if.then73, %while.cond
  br label %do.body233

do.body233:                                       ; preds = %while.end
  %137 = load i32, i32* %oldjmp, align 4
  store i32 %137, i32* @no_longjmp_on_fatal_error, align 4
  %138 = load i32, i32* %i, align 4
  store i32 %138, i32* %retval, align 4
  br label %do.end234

do.end234:                                        ; preds = %do.body, %do.body130, %do.body233
  %139 = load i32, i32* %retval, align 4
  ret i32 %139
}

; Function Attrs: noinline nounwind
define i32 @char_is_quoted(i8* %string, i32 %eindex) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %eindex.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %pass_next = alloca i32, align 4
  %c = alloca i32, align 4
  %oldjmp = alloca i32, align 4
  %slen = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak82 = alloca %struct.__mbstate_t, align 4
  %mblength83 = alloca i32, align 4
  %_f84 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %eindex, i32* %eindex.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %slen, align 4
  %2 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  store i32 %2, i32* %oldjmp, align 4
  store i32 1, i32* @no_longjmp_on_fatal_error, align 4
  store i32 0, i32* %pass_next, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end117, %if.then34, %do.end30, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %eindex.addr, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %7 to i32
  store i32 %conv, i32* %c, align 4
  %8 = load i32, i32* %pass_next, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %if.then, label %if.else31

if.then:                                          ; preds = %while.body
  store i32 0, i32* %pass_next, align 4
  %9 = load i32, i32* %i, align 4
  %10 = load i32, i32* %eindex.addr, align 4
  %cmp1 = icmp sge i32 %9, %10
  br i1 %cmp1, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.then3
  %11 = load i32, i32* %oldjmp, align 4
  store i32 %11, i32* @no_longjmp_on_fatal_error, align 4
  store i32 1, i32* %retval, align 4
  br label %do.end119

do.end:                                           ; No predecessors!
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  br label %do.body4

do.body4:                                         ; preds = %if.end
  %12 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp5 = icmp sgt i32 %12, 1
  br i1 %cmp5, label %if.then7, label %if.else27

if.then7:                                         ; preds = %do.body4
  %13 = load i8*, i8** %string.addr, align 4
  %14 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %13, i32 %14
  %15 = load i8, i8* %arrayidx8, align 1
  %call9 = call i32 @is_basic(i8 signext %15)
  store i32 %call9, i32* %_f, align 4
  %16 = load i32, i32* %_f, align 4
  %tobool10 = icmp ne i32 %16, 0
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then7
  store i32 1, i32* %mblength, align 4
  br label %if.end13

if.else:                                          ; preds = %if.then7
  %17 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %18 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %17, i8* %18, i32 8, i32 4, i1 false)
  %19 = load i8*, i8** %string.addr, align 4
  %20 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %19, i32 %20
  %21 = load i32, i32* %slen, align 4
  %22 = load i32, i32* %i, align 4
  %sub = sub i32 %21, %22
  %call12 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call12, i32* %mblength, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  %23 = load i32, i32* %mblength, align 4
  %cmp14 = icmp eq i32 %23, -2
  br i1 %cmp14, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end13
  %24 = load i32, i32* %mblength, align 4
  %cmp16 = icmp eq i32 %24, -1
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %lor.lhs.false, %if.end13
  %25 = bitcast %struct.__mbstate_t* %state to i8*
  %26 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %25, i8* %26, i32 8, i32 4, i1 false)
  %27 = load i32, i32* %i, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end26

if.else19:                                        ; preds = %lor.lhs.false
  %28 = load i32, i32* %mblength, align 4
  %cmp20 = icmp eq i32 %28, 0
  br i1 %cmp20, label %if.then22, label %if.else24

if.then22:                                        ; preds = %if.else19
  %29 = load i32, i32* %i, align 4
  %inc23 = add nsw i32 %29, 1
  store i32 %inc23, i32* %i, align 4
  br label %if.end25

if.else24:                                        ; preds = %if.else19
  %30 = load i32, i32* %mblength, align 4
  %31 = load i32, i32* %i, align 4
  %add = add i32 %31, %30
  store i32 %add, i32* %i, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then18
  br label %if.end29

if.else27:                                        ; preds = %do.body4
  %32 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %32, 1
  store i32 %inc28, i32* %i, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.end26
  br label %do.end30

do.end30:                                         ; preds = %if.end29
  br label %while.cond

if.else31:                                        ; preds = %while.body
  %33 = load i32, i32* %c, align 4
  %cmp32 = icmp eq i32 %33, 92
  br i1 %cmp32, label %if.then34, label %if.else36

if.then34:                                        ; preds = %if.else31
  store i32 1, i32* %pass_next, align 4
  %34 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %34, 1
  store i32 %inc35, i32* %i, align 4
  br label %while.cond

if.else36:                                        ; preds = %if.else31
  %35 = load i32, i32* %c, align 4
  %cmp37 = icmp eq i32 %35, 36
  br i1 %cmp37, label %land.lhs.true, label %if.else58

land.lhs.true:                                    ; preds = %if.else36
  %36 = load i8*, i8** %string.addr, align 4
  %37 = load i32, i32* %i, align 4
  %add39 = add nsw i32 %37, 1
  %arrayidx40 = getelementptr inbounds i8, i8* %36, i32 %add39
  %38 = load i8, i8* %arrayidx40, align 1
  %conv41 = sext i8 %38 to i32
  %cmp42 = icmp eq i32 %conv41, 39
  br i1 %cmp42, label %land.lhs.true44, label %if.else58

land.lhs.true44:                                  ; preds = %land.lhs.true
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %i, align 4
  %add45 = add nsw i32 %40, 2
  %arrayidx46 = getelementptr inbounds i8, i8* %39, i32 %add45
  %41 = load i8, i8* %arrayidx46, align 1
  %conv47 = sext i8 %41 to i32
  %tobool48 = icmp ne i32 %conv47, 0
  br i1 %tobool48, label %if.then49, label %if.else58

if.then49:                                        ; preds = %land.lhs.true44
  %42 = load i32, i32* %i, align 4
  %add50 = add nsw i32 %42, 2
  store i32 %add50, i32* %i, align 4
  %43 = load i8*, i8** %string.addr, align 4
  %44 = load i32, i32* %slen, align 4
  %45 = load i32, i32* %i, align 4
  %call51 = call i32 @skip_single_quoted(i8* %43, i32 %44, i32 %45, i32 1024)
  store i32 %call51, i32* %i, align 4
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %eindex.addr, align 4
  %cmp52 = icmp sgt i32 %46, %47
  br i1 %cmp52, label %if.then54, label %if.end57

if.then54:                                        ; preds = %if.then49
  br label %do.body55

do.body55:                                        ; preds = %if.then54
  %48 = load i32, i32* %oldjmp, align 4
  store i32 %48, i32* @no_longjmp_on_fatal_error, align 4
  %49 = load i32, i32* %i, align 4
  store i32 %49, i32* %retval, align 4
  br label %do.end119

do.end56:                                         ; No predecessors!
  br label %if.end57

if.end57:                                         ; preds = %do.end56, %if.then49
  br label %if.end115

if.else58:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.else36
  %50 = load i32, i32* %c, align 4
  %cmp59 = icmp eq i32 %50, 39
  br i1 %cmp59, label %if.then64, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %if.else58
  %51 = load i32, i32* %c, align 4
  %cmp62 = icmp eq i32 %51, 34
  br i1 %cmp62, label %if.then64, label %if.else77

if.then64:                                        ; preds = %lor.lhs.false61, %if.else58
  %52 = load i32, i32* %c, align 4
  %cmp65 = icmp eq i32 %52, 39
  br i1 %cmp65, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then64
  %53 = load i8*, i8** %string.addr, align 4
  %54 = load i32, i32* %slen, align 4
  %55 = load i32, i32* %i, align 4
  %inc67 = add nsw i32 %55, 1
  store i32 %inc67, i32* %i, align 4
  %call68 = call i32 @skip_single_quoted(i8* %53, i32 %54, i32 %inc67, i32 0)
  br label %cond.end

cond.false:                                       ; preds = %if.then64
  %56 = load i8*, i8** %string.addr, align 4
  %57 = load i32, i32* %slen, align 4
  %58 = load i32, i32* %i, align 4
  %inc69 = add nsw i32 %58, 1
  store i32 %inc69, i32* %i, align 4
  %call70 = call i32 @skip_double_quoted(i8* %56, i32 %57, i32 %inc69, i32 1024)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call68, %cond.true ], [ %call70, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %eindex.addr, align 4
  %cmp71 = icmp sgt i32 %59, %60
  br i1 %cmp71, label %if.then73, label %if.end76

if.then73:                                        ; preds = %cond.end
  br label %do.body74

do.body74:                                        ; preds = %if.then73
  %61 = load i32, i32* %oldjmp, align 4
  store i32 %61, i32* @no_longjmp_on_fatal_error, align 4
  store i32 1, i32* %retval, align 4
  br label %do.end119

do.end75:                                         ; No predecessors!
  br label %if.end76

if.end76:                                         ; preds = %do.end75, %cond.end
  br label %if.end114

if.else77:                                        ; preds = %lor.lhs.false61
  br label %do.body78

do.body78:                                        ; preds = %if.else77
  %62 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp79 = icmp sgt i32 %62, 1
  br i1 %cmp79, label %if.then81, label %if.else110

if.then81:                                        ; preds = %do.body78
  %63 = load i8*, i8** %string.addr, align 4
  %64 = load i32, i32* %i, align 4
  %arrayidx85 = getelementptr inbounds i8, i8* %63, i32 %64
  %65 = load i8, i8* %arrayidx85, align 1
  %call86 = call i32 @is_basic(i8 signext %65)
  store i32 %call86, i32* %_f84, align 4
  %66 = load i32, i32* %_f84, align 4
  %tobool87 = icmp ne i32 %66, 0
  br i1 %tobool87, label %if.then88, label %if.else89

if.then88:                                        ; preds = %if.then81
  store i32 1, i32* %mblength83, align 4
  br label %if.end93

if.else89:                                        ; preds = %if.then81
  %67 = bitcast %struct.__mbstate_t* %state_bak82 to i8*
  %68 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %67, i8* %68, i32 8, i32 4, i1 false)
  %69 = load i8*, i8** %string.addr, align 4
  %70 = load i32, i32* %i, align 4
  %add.ptr90 = getelementptr inbounds i8, i8* %69, i32 %70
  %71 = load i32, i32* %slen, align 4
  %72 = load i32, i32* %i, align 4
  %sub91 = sub i32 %71, %72
  %call92 = call i32 @mbrlen(i8* %add.ptr90, i32 %sub91, %struct.__mbstate_t* %state)
  store i32 %call92, i32* %mblength83, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.else89, %if.then88
  %73 = load i32, i32* %mblength83, align 4
  %cmp94 = icmp eq i32 %73, -2
  br i1 %cmp94, label %if.then99, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %if.end93
  %74 = load i32, i32* %mblength83, align 4
  %cmp97 = icmp eq i32 %74, -1
  br i1 %cmp97, label %if.then99, label %if.else101

if.then99:                                        ; preds = %lor.lhs.false96, %if.end93
  %75 = bitcast %struct.__mbstate_t* %state to i8*
  %76 = bitcast %struct.__mbstate_t* %state_bak82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %75, i8* %76, i32 8, i32 4, i1 false)
  %77 = load i32, i32* %i, align 4
  %inc100 = add nsw i32 %77, 1
  store i32 %inc100, i32* %i, align 4
  br label %if.end109

if.else101:                                       ; preds = %lor.lhs.false96
  %78 = load i32, i32* %mblength83, align 4
  %cmp102 = icmp eq i32 %78, 0
  br i1 %cmp102, label %if.then104, label %if.else106

if.then104:                                       ; preds = %if.else101
  %79 = load i32, i32* %i, align 4
  %inc105 = add nsw i32 %79, 1
  store i32 %inc105, i32* %i, align 4
  br label %if.end108

if.else106:                                       ; preds = %if.else101
  %80 = load i32, i32* %mblength83, align 4
  %81 = load i32, i32* %i, align 4
  %add107 = add i32 %81, %80
  store i32 %add107, i32* %i, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.else106, %if.then104
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then99
  br label %if.end112

if.else110:                                       ; preds = %do.body78
  %82 = load i32, i32* %i, align 4
  %inc111 = add nsw i32 %82, 1
  store i32 %inc111, i32* %i, align 4
  br label %if.end112

if.end112:                                        ; preds = %if.else110, %if.end109
  br label %do.end113

do.end113:                                        ; preds = %if.end112
  br label %if.end114

if.end114:                                        ; preds = %do.end113, %if.end76
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end57
  br label %if.end116

if.end116:                                        ; preds = %if.end115
  br label %if.end117

if.end117:                                        ; preds = %if.end116
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body118

do.body118:                                       ; preds = %while.end
  %83 = load i32, i32* %oldjmp, align 4
  store i32 %83, i32* @no_longjmp_on_fatal_error, align 4
  store i32 0, i32* %retval, align 4
  br label %do.end119

do.end119:                                        ; preds = %do.body, %do.body55, %do.body74, %do.body118
  %84 = load i32, i32* %retval, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind
define i32 @unclosed_pair(i8* %string, i32 %eindex, i8* %openstr) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %eindex.addr = alloca i32, align 4
  %openstr.addr = alloca i8*, align 4
  %i = alloca i32, align 4
  %pass_next = alloca i32, align 4
  %openc = alloca i32, align 4
  %olen = alloca i32, align 4
  %slen = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak75 = alloca %struct.__mbstate_t, align 4
  %mblength76 = alloca i32, align 4
  %_f77 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %eindex, i32* %eindex.addr, align 4
  store i8* %openstr, i8** %openstr.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %slen, align 4
  %2 = load i8*, i8** %openstr.addr, align 4
  %call1 = call i32 @strlen(i8* %2)
  store i32 %call1, i32* %olen, align 4
  store i32 0, i32* %openc, align 4
  store i32 0, i32* %pass_next, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end110, %if.then28, %do.end, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %eindex.addr, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %pass_next, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.else24

if.then:                                          ; preds = %while.body
  store i32 0, i32* %pass_next, align 4
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* %eindex.addr, align 4
  %cmp2 = icmp sge i32 %6, %7
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then
  br label %do.body

do.body:                                          ; preds = %if.end
  %8 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp4 = icmp sgt i32 %8, 1
  br i1 %cmp4, label %if.then5, label %if.else21

if.then5:                                         ; preds = %do.body
  %9 = load i8*, i8** %string.addr, align 4
  %10 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %9, i32 %10
  %11 = load i8, i8* %arrayidx, align 1
  %call6 = call i32 @is_basic(i8 signext %11)
  store i32 %call6, i32* %_f, align 4
  %12 = load i32, i32* %_f, align 4
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then5
  store i32 1, i32* %mblength, align 4
  br label %if.end10

if.else:                                          ; preds = %if.then5
  %13 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %14 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %13, i8* %14, i32 8, i32 4, i1 false)
  %15 = load i8*, i8** %string.addr, align 4
  %16 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %15, i32 %16
  %17 = load i32, i32* %slen, align 4
  %18 = load i32, i32* %i, align 4
  %sub = sub i32 %17, %18
  %call9 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call9, i32* %mblength, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  %19 = load i32, i32* %mblength, align 4
  %cmp11 = icmp eq i32 %19, -2
  br i1 %cmp11, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end10
  %20 = load i32, i32* %mblength, align 4
  %cmp12 = icmp eq i32 %20, -1
  br i1 %cmp12, label %if.then13, label %if.else14

if.then13:                                        ; preds = %lor.lhs.false, %if.end10
  %21 = bitcast %struct.__mbstate_t* %state to i8*
  %22 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %21, i8* %22, i32 8, i32 4, i1 false)
  %23 = load i32, i32* %i, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end20

if.else14:                                        ; preds = %lor.lhs.false
  %24 = load i32, i32* %mblength, align 4
  %cmp15 = icmp eq i32 %24, 0
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else14
  %25 = load i32, i32* %i, align 4
  %inc17 = add nsw i32 %25, 1
  store i32 %inc17, i32* %i, align 4
  br label %if.end19

if.else18:                                        ; preds = %if.else14
  %26 = load i32, i32* %mblength, align 4
  %27 = load i32, i32* %i, align 4
  %add = add i32 %27, %26
  store i32 %add, i32* %i, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then16
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then13
  br label %if.end23

if.else21:                                        ; preds = %do.body
  %28 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %28, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.end20
  br label %do.end

do.end:                                           ; preds = %if.end23
  br label %while.cond

if.else24:                                        ; preds = %while.body
  %29 = load i8*, i8** %string.addr, align 4
  %30 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %29, i32 %30
  %31 = load i8, i8* %arrayidx25, align 1
  %conv = sext i8 %31 to i32
  %cmp26 = icmp eq i32 %conv, 92
  br i1 %cmp26, label %if.then28, label %if.else30

if.then28:                                        ; preds = %if.else24
  store i32 1, i32* %pass_next, align 4
  %32 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %32, 1
  store i32 %inc29, i32* %i, align 4
  br label %while.cond

if.else30:                                        ; preds = %if.else24
  %33 = load i32, i32* %olen, align 4
  %cmp31 = icmp eq i32 %33, 0
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else30
  br i1 true, label %if.then44, label %if.else47

cond.false:                                       ; preds = %if.else30
  %34 = load i8*, i8** %string.addr, align 4
  %35 = load i32, i32* %i, align 4
  %add.ptr33 = getelementptr inbounds i8, i8* %34, i32 %35
  %arrayidx34 = getelementptr inbounds i8, i8* %add.ptr33, i32 0
  %36 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %36 to i32
  %37 = load i8*, i8** %openstr.addr, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %37, i32 0
  %38 = load i8, i8* %arrayidx36, align 1
  %conv37 = sext i8 %38 to i32
  %cmp38 = icmp eq i32 %conv35, %conv37
  br i1 %cmp38, label %land.lhs.true, label %if.else47

land.lhs.true:                                    ; preds = %cond.false
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %i, align 4
  %add.ptr40 = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i8*, i8** %openstr.addr, align 4
  %42 = load i32, i32* %olen, align 4
  %call41 = call i32 @strncmp(i8* %add.ptr40, i8* %41, i32 %42)
  %cmp42 = icmp eq i32 %call41, 0
  br i1 %cmp42, label %if.then44, label %if.else47

if.then44:                                        ; preds = %land.lhs.true, %cond.true
  %43 = load i32, i32* %openc, align 4
  %sub45 = sub nsw i32 1, %43
  store i32 %sub45, i32* %openc, align 4
  %44 = load i32, i32* %olen, align 4
  %45 = load i32, i32* %i, align 4
  %add46 = add nsw i32 %45, %44
  store i32 %add46, i32* %i, align 4
  br label %if.end108

if.else47:                                        ; preds = %land.lhs.true, %cond.false, %cond.true
  %46 = load i8*, i8** %string.addr, align 4
  %47 = load i32, i32* %i, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %46, i32 %47
  %48 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %48 to i32
  %cmp50 = icmp eq i32 %conv49, 39
  br i1 %cmp50, label %if.then57, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.else47
  %49 = load i8*, i8** %string.addr, align 4
  %50 = load i32, i32* %i, align 4
  %arrayidx53 = getelementptr inbounds i8, i8* %49, i32 %50
  %51 = load i8, i8* %arrayidx53, align 1
  %conv54 = sext i8 %51 to i32
  %cmp55 = icmp eq i32 %conv54, 34
  br i1 %cmp55, label %if.then57, label %if.else70

if.then57:                                        ; preds = %lor.lhs.false52, %if.else47
  %52 = load i8*, i8** %string.addr, align 4
  %53 = load i32, i32* %i, align 4
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i32 %53
  %54 = load i8, i8* %arrayidx58, align 1
  %conv59 = sext i8 %54 to i32
  %cmp60 = icmp eq i32 %conv59, 39
  br i1 %cmp60, label %cond.true62, label %cond.false64

cond.true62:                                      ; preds = %if.then57
  %55 = load i8*, i8** %string.addr, align 4
  %56 = load i32, i32* %slen, align 4
  %57 = load i32, i32* %i, align 4
  %call63 = call i32 @skip_single_quoted(i8* %55, i32 %56, i32 %57, i32 0)
  br label %cond.end

cond.false64:                                     ; preds = %if.then57
  %58 = load i8*, i8** %string.addr, align 4
  %59 = load i32, i32* %slen, align 4
  %60 = load i32, i32* %i, align 4
  %call65 = call i32 @skip_double_quoted(i8* %58, i32 %59, i32 %60, i32 1024)
  br label %cond.end

cond.end:                                         ; preds = %cond.false64, %cond.true62
  %cond = phi i32 [ %call63, %cond.true62 ], [ %call65, %cond.false64 ]
  store i32 %cond, i32* %i, align 4
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* %eindex.addr, align 4
  %cmp66 = icmp sgt i32 %61, %62
  br i1 %cmp66, label %if.then68, label %if.end69

if.then68:                                        ; preds = %cond.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end69:                                         ; preds = %cond.end
  br label %if.end107

if.else70:                                        ; preds = %lor.lhs.false52
  br label %do.body71

do.body71:                                        ; preds = %if.else70
  %63 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp72 = icmp sgt i32 %63, 1
  br i1 %cmp72, label %if.then74, label %if.else103

if.then74:                                        ; preds = %do.body71
  %64 = load i8*, i8** %string.addr, align 4
  %65 = load i32, i32* %i, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %64, i32 %65
  %66 = load i8, i8* %arrayidx78, align 1
  %call79 = call i32 @is_basic(i8 signext %66)
  store i32 %call79, i32* %_f77, align 4
  %67 = load i32, i32* %_f77, align 4
  %tobool80 = icmp ne i32 %67, 0
  br i1 %tobool80, label %if.then81, label %if.else82

if.then81:                                        ; preds = %if.then74
  store i32 1, i32* %mblength76, align 4
  br label %if.end86

if.else82:                                        ; preds = %if.then74
  %68 = bitcast %struct.__mbstate_t* %state_bak75 to i8*
  %69 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %68, i8* %69, i32 8, i32 4, i1 false)
  %70 = load i8*, i8** %string.addr, align 4
  %71 = load i32, i32* %i, align 4
  %add.ptr83 = getelementptr inbounds i8, i8* %70, i32 %71
  %72 = load i32, i32* %slen, align 4
  %73 = load i32, i32* %i, align 4
  %sub84 = sub i32 %72, %73
  %call85 = call i32 @mbrlen(i8* %add.ptr83, i32 %sub84, %struct.__mbstate_t* %state)
  store i32 %call85, i32* %mblength76, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.else82, %if.then81
  %74 = load i32, i32* %mblength76, align 4
  %cmp87 = icmp eq i32 %74, -2
  br i1 %cmp87, label %if.then92, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.end86
  %75 = load i32, i32* %mblength76, align 4
  %cmp90 = icmp eq i32 %75, -1
  br i1 %cmp90, label %if.then92, label %if.else94

if.then92:                                        ; preds = %lor.lhs.false89, %if.end86
  %76 = bitcast %struct.__mbstate_t* %state to i8*
  %77 = bitcast %struct.__mbstate_t* %state_bak75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %76, i8* %77, i32 8, i32 4, i1 false)
  %78 = load i32, i32* %i, align 4
  %inc93 = add nsw i32 %78, 1
  store i32 %inc93, i32* %i, align 4
  br label %if.end102

if.else94:                                        ; preds = %lor.lhs.false89
  %79 = load i32, i32* %mblength76, align 4
  %cmp95 = icmp eq i32 %79, 0
  br i1 %cmp95, label %if.then97, label %if.else99

if.then97:                                        ; preds = %if.else94
  %80 = load i32, i32* %i, align 4
  %inc98 = add nsw i32 %80, 1
  store i32 %inc98, i32* %i, align 4
  br label %if.end101

if.else99:                                        ; preds = %if.else94
  %81 = load i32, i32* %mblength76, align 4
  %82 = load i32, i32* %i, align 4
  %add100 = add i32 %82, %81
  store i32 %add100, i32* %i, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.else99, %if.then97
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then92
  br label %if.end105

if.else103:                                       ; preds = %do.body71
  %83 = load i32, i32* %i, align 4
  %inc104 = add nsw i32 %83, 1
  store i32 %inc104, i32* %i, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.else103, %if.end102
  br label %do.end106

do.end106:                                        ; preds = %if.end105
  br label %if.end107

if.end107:                                        ; preds = %do.end106, %if.end69
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then44
  br label %if.end109

if.end109:                                        ; preds = %if.end108
  br label %if.end110

if.end110:                                        ; preds = %if.end109
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %84 = load i32, i32* %openc, align 4
  store i32 %84, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then68, %if.then3
  %85 = load i32, i32* %retval, align 4
  ret i32 %85
}

declare i32 @strncmp(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define %struct.word_list* @split_at_delims(i8* %string, i32 %slen, i8* %delims, i32 %sentinel, i32 %flags, i32* %nwp, i32* %cwp) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %slen.addr = alloca i32, align 4
  %delims.addr = alloca i8*, align 4
  %sentinel.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %nwp.addr = alloca i32*, align 4
  %cwp.addr = alloca i32*, align 4
  %ts = alloca i32, align 4
  %te = alloca i32, align 4
  %i = alloca i32, align 4
  %nw = alloca i32, align 4
  %cw = alloca i32, align 4
  %ifs_split = alloca i32, align 4
  %dflags = alloca i32, align 4
  %token = alloca i8*, align 4
  %d = alloca i8*, align 4
  %d2 = alloca i8*, align 4
  %ret = alloca %struct.word_list*, align 4
  %tl = alloca %struct.word_list*, align 4
  %slength = alloca i32, align 4
  %mblength = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %slen, i32* %slen.addr, align 4
  store i8* %delims, i8** %delims.addr, align 4
  store i32 %sentinel, i32* %sentinel.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store i32* %nwp, i32** %nwp.addr, align 4
  store i32* %cwp, i32** %cwp.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end7

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32*, i32** %nwp.addr, align 4
  %tobool = icmp ne i32* %3, null
  br i1 %tobool, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %4 = load i32*, i32** %nwp.addr, align 4
  store i32 0, i32* %4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %5 = load i32*, i32** %cwp.addr, align 4
  %tobool4 = icmp ne i32* %5, null
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %6 = load i32*, i32** %cwp.addr, align 4
  store i32 0, i32* %6, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end7:                                          ; preds = %lor.lhs.false
  %7 = load i8*, i8** %delims.addr, align 4
  %cmp8 = icmp eq i8* %7, null
  br i1 %cmp8, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end7
  %8 = load i8*, i8** @ifs_value, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end7
  %9 = load i8*, i8** %delims.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %9, %cond.false ]
  store i8* %cond, i8** %d, align 4
  %10 = load i8*, i8** %delims.addr, align 4
  %cmp10 = icmp eq i8* %10, null
  %conv11 = zext i1 %cmp10 to i32
  store i32 %conv11, i32* %ifs_split, align 4
  store i8* null, i8** %d2, align 4
  %11 = load i8*, i8** %delims.addr, align 4
  %tobool12 = icmp ne i8* %11, null
  br i1 %tobool12, label %if.then13, label %if.end55

if.then13:                                        ; preds = %cond.end
  store i32 1, i32* %mblength, align 4
  %12 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %12, i8 0, i32 8, i32 4, i1 false)
  %13 = load i8*, i8** %delims.addr, align 4
  %call = call i32 @strlen(i8* %13)
  store i32 %call, i32* %slength, align 4
  %14 = load i32, i32* %slength, align 4
  %add = add i32 %14, 1
  %call14 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2248)
  store i8* %call14, i8** %d2, align 4
  store i32 0, i32* %ts, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end52, %if.then32, %if.then13
  %15 = load i8*, i8** %delims.addr, align 4
  %16 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %15, i32 %16
  %17 = load i8, i8* %arrayidx, align 1
  %tobool15 = icmp ne i8 %17, 0
  br i1 %tobool15, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %18 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %19 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %18, i8* %19, i32 8, i32 4, i1 false)
  %call16 = call i32 @__ctype_get_mb_cur_max()
  %cmp17 = icmp ugt i32 %call16, 1
  br i1 %cmp17, label %cond.true19, label %cond.false21

cond.true19:                                      ; preds = %while.body
  %20 = load i8*, i8** %delims.addr, align 4
  %21 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i32, i32* %slength, align 4
  %call20 = call i32 @mbrlen(i8* %add.ptr, i32 %22, %struct.__mbstate_t* %state)
  br label %cond.end22

cond.false21:                                     ; preds = %while.body
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi i32 [ %call20, %cond.true19 ], [ 1, %cond.false21 ]
  store i32 %cond23, i32* %mblength, align 4
  %23 = load i32, i32* %mblength, align 4
  %cmp24 = icmp eq i32 %23, -1
  br i1 %cmp24, label %if.then29, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %cond.end22
  %24 = load i32, i32* %mblength, align 4
  %cmp27 = icmp eq i32 %24, -2
  br i1 %cmp27, label %if.then29, label %if.else

if.then29:                                        ; preds = %lor.lhs.false26, %cond.end22
  %25 = bitcast %struct.__mbstate_t* %state to i8*
  %26 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %25, i8* %26, i32 8, i32 4, i1 false)
  br label %if.end38

if.else:                                          ; preds = %lor.lhs.false26
  %27 = load i32, i32* %mblength, align 4
  %cmp30 = icmp ugt i32 %27, 1
  br i1 %cmp30, label %if.then32, label %if.end37

if.then32:                                        ; preds = %if.else
  %28 = load i8*, i8** %d2, align 4
  %29 = load i32, i32* %ts, align 4
  %add.ptr33 = getelementptr inbounds i8, i8* %28, i32 %29
  %30 = load i8*, i8** %delims.addr, align 4
  %31 = load i32, i32* %i, align 4
  %add.ptr34 = getelementptr inbounds i8, i8* %30, i32 %31
  %32 = load i32, i32* %mblength, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %add.ptr33, i8* %add.ptr34, i32 %32, i32 1, i1 false)
  %33 = load i32, i32* %mblength, align 4
  %34 = load i32, i32* %ts, align 4
  %add35 = add i32 %34, %33
  store i32 %add35, i32* %ts, align 4
  %35 = load i32, i32* %mblength, align 4
  %36 = load i32, i32* %i, align 4
  %add36 = add i32 %36, %35
  store i32 %add36, i32* %i, align 4
  %37 = load i32, i32* %mblength, align 4
  %38 = load i32, i32* %slength, align 4
  %sub = sub i32 %38, %37
  store i32 %sub, i32* %slength, align 4
  br label %while.cond

if.end37:                                         ; preds = %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then29
  %39 = load i8*, i8** %delims.addr, align 4
  %40 = load i32, i32* %i, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %41 to i32
  %cmp41 = icmp eq i32 %conv40, 32
  br i1 %cmp41, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end38
  %42 = load i8*, i8** %delims.addr, align 4
  %43 = load i32, i32* %i, align 4
  %arrayidx43 = getelementptr inbounds i8, i8* %42, i32 %43
  %44 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %44 to i32
  %cmp45 = icmp eq i32 %conv44, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end38
  %45 = phi i1 [ true, %if.end38 ], [ %cmp45, %lor.rhs ]
  %lor.ext = zext i1 %45 to i32
  %cmp47 = icmp eq i32 %lor.ext, 0
  br i1 %cmp47, label %if.then49, label %if.end52

if.then49:                                        ; preds = %lor.end
  %46 = load i8*, i8** %delims.addr, align 4
  %47 = load i32, i32* %i, align 4
  %arrayidx50 = getelementptr inbounds i8, i8* %46, i32 %47
  %48 = load i8, i8* %arrayidx50, align 1
  %49 = load i8*, i8** %d2, align 4
  %50 = load i32, i32* %ts, align 4
  %inc = add nsw i32 %50, 1
  store i32 %inc, i32* %ts, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %49, i32 %50
  store i8 %48, i8* %arrayidx51, align 1
  br label %if.end52

if.end52:                                         ; preds = %if.then49, %lor.end
  %51 = load i32, i32* %i, align 4
  %inc53 = add nsw i32 %51, 1
  store i32 %inc53, i32* %i, align 4
  %52 = load i32, i32* %slength, align 4
  %dec = add i32 %52, -1
  store i32 %dec, i32* %slength, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %53 = load i8*, i8** %d2, align 4
  %54 = load i32, i32* %ts, align 4
  %arrayidx54 = getelementptr inbounds i8, i8* %53, i32 %54
  store i8 0, i8* %arrayidx54, align 1
  br label %if.end55

if.end55:                                         ; preds = %while.end, %cond.end
  store %struct.word_list* null, %struct.word_list** %ret, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end55
  %55 = load i8*, i8** %string.addr, align 4
  %56 = load i32, i32* %i, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %55, i32 %56
  %57 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %57 to i32
  %tobool58 = icmp ne i32 %conv57, 0
  br i1 %tobool58, label %cond.true59, label %cond.false65

cond.true59:                                      ; preds = %for.cond
  %58 = load i8*, i8** %d, align 4
  %59 = load i8*, i8** %string.addr, align 4
  %60 = load i32, i32* %i, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %59, i32 %60
  %61 = load i8, i8* %arrayidx60, align 1
  %conv61 = sext i8 %61 to i32
  %call62 = call i8* @mbschr(i8* %58, i32 %conv61)
  %cmp63 = icmp ne i8* %call62, null
  br i1 %cmp63, label %land.rhs, label %land.end

cond.false65:                                     ; preds = %for.cond
  br i1 false, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.false65, %cond.true59
  %62 = load i8*, i8** %string.addr, align 4
  %63 = load i32, i32* %i, align 4
  %arrayidx66 = getelementptr inbounds i8, i8* %62, i32 %63
  %64 = load i8, i8* %arrayidx66, align 1
  %conv67 = sext i8 %64 to i32
  %cmp68 = icmp eq i32 %conv67, 32
  br i1 %cmp68, label %lor.end80, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %land.rhs
  %65 = load i8*, i8** %string.addr, align 4
  %66 = load i32, i32* %i, align 4
  %arrayidx71 = getelementptr inbounds i8, i8* %65, i32 %66
  %67 = load i8, i8* %arrayidx71, align 1
  %conv72 = sext i8 %67 to i32
  %cmp73 = icmp eq i32 %conv72, 9
  br i1 %cmp73, label %lor.end80, label %lor.rhs75

lor.rhs75:                                        ; preds = %lor.lhs.false70
  %68 = load i8*, i8** %string.addr, align 4
  %69 = load i32, i32* %i, align 4
  %arrayidx76 = getelementptr inbounds i8, i8* %68, i32 %69
  %70 = load i8, i8* %arrayidx76, align 1
  %conv77 = sext i8 %70 to i32
  %cmp78 = icmp eq i32 %conv77, 10
  br label %lor.end80

lor.end80:                                        ; preds = %lor.rhs75, %lor.lhs.false70, %land.rhs
  %71 = phi i1 [ true, %lor.lhs.false70 ], [ true, %land.rhs ], [ %cmp78, %lor.rhs75 ]
  br label %land.end

land.end:                                         ; preds = %lor.end80, %cond.false65, %cond.true59
  %72 = phi i1 [ false, %cond.false65 ], [ false, %cond.true59 ], [ %71, %lor.end80 ]
  br i1 %72, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %73 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %73, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %74 = load i8*, i8** %string.addr, align 4
  %75 = load i32, i32* %i, align 4
  %arrayidx83 = getelementptr inbounds i8, i8* %74, i32 %75
  %76 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %76 to i32
  %cmp85 = icmp eq i32 %conv84, 0
  br i1 %cmp85, label %if.then87, label %if.end91

if.then87:                                        ; preds = %for.end
  br label %do.body

do.body:                                          ; preds = %if.then87
  %77 = load i8*, i8** %d2, align 4
  %tobool88 = icmp ne i8* %77, null
  br i1 %tobool88, label %if.then89, label %if.end90

if.then89:                                        ; preds = %do.body
  %78 = load i8*, i8** %d2, align 4
  call void @sh_xfree(i8* %78, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2284)
  br label %if.end90

if.end90:                                         ; preds = %if.then89, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end90
  %79 = load %struct.word_list*, %struct.word_list** %ret, align 4
  store %struct.word_list* %79, %struct.word_list** %retval, align 4
  br label %return

if.end91:                                         ; preds = %for.end
  %80 = load i32, i32* %i, align 4
  store i32 %80, i32* %ts, align 4
  store i32 0, i32* %nw, align 4
  store i32 -1, i32* %cw, align 4
  %81 = load i32, i32* %flags.addr, align 4
  %or = or i32 %81, 1
  store i32 %or, i32* %dflags, align 4
  br label %while.body93

while.body93:                                     ; preds = %if.end91, %if.end245
  %82 = load i8*, i8** %string.addr, align 4
  %83 = load i32, i32* %ts, align 4
  %84 = load i8*, i8** %d, align 4
  %85 = load i32, i32* %dflags, align 4
  %call94 = call i32 @skip_to_delim(i8* %82, i32 %83, i8* %84, i32 %85)
  store i32 %call94, i32* %te, align 4
  %86 = load i32, i32* %ts, align 4
  %87 = load i32, i32* %te, align 4
  %cmp95 = icmp eq i32 %86, %87
  br i1 %cmp95, label %land.lhs.true, label %if.end164

land.lhs.true:                                    ; preds = %while.body93
  %88 = load i8*, i8** %d2, align 4
  %tobool97 = icmp ne i8* %88, null
  br i1 %tobool97, label %land.lhs.true98, label %if.end164

land.lhs.true98:                                  ; preds = %land.lhs.true
  %89 = load i8*, i8** %string.addr, align 4
  %90 = load i32, i32* %ts, align 4
  %arrayidx99 = getelementptr inbounds i8, i8* %89, i32 %90
  %91 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %91 to i32
  %tobool101 = icmp ne i32 %conv100, 0
  br i1 %tobool101, label %cond.true102, label %cond.false108

cond.true102:                                     ; preds = %land.lhs.true98
  %92 = load i8*, i8** %d2, align 4
  %93 = load i8*, i8** %string.addr, align 4
  %94 = load i32, i32* %ts, align 4
  %arrayidx103 = getelementptr inbounds i8, i8* %93, i32 %94
  %95 = load i8, i8* %arrayidx103, align 1
  %conv104 = sext i8 %95 to i32
  %call105 = call i8* @mbschr(i8* %92, i32 %conv104)
  %cmp106 = icmp ne i8* %call105, null
  br i1 %cmp106, label %if.then109, label %if.end164

cond.false108:                                    ; preds = %land.lhs.true98
  br i1 false, label %if.then109, label %if.end164

if.then109:                                       ; preds = %cond.false108, %cond.true102
  %96 = load i32, i32* %ts, align 4
  %add110 = add nsw i32 %96, 1
  store i32 %add110, i32* %te, align 4
  %97 = load i32, i32* %ifs_split, align 4
  %tobool111 = icmp ne i32 %97, 0
  br i1 %tobool111, label %if.then112, label %if.else145

if.then112:                                       ; preds = %if.then109
  br label %while.cond113

while.cond113:                                    ; preds = %while.body142, %if.then112
  %98 = load i8*, i8** %string.addr, align 4
  %99 = load i32, i32* %te, align 4
  %arrayidx114 = getelementptr inbounds i8, i8* %98, i32 %99
  %100 = load i8, i8* %arrayidx114, align 1
  %conv115 = sext i8 %100 to i32
  %tobool116 = icmp ne i32 %conv115, 0
  br i1 %tobool116, label %cond.true117, label %cond.false123

cond.true117:                                     ; preds = %while.cond113
  %101 = load i8*, i8** %d, align 4
  %102 = load i8*, i8** %string.addr, align 4
  %103 = load i32, i32* %te, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %102, i32 %103
  %104 = load i8, i8* %arrayidx118, align 1
  %conv119 = sext i8 %104 to i32
  %call120 = call i8* @mbschr(i8* %101, i32 %conv119)
  %cmp121 = icmp ne i8* %call120, null
  br i1 %cmp121, label %land.rhs124, label %land.end141

cond.false123:                                    ; preds = %while.cond113
  br i1 false, label %land.rhs124, label %land.end141

land.rhs124:                                      ; preds = %cond.false123, %cond.true117
  %105 = load i8*, i8** %string.addr, align 4
  %106 = load i32, i32* %te, align 4
  %arrayidx125 = getelementptr inbounds i8, i8* %105, i32 %106
  %107 = load i8, i8* %arrayidx125, align 1
  %conv126 = sext i8 %107 to i32
  %cmp127 = icmp eq i32 %conv126, 32
  br i1 %cmp127, label %lor.end139, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %land.rhs124
  %108 = load i8*, i8** %string.addr, align 4
  %109 = load i32, i32* %te, align 4
  %arrayidx130 = getelementptr inbounds i8, i8* %108, i32 %109
  %110 = load i8, i8* %arrayidx130, align 1
  %conv131 = sext i8 %110 to i32
  %cmp132 = icmp eq i32 %conv131, 9
  br i1 %cmp132, label %lor.end139, label %lor.rhs134

lor.rhs134:                                       ; preds = %lor.lhs.false129
  %111 = load i8*, i8** %string.addr, align 4
  %112 = load i32, i32* %te, align 4
  %arrayidx135 = getelementptr inbounds i8, i8* %111, i32 %112
  %113 = load i8, i8* %arrayidx135, align 1
  %conv136 = sext i8 %113 to i32
  %cmp137 = icmp eq i32 %conv136, 10
  br label %lor.end139

lor.end139:                                       ; preds = %lor.rhs134, %lor.lhs.false129, %land.rhs124
  %114 = phi i1 [ true, %lor.lhs.false129 ], [ true, %land.rhs124 ], [ %cmp137, %lor.rhs134 ]
  br label %land.end141

land.end141:                                      ; preds = %lor.end139, %cond.false123, %cond.true117
  %115 = phi i1 [ false, %cond.false123 ], [ false, %cond.true117 ], [ %114, %lor.end139 ]
  br i1 %115, label %while.body142, label %while.end144

while.body142:                                    ; preds = %land.end141
  %116 = load i32, i32* %te, align 4
  %inc143 = add nsw i32 %116, 1
  store i32 %inc143, i32* %te, align 4
  br label %while.cond113

while.end144:                                     ; preds = %land.end141
  br label %if.end163

if.else145:                                       ; preds = %if.then109
  br label %while.cond146

while.cond146:                                    ; preds = %while.body160, %if.else145
  %117 = load i8*, i8** %string.addr, align 4
  %118 = load i32, i32* %te, align 4
  %arrayidx147 = getelementptr inbounds i8, i8* %117, i32 %118
  %119 = load i8, i8* %arrayidx147, align 1
  %conv148 = sext i8 %119 to i32
  %tobool149 = icmp ne i32 %conv148, 0
  br i1 %tobool149, label %cond.true150, label %cond.false156

cond.true150:                                     ; preds = %while.cond146
  %120 = load i8*, i8** %d2, align 4
  %121 = load i8*, i8** %string.addr, align 4
  %122 = load i32, i32* %te, align 4
  %arrayidx151 = getelementptr inbounds i8, i8* %121, i32 %122
  %123 = load i8, i8* %arrayidx151, align 1
  %conv152 = sext i8 %123 to i32
  %call153 = call i8* @mbschr(i8* %120, i32 %conv152)
  %cmp154 = icmp ne i8* %call153, null
  %conv155 = zext i1 %cmp154 to i32
  br label %cond.end157

cond.false156:                                    ; preds = %while.cond146
  br label %cond.end157

cond.end157:                                      ; preds = %cond.false156, %cond.true150
  %cond158 = phi i32 [ %conv155, %cond.true150 ], [ 0, %cond.false156 ]
  %tobool159 = icmp ne i32 %cond158, 0
  br i1 %tobool159, label %while.body160, label %while.end162

while.body160:                                    ; preds = %cond.end157
  %124 = load i32, i32* %te, align 4
  %inc161 = add nsw i32 %124, 1
  store i32 %inc161, i32* %te, align 4
  br label %while.cond146

while.end162:                                     ; preds = %cond.end157
  br label %if.end163

if.end163:                                        ; preds = %while.end162, %while.end144
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %cond.false108, %cond.true102, %land.lhs.true, %while.body93
  %125 = load i8*, i8** %string.addr, align 4
  %126 = load i32, i32* %ts, align 4
  %127 = load i32, i32* %te, align 4
  %call165 = call i8* @substring(i8* %125, i32 %126, i32 %127)
  store i8* %call165, i8** %token, align 4
  %128 = load i8*, i8** %token, align 4
  %call166 = call %struct.word_desc* @make_word(i8* %128)
  %129 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %call167 = call %struct.word_list* @make_word_list(%struct.word_desc* %call166, %struct.word_list* %129)
  store %struct.word_list* %call167, %struct.word_list** %ret, align 4
  %130 = load i8*, i8** %token, align 4
  call void @sh_xfree(i8* %130, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2315)
  %131 = load i32, i32* %nw, align 4
  %inc168 = add nsw i32 %131, 1
  store i32 %inc168, i32* %nw, align 4
  %132 = load i32, i32* %sentinel.addr, align 4
  %133 = load i32, i32* %ts, align 4
  %cmp169 = icmp sge i32 %132, %133
  br i1 %cmp169, label %land.lhs.true171, label %if.end175

land.lhs.true171:                                 ; preds = %if.end164
  %134 = load i32, i32* %sentinel.addr, align 4
  %135 = load i32, i32* %te, align 4
  %cmp172 = icmp sle i32 %134, %135
  br i1 %cmp172, label %if.then174, label %if.end175

if.then174:                                       ; preds = %land.lhs.true171
  %136 = load i32, i32* %nw, align 4
  store i32 %136, i32* %cw, align 4
  br label %if.end175

if.end175:                                        ; preds = %if.then174, %land.lhs.true171, %if.end164
  %137 = load i32*, i32** %cwp.addr, align 4
  %tobool176 = icmp ne i32* %137, null
  br i1 %tobool176, label %land.lhs.true177, label %if.end185

land.lhs.true177:                                 ; preds = %if.end175
  %138 = load i32, i32* %cw, align 4
  %cmp178 = icmp eq i32 %138, -1
  br i1 %cmp178, label %land.lhs.true180, label %if.end185

land.lhs.true180:                                 ; preds = %land.lhs.true177
  %139 = load i32, i32* %sentinel.addr, align 4
  %140 = load i32, i32* %ts, align 4
  %sub181 = sub nsw i32 %140, 1
  %cmp182 = icmp eq i32 %139, %sub181
  br i1 %cmp182, label %if.then184, label %if.end185

if.then184:                                       ; preds = %land.lhs.true180
  %141 = load i32, i32* %nw, align 4
  store i32 %141, i32* %cw, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then184, %land.lhs.true180, %land.lhs.true177, %if.end175
  %142 = load i32*, i32** %cwp.addr, align 4
  %tobool186 = icmp ne i32* %142, null
  br i1 %tobool186, label %land.lhs.true187, label %if.end198

land.lhs.true187:                                 ; preds = %if.end185
  %143 = load i32, i32* %cw, align 4
  %cmp188 = icmp eq i32 %143, -1
  br i1 %cmp188, label %land.lhs.true190, label %if.end198

land.lhs.true190:                                 ; preds = %land.lhs.true187
  %144 = load i32, i32* %sentinel.addr, align 4
  %145 = load i32, i32* %ts, align 4
  %cmp191 = icmp slt i32 %144, %145
  br i1 %cmp191, label %if.then193, label %if.end198

if.then193:                                       ; preds = %land.lhs.true190
  %call194 = call %struct.word_desc* @make_word(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  %146 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %146, i32 0, i32 0
  %147 = load %struct.word_list*, %struct.word_list** %next, align 4
  %call195 = call %struct.word_list* @make_word_list(%struct.word_desc* %call194, %struct.word_list* %147)
  store %struct.word_list* %call195, %struct.word_list** %tl, align 4
  %148 = load %struct.word_list*, %struct.word_list** %tl, align 4
  %149 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %next196 = getelementptr inbounds %struct.word_list, %struct.word_list* %149, i32 0, i32 0
  store %struct.word_list* %148, %struct.word_list** %next196, align 4
  %150 = load i32, i32* %nw, align 4
  store i32 %150, i32* %cw, align 4
  %151 = load i32, i32* %nw, align 4
  %inc197 = add nsw i32 %151, 1
  store i32 %inc197, i32* %nw, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.then193, %land.lhs.true190, %land.lhs.true187, %if.end185
  %152 = load i8*, i8** %string.addr, align 4
  %153 = load i32, i32* %te, align 4
  %arrayidx199 = getelementptr inbounds i8, i8* %152, i32 %153
  %154 = load i8, i8* %arrayidx199, align 1
  %conv200 = sext i8 %154 to i32
  %cmp201 = icmp eq i32 %conv200, 0
  br i1 %cmp201, label %if.then203, label %if.end204

if.then203:                                       ; preds = %if.end198
  br label %while.end246

if.end204:                                        ; preds = %if.end198
  %155 = load i32, i32* %te, align 4
  store i32 %155, i32* %i, align 4
  br label %while.cond205

while.cond205:                                    ; preds = %while.body238, %if.end204
  %156 = load i8*, i8** %string.addr, align 4
  %157 = load i32, i32* %i, align 4
  %arrayidx206 = getelementptr inbounds i8, i8* %156, i32 %157
  %158 = load i8, i8* %arrayidx206, align 1
  %conv207 = sext i8 %158 to i32
  %tobool208 = icmp ne i32 %conv207, 0
  br i1 %tobool208, label %cond.true209, label %cond.false215

cond.true209:                                     ; preds = %while.cond205
  %159 = load i8*, i8** %d, align 4
  %160 = load i8*, i8** %string.addr, align 4
  %161 = load i32, i32* %i, align 4
  %arrayidx210 = getelementptr inbounds i8, i8* %160, i32 %161
  %162 = load i8, i8* %arrayidx210, align 1
  %conv211 = sext i8 %162 to i32
  %call212 = call i8* @mbschr(i8* %159, i32 %conv211)
  %cmp213 = icmp ne i8* %call212, null
  br i1 %cmp213, label %land.rhs216, label %land.end237

cond.false215:                                    ; preds = %while.cond205
  br i1 false, label %land.rhs216, label %land.end237

land.rhs216:                                      ; preds = %cond.false215, %cond.true209
  %163 = load i32, i32* %ifs_split, align 4
  %tobool217 = icmp ne i32 %163, 0
  br i1 %tobool217, label %lor.end235, label %lor.rhs218

lor.rhs218:                                       ; preds = %land.rhs216
  %164 = load i8*, i8** %string.addr, align 4
  %165 = load i32, i32* %i, align 4
  %arrayidx219 = getelementptr inbounds i8, i8* %164, i32 %165
  %166 = load i8, i8* %arrayidx219, align 1
  %conv220 = sext i8 %166 to i32
  %cmp221 = icmp eq i32 %conv220, 32
  br i1 %cmp221, label %lor.end233, label %lor.lhs.false223

lor.lhs.false223:                                 ; preds = %lor.rhs218
  %167 = load i8*, i8** %string.addr, align 4
  %168 = load i32, i32* %i, align 4
  %arrayidx224 = getelementptr inbounds i8, i8* %167, i32 %168
  %169 = load i8, i8* %arrayidx224, align 1
  %conv225 = sext i8 %169 to i32
  %cmp226 = icmp eq i32 %conv225, 9
  br i1 %cmp226, label %lor.end233, label %lor.rhs228

lor.rhs228:                                       ; preds = %lor.lhs.false223
  %170 = load i8*, i8** %string.addr, align 4
  %171 = load i32, i32* %i, align 4
  %arrayidx229 = getelementptr inbounds i8, i8* %170, i32 %171
  %172 = load i8, i8* %arrayidx229, align 1
  %conv230 = sext i8 %172 to i32
  %cmp231 = icmp eq i32 %conv230, 10
  br label %lor.end233

lor.end233:                                       ; preds = %lor.rhs228, %lor.lhs.false223, %lor.rhs218
  %173 = phi i1 [ true, %lor.lhs.false223 ], [ true, %lor.rhs218 ], [ %cmp231, %lor.rhs228 ]
  br label %lor.end235

lor.end235:                                       ; preds = %lor.end233, %land.rhs216
  %174 = phi i1 [ true, %land.rhs216 ], [ %173, %lor.end233 ]
  br label %land.end237

land.end237:                                      ; preds = %lor.end235, %cond.false215, %cond.true209
  %175 = phi i1 [ false, %cond.false215 ], [ false, %cond.true209 ], [ %174, %lor.end235 ]
  br i1 %175, label %while.body238, label %while.end240

while.body238:                                    ; preds = %land.end237
  %176 = load i32, i32* %i, align 4
  %inc239 = add nsw i32 %176, 1
  store i32 %inc239, i32* %i, align 4
  br label %while.cond205

while.end240:                                     ; preds = %land.end237
  %177 = load i8*, i8** %string.addr, align 4
  %178 = load i32, i32* %i, align 4
  %arrayidx241 = getelementptr inbounds i8, i8* %177, i32 %178
  %179 = load i8, i8* %arrayidx241, align 1
  %tobool242 = icmp ne i8 %179, 0
  br i1 %tobool242, label %if.then243, label %if.else244

if.then243:                                       ; preds = %while.end240
  %180 = load i32, i32* %i, align 4
  store i32 %180, i32* %ts, align 4
  br label %if.end245

if.else244:                                       ; preds = %while.end240
  br label %while.end246

if.end245:                                        ; preds = %if.then243
  br label %while.body93

while.end246:                                     ; preds = %if.else244, %if.then203
  %181 = load i32*, i32** %cwp.addr, align 4
  %tobool247 = icmp ne i32* %181, null
  br i1 %tobool247, label %land.lhs.true248, label %if.end274

land.lhs.true248:                                 ; preds = %while.end246
  %182 = load i32, i32* %cw, align 4
  %cmp249 = icmp eq i32 %182, -1
  br i1 %cmp249, label %land.lhs.true251, label %if.end274

land.lhs.true251:                                 ; preds = %land.lhs.true248
  %183 = load i32, i32* %sentinel.addr, align 4
  %184 = load i32, i32* %slen.addr, align 4
  %cmp252 = icmp sge i32 %183, %184
  br i1 %cmp252, label %if.then257, label %lor.lhs.false254

lor.lhs.false254:                                 ; preds = %land.lhs.true251
  %185 = load i32, i32* %sentinel.addr, align 4
  %186 = load i32, i32* %te, align 4
  %cmp255 = icmp sge i32 %185, %186
  br i1 %cmp255, label %if.then257, label %if.end274

if.then257:                                       ; preds = %lor.lhs.false254, %land.lhs.true251
  %187 = load i8*, i8** %string.addr, align 4
  %188 = load i32, i32* %sentinel.addr, align 4
  %sub258 = sub nsw i32 %188, 1
  %arrayidx259 = getelementptr inbounds i8, i8* %187, i32 %sub258
  %189 = load i8, i8* %arrayidx259, align 1
  %conv260 = sext i8 %189 to i32
  %cmp261 = icmp eq i32 %conv260, 32
  br i1 %cmp261, label %if.then269, label %lor.lhs.false263

lor.lhs.false263:                                 ; preds = %if.then257
  %190 = load i8*, i8** %string.addr, align 4
  %191 = load i32, i32* %sentinel.addr, align 4
  %sub264 = sub nsw i32 %191, 1
  %arrayidx265 = getelementptr inbounds i8, i8* %190, i32 %sub264
  %192 = load i8, i8* %arrayidx265, align 1
  %conv266 = sext i8 %192 to i32
  %cmp267 = icmp eq i32 %conv266, 9
  br i1 %cmp267, label %if.then269, label %if.end273

if.then269:                                       ; preds = %lor.lhs.false263, %if.then257
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0), i8** %token, align 4
  %193 = load i8*, i8** %token, align 4
  %call270 = call %struct.word_desc* @make_word(i8* %193)
  %194 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %call271 = call %struct.word_list* @make_word_list(%struct.word_desc* %call270, %struct.word_list* %194)
  store %struct.word_list* %call271, %struct.word_list** %ret, align 4
  %195 = load i32, i32* %nw, align 4
  %inc272 = add nsw i32 %195, 1
  store i32 %inc272, i32* %nw, align 4
  br label %if.end273

if.end273:                                        ; preds = %if.then269, %lor.lhs.false263
  %196 = load i32, i32* %nw, align 4
  store i32 %196, i32* %cw, align 4
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %lor.lhs.false254, %land.lhs.true248, %while.end246
  %197 = load i32*, i32** %nwp.addr, align 4
  %tobool275 = icmp ne i32* %197, null
  br i1 %tobool275, label %if.then276, label %if.end277

if.then276:                                       ; preds = %if.end274
  %198 = load i32, i32* %nw, align 4
  %199 = load i32*, i32** %nwp.addr, align 4
  store i32 %198, i32* %199, align 4
  br label %if.end277

if.end277:                                        ; preds = %if.then276, %if.end274
  %200 = load i32*, i32** %cwp.addr, align 4
  %tobool278 = icmp ne i32* %200, null
  br i1 %tobool278, label %if.then279, label %if.end280

if.then279:                                       ; preds = %if.end277
  %201 = load i32, i32* %cw, align 4
  %202 = load i32*, i32** %cwp.addr, align 4
  store i32 %201, i32* %202, align 4
  br label %if.end280

if.end280:                                        ; preds = %if.then279, %if.end277
  br label %do.body281

do.body281:                                       ; preds = %if.end280
  %203 = load i8*, i8** %d2, align 4
  %tobool282 = icmp ne i8* %203, null
  br i1 %tobool282, label %if.then283, label %if.end284

if.then283:                                       ; preds = %do.body281
  %204 = load i8*, i8** %d2, align 4
  call void @sh_xfree(i8* %204, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2371)
  br label %if.end284

if.end284:                                        ; preds = %if.then283, %do.body281
  br label %do.end285

do.end285:                                        ; preds = %if.end284
  %205 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %tobool286 = icmp ne %struct.word_list* %205, null
  br i1 %tobool286, label %land.lhs.true287, label %cond.false292

land.lhs.true287:                                 ; preds = %do.end285
  %206 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %next288 = getelementptr inbounds %struct.word_list, %struct.word_list* %206, i32 0, i32 0
  %207 = load %struct.word_list*, %struct.word_list** %next288, align 4
  %tobool289 = icmp ne %struct.word_list* %207, null
  br i1 %tobool289, label %cond.true290, label %cond.false292

cond.true290:                                     ; preds = %land.lhs.true287
  %208 = load %struct.word_list*, %struct.word_list** %ret, align 4
  %209 = bitcast %struct.word_list* %208 to %struct.g_list*
  %call291 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %209)
  %210 = bitcast %struct.g_list* %call291 to %struct.word_list*
  br label %cond.end293

cond.false292:                                    ; preds = %land.lhs.true287, %do.end285
  %211 = load %struct.word_list*, %struct.word_list** %ret, align 4
  br label %cond.end293

cond.end293:                                      ; preds = %cond.false292, %cond.true290
  %cond294 = phi %struct.word_list* [ %210, %cond.true290 ], [ %211, %cond.false292 ]
  store %struct.word_list* %cond294, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end293, %do.end, %if.end6
  %212 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %212
}

declare i8* @sh_xmalloc(i32, i8*, i32) #1

declare i32 @__ctype_get_mb_cur_max() #1

declare %struct.word_list* @make_word_list(%struct.word_desc*, %struct.word_list*) #1

declare %struct.word_desc* @make_word(i8*) #1

declare %struct.g_list* @list_reverse(...) #1

; Function Attrs: noinline nounwind
define i8* @string_list_internal(%struct.word_list* %list, i8* %sep) #0 {
entry:
  %retval = alloca i8*, align 4
  %list.addr = alloca %struct.word_list*, align 4
  %sep.addr = alloca i8*, align 4
  %t = alloca %struct.word_list*, align 4
  %result = alloca i8*, align 4
  %r = alloca i8*, align 4
  %word_len = alloca i32, align 4
  %sep_len = alloca i32, align 4
  %result_size = alloca i32, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i8* %sep, i8** %sep.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %1, i32 0, i32 0
  %2 = load %struct.word_list*, %struct.word_list** %next, align 4
  %cmp1 = icmp eq %struct.word_list* %2, null
  br i1 %cmp1, label %if.then2, label %if.end8

if.then2:                                         ; preds = %if.end
  %3 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %3, i32 0, i32 1
  %4 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %4, i32 0, i32 0
  %5 = load i8*, i8** %word3, align 4
  %call = call i32 @strlen(i8* %5)
  %add = add i32 1, %call
  %call4 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2417)
  %6 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %word5 = getelementptr inbounds %struct.word_list, %struct.word_list* %6, i32 0, i32 1
  %7 = load %struct.word_desc*, %struct.word_desc** %word5, align 4
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 0
  %8 = load i8*, i8** %word6, align 4
  %call7 = call i8* @strcpy(i8* %call4, i8* %8)
  store i8* %call7, i8** %retval, align 4
  br label %return

if.end8:                                          ; preds = %if.end
  %9 = load i8*, i8** %sep.addr, align 4
  %tobool = icmp ne i8* %9, null
  br i1 %tobool, label %land.lhs.true, label %cond.false22

land.lhs.true:                                    ; preds = %if.end8
  %10 = load i8*, i8** %sep.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %10, i32 0
  %11 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %11 to i32
  %tobool9 = icmp ne i32 %conv, 0
  br i1 %tobool9, label %cond.true, label %cond.false22

cond.true:                                        ; preds = %land.lhs.true
  %12 = load i8*, i8** %sep.addr, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %12, i32 1
  %13 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %13 to i32
  %tobool12 = icmp ne i32 %conv11, 0
  br i1 %tobool12, label %cond.true13, label %cond.false19

cond.true13:                                      ; preds = %cond.true
  %14 = load i8*, i8** %sep.addr, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %14, i32 2
  %15 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %15 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  br i1 %tobool16, label %cond.true17, label %cond.false

cond.true17:                                      ; preds = %cond.true13
  %16 = load i8*, i8** %sep.addr, align 4
  %call18 = call i32 @strlen(i8* %16)
  br label %cond.end

cond.false:                                       ; preds = %cond.true13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true17
  %cond = phi i32 [ %call18, %cond.true17 ], [ 2, %cond.false ]
  br label %cond.end20

cond.false19:                                     ; preds = %cond.true
  br label %cond.end20

cond.end20:                                       ; preds = %cond.false19, %cond.end
  %cond21 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false19 ]
  br label %cond.end23

cond.false22:                                     ; preds = %land.lhs.true, %if.end8
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false22, %cond.end20
  %cond24 = phi i32 [ %cond21, %cond.end20 ], [ 0, %cond.false22 ]
  store i32 %cond24, i32* %sep_len, align 4
  store i32 0, i32* %result_size, align 4
  %17 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %17, %struct.word_list** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end23
  %18 = load %struct.word_list*, %struct.word_list** %t, align 4
  %tobool25 = icmp ne %struct.word_list* %18, null
  br i1 %tobool25, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load %struct.word_list*, %struct.word_list** %t, align 4
  %20 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %cmp26 = icmp ne %struct.word_list* %19, %20
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %for.body
  %21 = load i32, i32* %sep_len, align 4
  %22 = load i32, i32* %result_size, align 4
  %add29 = add i32 %22, %21
  store i32 %add29, i32* %result_size, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %for.body
  %23 = load %struct.word_list*, %struct.word_list** %t, align 4
  %word31 = getelementptr inbounds %struct.word_list, %struct.word_list* %23, i32 0, i32 1
  %24 = load %struct.word_desc*, %struct.word_desc** %word31, align 4
  %word32 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %24, i32 0, i32 0
  %25 = load i8*, i8** %word32, align 4
  %call33 = call i32 @strlen(i8* %25)
  %26 = load i32, i32* %result_size, align 4
  %add34 = add i32 %26, %call33
  store i32 %add34, i32* %result_size, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end30
  %27 = load %struct.word_list*, %struct.word_list** %t, align 4
  %next35 = getelementptr inbounds %struct.word_list, %struct.word_list* %27, i32 0, i32 0
  %28 = load %struct.word_list*, %struct.word_list** %next35, align 4
  store %struct.word_list* %28, %struct.word_list** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = load i32, i32* %result_size, align 4
  %add36 = add i32 %29, 1
  %call37 = call i8* @sh_xmalloc(i32 %add36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2430)
  store i8* %call37, i8** %result, align 4
  store i8* %call37, i8** %r, align 4
  %30 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %30, %struct.word_list** %t, align 4
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc58, %for.end
  %31 = load %struct.word_list*, %struct.word_list** %t, align 4
  %tobool39 = icmp ne %struct.word_list* %31, null
  br i1 %tobool39, label %for.body40, label %for.end60

for.body40:                                       ; preds = %for.cond38
  %32 = load %struct.word_list*, %struct.word_list** %t, align 4
  %33 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %cmp41 = icmp ne %struct.word_list* %32, %33
  br i1 %cmp41, label %land.lhs.true43, label %if.end51

land.lhs.true43:                                  ; preds = %for.body40
  %34 = load i32, i32* %sep_len, align 4
  %tobool44 = icmp ne i32 %34, 0
  br i1 %tobool44, label %if.then45, label %if.end51

if.then45:                                        ; preds = %land.lhs.true43
  %35 = load i32, i32* %sep_len, align 4
  %cmp46 = icmp ugt i32 %35, 1
  br i1 %cmp46, label %if.then48, label %if.else

if.then48:                                        ; preds = %if.then45
  %36 = load i8*, i8** %r, align 4
  %37 = load i8*, i8** %sep.addr, align 4
  %38 = load i32, i32* %sep_len, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %36, i8* %37, i32 %38, i32 1, i1 false)
  %39 = load i32, i32* %sep_len, align 4
  %40 = load i8*, i8** %r, align 4
  %add.ptr = getelementptr inbounds i8, i8* %40, i32 %39
  store i8* %add.ptr, i8** %r, align 4
  br label %if.end50

if.else:                                          ; preds = %if.then45
  %41 = load i8*, i8** %sep.addr, align 4
  %arrayidx49 = getelementptr inbounds i8, i8* %41, i32 0
  %42 = load i8, i8* %arrayidx49, align 1
  %43 = load i8*, i8** %r, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %incdec.ptr, i8** %r, align 4
  store i8 %42, i8* %43, align 1
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then48
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %land.lhs.true43, %for.body40
  %44 = load %struct.word_list*, %struct.word_list** %t, align 4
  %word52 = getelementptr inbounds %struct.word_list, %struct.word_list* %44, i32 0, i32 1
  %45 = load %struct.word_desc*, %struct.word_desc** %word52, align 4
  %word53 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %45, i32 0, i32 0
  %46 = load i8*, i8** %word53, align 4
  %call54 = call i32 @strlen(i8* %46)
  store i32 %call54, i32* %word_len, align 4
  %47 = load i8*, i8** %r, align 4
  %48 = load %struct.word_list*, %struct.word_list** %t, align 4
  %word55 = getelementptr inbounds %struct.word_list, %struct.word_list* %48, i32 0, i32 1
  %49 = load %struct.word_desc*, %struct.word_desc** %word55, align 4
  %word56 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %49, i32 0, i32 0
  %50 = load i8*, i8** %word56, align 4
  %51 = load i32, i32* %word_len, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %47, i8* %50, i32 %51, i32 1, i1 false)
  %52 = load i32, i32* %word_len, align 4
  %53 = load i8*, i8** %r, align 4
  %add.ptr57 = getelementptr inbounds i8, i8* %53, i32 %52
  store i8* %add.ptr57, i8** %r, align 4
  br label %for.inc58

for.inc58:                                        ; preds = %if.end51
  %54 = load %struct.word_list*, %struct.word_list** %t, align 4
  %next59 = getelementptr inbounds %struct.word_list, %struct.word_list* %54, i32 0, i32 0
  %55 = load %struct.word_list*, %struct.word_list** %next59, align 4
  store %struct.word_list* %55, %struct.word_list** %t, align 4
  br label %for.cond38

for.end60:                                        ; preds = %for.cond38
  %56 = load i8*, i8** %r, align 4
  store i8 0, i8* %56, align 1
  %57 = load i8*, i8** %result, align 4
  store i8* %57, i8** %retval, align 4
  br label %return

return:                                           ; preds = %for.end60, %if.then2, %if.then
  %58 = load i8*, i8** %retval, align 4
  ret i8* %58
}

declare i8* @strcpy(i8*, i8*) #1

; Function Attrs: noinline nounwind
define i8* @string_list(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call = call i8* @string_list_internal(%struct.word_list* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0))
  ret i8* %call
}

; Function Attrs: noinline nounwind
define i8* @ifs_firstchar(i32* %lenp) #0 {
entry:
  %lenp.addr = alloca i32*, align 4
  %ret = alloca i8*, align 4
  %len = alloca i32, align 4
  store i32* %lenp, i32** %lenp.addr, align 4
  %call = call i8* @sh_xmalloc(i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2474)
  store i8* %call, i8** %ret, align 4
  %0 = load i32, i32* @ifs_firstc_len, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  %2 = load i8*, i8** %ret, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  store i8 %1, i8* %arrayidx, align 1
  %3 = load i8*, i8** %ret, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i32 1
  store i8 0, i8* %arrayidx1, align 1
  %4 = load i8*, i8** %ret, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %5 to i32
  %tobool = icmp ne i32 %conv, 0
  %cond = select i1 %tobool, i32 1, i32 0
  store i32 %cond, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = load i8*, i8** %ret, align 4
  %7 = load i32, i32* @ifs_firstc_len, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), i32 %7, i32 1, i1 false)
  %8 = load i8*, i8** %ret, align 4
  %9 = load i32, i32* @ifs_firstc_len, align 4
  store i32 %9, i32* %len, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %8, i32 %9
  store i8 0, i8* %arrayidx3, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32*, i32** %lenp.addr, align 4
  %tobool4 = icmp ne i32* %10, null
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %len, align 4
  %12 = load i32*, i32** %lenp.addr, align 4
  store i32 %11, i32* %12, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %13 = load i8*, i8** %ret, align 4
  ret i8* %13
}

; Function Attrs: noinline nounwind
define i8* @string_list_dollar_star(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %ret = alloca i8*, align 4
  %saved_stack = alloca i8*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %call = call i32 @__ctype_get_mb_cur_max()
  %add = add i32 %call, 1
  %0 = call i8* @llvm.stacksave()
  store i8* %0, i8** %saved_stack, align 4
  %vla = alloca i8, i32 %add, align 1
  %1 = load i32, i32* @ifs_firstc_len, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  %arrayidx = getelementptr inbounds i8, i8* %vla, i32 0
  store i8 %2, i8* %arrayidx, align 1
  %arrayidx1 = getelementptr inbounds i8, i8* %vla, i32 1
  store i8 0, i8* %arrayidx1, align 1
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load i32, i32* @ifs_firstc_len, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %vla, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), i32 %3, i32 1, i1 false)
  %4 = load i32, i32* @ifs_firstc_len, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %vla, i32 %4
  store i8 0, i8* %arrayidx2, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call3 = call i8* @string_list_internal(%struct.word_list* %5, i8* %vla)
  store i8* %call3, i8** %ret, align 4
  %6 = load i8*, i8** %ret, align 4
  %7 = load i8*, i8** %saved_stack, align 4
  call void @llvm.stackrestore(i8* %7)
  ret i8* %6
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #3

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #3

; Function Attrs: noinline nounwind
define i8* @string_list_dollar_at(%struct.word_list* %list, i32 %quoted, i32 %flags) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %ifs = alloca i8*, align 4
  %ret = alloca i8*, align 4
  %saved_stack = alloca i8*, align 4
  %tlist = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %call = call i32 @__ctype_get_mb_cur_max()
  %add = add i32 %call, 1
  %0 = call i8* @llvm.stacksave()
  store i8* %0, i8** %saved_stack, align 4
  %vla = alloca i8, i32 %add, align 1
  %1 = load %struct.variable*, %struct.variable** @ifs_var, align 4
  %tobool = icmp ne %struct.variable* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load %struct.variable*, %struct.variable** @ifs_var, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %2, i32 0, i32 1
  %3 = load i8*, i8** %value, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %ifs, align 4
  %4 = load i32, i32* %flags.addr, align 4
  %and = and i32 %4, 8
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds i8, i8* %vla, i32 0
  store i8 32, i8* %arrayidx, align 1
  %arrayidx2 = getelementptr inbounds i8, i8* %vla, i32 1
  store i8 0, i8* %arrayidx2, align 1
  br label %if.end16

if.else:                                          ; preds = %cond.end
  %5 = load i8*, i8** %ifs, align 4
  %tobool3 = icmp ne i8* %5, null
  br i1 %tobool3, label %land.lhs.true, label %if.else12

land.lhs.true:                                    ; preds = %if.else
  %6 = load i8*, i8** %ifs, align 4
  %7 = load i8, i8* %6, align 1
  %conv = sext i8 %7 to i32
  %tobool4 = icmp ne i32 %conv, 0
  br i1 %tobool4, label %if.then5, label %if.else12

if.then5:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* @ifs_firstc_len, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then7, label %if.else10

if.then7:                                         ; preds = %if.then5
  %9 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  %arrayidx8 = getelementptr inbounds i8, i8* %vla, i32 0
  store i8 %9, i8* %arrayidx8, align 1
  %arrayidx9 = getelementptr inbounds i8, i8* %vla, i32 1
  store i8 0, i8* %arrayidx9, align 1
  br label %if.end

if.else10:                                        ; preds = %if.then5
  %10 = load i32, i32* @ifs_firstc_len, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %vla, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), i32 %10, i32 1, i1 false)
  %11 = load i32, i32* @ifs_firstc_len, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %vla, i32 %11
  store i8 0, i8* %arrayidx11, align 1
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  br label %if.end15

if.else12:                                        ; preds = %land.lhs.true, %if.else
  %arrayidx13 = getelementptr inbounds i8, i8* %vla, i32 0
  store i8 32, i8* %arrayidx13, align 1
  %arrayidx14 = getelementptr inbounds i8, i8* %vla, i32 1
  store i8 0, i8* %arrayidx14, align 1
  br label %if.end15

if.end15:                                         ; preds = %if.else12, %if.end
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  %12 = load i32, i32* %quoted.addr, align 4
  %and17 = and i32 %12, 11
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %cond.true19, label %cond.false21

cond.true19:                                      ; preds = %if.end16
  %13 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call20 = call %struct.word_list* @quote_list(%struct.word_list* %13)
  br label %cond.end23

cond.false21:                                     ; preds = %if.end16
  %14 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call22 = call %struct.word_list* @list_quote_escapes(%struct.word_list* %14)
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false21, %cond.true19
  %cond24 = phi %struct.word_list* [ %call20, %cond.true19 ], [ %call22, %cond.false21 ]
  store %struct.word_list* %cond24, %struct.word_list** %tlist, align 4
  %15 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %call25 = call i8* @string_list_internal(%struct.word_list* %15, i8* %vla)
  store i8* %call25, i8** %ret, align 4
  %16 = load i8*, i8** %ret, align 4
  %17 = load i8*, i8** %saved_stack, align 4
  call void @llvm.stackrestore(i8* %17)
  ret i8* %16
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @quote_list(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_list*, align 4
  %t = alloca i8*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %w, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %w, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  store i8* %4, i8** %t, align 4
  %5 = load i8*, i8** %t, align 4
  %call = call i8* @quote_string(i8* %5)
  %6 = load %struct.word_list*, %struct.word_list** %w, align 4
  %word2 = getelementptr inbounds %struct.word_list, %struct.word_list* %6, i32 0, i32 1
  %7 = load %struct.word_desc*, %struct.word_desc** %word2, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 0
  store i8* %call, i8** %word3, align 4
  %8 = load i8*, i8** %t, align 4
  %9 = load i8, i8* %8, align 1
  %conv = sext i8 %9 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %10 = load %struct.word_list*, %struct.word_list** %w, align 4
  %word5 = getelementptr inbounds %struct.word_list, %struct.word_list* %10, i32 0, i32 1
  %11 = load %struct.word_desc*, %struct.word_desc** %word5, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %11, i32 0, i32 1
  %12 = load i32, i32* %flags, align 4
  %or = or i32 %12, 262144
  store i32 %or, i32* %flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %13 = load %struct.word_list*, %struct.word_list** %w, align 4
  %word6 = getelementptr inbounds %struct.word_list, %struct.word_list* %13, i32 0, i32 1
  %14 = load %struct.word_desc*, %struct.word_desc** %word6, align 4
  %flags7 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %14, i32 0, i32 1
  %15 = load i32, i32* %flags7, align 4
  %or8 = or i32 %15, 2
  store i32 %or8, i32* %flags7, align 4
  %16 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4094)
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load %struct.word_list*, %struct.word_list** %w, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %17, i32 0, i32 0
  %18 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %18, %struct.word_list** %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  ret %struct.word_list* %19
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @list_quote_escapes(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_list*, align 4
  %t = alloca i8*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %w, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %w, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %w, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  store i8* %4, i8** %t, align 4
  %5 = load i8*, i8** %t, align 4
  %call = call i8* @quote_escapes(i8* %5)
  %6 = load %struct.word_list*, %struct.word_list** %w, align 4
  %word2 = getelementptr inbounds %struct.word_list, %struct.word_list* %6, i32 0, i32 1
  %7 = load %struct.word_desc*, %struct.word_desc** %word2, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 0
  store i8* %call, i8** %word3, align 4
  %8 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3893)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load %struct.word_list*, %struct.word_list** %w, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 0
  %10 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %10, %struct.word_list** %w, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  ret %struct.word_list* %11
}

; Function Attrs: noinline nounwind
define i8* @string_list_pos_params(i32 %pchar, %struct.word_list* %list, i32 %quoted) #0 {
entry:
  %pchar.addr = alloca i32, align 4
  %list.addr = alloca %struct.word_list*, align 4
  %quoted.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %tlist = alloca %struct.word_list*, align 4
  store i32 %pchar, i32* %pchar.addr, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i32, i32* %pchar.addr, align 4
  %cmp = icmp eq i32 %0, 42
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call = call %struct.word_list* @quote_list(%struct.word_list* %2)
  store %struct.word_list* %call, %struct.word_list** %tlist, align 4
  %3 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  call void @word_list_remove_quoted_nulls(%struct.word_list* %3)
  %4 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %call1 = call i8* @string_list_dollar_star(%struct.word_list* %4)
  store i8* %call1, i8** %ret, align 4
  br label %if.end32

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %pchar.addr, align 4
  %cmp2 = icmp eq i32 %5, 42
  br i1 %cmp2, label %land.lhs.true3, label %if.else9

land.lhs.true3:                                   ; preds = %if.else
  %6 = load i32, i32* %quoted.addr, align 4
  %and4 = and i32 %6, 2
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %if.else9

if.then6:                                         ; preds = %land.lhs.true3
  %7 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call7 = call %struct.word_list* @quote_list(%struct.word_list* %7)
  store %struct.word_list* %call7, %struct.word_list** %tlist, align 4
  %8 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  call void @word_list_remove_quoted_nulls(%struct.word_list* %8)
  %9 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %call8 = call i8* @string_list(%struct.word_list* %9)
  store i8* %call8, i8** %ret, align 4
  br label %if.end31

if.else9:                                         ; preds = %land.lhs.true3, %if.else
  %10 = load i32, i32* %pchar.addr, align 4
  %cmp10 = icmp eq i32 %10, 42
  br i1 %cmp10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.else9
  %11 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call12 = call i8* @string_list_dollar_star(%struct.word_list* %11)
  store i8* %call12, i8** %ret, align 4
  br label %if.end30

if.else13:                                        ; preds = %if.else9
  %12 = load i32, i32* %pchar.addr, align 4
  %cmp14 = icmp eq i32 %12, 64
  br i1 %cmp14, label %land.lhs.true15, label %if.else20

land.lhs.true15:                                  ; preds = %if.else13
  %13 = load i32, i32* %quoted.addr, align 4
  %and16 = and i32 %13, 3
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %if.else20

if.then18:                                        ; preds = %land.lhs.true15
  %14 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %15 = load i32, i32* %quoted.addr, align 4
  %call19 = call i8* @string_list_dollar_at(%struct.word_list* %14, i32 %15, i32 0)
  store i8* %call19, i8** %ret, align 4
  br label %if.end29

if.else20:                                        ; preds = %land.lhs.true15, %if.else13
  %16 = load i32, i32* %pchar.addr, align 4
  %cmp21 = icmp eq i32 %16, 64
  br i1 %cmp21, label %if.then22, label %if.else24

if.then22:                                        ; preds = %if.else20
  %17 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call23 = call i8* @string_list_dollar_star(%struct.word_list* %17)
  store i8* %call23, i8** %ret, align 4
  br label %if.end

if.else24:                                        ; preds = %if.else20
  %18 = load i32, i32* %quoted.addr, align 4
  %and25 = and i32 %18, 3
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else24
  %19 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call27 = call %struct.word_list* @quote_list(%struct.word_list* %19)
  br label %cond.end

cond.false:                                       ; preds = %if.else24
  %20 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %call27, %cond.true ], [ %20, %cond.false ]
  %call28 = call i8* @string_list(%struct.word_list* %cond)
  store i8* %call28, i8** %ret, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %if.then22
  br label %if.end29

if.end29:                                         ; preds = %if.end, %if.then18
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then11
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then6
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then
  %21 = load i8*, i8** %ret, align 4
  ret i8* %21
}

; Function Attrs: noinline nounwind
define void @word_list_remove_quoted_nulls(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %t = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %t, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %t, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  %call = call i8* @remove_quoted_nulls(i8* %4)
  %5 = load %struct.word_list*, %struct.word_list** %t, align 4
  %word2 = getelementptr inbounds %struct.word_list, %struct.word_list* %5, i32 0, i32 1
  %6 = load %struct.word_desc*, %struct.word_desc** %word2, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %6, i32 0, i32 1
  %7 = load i32, i32* %flags, align 4
  %and = and i32 %7, -262145
  store i32 %and, i32* %flags, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load %struct.word_list*, %struct.word_list** %t, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %8, i32 0, i32 0
  %9 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %9, %struct.word_list** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind
define %struct.word_list* @list_string(i8* %string, i8* %separators, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %separators.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %result = alloca %struct.word_list*, align 4
  %t = alloca %struct.word_desc*, align 4
  %current_word = alloca i8*, align 4
  %s = alloca i8*, align 4
  %sindex = alloca i32, align 4
  %sh_style_split = alloca i32, align 4
  %whitesep = alloca i32, align 4
  %xflags = alloca i32, align 4
  %slen = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %separators, i8** %separators.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %tobool1 = icmp ne i8 %2, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8*, i8** %separators.addr, align 4
  %tobool2 = icmp ne i8* %3, null
  br i1 %tobool2, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** %separators.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %land.lhs.true4, label %land.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %6 = load i8*, i8** %separators.addr, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %6, i32 1
  %7 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %7 to i32
  %cmp7 = icmp eq i32 %conv6, 9
  br i1 %cmp7, label %land.lhs.true9, label %land.end

land.lhs.true9:                                   ; preds = %land.lhs.true4
  %8 = load i8*, i8** %separators.addr, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %8, i32 2
  %9 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %9 to i32
  %cmp12 = icmp eq i32 %conv11, 10
  br i1 %cmp12, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true9
  %10 = load i8*, i8** %separators.addr, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %10, i32 3
  %11 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %11 to i32
  %cmp16 = icmp eq i32 %conv15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true9, %land.lhs.true4, %land.lhs.true, %if.end
  %12 = phi i1 [ false, %land.lhs.true9 ], [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %if.end ], [ %cmp16, %land.rhs ]
  %land.ext = zext i1 %12 to i32
  store i32 %land.ext, i32* %sh_style_split, align 4
  store i32 0, i32* %xflags, align 4
  %13 = load i8*, i8** @ifs_value, align 4
  store i8* %13, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %land.end
  %14 = load i8*, i8** %s, align 4
  %tobool18 = icmp ne i8* %14, null
  br i1 %tobool18, label %land.rhs19, label %land.end22

land.rhs19:                                       ; preds = %for.cond
  %15 = load i8*, i8** %s, align 4
  %16 = load i8, i8* %15, align 1
  %conv20 = sext i8 %16 to i32
  %tobool21 = icmp ne i32 %conv20, 0
  br label %land.end22

land.end22:                                       ; preds = %land.rhs19, %for.cond
  %17 = phi i1 [ false, %for.cond ], [ %tobool21, %land.rhs19 ]
  br i1 %17, label %for.body, label %for.end

for.body:                                         ; preds = %land.end22
  %18 = load i8*, i8** %s, align 4
  %19 = load i8, i8* %18, align 1
  %conv24 = sext i8 %19 to i32
  %cmp25 = icmp eq i32 %conv24, 1
  br i1 %cmp25, label %if.then27, label %if.else

if.then27:                                        ; preds = %for.body
  %20 = load i32, i32* %xflags, align 4
  %or = or i32 %20, 16
  store i32 %or, i32* %xflags, align 4
  br label %if.end34

if.else:                                          ; preds = %for.body
  %21 = load i8*, i8** %s, align 4
  %22 = load i8, i8* %21, align 1
  %conv28 = sext i8 %22 to i32
  %cmp29 = icmp eq i32 %conv28, 127
  br i1 %cmp29, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.else
  %23 = load i32, i32* %xflags, align 4
  %or32 = or i32 %23, 32
  store i32 %or32, i32* %xflags, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then27
  br label %for.inc

for.inc:                                          ; preds = %if.end34
  %24 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end22
  store i32 0, i32* %slen, align 4
  %25 = load i32, i32* %quoted.addr, align 4
  %tobool35 = icmp ne i32 %25, 0
  br i1 %tobool35, label %lor.lhs.false36, label %if.then40

lor.lhs.false36:                                  ; preds = %for.end
  %26 = load i8*, i8** %separators.addr, align 4
  %tobool37 = icmp ne i8* %26, null
  br i1 %tobool37, label %lor.lhs.false38, label %if.then40

lor.lhs.false38:                                  ; preds = %lor.lhs.false36
  %27 = load i8*, i8** %separators.addr, align 4
  %28 = load i8, i8* %27, align 1
  %tobool39 = icmp ne i8 %28, 0
  br i1 %tobool39, label %if.end86, label %if.then40

if.then40:                                        ; preds = %lor.lhs.false38, %lor.lhs.false36, %for.end
  %29 = load i8*, i8** %string.addr, align 4
  store i8* %29, i8** %s, align 4
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc80, %if.then40
  %30 = load i8*, i8** %s, align 4
  %31 = load i8, i8* %30, align 1
  %conv42 = sext i8 %31 to i32
  %tobool43 = icmp ne i32 %conv42, 0
  br i1 %tobool43, label %land.lhs.true44, label %land.end77

land.lhs.true44:                                  ; preds = %for.cond41
  %32 = load i8*, i8** %s, align 4
  %33 = load i8, i8* %32, align 1
  %conv45 = sext i8 %33 to i32
  %cmp46 = icmp eq i32 %conv45, 32
  br i1 %cmp46, label %land.rhs56, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %land.lhs.true44
  %34 = load i8*, i8** %s, align 4
  %35 = load i8, i8* %34, align 1
  %conv49 = sext i8 %35 to i32
  %cmp50 = icmp eq i32 %conv49, 9
  br i1 %cmp50, label %land.rhs56, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %36 = load i8*, i8** %s, align 4
  %37 = load i8, i8* %36, align 1
  %conv53 = sext i8 %37 to i32
  %cmp54 = icmp eq i32 %conv53, 10
  br i1 %cmp54, label %land.rhs56, label %land.end77

land.rhs56:                                       ; preds = %lor.lhs.false52, %lor.lhs.false48, %land.lhs.true44
  %38 = load i8*, i8** %separators.addr, align 4
  %arrayidx57 = getelementptr inbounds i8, i8* %38, i32 0
  %39 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %39 to i32
  %tobool59 = icmp ne i32 %conv58, 0
  br i1 %tobool59, label %cond.true, label %cond.false73

cond.true:                                        ; preds = %land.rhs56
  %40 = load i8*, i8** %separators.addr, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %40, i32 1
  %41 = load i8, i8* %arrayidx60, align 1
  %conv61 = sext i8 %41 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %cond.true63, label %cond.false

cond.true63:                                      ; preds = %cond.true
  %42 = load i8*, i8** %s, align 4
  %43 = load i8, i8* %42, align 1
  %idxprom = zext i8 %43 to i32
  %arrayidx64 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom
  %44 = load i8, i8* %arrayidx64, align 1
  %conv65 = zext i8 %44 to i32
  %cmp66 = icmp ne i32 %conv65, 0
  %conv67 = zext i1 %cmp66 to i32
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %45 = load i8*, i8** %s, align 4
  %46 = load i8, i8* %45, align 1
  %conv68 = sext i8 %46 to i32
  %47 = load i8*, i8** %separators.addr, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %47, i32 0
  %48 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %48 to i32
  %cmp71 = icmp eq i32 %conv68, %conv70
  %conv72 = zext i1 %cmp71 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true63
  %cond = phi i32 [ %conv67, %cond.true63 ], [ %conv72, %cond.false ]
  br label %cond.end74

cond.false73:                                     ; preds = %land.rhs56
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.end
  %cond75 = phi i32 [ %cond, %cond.end ], [ 0, %cond.false73 ]
  %tobool76 = icmp ne i32 %cond75, 0
  br label %land.end77

land.end77:                                       ; preds = %cond.end74, %lor.lhs.false52, %for.cond41
  %49 = phi i1 [ false, %lor.lhs.false52 ], [ false, %for.cond41 ], [ %tobool76, %cond.end74 ]
  br i1 %49, label %for.body79, label %for.end82

for.body79:                                       ; preds = %land.end77
  br label %for.inc80

for.inc80:                                        ; preds = %for.body79
  %50 = load i8*, i8** %s, align 4
  %incdec.ptr81 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr81, i8** %s, align 4
  br label %for.cond41

for.end82:                                        ; preds = %land.end77
  %51 = load i8*, i8** %s, align 4
  %52 = load i8, i8* %51, align 1
  %tobool83 = icmp ne i8 %52, 0
  br i1 %tobool83, label %if.end85, label %if.then84

if.then84:                                        ; preds = %for.end82
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end85:                                         ; preds = %for.end82
  %53 = load i8*, i8** %s, align 4
  store i8* %53, i8** %string.addr, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %lor.lhs.false38
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp87 = icmp ugt i32 %call, 1
  br i1 %cmp87, label %cond.true89, label %cond.false114

cond.true89:                                      ; preds = %if.end86
  %54 = load i8*, i8** %string.addr, align 4
  %tobool90 = icmp ne i8* %54, null
  br i1 %tobool90, label %land.lhs.true91, label %cond.false111

land.lhs.true91:                                  ; preds = %cond.true89
  %55 = load i8*, i8** %string.addr, align 4
  %arrayidx92 = getelementptr inbounds i8, i8* %55, i32 0
  %56 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %56 to i32
  %tobool94 = icmp ne i32 %conv93, 0
  br i1 %tobool94, label %cond.true95, label %cond.false111

cond.true95:                                      ; preds = %land.lhs.true91
  %57 = load i8*, i8** %string.addr, align 4
  %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 1
  %58 = load i8, i8* %arrayidx96, align 1
  %conv97 = sext i8 %58 to i32
  %tobool98 = icmp ne i32 %conv97, 0
  br i1 %tobool98, label %cond.true99, label %cond.false108

cond.true99:                                      ; preds = %cond.true95
  %59 = load i8*, i8** %string.addr, align 4
  %arrayidx100 = getelementptr inbounds i8, i8* %59, i32 2
  %60 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %60 to i32
  %tobool102 = icmp ne i32 %conv101, 0
  br i1 %tobool102, label %cond.true103, label %cond.false105

cond.true103:                                     ; preds = %cond.true99
  %61 = load i8*, i8** %string.addr, align 4
  %call104 = call i32 @strlen(i8* %61)
  br label %cond.end106

cond.false105:                                    ; preds = %cond.true99
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false105, %cond.true103
  %cond107 = phi i32 [ %call104, %cond.true103 ], [ 2, %cond.false105 ]
  br label %cond.end109

cond.false108:                                    ; preds = %cond.true95
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false108, %cond.end106
  %cond110 = phi i32 [ %cond107, %cond.end106 ], [ 1, %cond.false108 ]
  br label %cond.end112

cond.false111:                                    ; preds = %land.lhs.true91, %cond.true89
  br label %cond.end112

cond.end112:                                      ; preds = %cond.false111, %cond.end109
  %cond113 = phi i32 [ %cond110, %cond.end109 ], [ 0, %cond.false111 ]
  br label %cond.end115

cond.false114:                                    ; preds = %if.end86
  br label %cond.end115

cond.end115:                                      ; preds = %cond.false114, %cond.end112
  %cond116 = phi i32 [ %cond113, %cond.end112 ], [ 1, %cond.false114 ]
  store i32 %cond116, i32* %slen, align 4
  store %struct.word_list* null, %struct.word_list** %result, align 4
  store i32 0, i32* %sindex, align 4
  br label %for.cond117

for.cond117:                                      ; preds = %if.end360, %cond.end115
  %62 = load i8*, i8** %string.addr, align 4
  %63 = load i32, i32* %sindex, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %62, i32 %63
  %64 = load i8, i8* %arrayidx118, align 1
  %tobool119 = icmp ne i8 %64, 0
  br i1 %tobool119, label %for.body120, label %for.end361

for.body120:                                      ; preds = %for.cond117
  %65 = load i8*, i8** %string.addr, align 4
  %66 = load i32, i32* %slen, align 4
  %67 = load i8*, i8** %separators.addr, align 4
  %68 = load i32, i32* %xflags, align 4
  %call121 = call i8* @string_extract_verbatim(i8* %65, i32 %66, i32* %sindex, i8* %67, i32 %68)
  store i8* %call121, i8** %current_word, align 4
  %69 = load i8*, i8** %current_word, align 4
  %cmp122 = icmp eq i8* %69, null
  br i1 %cmp122, label %if.then124, label %if.end125

if.then124:                                       ; preds = %for.body120
  br label %for.end361

if.end125:                                        ; preds = %for.body120
  %70 = load i8*, i8** %current_word, align 4
  %arrayidx126 = getelementptr inbounds i8, i8* %70, i32 0
  %71 = load i8, i8* %arrayidx126, align 1
  %conv127 = sext i8 %71 to i32
  %cmp128 = icmp eq i32 %conv127, 127
  br i1 %cmp128, label %land.lhs.true130, label %if.else140

land.lhs.true130:                                 ; preds = %if.end125
  %72 = load i8*, i8** %current_word, align 4
  %arrayidx131 = getelementptr inbounds i8, i8* %72, i32 1
  %73 = load i8, i8* %arrayidx131, align 1
  %conv132 = sext i8 %73 to i32
  %cmp133 = icmp eq i32 %conv132, 0
  br i1 %cmp133, label %if.then135, label %if.else140

if.then135:                                       ; preds = %land.lhs.true130
  %call136 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call136, %struct.word_desc** %t, align 4
  %call137 = call i8* @make_quoted_char(i32 0)
  %74 = load %struct.word_desc*, %struct.word_desc** %t, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %74, i32 0, i32 0
  store i8* %call137, i8** %word, align 4
  %75 = load %struct.word_desc*, %struct.word_desc** %t, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %75, i32 0, i32 1
  %76 = load i32, i32* %flags, align 4
  %or138 = or i32 %76, 262146
  store i32 %or138, i32* %flags, align 4
  %77 = load %struct.word_desc*, %struct.word_desc** %t, align 4
  %78 = load %struct.word_list*, %struct.word_list** %result, align 4
  %call139 = call %struct.word_list* @make_word_list(%struct.word_desc* %77, %struct.word_list* %78)
  store %struct.word_list* %call139, %struct.word_list** %result, align 4
  br label %if.end184

if.else140:                                       ; preds = %land.lhs.true130, %if.end125
  %79 = load i8*, i8** %current_word, align 4
  %arrayidx141 = getelementptr inbounds i8, i8* %79, i32 0
  %80 = load i8, i8* %arrayidx141, align 1
  %conv142 = sext i8 %80 to i32
  %cmp143 = icmp ne i32 %conv142, 0
  br i1 %cmp143, label %if.then145, label %if.else158

if.then145:                                       ; preds = %if.else140
  %81 = load i8*, i8** %current_word, align 4
  %call146 = call i8* @remove_quoted_nulls(i8* %81)
  %82 = load i8*, i8** %current_word, align 4
  %call147 = call %struct.word_desc* @make_word(i8* %82)
  %83 = load %struct.word_list*, %struct.word_list** %result, align 4
  %call148 = call %struct.word_list* @make_word_list(%struct.word_desc* %call147, %struct.word_list* %83)
  store %struct.word_list* %call148, %struct.word_list** %result, align 4
  %84 = load %struct.word_list*, %struct.word_list** %result, align 4
  %word149 = getelementptr inbounds %struct.word_list, %struct.word_list* %84, i32 0, i32 1
  %85 = load %struct.word_desc*, %struct.word_desc** %word149, align 4
  %flags150 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %85, i32 0, i32 1
  %86 = load i32, i32* %flags150, align 4
  %and = and i32 %86, -262145
  store i32 %and, i32* %flags150, align 4
  %87 = load i32, i32* %quoted.addr, align 4
  %and151 = and i32 %87, 3
  %tobool152 = icmp ne i32 %and151, 0
  br i1 %tobool152, label %if.then153, label %if.end157

if.then153:                                       ; preds = %if.then145
  %88 = load %struct.word_list*, %struct.word_list** %result, align 4
  %word154 = getelementptr inbounds %struct.word_list, %struct.word_list* %88, i32 0, i32 1
  %89 = load %struct.word_desc*, %struct.word_desc** %word154, align 4
  %flags155 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %89, i32 0, i32 1
  %90 = load i32, i32* %flags155, align 4
  %or156 = or i32 %90, 2
  store i32 %or156, i32* %flags155, align 4
  br label %if.end157

if.end157:                                        ; preds = %if.then153, %if.then145
  br label %if.end183

if.else158:                                       ; preds = %if.else140
  %91 = load i32, i32* %sh_style_split, align 4
  %tobool159 = icmp ne i32 %91, 0
  br i1 %tobool159, label %if.end182, label %land.lhs.true160

land.lhs.true160:                                 ; preds = %if.else158
  %92 = load i8*, i8** %string.addr, align 4
  %93 = load i32, i32* %sindex, align 4
  %arrayidx161 = getelementptr inbounds i8, i8* %92, i32 %93
  %94 = load i8, i8* %arrayidx161, align 1
  %conv162 = sext i8 %94 to i32
  %cmp163 = icmp eq i32 %conv162, 32
  br i1 %cmp163, label %if.end182, label %lor.lhs.false165

lor.lhs.false165:                                 ; preds = %land.lhs.true160
  %95 = load i8*, i8** %string.addr, align 4
  %96 = load i32, i32* %sindex, align 4
  %arrayidx166 = getelementptr inbounds i8, i8* %95, i32 %96
  %97 = load i8, i8* %arrayidx166, align 1
  %conv167 = sext i8 %97 to i32
  %cmp168 = icmp eq i32 %conv167, 9
  br i1 %cmp168, label %if.end182, label %lor.lhs.false170

lor.lhs.false170:                                 ; preds = %lor.lhs.false165
  %98 = load i8*, i8** %string.addr, align 4
  %99 = load i32, i32* %sindex, align 4
  %arrayidx171 = getelementptr inbounds i8, i8* %98, i32 %99
  %100 = load i8, i8* %arrayidx171, align 1
  %conv172 = sext i8 %100 to i32
  %cmp173 = icmp eq i32 %conv172, 10
  br i1 %cmp173, label %if.end182, label %if.then175

if.then175:                                       ; preds = %lor.lhs.false170
  %call176 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call176, %struct.word_desc** %t, align 4
  %call177 = call i8* @make_quoted_char(i32 0)
  %101 = load %struct.word_desc*, %struct.word_desc** %t, align 4
  %word178 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %101, i32 0, i32 0
  store i8* %call177, i8** %word178, align 4
  %102 = load %struct.word_desc*, %struct.word_desc** %t, align 4
  %flags179 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %102, i32 0, i32 1
  %103 = load i32, i32* %flags179, align 4
  %or180 = or i32 %103, 262146
  store i32 %or180, i32* %flags179, align 4
  %104 = load %struct.word_desc*, %struct.word_desc** %t, align 4
  %105 = load %struct.word_list*, %struct.word_list** %result, align 4
  %call181 = call %struct.word_list* @make_word_list(%struct.word_desc* %104, %struct.word_list* %105)
  store %struct.word_list* %call181, %struct.word_list** %result, align 4
  br label %if.end182

if.end182:                                        ; preds = %if.then175, %lor.lhs.false170, %lor.lhs.false165, %land.lhs.true160, %if.else158
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.end157
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then135
  %106 = load i8*, i8** %current_word, align 4
  call void @sh_xfree(i8* %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 2793)
  %107 = load i8*, i8** %string.addr, align 4
  %108 = load i32, i32* %sindex, align 4
  %arrayidx185 = getelementptr inbounds i8, i8* %107, i32 %108
  %109 = load i8, i8* %arrayidx185, align 1
  %conv186 = sext i8 %109 to i32
  %tobool187 = icmp ne i32 %conv186, 0
  br i1 %tobool187, label %land.rhs188, label %land.end202

land.rhs188:                                      ; preds = %if.end184
  %110 = load i8*, i8** %string.addr, align 4
  %111 = load i32, i32* %sindex, align 4
  %arrayidx189 = getelementptr inbounds i8, i8* %110, i32 %111
  %112 = load i8, i8* %arrayidx189, align 1
  %conv190 = sext i8 %112 to i32
  %cmp191 = icmp eq i32 %conv190, 32
  br i1 %cmp191, label %lor.end, label %lor.lhs.false193

lor.lhs.false193:                                 ; preds = %land.rhs188
  %113 = load i8*, i8** %string.addr, align 4
  %114 = load i32, i32* %sindex, align 4
  %arrayidx194 = getelementptr inbounds i8, i8* %113, i32 %114
  %115 = load i8, i8* %arrayidx194, align 1
  %conv195 = sext i8 %115 to i32
  %cmp196 = icmp eq i32 %conv195, 9
  br i1 %cmp196, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false193
  %116 = load i8*, i8** %string.addr, align 4
  %117 = load i32, i32* %sindex, align 4
  %arrayidx198 = getelementptr inbounds i8, i8* %116, i32 %117
  %118 = load i8, i8* %arrayidx198, align 1
  %conv199 = sext i8 %118 to i32
  %cmp200 = icmp eq i32 %conv199, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false193, %land.rhs188
  %119 = phi i1 [ true, %lor.lhs.false193 ], [ true, %land.rhs188 ], [ %cmp200, %lor.rhs ]
  br label %land.end202

land.end202:                                      ; preds = %lor.end, %if.end184
  %120 = phi i1 [ false, %if.end184 ], [ %119, %lor.end ]
  %land.ext203 = zext i1 %120 to i32
  store i32 %land.ext203, i32* %whitesep, align 4
  %121 = load i8*, i8** %string.addr, align 4
  %122 = load i32, i32* %sindex, align 4
  %arrayidx204 = getelementptr inbounds i8, i8* %121, i32 %122
  %123 = load i8, i8* %arrayidx204, align 1
  %tobool205 = icmp ne i8 %123, 0
  br i1 %tobool205, label %if.then206, label %if.end234

if.then206:                                       ; preds = %land.end202
  %124 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %124, i8 0, i32 8, i32 4, i1 false)
  br label %do.body

do.body:                                          ; preds = %if.then206
  %125 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp207 = icmp sgt i32 %125, 1
  br i1 %cmp207, label %if.then209, label %if.else231

if.then209:                                       ; preds = %do.body
  %126 = load i8*, i8** %string.addr, align 4
  %127 = load i32, i32* %sindex, align 4
  %arrayidx210 = getelementptr inbounds i8, i8* %126, i32 %127
  %128 = load i8, i8* %arrayidx210, align 1
  %call211 = call i32 @is_basic(i8 signext %128)
  store i32 %call211, i32* %_f, align 4
  %129 = load i32, i32* %_f, align 4
  %tobool212 = icmp ne i32 %129, 0
  br i1 %tobool212, label %if.then213, label %if.else214

if.then213:                                       ; preds = %if.then209
  store i32 1, i32* %mblength, align 4
  br label %if.end216

if.else214:                                       ; preds = %if.then209
  %130 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %131 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %130, i8* %131, i32 8, i32 4, i1 false)
  %132 = load i8*, i8** %string.addr, align 4
  %133 = load i32, i32* %sindex, align 4
  %add.ptr = getelementptr inbounds i8, i8* %132, i32 %133
  %134 = load i32, i32* %slen, align 4
  %135 = load i32, i32* %sindex, align 4
  %sub = sub i32 %134, %135
  %call215 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call215, i32* %mblength, align 4
  br label %if.end216

if.end216:                                        ; preds = %if.else214, %if.then213
  %136 = load i32, i32* %mblength, align 4
  %cmp217 = icmp eq i32 %136, -2
  br i1 %cmp217, label %if.then222, label %lor.lhs.false219

lor.lhs.false219:                                 ; preds = %if.end216
  %137 = load i32, i32* %mblength, align 4
  %cmp220 = icmp eq i32 %137, -1
  br i1 %cmp220, label %if.then222, label %if.else223

if.then222:                                       ; preds = %lor.lhs.false219, %if.end216
  %138 = bitcast %struct.__mbstate_t* %state to i8*
  %139 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %138, i8* %139, i32 8, i32 4, i1 false)
  %140 = load i32, i32* %sindex, align 4
  %inc = add nsw i32 %140, 1
  store i32 %inc, i32* %sindex, align 4
  br label %if.end230

if.else223:                                       ; preds = %lor.lhs.false219
  %141 = load i32, i32* %mblength, align 4
  %cmp224 = icmp eq i32 %141, 0
  br i1 %cmp224, label %if.then226, label %if.else228

if.then226:                                       ; preds = %if.else223
  %142 = load i32, i32* %sindex, align 4
  %inc227 = add nsw i32 %142, 1
  store i32 %inc227, i32* %sindex, align 4
  br label %if.end229

if.else228:                                       ; preds = %if.else223
  %143 = load i32, i32* %mblength, align 4
  %144 = load i32, i32* %sindex, align 4
  %add = add i32 %144, %143
  store i32 %add, i32* %sindex, align 4
  br label %if.end229

if.end229:                                        ; preds = %if.else228, %if.then226
  br label %if.end230

if.end230:                                        ; preds = %if.end229, %if.then222
  br label %if.end233

if.else231:                                       ; preds = %do.body
  %145 = load i32, i32* %sindex, align 4
  %inc232 = add nsw i32 %145, 1
  store i32 %inc232, i32* %sindex, align 4
  br label %if.end233

if.end233:                                        ; preds = %if.else231, %if.end230
  br label %do.end

do.end:                                           ; preds = %if.end233
  br label %if.end234

if.end234:                                        ; preds = %do.end, %land.end202
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end234
  %146 = load i8*, i8** %string.addr, align 4
  %147 = load i32, i32* %sindex, align 4
  %arrayidx235 = getelementptr inbounds i8, i8* %146, i32 %147
  %148 = load i8, i8* %arrayidx235, align 1
  %conv236 = sext i8 %148 to i32
  %tobool237 = icmp ne i32 %conv236, 0
  br i1 %tobool237, label %land.lhs.true238, label %land.end281

land.lhs.true238:                                 ; preds = %while.cond
  %149 = load i8*, i8** %string.addr, align 4
  %150 = load i32, i32* %sindex, align 4
  %arrayidx239 = getelementptr inbounds i8, i8* %149, i32 %150
  %151 = load i8, i8* %arrayidx239, align 1
  %conv240 = sext i8 %151 to i32
  %cmp241 = icmp eq i32 %conv240, 32
  br i1 %cmp241, label %land.rhs253, label %lor.lhs.false243

lor.lhs.false243:                                 ; preds = %land.lhs.true238
  %152 = load i8*, i8** %string.addr, align 4
  %153 = load i32, i32* %sindex, align 4
  %arrayidx244 = getelementptr inbounds i8, i8* %152, i32 %153
  %154 = load i8, i8* %arrayidx244, align 1
  %conv245 = sext i8 %154 to i32
  %cmp246 = icmp eq i32 %conv245, 9
  br i1 %cmp246, label %land.rhs253, label %lor.lhs.false248

lor.lhs.false248:                                 ; preds = %lor.lhs.false243
  %155 = load i8*, i8** %string.addr, align 4
  %156 = load i32, i32* %sindex, align 4
  %arrayidx249 = getelementptr inbounds i8, i8* %155, i32 %156
  %157 = load i8, i8* %arrayidx249, align 1
  %conv250 = sext i8 %157 to i32
  %cmp251 = icmp eq i32 %conv250, 10
  br i1 %cmp251, label %land.rhs253, label %land.end281

land.rhs253:                                      ; preds = %lor.lhs.false248, %lor.lhs.false243, %land.lhs.true238
  %158 = load i8*, i8** %separators.addr, align 4
  %arrayidx254 = getelementptr inbounds i8, i8* %158, i32 0
  %159 = load i8, i8* %arrayidx254, align 1
  %conv255 = sext i8 %159 to i32
  %tobool256 = icmp ne i32 %conv255, 0
  br i1 %tobool256, label %cond.true257, label %cond.false277

cond.true257:                                     ; preds = %land.rhs253
  %160 = load i8*, i8** %separators.addr, align 4
  %arrayidx258 = getelementptr inbounds i8, i8* %160, i32 1
  %161 = load i8, i8* %arrayidx258, align 1
  %conv259 = sext i8 %161 to i32
  %tobool260 = icmp ne i32 %conv259, 0
  br i1 %tobool260, label %cond.true261, label %cond.false268

cond.true261:                                     ; preds = %cond.true257
  %162 = load i8*, i8** %string.addr, align 4
  %163 = load i32, i32* %sindex, align 4
  %arrayidx262 = getelementptr inbounds i8, i8* %162, i32 %163
  %164 = load i8, i8* %arrayidx262, align 1
  %idxprom263 = zext i8 %164 to i32
  %arrayidx264 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom263
  %165 = load i8, i8* %arrayidx264, align 1
  %conv265 = zext i8 %165 to i32
  %cmp266 = icmp ne i32 %conv265, 0
  %conv267 = zext i1 %cmp266 to i32
  br label %cond.end275

cond.false268:                                    ; preds = %cond.true257
  %166 = load i8*, i8** %string.addr, align 4
  %167 = load i32, i32* %sindex, align 4
  %arrayidx269 = getelementptr inbounds i8, i8* %166, i32 %167
  %168 = load i8, i8* %arrayidx269, align 1
  %conv270 = sext i8 %168 to i32
  %169 = load i8*, i8** %separators.addr, align 4
  %arrayidx271 = getelementptr inbounds i8, i8* %169, i32 0
  %170 = load i8, i8* %arrayidx271, align 1
  %conv272 = sext i8 %170 to i32
  %cmp273 = icmp eq i32 %conv270, %conv272
  %conv274 = zext i1 %cmp273 to i32
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false268, %cond.true261
  %cond276 = phi i32 [ %conv267, %cond.true261 ], [ %conv274, %cond.false268 ]
  br label %cond.end278

cond.false277:                                    ; preds = %land.rhs253
  br label %cond.end278

cond.end278:                                      ; preds = %cond.false277, %cond.end275
  %cond279 = phi i32 [ %cond276, %cond.end275 ], [ 0, %cond.false277 ]
  %tobool280 = icmp ne i32 %cond279, 0
  br label %land.end281

land.end281:                                      ; preds = %cond.end278, %lor.lhs.false248, %while.cond
  %171 = phi i1 [ false, %lor.lhs.false248 ], [ false, %while.cond ], [ %tobool280, %cond.end278 ]
  br i1 %171, label %while.body, label %while.end

while.body:                                       ; preds = %land.end281
  %172 = load i32, i32* %sindex, align 4
  %inc283 = add nsw i32 %172, 1
  store i32 %inc283, i32* %sindex, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end281
  %173 = load i8*, i8** %string.addr, align 4
  %174 = load i32, i32* %sindex, align 4
  %arrayidx284 = getelementptr inbounds i8, i8* %173, i32 %174
  %175 = load i8, i8* %arrayidx284, align 1
  %conv285 = sext i8 %175 to i32
  %tobool286 = icmp ne i32 %conv285, 0
  br i1 %tobool286, label %land.lhs.true287, label %if.end360

land.lhs.true287:                                 ; preds = %while.end
  %176 = load i32, i32* %whitesep, align 4
  %tobool288 = icmp ne i32 %176, 0
  br i1 %tobool288, label %land.lhs.true289, label %if.end360

land.lhs.true289:                                 ; preds = %land.lhs.true287
  %177 = load i8*, i8** %separators.addr, align 4
  %arrayidx290 = getelementptr inbounds i8, i8* %177, i32 0
  %178 = load i8, i8* %arrayidx290, align 1
  %conv291 = sext i8 %178 to i32
  %tobool292 = icmp ne i32 %conv291, 0
  br i1 %tobool292, label %cond.true293, label %cond.false311

cond.true293:                                     ; preds = %land.lhs.true289
  %179 = load i8*, i8** %separators.addr, align 4
  %arrayidx294 = getelementptr inbounds i8, i8* %179, i32 1
  %180 = load i8, i8* %arrayidx294, align 1
  %conv295 = sext i8 %180 to i32
  %tobool296 = icmp ne i32 %conv295, 0
  br i1 %tobool296, label %cond.true297, label %cond.false304

cond.true297:                                     ; preds = %cond.true293
  %181 = load i8*, i8** %string.addr, align 4
  %182 = load i32, i32* %sindex, align 4
  %arrayidx298 = getelementptr inbounds i8, i8* %181, i32 %182
  %183 = load i8, i8* %arrayidx298, align 1
  %idxprom299 = zext i8 %183 to i32
  %arrayidx300 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom299
  %184 = load i8, i8* %arrayidx300, align 1
  %conv301 = zext i8 %184 to i32
  %cmp302 = icmp ne i32 %conv301, 0
  br i1 %cmp302, label %land.lhs.true312, label %if.end360

cond.false304:                                    ; preds = %cond.true293
  %185 = load i8*, i8** %string.addr, align 4
  %186 = load i32, i32* %sindex, align 4
  %arrayidx305 = getelementptr inbounds i8, i8* %185, i32 %186
  %187 = load i8, i8* %arrayidx305, align 1
  %conv306 = sext i8 %187 to i32
  %188 = load i8*, i8** %separators.addr, align 4
  %arrayidx307 = getelementptr inbounds i8, i8* %188, i32 0
  %189 = load i8, i8* %arrayidx307, align 1
  %conv308 = sext i8 %189 to i32
  %cmp309 = icmp eq i32 %conv306, %conv308
  br i1 %cmp309, label %land.lhs.true312, label %if.end360

cond.false311:                                    ; preds = %land.lhs.true289
  br i1 false, label %land.lhs.true312, label %if.end360

land.lhs.true312:                                 ; preds = %cond.false311, %cond.false304, %cond.true297
  %190 = load i8*, i8** %string.addr, align 4
  %191 = load i32, i32* %sindex, align 4
  %arrayidx313 = getelementptr inbounds i8, i8* %190, i32 %191
  %192 = load i8, i8* %arrayidx313, align 1
  %conv314 = sext i8 %192 to i32
  %cmp315 = icmp eq i32 %conv314, 32
  br i1 %cmp315, label %if.end360, label %lor.lhs.false317

lor.lhs.false317:                                 ; preds = %land.lhs.true312
  %193 = load i8*, i8** %string.addr, align 4
  %194 = load i32, i32* %sindex, align 4
  %arrayidx318 = getelementptr inbounds i8, i8* %193, i32 %194
  %195 = load i8, i8* %arrayidx318, align 1
  %conv319 = sext i8 %195 to i32
  %cmp320 = icmp eq i32 %conv319, 9
  br i1 %cmp320, label %if.end360, label %lor.lhs.false322

lor.lhs.false322:                                 ; preds = %lor.lhs.false317
  %196 = load i8*, i8** %string.addr, align 4
  %197 = load i32, i32* %sindex, align 4
  %arrayidx323 = getelementptr inbounds i8, i8* %196, i32 %197
  %198 = load i8, i8* %arrayidx323, align 1
  %conv324 = sext i8 %198 to i32
  %cmp325 = icmp eq i32 %conv324, 10
  br i1 %cmp325, label %if.end360, label %if.then327

if.then327:                                       ; preds = %lor.lhs.false322
  %199 = load i32, i32* %sindex, align 4
  %inc328 = add nsw i32 %199, 1
  store i32 %inc328, i32* %sindex, align 4
  br label %while.cond329

while.cond329:                                    ; preds = %while.body357, %if.then327
  %200 = load i8*, i8** %string.addr, align 4
  %201 = load i32, i32* %sindex, align 4
  %arrayidx330 = getelementptr inbounds i8, i8* %200, i32 %201
  %202 = load i8, i8* %arrayidx330, align 1
  %conv331 = sext i8 %202 to i32
  %tobool332 = icmp ne i32 %conv331, 0
  br i1 %tobool332, label %land.lhs.true333, label %land.end355

land.lhs.true333:                                 ; preds = %while.cond329
  %203 = load i8*, i8** %string.addr, align 4
  %204 = load i32, i32* %sindex, align 4
  %arrayidx334 = getelementptr inbounds i8, i8* %203, i32 %204
  %205 = load i8, i8* %arrayidx334, align 1
  %conv335 = sext i8 %205 to i32
  %cmp336 = icmp eq i32 %conv335, 32
  br i1 %cmp336, label %land.rhs348, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %land.lhs.true333
  %206 = load i8*, i8** %string.addr, align 4
  %207 = load i32, i32* %sindex, align 4
  %arrayidx339 = getelementptr inbounds i8, i8* %206, i32 %207
  %208 = load i8, i8* %arrayidx339, align 1
  %conv340 = sext i8 %208 to i32
  %cmp341 = icmp eq i32 %conv340, 9
  br i1 %cmp341, label %land.rhs348, label %lor.lhs.false343

lor.lhs.false343:                                 ; preds = %lor.lhs.false338
  %209 = load i8*, i8** %string.addr, align 4
  %210 = load i32, i32* %sindex, align 4
  %arrayidx344 = getelementptr inbounds i8, i8* %209, i32 %210
  %211 = load i8, i8* %arrayidx344, align 1
  %conv345 = sext i8 %211 to i32
  %cmp346 = icmp eq i32 %conv345, 10
  br i1 %cmp346, label %land.rhs348, label %land.end355

land.rhs348:                                      ; preds = %lor.lhs.false343, %lor.lhs.false338, %land.lhs.true333
  %212 = load i8*, i8** %string.addr, align 4
  %213 = load i32, i32* %sindex, align 4
  %arrayidx349 = getelementptr inbounds i8, i8* %212, i32 %213
  %214 = load i8, i8* %arrayidx349, align 1
  %idxprom350 = zext i8 %214 to i32
  %arrayidx351 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom350
  %215 = load i8, i8* %arrayidx351, align 1
  %conv352 = zext i8 %215 to i32
  %cmp353 = icmp ne i32 %conv352, 0
  br label %land.end355

land.end355:                                      ; preds = %land.rhs348, %lor.lhs.false343, %while.cond329
  %216 = phi i1 [ false, %lor.lhs.false343 ], [ false, %while.cond329 ], [ %cmp353, %land.rhs348 ]
  br i1 %216, label %while.body357, label %while.end359

while.body357:                                    ; preds = %land.end355
  %217 = load i32, i32* %sindex, align 4
  %inc358 = add nsw i32 %217, 1
  store i32 %inc358, i32* %sindex, align 4
  br label %while.cond329

while.end359:                                     ; preds = %land.end355
  br label %if.end360

if.end360:                                        ; preds = %while.end359, %lor.lhs.false322, %lor.lhs.false317, %land.lhs.true312, %cond.false311, %cond.false304, %cond.true297, %land.lhs.true287, %while.end
  br label %for.cond117

for.end361:                                       ; preds = %if.then124, %for.cond117
  %218 = load %struct.word_list*, %struct.word_list** %result, align 4
  %tobool362 = icmp ne %struct.word_list* %218, null
  br i1 %tobool362, label %land.lhs.true363, label %cond.false367

land.lhs.true363:                                 ; preds = %for.end361
  %219 = load %struct.word_list*, %struct.word_list** %result, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %219, i32 0, i32 0
  %220 = load %struct.word_list*, %struct.word_list** %next, align 4
  %tobool364 = icmp ne %struct.word_list* %220, null
  br i1 %tobool364, label %cond.true365, label %cond.false367

cond.true365:                                     ; preds = %land.lhs.true363
  %221 = load %struct.word_list*, %struct.word_list** %result, align 4
  %222 = bitcast %struct.word_list* %221 to %struct.g_list*
  %call366 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %222)
  %223 = bitcast %struct.g_list* %call366 to %struct.word_list*
  br label %cond.end368

cond.false367:                                    ; preds = %land.lhs.true363, %for.end361
  %224 = load %struct.word_list*, %struct.word_list** %result, align 4
  br label %cond.end368

cond.end368:                                      ; preds = %cond.false367, %cond.true365
  %cond369 = phi %struct.word_list* [ %223, %cond.true365 ], [ %224, %cond.false367 ]
  store %struct.word_list* %cond369, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end368, %if.then84, %if.then
  %225 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %225
}

; Function Attrs: noinline nounwind
define internal i8* @string_extract_verbatim(i8* %string, i32 %slen, i32* %sindex, i8* %charlist, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %slen.addr = alloca i32, align 4
  %sindex.addr = alloca i32*, align 4
  %charlist.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %clen = alloca i32, align 4
  %wcharlist = alloca i32*, align 4
  %c = alloca i32, align 4
  %temp = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %wc = alloca i32, align 4
  %len = alloca i32, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength109 = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %slen, i32* %slen.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i8* %charlist, i8** %charlist.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i32, i32* %flags.addr, align 4
  %and = and i32 %1, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %charlist.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 39
  br i1 %cmp, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %charlist.addr, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %5 to i32
  %cmp5 = icmp eq i32 %conv4, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true2
  %6 = load i8*, i8** %string.addr, align 4
  %7 = load i32*, i32** %sindex.addr, align 4
  %call = call i8* @string_extract_single_quoted(i8* %6, i32* %7)
  store i8* %call, i8** %temp, align 4
  %8 = load i32*, i32** %sindex.addr, align 4
  %9 = load i32, i32* %8, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %8, align 4
  %10 = load i8*, i8** %temp, align 4
  store i8* %10, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %11 = load i32*, i32** %sindex.addr, align 4
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %i, align 4
  %13 = load i8*, i8** %charlist.addr, align 4
  %call7 = call i32 @strlen(i8* %13)
  store i32 %call7, i32* %clen, align 4
  store i32* null, i32** %wcharlist, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %if.then30, %if.then17, %if.end
  %14 = load i8*, i8** %string.addr, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %16 to i32
  store i32 %conv9, i32* %c, align 4
  %tobool10 = icmp ne i32 %conv9, 0
  br i1 %tobool10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i32, i32* %flags.addr, align 4
  %and11 = and i32 %17, 16
  %cmp12 = icmp eq i32 %and11, 0
  br i1 %cmp12, label %land.lhs.true14, label %if.else

land.lhs.true14:                                  ; preds = %while.body
  %18 = load i32, i32* %c, align 4
  %cmp15 = icmp eq i32 %18, 1
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %land.lhs.true14
  %19 = load i32, i32* %i, align 4
  %add = add nsw i32 %19, 2
  store i32 %add, i32* %i, align 4
  br label %while.cond

if.else:                                          ; preds = %land.lhs.true14, %while.body
  %20 = load i32, i32* %flags.addr, align 4
  %and18 = and i32 %20, 32
  %cmp19 = icmp eq i32 %and18, 0
  br i1 %cmp19, label %land.lhs.true21, label %if.end32

land.lhs.true21:                                  ; preds = %if.else
  %21 = load i32, i32* %c, align 4
  %cmp22 = icmp eq i32 %21, 1
  br i1 %cmp22, label %land.lhs.true24, label %if.end32

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %22 = load i8*, i8** %string.addr, align 4
  %23 = load i32, i32* %i, align 4
  %add25 = add nsw i32 %23, 1
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i32 %add25
  %24 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %24 to i32
  %cmp28 = icmp eq i32 %conv27, 127
  br i1 %cmp28, label %if.then30, label %if.end32

if.then30:                                        ; preds = %land.lhs.true24
  %25 = load i32, i32* %i, align 4
  %add31 = add nsw i32 %25, 2
  store i32 %add31, i32* %i, align 4
  br label %while.cond

if.end32:                                         ; preds = %land.lhs.true24, %land.lhs.true21, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  %call34 = call i32 @__ctype_get_mb_cur_max()
  %cmp35 = icmp ugt i32 %call34, 1
  br i1 %cmp35, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end33
  %26 = load i8*, i8** %string.addr, align 4
  %27 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i32, i32* %slen.addr, align 4
  %29 = load i32, i32* %i, align 4
  %sub = sub i32 %28, %29
  %call37 = call i32 @mblen(i8* %add.ptr, i32 %sub)
  br label %cond.end

cond.false:                                       ; preds = %if.end33
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call37, %cond.true ], [ 1, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  %30 = load i32, i32* %mblength, align 4
  %cmp38 = icmp ugt i32 %30, 1
  br i1 %cmp38, label %if.then40, label %if.else86

if.then40:                                        ; preds = %cond.end
  %31 = load i8*, i8** %string.addr, align 4
  %32 = load i32, i32* %i, align 4
  %add.ptr41 = getelementptr inbounds i8, i8* %31, i32 %32
  %33 = load i32, i32* %slen.addr, align 4
  %34 = load i32, i32* %i, align 4
  %sub42 = sub i32 %33, %34
  %call43 = call i32 @mbtowc(i32* %wc, i8* %add.ptr41, i32 %sub42)
  store i32 %call43, i32* %mblength, align 4
  %35 = load i32, i32* %mblength, align 4
  %cmp44 = icmp eq i32 %35, -1
  br i1 %cmp44, label %if.then48, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then40
  %36 = load i32, i32* %mblength, align 4
  %cmp46 = icmp eq i32 %36, -2
  br i1 %cmp46, label %if.then48, label %if.else67

if.then48:                                        ; preds = %lor.lhs.false, %if.then40
  %37 = load i32, i32* %c, align 4
  %tobool49 = icmp ne i32 %37, 0
  br i1 %tobool49, label %land.lhs.true50, label %lor.lhs.false58

land.lhs.true50:                                  ; preds = %if.then48
  %38 = load i32, i32* %c, align 4
  %39 = load i8*, i8** %charlist.addr, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %39, i32 0
  %40 = load i8, i8* %arrayidx51, align 1
  %conv52 = sext i8 %40 to i32
  %cmp53 = icmp eq i32 %38, %conv52
  br i1 %cmp53, label %land.lhs.true55, label %lor.lhs.false58

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %41 = load i8*, i8** %charlist.addr, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %41, i32 1
  %42 = load i8, i8* %arrayidx56, align 1
  %tobool57 = icmp ne i8 %42, 0
  br i1 %tobool57, label %lor.lhs.false58, label %if.then65

lor.lhs.false58:                                  ; preds = %land.lhs.true55, %land.lhs.true50, %if.then48
  %43 = load i32, i32* %c, align 4
  %tobool59 = icmp ne i32 %43, 0
  br i1 %tobool59, label %cond.true60, label %cond.false64

cond.true60:                                      ; preds = %lor.lhs.false58
  %44 = load i8*, i8** %charlist.addr, align 4
  %45 = load i32, i32* %c, align 4
  %call61 = call i8* @mbschr(i8* %44, i32 %45)
  %cmp62 = icmp ne i8* %call61, null
  br i1 %cmp62, label %if.then65, label %if.end66

cond.false64:                                     ; preds = %lor.lhs.false58
  br i1 false, label %if.then65, label %if.end66

if.then65:                                        ; preds = %cond.false64, %cond.true60, %land.lhs.true55
  br label %while.end

if.end66:                                         ; preds = %cond.false64, %cond.true60
  br label %if.end85

if.else67:                                        ; preds = %lor.lhs.false
  %46 = load i32*, i32** %wcharlist, align 4
  %cmp68 = icmp eq i32* %46, null
  br i1 %cmp68, label %if.then70, label %if.end80

if.then70:                                        ; preds = %if.else67
  %47 = load i32*, i32** %wcharlist, align 4
  %48 = load i8*, i8** %charlist.addr, align 4
  %call71 = call i32 @mbstowcs(i32* %47, i8* %48, i32 0)
  store i32 %call71, i32* %len, align 4
  %49 = load i32, i32* %len, align 4
  %cmp72 = icmp eq i32 %49, -1
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %if.then70
  store i32 0, i32* %len, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.then74, %if.then70
  %50 = load i32, i32* %len, align 4
  %add76 = add i32 %50, 1
  %mul = mul i32 4, %add76
  %call77 = call i8* @sh_xmalloc(i32 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1199)
  %51 = bitcast i8* %call77 to i32*
  store i32* %51, i32** %wcharlist, align 4
  %52 = load i32*, i32** %wcharlist, align 4
  %53 = load i8*, i8** %charlist.addr, align 4
  %54 = load i32, i32* %len, align 4
  %add78 = add i32 %54, 1
  %call79 = call i32 @mbstowcs(i32* %52, i8* %53, i32 %add78)
  br label %if.end80

if.end80:                                         ; preds = %if.end75, %if.else67
  %55 = load i32*, i32** %wcharlist, align 4
  %56 = load i32, i32* %wc, align 4
  %call81 = call i32* @wcschr(i32* %55, i32 %56)
  %tobool82 = icmp ne i32* %call81, null
  br i1 %tobool82, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end80
  br label %while.end

if.end84:                                         ; preds = %if.end80
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end66
  br label %if.end105

if.else86:                                        ; preds = %cond.end
  %57 = load i32, i32* %c, align 4
  %tobool87 = icmp ne i32 %57, 0
  br i1 %tobool87, label %land.lhs.true88, label %lor.lhs.false96

land.lhs.true88:                                  ; preds = %if.else86
  %58 = load i32, i32* %c, align 4
  %59 = load i8*, i8** %charlist.addr, align 4
  %arrayidx89 = getelementptr inbounds i8, i8* %59, i32 0
  %60 = load i8, i8* %arrayidx89, align 1
  %conv90 = sext i8 %60 to i32
  %cmp91 = icmp eq i32 %58, %conv90
  br i1 %cmp91, label %land.lhs.true93, label %lor.lhs.false96

land.lhs.true93:                                  ; preds = %land.lhs.true88
  %61 = load i8*, i8** %charlist.addr, align 4
  %arrayidx94 = getelementptr inbounds i8, i8* %61, i32 1
  %62 = load i8, i8* %arrayidx94, align 1
  %tobool95 = icmp ne i8 %62, 0
  br i1 %tobool95, label %lor.lhs.false96, label %if.then103

lor.lhs.false96:                                  ; preds = %land.lhs.true93, %land.lhs.true88, %if.else86
  %63 = load i32, i32* %c, align 4
  %tobool97 = icmp ne i32 %63, 0
  br i1 %tobool97, label %cond.true98, label %cond.false102

cond.true98:                                      ; preds = %lor.lhs.false96
  %64 = load i8*, i8** %charlist.addr, align 4
  %65 = load i32, i32* %c, align 4
  %call99 = call i8* @mbschr(i8* %64, i32 %65)
  %cmp100 = icmp ne i8* %call99, null
  br i1 %cmp100, label %if.then103, label %if.end104

cond.false102:                                    ; preds = %lor.lhs.false96
  br i1 false, label %if.then103, label %if.end104

if.then103:                                       ; preds = %cond.false102, %cond.true98, %land.lhs.true93
  br label %while.end

if.end104:                                        ; preds = %cond.false102, %cond.true98
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end85
  br label %do.body

do.body:                                          ; preds = %if.end105
  %66 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp106 = icmp sgt i32 %66, 1
  br i1 %cmp106, label %if.then108, label %if.else134

if.then108:                                       ; preds = %do.body
  %67 = load i8*, i8** %string.addr, align 4
  %68 = load i32, i32* %i, align 4
  %arrayidx110 = getelementptr inbounds i8, i8* %67, i32 %68
  %69 = load i8, i8* %arrayidx110, align 1
  %call111 = call i32 @is_basic(i8 signext %69)
  store i32 %call111, i32* %_f, align 4
  %70 = load i32, i32* %_f, align 4
  %tobool112 = icmp ne i32 %70, 0
  br i1 %tobool112, label %if.then113, label %if.else114

if.then113:                                       ; preds = %if.then108
  store i32 1, i32* %mblength109, align 4
  br label %if.end118

if.else114:                                       ; preds = %if.then108
  %71 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %72 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %71, i8* %72, i32 8, i32 4, i1 false)
  %73 = load i8*, i8** %string.addr, align 4
  %74 = load i32, i32* %i, align 4
  %add.ptr115 = getelementptr inbounds i8, i8* %73, i32 %74
  %75 = load i32, i32* %slen.addr, align 4
  %76 = load i32, i32* %i, align 4
  %sub116 = sub i32 %75, %76
  %call117 = call i32 @mbrlen(i8* %add.ptr115, i32 %sub116, %struct.__mbstate_t* %state)
  store i32 %call117, i32* %mblength109, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.else114, %if.then113
  %77 = load i32, i32* %mblength109, align 4
  %cmp119 = icmp eq i32 %77, -2
  br i1 %cmp119, label %if.then124, label %lor.lhs.false121

lor.lhs.false121:                                 ; preds = %if.end118
  %78 = load i32, i32* %mblength109, align 4
  %cmp122 = icmp eq i32 %78, -1
  br i1 %cmp122, label %if.then124, label %if.else125

if.then124:                                       ; preds = %lor.lhs.false121, %if.end118
  %79 = bitcast %struct.__mbstate_t* %state to i8*
  %80 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %79, i8* %80, i32 8, i32 4, i1 false)
  %81 = load i32, i32* %i, align 4
  %inc = add nsw i32 %81, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end133

if.else125:                                       ; preds = %lor.lhs.false121
  %82 = load i32, i32* %mblength109, align 4
  %cmp126 = icmp eq i32 %82, 0
  br i1 %cmp126, label %if.then128, label %if.else130

if.then128:                                       ; preds = %if.else125
  %83 = load i32, i32* %i, align 4
  %inc129 = add nsw i32 %83, 1
  store i32 %inc129, i32* %i, align 4
  br label %if.end132

if.else130:                                       ; preds = %if.else125
  %84 = load i32, i32* %mblength109, align 4
  %85 = load i32, i32* %i, align 4
  %add131 = add i32 %85, %84
  store i32 %add131, i32* %i, align 4
  br label %if.end132

if.end132:                                        ; preds = %if.else130, %if.then128
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then124
  br label %if.end136

if.else134:                                       ; preds = %do.body
  %86 = load i32, i32* %i, align 4
  %inc135 = add nsw i32 %86, 1
  store i32 %inc135, i32* %i, align 4
  br label %if.end136

if.end136:                                        ; preds = %if.else134, %if.end133
  br label %do.end

do.end:                                           ; preds = %if.end136
  br label %while.cond

while.end:                                        ; preds = %if.then103, %if.then83, %if.then65, %while.cond
  br label %do.body137

do.body137:                                       ; preds = %while.end
  %87 = load i32*, i32** %wcharlist, align 4
  %tobool138 = icmp ne i32* %87, null
  br i1 %tobool138, label %if.then139, label %if.end140

if.then139:                                       ; preds = %do.body137
  %88 = load i32*, i32** %wcharlist, align 4
  %89 = bitcast i32* %88 to i8*
  call void @sh_xfree(i8* %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 1216)
  br label %if.end140

if.end140:                                        ; preds = %if.then139, %do.body137
  br label %do.end141

do.end141:                                        ; preds = %if.end140
  %90 = load i8*, i8** %string.addr, align 4
  %91 = load i32*, i32** %sindex.addr, align 4
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* %i, align 4
  %call142 = call i8* @substring(i8* %90, i32 %92, i32 %93)
  store i8* %call142, i8** %temp, align 4
  %94 = load i32, i32* %i, align 4
  %95 = load i32*, i32** %sindex.addr, align 4
  store i32 %94, i32* %95, align 4
  %96 = load i8*, i8** %temp, align 4
  store i8* %96, i8** %retval, align 4
  br label %return

return:                                           ; preds = %do.end141, %if.then
  %97 = load i8*, i8** %retval, align 4
  ret i8* %97
}

declare %struct.word_desc* @alloc_word_desc() #1

; Function Attrs: noinline nounwind
define internal i8* @make_quoted_char(i32 %c) #0 {
entry:
  %c.addr = alloca i32, align 4
  %temp = alloca i8*, align 4
  store i32 %c, i32* %c.addr, align 4
  %call = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3973)
  store i8* %call, i8** %temp, align 4
  %0 = load i32, i32* %c.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %temp, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 0
  store i8 127, i8* %arrayidx, align 1
  %2 = load i8*, i8** %temp, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i32 1
  store i8 0, i8* %arrayidx1, align 1
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %temp, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i32 0
  store i8 1, i8* %arrayidx2, align 1
  %4 = load i32, i32* %c.addr, align 4
  %conv = trunc i32 %4 to i8
  %5 = load i8*, i8** %temp, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i32 1
  store i8 %conv, i8* %arrayidx3, align 1
  %6 = load i8*, i8** %temp, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i32 2
  store i8 0, i8* %arrayidx4, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i8*, i8** %temp, align 4
  ret i8* %7
}

; Function Attrs: noinline nounwind
define i8* @remove_quoted_nulls(i8* %string) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %slen = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %prev_i = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i8* @strchr(i8* %1, i32 127)
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %string.addr, align 4
  store i8* %2, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %string.addr, align 4
  %call1 = call i32 @strlen(i8* %3)
  store i32 %call1, i32* %slen, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end58, %if.then16, %if.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %slen, align 4
  %cmp2 = icmp ult i32 %4, %5
  br i1 %cmp2, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i8*, i8** %string.addr, align 4
  %7 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %6, i32 %7
  %8 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %8 to i32
  %cmp3 = icmp eq i32 %conv, 1
  br i1 %cmp3, label %if.then5, label %if.else

if.then5:                                         ; preds = %while.body
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  %10 = load i8*, i8** %string.addr, align 4
  %11 = load i32, i32* %j, align 4
  %inc6 = add nsw i32 %11, 1
  store i32 %inc6, i32* %j, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %10, i32 %11
  store i8 1, i8* %arrayidx7, align 1
  %12 = load i32, i32* %i, align 4
  %13 = load i32, i32* %slen, align 4
  %cmp8 = icmp eq i32 %12, %13
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then5
  br label %while.end

if.end11:                                         ; preds = %if.then5
  br label %if.end19

if.else:                                          ; preds = %while.body
  %14 = load i8*, i8** %string.addr, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %16 to i32
  %cmp14 = icmp eq i32 %conv13, 127
  br i1 %cmp14, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.else
  %17 = load i32, i32* %i, align 4
  %inc17 = add nsw i32 %17, 1
  store i32 %inc17, i32* %i, align 4
  br label %while.cond

if.end18:                                         ; preds = %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end11
  %18 = load i32, i32* %i, align 4
  store i32 %18, i32* %prev_i, align 4
  br label %do.body

do.body:                                          ; preds = %if.end19
  %19 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp20 = icmp sgt i32 %19, 1
  br i1 %cmp20, label %if.then22, label %if.else43

if.then22:                                        ; preds = %do.body
  %20 = load i8*, i8** %string.addr, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %arrayidx23, align 1
  %call24 = call i32 @is_basic(i8 signext %22)
  store i32 %call24, i32* %_f, align 4
  %23 = load i32, i32* %_f, align 4
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then22
  store i32 1, i32* %mblength, align 4
  br label %if.end28

if.else26:                                        ; preds = %if.then22
  %24 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %25 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %24, i8* %25, i32 8, i32 4, i1 false)
  %26 = load i8*, i8** %string.addr, align 4
  %27 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i32, i32* %slen, align 4
  %29 = load i32, i32* %i, align 4
  %sub = sub i32 %28, %29
  %call27 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call27, i32* %mblength, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then25
  %30 = load i32, i32* %mblength, align 4
  %cmp29 = icmp eq i32 %30, -2
  br i1 %cmp29, label %if.then33, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end28
  %31 = load i32, i32* %mblength, align 4
  %cmp31 = icmp eq i32 %31, -1
  br i1 %cmp31, label %if.then33, label %if.else35

if.then33:                                        ; preds = %lor.lhs.false, %if.end28
  %32 = bitcast %struct.__mbstate_t* %state to i8*
  %33 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %32, i8* %33, i32 8, i32 4, i1 false)
  %34 = load i32, i32* %i, align 4
  %inc34 = add nsw i32 %34, 1
  store i32 %inc34, i32* %i, align 4
  br label %if.end42

if.else35:                                        ; preds = %lor.lhs.false
  %35 = load i32, i32* %mblength, align 4
  %cmp36 = icmp eq i32 %35, 0
  br i1 %cmp36, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.else35
  %36 = load i32, i32* %i, align 4
  %inc39 = add nsw i32 %36, 1
  store i32 %inc39, i32* %i, align 4
  br label %if.end41

if.else40:                                        ; preds = %if.else35
  %37 = load i32, i32* %mblength, align 4
  %38 = load i32, i32* %i, align 4
  %add = add i32 %38, %37
  store i32 %add, i32* %i, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then38
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then33
  br label %if.end45

if.else43:                                        ; preds = %do.body
  %39 = load i32, i32* %i, align 4
  %inc44 = add nsw i32 %39, 1
  store i32 %inc44, i32* %i, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.end42
  br label %do.end

do.end:                                           ; preds = %if.end45
  %40 = load i32, i32* %j, align 4
  %41 = load i32, i32* %prev_i, align 4
  %cmp46 = icmp slt i32 %40, %41
  br i1 %cmp46, label %if.then48, label %if.else57

if.then48:                                        ; preds = %do.end
  br label %do.body49

do.body49:                                        ; preds = %do.cond, %if.then48
  %42 = load i8*, i8** %string.addr, align 4
  %43 = load i32, i32* %prev_i, align 4
  %inc50 = add nsw i32 %43, 1
  store i32 %inc50, i32* %prev_i, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %42, i32 %43
  %44 = load i8, i8* %arrayidx51, align 1
  %45 = load i8*, i8** %string.addr, align 4
  %46 = load i32, i32* %j, align 4
  %inc52 = add nsw i32 %46, 1
  store i32 %inc52, i32* %j, align 4
  %arrayidx53 = getelementptr inbounds i8, i8* %45, i32 %46
  store i8 %44, i8* %arrayidx53, align 1
  br label %do.cond

do.cond:                                          ; preds = %do.body49
  %47 = load i32, i32* %prev_i, align 4
  %48 = load i32, i32* %i, align 4
  %cmp54 = icmp slt i32 %47, %48
  br i1 %cmp54, label %do.body49, label %do.end56

do.end56:                                         ; preds = %do.cond
  br label %if.end58

if.else57:                                        ; preds = %do.end
  %49 = load i32, i32* %i, align 4
  store i32 %49, i32* %j, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %do.end56
  br label %while.cond

while.end:                                        ; preds = %if.then10, %while.cond
  %50 = load i8*, i8** %string.addr, align 4
  %51 = load i32, i32* %j, align 4
  %arrayidx59 = getelementptr inbounds i8, i8* %50, i32 %51
  store i8 0, i8* %arrayidx59, align 1
  %52 = load i8*, i8** %string.addr, align 4
  store i8* %52, i8** %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then
  %53 = load i8*, i8** %retval, align 4
  ret i8* %53
}

; Function Attrs: noinline nounwind
define i8* @get_word_from_string(i8** %stringp, i8* %separators, i8** %endptr) #0 {
entry:
  %retval = alloca i8*, align 4
  %stringp.addr = alloca i8**, align 4
  %separators.addr = alloca i8*, align 4
  %endptr.addr = alloca i8**, align 4
  %s = alloca i8*, align 4
  %current_word = alloca i8*, align 4
  %sindex = alloca i32, align 4
  %sh_style_split = alloca i32, align 4
  %whitesep = alloca i32, align 4
  %xflags = alloca i32, align 4
  %local_cmap = alloca [256 x i8], align 1
  %slen = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8** %stringp, i8*** %stringp.addr, align 4
  store i8* %separators, i8** %separators.addr, align 4
  store i8** %endptr, i8*** %endptr.addr, align 4
  %0 = load i8**, i8*** %stringp.addr, align 4
  %tobool = icmp ne i8** %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8**, i8*** %stringp.addr, align 4
  %2 = load i8*, i8** %1, align 4
  %tobool1 = icmp ne i8* %2, null
  br i1 %tobool1, label %lor.lhs.false2, label %if.then

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i8**, i8*** %stringp.addr, align 4
  %4 = load i8*, i8** %3, align 4
  %5 = load i8, i8* %4, align 1
  %tobool3 = icmp ne i8 %5, 0
  br i1 %tobool3, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  %6 = load i8*, i8** %separators.addr, align 4
  %tobool4 = icmp ne i8* %6, null
  br i1 %tobool4, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %if.end
  %7 = load i8*, i8** %separators.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %7, i32 0
  %8 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %8 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %land.lhs.true6, label %land.end

land.lhs.true6:                                   ; preds = %land.lhs.true
  %9 = load i8*, i8** %separators.addr, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i32 1
  %10 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %10 to i32
  %cmp9 = icmp eq i32 %conv8, 9
  br i1 %cmp9, label %land.lhs.true11, label %land.end

land.lhs.true11:                                  ; preds = %land.lhs.true6
  %11 = load i8*, i8** %separators.addr, align 4
  %arrayidx12 = getelementptr inbounds i8, i8* %11, i32 2
  %12 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %12 to i32
  %cmp14 = icmp eq i32 %conv13, 10
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true11
  %13 = load i8*, i8** %separators.addr, align 4
  %arrayidx16 = getelementptr inbounds i8, i8* %13, i32 3
  %14 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %14 to i32
  %cmp18 = icmp eq i32 %conv17, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true11, %land.lhs.true6, %land.lhs.true, %if.end
  %15 = phi i1 [ false, %land.lhs.true11 ], [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %if.end ], [ %cmp18, %land.rhs ]
  %land.ext = zext i1 %15 to i32
  store i32 %land.ext, i32* %sh_style_split, align 4
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %local_cmap, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %arraydecay, i8 0, i32 256, i32 1, i1 false)
  store i32 0, i32* %xflags, align 4
  %16 = load i8*, i8** %separators.addr, align 4
  store i8* %16, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %land.end
  %17 = load i8*, i8** %s, align 4
  %tobool20 = icmp ne i8* %17, null
  br i1 %tobool20, label %land.rhs21, label %land.end24

land.rhs21:                                       ; preds = %for.cond
  %18 = load i8*, i8** %s, align 4
  %19 = load i8, i8* %18, align 1
  %conv22 = sext i8 %19 to i32
  %tobool23 = icmp ne i32 %conv22, 0
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %tobool23, %land.rhs21 ]
  br i1 %20, label %for.body, label %for.end

for.body:                                         ; preds = %land.end24
  %21 = load i8*, i8** %s, align 4
  %22 = load i8, i8* %21, align 1
  %conv26 = sext i8 %22 to i32
  %cmp27 = icmp eq i32 %conv26, 1
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %for.body
  %23 = load i32, i32* %xflags, align 4
  %or = or i32 %23, 16
  store i32 %or, i32* %xflags, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %for.body
  %24 = load i8*, i8** %s, align 4
  %25 = load i8, i8* %24, align 1
  %conv31 = sext i8 %25 to i32
  %cmp32 = icmp eq i32 %conv31, 127
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end30
  %26 = load i32, i32* %xflags, align 4
  %or35 = or i32 %26, 32
  store i32 %or35, i32* %xflags, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end30
  %27 = load i8*, i8** %s, align 4
  %28 = load i8, i8* %27, align 1
  %idxprom = zext i8 %28 to i32
  %arrayidx37 = getelementptr inbounds [256 x i8], [256 x i8]* %local_cmap, i32 0, i32 %idxprom
  store i8 1, i8* %arrayidx37, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end36
  %29 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end24
  %30 = load i8**, i8*** %stringp.addr, align 4
  %31 = load i8*, i8** %30, align 4
  store i8* %31, i8** %s, align 4
  store i32 0, i32* %slen, align 4
  %32 = load i32, i32* %sh_style_split, align 4
  %tobool38 = icmp ne i32 %32, 0
  br i1 %tobool38, label %if.then42, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %for.end
  %33 = load i8*, i8** %separators.addr, align 4
  %cmp40 = icmp eq i8* %33, null
  br i1 %cmp40, label %if.then42, label %if.end76

if.then42:                                        ; preds = %lor.lhs.false39, %for.end
  br label %for.cond43

for.cond43:                                       ; preds = %for.inc67, %if.then42
  %34 = load i8*, i8** %s, align 4
  %35 = load i8, i8* %34, align 1
  %conv44 = sext i8 %35 to i32
  %tobool45 = icmp ne i32 %conv44, 0
  br i1 %tobool45, label %land.lhs.true46, label %land.end64

land.lhs.true46:                                  ; preds = %for.cond43
  %36 = load i8*, i8** %s, align 4
  %37 = load i8, i8* %36, align 1
  %conv47 = sext i8 %37 to i32
  %cmp48 = icmp eq i32 %conv47, 32
  br i1 %cmp48, label %land.rhs58, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %land.lhs.true46
  %38 = load i8*, i8** %s, align 4
  %39 = load i8, i8* %38, align 1
  %conv51 = sext i8 %39 to i32
  %cmp52 = icmp eq i32 %conv51, 9
  br i1 %cmp52, label %land.rhs58, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %lor.lhs.false50
  %40 = load i8*, i8** %s, align 4
  %41 = load i8, i8* %40, align 1
  %conv55 = sext i8 %41 to i32
  %cmp56 = icmp eq i32 %conv55, 10
  br i1 %cmp56, label %land.rhs58, label %land.end64

land.rhs58:                                       ; preds = %lor.lhs.false54, %lor.lhs.false50, %land.lhs.true46
  %42 = load i8*, i8** %s, align 4
  %43 = load i8, i8* %42, align 1
  %idxprom59 = zext i8 %43 to i32
  %arrayidx60 = getelementptr inbounds [256 x i8], [256 x i8]* %local_cmap, i32 0, i32 %idxprom59
  %44 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %44 to i32
  %cmp62 = icmp ne i32 %conv61, 0
  br label %land.end64

land.end64:                                       ; preds = %land.rhs58, %lor.lhs.false54, %for.cond43
  %45 = phi i1 [ false, %lor.lhs.false54 ], [ false, %for.cond43 ], [ %cmp62, %land.rhs58 ]
  br i1 %45, label %for.body66, label %for.end69

for.body66:                                       ; preds = %land.end64
  br label %for.inc67

for.inc67:                                        ; preds = %for.body66
  %46 = load i8*, i8** %s, align 4
  %incdec.ptr68 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr68, i8** %s, align 4
  br label %for.cond43

for.end69:                                        ; preds = %land.end64
  %47 = load i8*, i8** %s, align 4
  %48 = load i8, i8* %47, align 1
  %tobool70 = icmp ne i8 %48, 0
  br i1 %tobool70, label %if.end75, label %if.then71

if.then71:                                        ; preds = %for.end69
  %49 = load i8*, i8** %s, align 4
  %50 = load i8**, i8*** %stringp.addr, align 4
  store i8* %49, i8** %50, align 4
  %51 = load i8**, i8*** %endptr.addr, align 4
  %tobool72 = icmp ne i8** %51, null
  br i1 %tobool72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.then71
  %52 = load i8*, i8** %s, align 4
  %53 = load i8**, i8*** %endptr.addr, align 4
  store i8* %52, i8** %53, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %if.then71
  store i8* null, i8** %retval, align 4
  br label %return

if.end75:                                         ; preds = %for.end69
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %lor.lhs.false39
  store i32 0, i32* %sindex, align 4
  %54 = load i8*, i8** %s, align 4
  %tobool77 = icmp ne i8* %54, null
  br i1 %tobool77, label %land.lhs.true78, label %cond.false93

land.lhs.true78:                                  ; preds = %if.end76
  %55 = load i8*, i8** %s, align 4
  %arrayidx79 = getelementptr inbounds i8, i8* %55, i32 0
  %56 = load i8, i8* %arrayidx79, align 1
  %conv80 = sext i8 %56 to i32
  %tobool81 = icmp ne i32 %conv80, 0
  br i1 %tobool81, label %cond.true, label %cond.false93

cond.true:                                        ; preds = %land.lhs.true78
  %57 = load i8*, i8** %s, align 4
  %arrayidx82 = getelementptr inbounds i8, i8* %57, i32 1
  %58 = load i8, i8* %arrayidx82, align 1
  %conv83 = sext i8 %58 to i32
  %tobool84 = icmp ne i32 %conv83, 0
  br i1 %tobool84, label %cond.true85, label %cond.false90

cond.true85:                                      ; preds = %cond.true
  %59 = load i8*, i8** %s, align 4
  %arrayidx86 = getelementptr inbounds i8, i8* %59, i32 2
  %60 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %60 to i32
  %tobool88 = icmp ne i32 %conv87, 0
  br i1 %tobool88, label %cond.true89, label %cond.false

cond.true89:                                      ; preds = %cond.true85
  %61 = load i8*, i8** %s, align 4
  %call = call i32 @strlen(i8* %61)
  br label %cond.end

cond.false:                                       ; preds = %cond.true85
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true89
  %cond = phi i32 [ %call, %cond.true89 ], [ 2, %cond.false ]
  br label %cond.end91

cond.false90:                                     ; preds = %cond.true
  br label %cond.end91

cond.end91:                                       ; preds = %cond.false90, %cond.end
  %cond92 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false90 ]
  br label %cond.end94

cond.false93:                                     ; preds = %land.lhs.true78, %if.end76
  br label %cond.end94

cond.end94:                                       ; preds = %cond.false93, %cond.end91
  %cond95 = phi i32 [ %cond92, %cond.end91 ], [ 0, %cond.false93 ]
  store i32 %cond95, i32* %slen, align 4
  %62 = load i8*, i8** %s, align 4
  %63 = load i32, i32* %slen, align 4
  %64 = load i8*, i8** %separators.addr, align 4
  %65 = load i32, i32* %xflags, align 4
  %call96 = call i8* @string_extract_verbatim(i8* %62, i32 %63, i32* %sindex, i8* %64, i32 %65)
  store i8* %call96, i8** %current_word, align 4
  %66 = load i8**, i8*** %endptr.addr, align 4
  %tobool97 = icmp ne i8** %66, null
  br i1 %tobool97, label %if.then98, label %if.end99

if.then98:                                        ; preds = %cond.end94
  %67 = load i8*, i8** %s, align 4
  %68 = load i32, i32* %sindex, align 4
  %add.ptr = getelementptr inbounds i8, i8* %67, i32 %68
  %69 = load i8**, i8*** %endptr.addr, align 4
  store i8* %add.ptr, i8** %69, align 4
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %cond.end94
  %70 = load i8*, i8** %s, align 4
  %71 = load i32, i32* %sindex, align 4
  %arrayidx100 = getelementptr inbounds i8, i8* %70, i32 %71
  %72 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %72 to i32
  %tobool102 = icmp ne i32 %conv101, 0
  br i1 %tobool102, label %land.rhs103, label %land.end117

land.rhs103:                                      ; preds = %if.end99
  %73 = load i8*, i8** %s, align 4
  %74 = load i32, i32* %sindex, align 4
  %arrayidx104 = getelementptr inbounds i8, i8* %73, i32 %74
  %75 = load i8, i8* %arrayidx104, align 1
  %conv105 = sext i8 %75 to i32
  %cmp106 = icmp eq i32 %conv105, 32
  br i1 %cmp106, label %lor.end, label %lor.lhs.false108

lor.lhs.false108:                                 ; preds = %land.rhs103
  %76 = load i8*, i8** %s, align 4
  %77 = load i32, i32* %sindex, align 4
  %arrayidx109 = getelementptr inbounds i8, i8* %76, i32 %77
  %78 = load i8, i8* %arrayidx109, align 1
  %conv110 = sext i8 %78 to i32
  %cmp111 = icmp eq i32 %conv110, 9
  br i1 %cmp111, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false108
  %79 = load i8*, i8** %s, align 4
  %80 = load i32, i32* %sindex, align 4
  %arrayidx113 = getelementptr inbounds i8, i8* %79, i32 %80
  %81 = load i8, i8* %arrayidx113, align 1
  %conv114 = sext i8 %81 to i32
  %cmp115 = icmp eq i32 %conv114, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false108, %land.rhs103
  %82 = phi i1 [ true, %lor.lhs.false108 ], [ true, %land.rhs103 ], [ %cmp115, %lor.rhs ]
  br label %land.end117

land.end117:                                      ; preds = %lor.end, %if.end99
  %83 = phi i1 [ false, %if.end99 ], [ %82, %lor.end ]
  %land.ext118 = zext i1 %83 to i32
  store i32 %land.ext118, i32* %whitesep, align 4
  %84 = load i8*, i8** %s, align 4
  %85 = load i32, i32* %sindex, align 4
  %arrayidx119 = getelementptr inbounds i8, i8* %84, i32 %85
  %86 = load i8, i8* %arrayidx119, align 1
  %tobool120 = icmp ne i8 %86, 0
  br i1 %tobool120, label %if.then121, label %if.end149

if.then121:                                       ; preds = %land.end117
  %87 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %87, i8 0, i32 8, i32 4, i1 false)
  br label %do.body

do.body:                                          ; preds = %if.then121
  %88 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp122 = icmp sgt i32 %88, 1
  br i1 %cmp122, label %if.then124, label %if.else146

if.then124:                                       ; preds = %do.body
  %89 = load i8*, i8** %s, align 4
  %90 = load i32, i32* %sindex, align 4
  %arrayidx125 = getelementptr inbounds i8, i8* %89, i32 %90
  %91 = load i8, i8* %arrayidx125, align 1
  %call126 = call i32 @is_basic(i8 signext %91)
  store i32 %call126, i32* %_f, align 4
  %92 = load i32, i32* %_f, align 4
  %tobool127 = icmp ne i32 %92, 0
  br i1 %tobool127, label %if.then128, label %if.else

if.then128:                                       ; preds = %if.then124
  store i32 1, i32* %mblength, align 4
  br label %if.end131

if.else:                                          ; preds = %if.then124
  %93 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %94 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %93, i8* %94, i32 8, i32 4, i1 false)
  %95 = load i8*, i8** %s, align 4
  %96 = load i32, i32* %sindex, align 4
  %add.ptr129 = getelementptr inbounds i8, i8* %95, i32 %96
  %97 = load i32, i32* %slen, align 4
  %98 = load i32, i32* %sindex, align 4
  %sub = sub i32 %97, %98
  %call130 = call i32 @mbrlen(i8* %add.ptr129, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call130, i32* %mblength, align 4
  br label %if.end131

if.end131:                                        ; preds = %if.else, %if.then128
  %99 = load i32, i32* %mblength, align 4
  %cmp132 = icmp eq i32 %99, -2
  br i1 %cmp132, label %if.then137, label %lor.lhs.false134

lor.lhs.false134:                                 ; preds = %if.end131
  %100 = load i32, i32* %mblength, align 4
  %cmp135 = icmp eq i32 %100, -1
  br i1 %cmp135, label %if.then137, label %if.else138

if.then137:                                       ; preds = %lor.lhs.false134, %if.end131
  %101 = bitcast %struct.__mbstate_t* %state to i8*
  %102 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %101, i8* %102, i32 8, i32 4, i1 false)
  %103 = load i32, i32* %sindex, align 4
  %inc = add nsw i32 %103, 1
  store i32 %inc, i32* %sindex, align 4
  br label %if.end145

if.else138:                                       ; preds = %lor.lhs.false134
  %104 = load i32, i32* %mblength, align 4
  %cmp139 = icmp eq i32 %104, 0
  br i1 %cmp139, label %if.then141, label %if.else143

if.then141:                                       ; preds = %if.else138
  %105 = load i32, i32* %sindex, align 4
  %inc142 = add nsw i32 %105, 1
  store i32 %inc142, i32* %sindex, align 4
  br label %if.end144

if.else143:                                       ; preds = %if.else138
  %106 = load i32, i32* %mblength, align 4
  %107 = load i32, i32* %sindex, align 4
  %add = add i32 %107, %106
  store i32 %add, i32* %sindex, align 4
  br label %if.end144

if.end144:                                        ; preds = %if.else143, %if.then141
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then137
  br label %if.end148

if.else146:                                       ; preds = %do.body
  %108 = load i32, i32* %sindex, align 4
  %inc147 = add nsw i32 %108, 1
  store i32 %inc147, i32* %sindex, align 4
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.end145
  br label %do.end

do.end:                                           ; preds = %if.end148
  br label %if.end149

if.end149:                                        ; preds = %do.end, %land.end117
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end149
  %109 = load i8*, i8** %s, align 4
  %110 = load i32, i32* %sindex, align 4
  %arrayidx150 = getelementptr inbounds i8, i8* %109, i32 %110
  %111 = load i8, i8* %arrayidx150, align 1
  %conv151 = sext i8 %111 to i32
  %tobool152 = icmp ne i32 %conv151, 0
  br i1 %tobool152, label %land.lhs.true153, label %land.end175

land.lhs.true153:                                 ; preds = %while.cond
  %112 = load i8*, i8** %s, align 4
  %113 = load i32, i32* %sindex, align 4
  %arrayidx154 = getelementptr inbounds i8, i8* %112, i32 %113
  %114 = load i8, i8* %arrayidx154, align 1
  %conv155 = sext i8 %114 to i32
  %cmp156 = icmp eq i32 %conv155, 32
  br i1 %cmp156, label %land.rhs168, label %lor.lhs.false158

lor.lhs.false158:                                 ; preds = %land.lhs.true153
  %115 = load i8*, i8** %s, align 4
  %116 = load i32, i32* %sindex, align 4
  %arrayidx159 = getelementptr inbounds i8, i8* %115, i32 %116
  %117 = load i8, i8* %arrayidx159, align 1
  %conv160 = sext i8 %117 to i32
  %cmp161 = icmp eq i32 %conv160, 9
  br i1 %cmp161, label %land.rhs168, label %lor.lhs.false163

lor.lhs.false163:                                 ; preds = %lor.lhs.false158
  %118 = load i8*, i8** %s, align 4
  %119 = load i32, i32* %sindex, align 4
  %arrayidx164 = getelementptr inbounds i8, i8* %118, i32 %119
  %120 = load i8, i8* %arrayidx164, align 1
  %conv165 = sext i8 %120 to i32
  %cmp166 = icmp eq i32 %conv165, 10
  br i1 %cmp166, label %land.rhs168, label %land.end175

land.rhs168:                                      ; preds = %lor.lhs.false163, %lor.lhs.false158, %land.lhs.true153
  %121 = load i8*, i8** %s, align 4
  %122 = load i32, i32* %sindex, align 4
  %arrayidx169 = getelementptr inbounds i8, i8* %121, i32 %122
  %123 = load i8, i8* %arrayidx169, align 1
  %idxprom170 = zext i8 %123 to i32
  %arrayidx171 = getelementptr inbounds [256 x i8], [256 x i8]* %local_cmap, i32 0, i32 %idxprom170
  %124 = load i8, i8* %arrayidx171, align 1
  %conv172 = zext i8 %124 to i32
  %cmp173 = icmp ne i32 %conv172, 0
  br label %land.end175

land.end175:                                      ; preds = %land.rhs168, %lor.lhs.false163, %while.cond
  %125 = phi i1 [ false, %lor.lhs.false163 ], [ false, %while.cond ], [ %cmp173, %land.rhs168 ]
  br i1 %125, label %while.body, label %while.end

while.body:                                       ; preds = %land.end175
  %126 = load i32, i32* %sindex, align 4
  %inc177 = add nsw i32 %126, 1
  store i32 %inc177, i32* %sindex, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end175
  %127 = load i8*, i8** %s, align 4
  %128 = load i32, i32* %sindex, align 4
  %arrayidx178 = getelementptr inbounds i8, i8* %127, i32 %128
  %129 = load i8, i8* %arrayidx178, align 1
  %conv179 = sext i8 %129 to i32
  %tobool180 = icmp ne i32 %conv179, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end238

land.lhs.true181:                                 ; preds = %while.end
  %130 = load i32, i32* %whitesep, align 4
  %tobool182 = icmp ne i32 %130, 0
  br i1 %tobool182, label %land.lhs.true183, label %if.end238

land.lhs.true183:                                 ; preds = %land.lhs.true181
  %131 = load i8*, i8** %s, align 4
  %132 = load i32, i32* %sindex, align 4
  %arrayidx184 = getelementptr inbounds i8, i8* %131, i32 %132
  %133 = load i8, i8* %arrayidx184, align 1
  %idxprom185 = zext i8 %133 to i32
  %arrayidx186 = getelementptr inbounds [256 x i8], [256 x i8]* %local_cmap, i32 0, i32 %idxprom185
  %134 = load i8, i8* %arrayidx186, align 1
  %conv187 = zext i8 %134 to i32
  %cmp188 = icmp ne i32 %conv187, 0
  br i1 %cmp188, label %land.lhs.true190, label %if.end238

land.lhs.true190:                                 ; preds = %land.lhs.true183
  %135 = load i8*, i8** %s, align 4
  %136 = load i32, i32* %sindex, align 4
  %arrayidx191 = getelementptr inbounds i8, i8* %135, i32 %136
  %137 = load i8, i8* %arrayidx191, align 1
  %conv192 = sext i8 %137 to i32
  %cmp193 = icmp eq i32 %conv192, 32
  br i1 %cmp193, label %if.end238, label %lor.lhs.false195

lor.lhs.false195:                                 ; preds = %land.lhs.true190
  %138 = load i8*, i8** %s, align 4
  %139 = load i32, i32* %sindex, align 4
  %arrayidx196 = getelementptr inbounds i8, i8* %138, i32 %139
  %140 = load i8, i8* %arrayidx196, align 1
  %conv197 = sext i8 %140 to i32
  %cmp198 = icmp eq i32 %conv197, 9
  br i1 %cmp198, label %if.end238, label %lor.lhs.false200

lor.lhs.false200:                                 ; preds = %lor.lhs.false195
  %141 = load i8*, i8** %s, align 4
  %142 = load i32, i32* %sindex, align 4
  %arrayidx201 = getelementptr inbounds i8, i8* %141, i32 %142
  %143 = load i8, i8* %arrayidx201, align 1
  %conv202 = sext i8 %143 to i32
  %cmp203 = icmp eq i32 %conv202, 10
  br i1 %cmp203, label %if.end238, label %if.then205

if.then205:                                       ; preds = %lor.lhs.false200
  %144 = load i32, i32* %sindex, align 4
  %inc206 = add nsw i32 %144, 1
  store i32 %inc206, i32* %sindex, align 4
  br label %while.cond207

while.cond207:                                    ; preds = %while.body235, %if.then205
  %145 = load i8*, i8** %s, align 4
  %146 = load i32, i32* %sindex, align 4
  %arrayidx208 = getelementptr inbounds i8, i8* %145, i32 %146
  %147 = load i8, i8* %arrayidx208, align 1
  %conv209 = sext i8 %147 to i32
  %tobool210 = icmp ne i32 %conv209, 0
  br i1 %tobool210, label %land.lhs.true211, label %land.end233

land.lhs.true211:                                 ; preds = %while.cond207
  %148 = load i8*, i8** %s, align 4
  %149 = load i32, i32* %sindex, align 4
  %arrayidx212 = getelementptr inbounds i8, i8* %148, i32 %149
  %150 = load i8, i8* %arrayidx212, align 1
  %conv213 = sext i8 %150 to i32
  %cmp214 = icmp eq i32 %conv213, 32
  br i1 %cmp214, label %land.rhs226, label %lor.lhs.false216

lor.lhs.false216:                                 ; preds = %land.lhs.true211
  %151 = load i8*, i8** %s, align 4
  %152 = load i32, i32* %sindex, align 4
  %arrayidx217 = getelementptr inbounds i8, i8* %151, i32 %152
  %153 = load i8, i8* %arrayidx217, align 1
  %conv218 = sext i8 %153 to i32
  %cmp219 = icmp eq i32 %conv218, 9
  br i1 %cmp219, label %land.rhs226, label %lor.lhs.false221

lor.lhs.false221:                                 ; preds = %lor.lhs.false216
  %154 = load i8*, i8** %s, align 4
  %155 = load i32, i32* %sindex, align 4
  %arrayidx222 = getelementptr inbounds i8, i8* %154, i32 %155
  %156 = load i8, i8* %arrayidx222, align 1
  %conv223 = sext i8 %156 to i32
  %cmp224 = icmp eq i32 %conv223, 10
  br i1 %cmp224, label %land.rhs226, label %land.end233

land.rhs226:                                      ; preds = %lor.lhs.false221, %lor.lhs.false216, %land.lhs.true211
  %157 = load i8*, i8** %s, align 4
  %158 = load i32, i32* %sindex, align 4
  %arrayidx227 = getelementptr inbounds i8, i8* %157, i32 %158
  %159 = load i8, i8* %arrayidx227, align 1
  %idxprom228 = zext i8 %159 to i32
  %arrayidx229 = getelementptr inbounds [256 x i8], [256 x i8]* %local_cmap, i32 0, i32 %idxprom228
  %160 = load i8, i8* %arrayidx229, align 1
  %conv230 = zext i8 %160 to i32
  %cmp231 = icmp ne i32 %conv230, 0
  br label %land.end233

land.end233:                                      ; preds = %land.rhs226, %lor.lhs.false221, %while.cond207
  %161 = phi i1 [ false, %lor.lhs.false221 ], [ false, %while.cond207 ], [ %cmp231, %land.rhs226 ]
  br i1 %161, label %while.body235, label %while.end237

while.body235:                                    ; preds = %land.end233
  %162 = load i32, i32* %sindex, align 4
  %inc236 = add nsw i32 %162, 1
  store i32 %inc236, i32* %sindex, align 4
  br label %while.cond207

while.end237:                                     ; preds = %land.end233
  br label %if.end238

if.end238:                                        ; preds = %while.end237, %lor.lhs.false200, %lor.lhs.false195, %land.lhs.true190, %land.lhs.true183, %land.lhs.true181, %while.end
  %163 = load i8*, i8** %s, align 4
  %164 = load i32, i32* %sindex, align 4
  %add.ptr239 = getelementptr inbounds i8, i8* %163, i32 %164
  %165 = load i8**, i8*** %stringp.addr, align 4
  store i8* %add.ptr239, i8** %165, align 4
  %166 = load i8*, i8** %current_word, align 4
  store i8* %166, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end238, %if.end74, %if.then
  %167 = load i8*, i8** %retval, align 4
  ret i8* %167
}

; Function Attrs: noinline nounwind
define i8* @strip_trailing_ifs_whitespace(i8* %string, i8* %separators, i32 %saw_escape) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %separators.addr = alloca i8*, align 4
  %saw_escape.addr = alloca i32, align 4
  %s = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %separators, i8** %separators.addr, align 4
  store i32 %saw_escape, i32* %saw_escape.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i8*, i8** %string.addr, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %cond.false13

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %string.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %cond.true, label %cond.false13

cond.true:                                        ; preds = %land.lhs.true
  %4 = load i8*, i8** %string.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %5 to i32
  %tobool4 = icmp ne i32 %conv3, 0
  br i1 %tobool4, label %cond.true5, label %cond.false10

cond.true5:                                       ; preds = %cond.true
  %6 = load i8*, i8** %string.addr, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %6, i32 2
  %7 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %7 to i32
  %tobool8 = icmp ne i32 %conv7, 0
  br i1 %tobool8, label %cond.true9, label %cond.false

cond.true9:                                       ; preds = %cond.true5
  %8 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %8)
  br label %cond.end

cond.false:                                       ; preds = %cond.true5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true9
  %cond = phi i32 [ %call, %cond.true9 ], [ 2, %cond.false ]
  br label %cond.end11

cond.false10:                                     ; preds = %cond.true
  br label %cond.end11

cond.end11:                                       ; preds = %cond.false10, %cond.end
  %cond12 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false10 ]
  br label %cond.end14

cond.false13:                                     ; preds = %land.lhs.true, %entry
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.end11
  %cond15 = phi i32 [ %cond12, %cond.end11 ], [ 0, %cond.false13 ]
  %add.ptr = getelementptr inbounds i8, i8* %0, i32 %cond15
  %add.ptr16 = getelementptr inbounds i8, i8* %add.ptr, i32 -1
  store i8* %add.ptr16, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end14
  %9 = load i8*, i8** %s, align 4
  %10 = load i8*, i8** %string.addr, align 4
  %cmp = icmp ugt i8* %9, %10
  br i1 %cmp, label %land.rhs, label %land.end54

land.rhs:                                         ; preds = %while.cond
  %11 = load i8*, i8** %s, align 4
  %12 = load i8, i8* %11, align 1
  %conv18 = sext i8 %12 to i32
  %cmp19 = icmp eq i32 %conv18, 32
  br i1 %cmp19, label %land.lhs.true28, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %13 = load i8*, i8** %s, align 4
  %14 = load i8, i8* %13, align 1
  %conv21 = sext i8 %14 to i32
  %cmp22 = icmp eq i32 %conv21, 9
  br i1 %cmp22, label %land.lhs.true28, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %15 = load i8*, i8** %s, align 4
  %16 = load i8, i8* %15, align 1
  %conv25 = sext i8 %16 to i32
  %cmp26 = icmp eq i32 %conv25, 10
  br i1 %cmp26, label %land.lhs.true28, label %lor.rhs

land.lhs.true28:                                  ; preds = %lor.lhs.false24, %lor.lhs.false, %land.rhs
  %17 = load i8*, i8** %s, align 4
  %18 = load i8, i8* %17, align 1
  %idxprom = zext i8 %18 to i32
  %arrayidx29 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom
  %19 = load i8, i8* %arrayidx29, align 1
  %conv30 = zext i8 %19 to i32
  %cmp31 = icmp ne i32 %conv30, 0
  br i1 %cmp31, label %lor.end53, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true28, %lor.lhs.false24
  %20 = load i32, i32* %saw_escape.addr, align 4
  %tobool33 = icmp ne i32 %20, 0
  br i1 %tobool33, label %land.lhs.true34, label %land.end

land.lhs.true34:                                  ; preds = %lor.rhs
  %21 = load i8*, i8** %s, align 4
  %22 = load i8, i8* %21, align 1
  %conv35 = sext i8 %22 to i32
  %cmp36 = icmp eq i32 %conv35, 1
  br i1 %cmp36, label %land.rhs38, label %land.end

land.rhs38:                                       ; preds = %land.lhs.true34
  %23 = load i8*, i8** %s, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %23, i32 1
  %24 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %24 to i32
  %cmp41 = icmp eq i32 %conv40, 32
  br i1 %cmp41, label %lor.end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %land.rhs38
  %25 = load i8*, i8** %s, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %25, i32 1
  %26 = load i8, i8* %arrayidx44, align 1
  %conv45 = sext i8 %26 to i32
  %cmp46 = icmp eq i32 %conv45, 9
  br i1 %cmp46, label %lor.end, label %lor.rhs48

lor.rhs48:                                        ; preds = %lor.lhs.false43
  %27 = load i8*, i8** %s, align 4
  %arrayidx49 = getelementptr inbounds i8, i8* %27, i32 1
  %28 = load i8, i8* %arrayidx49, align 1
  %conv50 = sext i8 %28 to i32
  %cmp51 = icmp eq i32 %conv50, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs48, %lor.lhs.false43, %land.rhs38
  %29 = phi i1 [ true, %lor.lhs.false43 ], [ true, %land.rhs38 ], [ %cmp51, %lor.rhs48 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true34, %lor.rhs
  %30 = phi i1 [ false, %land.lhs.true34 ], [ false, %lor.rhs ], [ %29, %lor.end ]
  br label %lor.end53

lor.end53:                                        ; preds = %land.end, %land.lhs.true28
  %31 = phi i1 [ true, %land.lhs.true28 ], [ %30, %land.end ]
  br label %land.end54

land.end54:                                       ; preds = %lor.end53, %while.cond
  %32 = phi i1 [ false, %while.cond ], [ %31, %lor.end53 ]
  br i1 %32, label %while.body, label %while.end

while.body:                                       ; preds = %land.end54
  %33 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %33, i32 -1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end54
  %34 = load i8*, i8** %s, align 4
  %incdec.ptr55 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr55, i8** %s, align 4
  store i8 0, i8* %incdec.ptr55, align 1
  %35 = load i8*, i8** %string.addr, align 4
  ret i8* %35
}

; Function Attrs: noinline nounwind
define i32 @do_assignment(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %td = alloca %struct.word_desc, align 4
  store i8* %string, i8** %string.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 4, i32* %flags, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %0, i8** %word, align 4
  %call = call i32 @do_assignment_internal(%struct.word_desc* %td, i32 1)
  ret i32 %call
}

; Function Attrs: noinline nounwind
define internal i32 @do_assignment_internal(%struct.word_desc* %word, i32 %expand) #0 {
entry:
  %retval = alloca i32, align 4
  %word.addr = alloca %struct.word_desc*, align 4
  %expand.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %appendop = alloca i32, align 4
  %assign_list = alloca i32, align 4
  %aflags = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %name = alloca i8*, align 4
  %value = alloca i8*, align 4
  %temp = alloca i8*, align 4
  %entry2 = alloca %struct.variable*, align 4
  %t = alloca i8*, align 4
  %ni = alloca i32, align 4
  %string = alloca i8*, align 4
  store %struct.word_desc* %word, %struct.word_desc** %word.addr, align 4
  store i32 %expand, i32* %expand.addr, align 4
  %0 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %cmp = icmp eq %struct.word_desc* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %1, i32 0, i32 0
  %2 = load i8*, i8** %word3, align 4
  %cmp4 = icmp eq i8* %2, null
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4
  br label %do.end154

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %aflags, align 4
  store i32 0, i32* %assign_list, align 4
  store i32 0, i32* %appendop, align 4
  %3 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %word5 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word5, align 4
  store i8* %4, i8** %string, align 4
  %5 = load i8*, i8** %string, align 4
  %call = call i32 @assignment(i8* %5, i32 0)
  store i32 %call, i32* %offset, align 4
  %6 = load i8*, i8** %string, align 4
  %call6 = call i32 @strlen(i8* %6)
  %add = add i32 1, %call6
  %call7 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3109)
  %7 = load i8*, i8** %string, align 4
  %call8 = call i8* @strcpy(i8* %call7, i8* %7)
  store i8* %call8, i8** %name, align 4
  store i8* null, i8** %value, align 4
  %8 = load i8*, i8** %name, align 4
  %9 = load i32, i32* %offset, align 4
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %10 to i32
  %cmp9 = icmp eq i32 %conv, 61
  br i1 %cmp9, label %if.then11, label %if.end39

if.then11:                                        ; preds = %if.end
  %11 = load i8*, i8** %name, align 4
  %12 = load i32, i32* %offset, align 4
  %sub = sub nsw i32 %12, 1
  %arrayidx12 = getelementptr inbounds i8, i8* %11, i32 %sub
  %13 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %13 to i32
  %cmp14 = icmp eq i32 %conv13, 43
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.then11
  store i32 1, i32* %appendop, align 4
  %14 = load i8*, i8** %name, align 4
  %15 = load i32, i32* %offset, align 4
  %sub17 = sub nsw i32 %15, 1
  %arrayidx18 = getelementptr inbounds i8, i8* %14, i32 %sub17
  store i8 0, i8* %arrayidx18, align 1
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.then11
  %16 = load i8*, i8** %name, align 4
  %17 = load i32, i32* %offset, align 4
  %arrayidx20 = getelementptr inbounds i8, i8* %16, i32 %17
  store i8 0, i8* %arrayidx20, align 1
  %18 = load i8*, i8** %name, align 4
  %19 = load i32, i32* %offset, align 4
  %add.ptr = getelementptr inbounds i8, i8* %18, i32 %19
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr, i32 1
  store i8* %add.ptr21, i8** %temp, align 4
  %20 = load i32, i32* %expand.addr, align 4
  %tobool = icmp ne i32 %20, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end19
  %21 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %21, i32 0, i32 1
  %22 = load i32, i32* %flags, align 4
  %and = and i32 %22, 32768
  %tobool22 = icmp ne i32 %and, 0
  br i1 %tobool22, label %if.then23, label %if.else

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %ni, align 4
  store i32 1, i32* %assign_list, align 4
  %23 = load i8*, i8** %temp, align 4
  %call24 = call i8* @extract_array_assignment_list(i8* %23, i32* %ni)
  store i8* %call24, i8** %value, align 4
  br label %if.end38

if.else:                                          ; preds = %land.lhs.true, %if.end19
  %24 = load i32, i32* %expand.addr, align 4
  %tobool25 = icmp ne i32 %24, 0
  br i1 %tobool25, label %land.lhs.true26, label %if.else32

land.lhs.true26:                                  ; preds = %if.else
  %25 = load i8*, i8** %temp, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %25, i32 0
  %26 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %26 to i32
  %tobool29 = icmp ne i32 %conv28, 0
  br i1 %tobool29, label %if.then30, label %if.else32

if.then30:                                        ; preds = %land.lhs.true26
  %27 = load i8*, i8** %temp, align 4
  %call31 = call i8* @expand_string_if_necessary(i8* %27, i32 0, %struct.word_list* (i8*, i32)* @expand_string_assignment)
  store i8* %call31, i8** %value, align 4
  br label %if.end37

if.else32:                                        ; preds = %land.lhs.true26, %if.else
  %28 = load i8*, i8** %temp, align 4
  %call33 = call i32 @strlen(i8* %28)
  %add34 = add i32 1, %call33
  %call35 = call i8* @sh_xmalloc(i32 %add34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3134)
  %29 = load i8*, i8** %temp, align 4
  %call36 = call i8* @strcpy(i8* %call35, i8* %29)
  store i8* %call36, i8** %value, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.then30
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then23
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  %30 = load i8*, i8** %value, align 4
  %cmp40 = icmp eq i8* %30, null
  br i1 %cmp40, label %if.then42, label %if.end45

if.then42:                                        ; preds = %if.end39
  %call43 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3139)
  store i8* %call43, i8** %value, align 4
  %31 = load i8*, i8** %value, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %31, i32 0
  store i8 0, i8* %arrayidx44, align 1
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.end39
  %32 = load i32, i32* @echo_command_at_execute, align 4
  %tobool46 = icmp ne i32 %32, 0
  br i1 %tobool46, label %if.then47, label %if.end58

if.then47:                                        ; preds = %if.end45
  %33 = load i32, i32* %appendop, align 4
  %tobool48 = icmp ne i32 %33, 0
  br i1 %tobool48, label %if.then49, label %if.end52

if.then49:                                        ; preds = %if.then47
  %34 = load i8*, i8** %name, align 4
  %35 = load i32, i32* %offset, align 4
  %sub50 = sub nsw i32 %35, 1
  %arrayidx51 = getelementptr inbounds i8, i8* %34, i32 %sub50
  store i8 43, i8* %arrayidx51, align 1
  br label %if.end52

if.end52:                                         ; preds = %if.then49, %if.then47
  %36 = load i8*, i8** %name, align 4
  %37 = load i8*, i8** %value, align 4
  %38 = load i32, i32* %assign_list, align 4
  call void @xtrace_print_assignment(i8* %36, i8* %37, i32 %38, i32 1)
  %39 = load i32, i32* %appendop, align 4
  %tobool53 = icmp ne i32 %39, 0
  br i1 %tobool53, label %if.then54, label %if.end57

if.then54:                                        ; preds = %if.end52
  %40 = load i8*, i8** %name, align 4
  %41 = load i32, i32* %offset, align 4
  %sub55 = sub nsw i32 %41, 1
  %arrayidx56 = getelementptr inbounds i8, i8* %40, i32 %sub55
  store i8 0, i8* %arrayidx56, align 1
  br label %if.end57

if.end57:                                         ; preds = %if.then54, %if.end52
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end45
  %42 = load i32, i32* %appendop, align 4
  %tobool59 = icmp ne i32 %42, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end58
  %43 = load i32, i32* %aflags, align 4
  %or = or i32 %43, 1
  store i32 %or, i32* %aflags, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.end58
  %44 = load i8*, i8** %name, align 4
  %call62 = call i8* @mbschr(i8* %44, i32 91)
  store i8* %call62, i8** %t, align 4
  %tobool63 = icmp ne i8* %call62, null
  br i1 %tobool63, label %if.then64, label %if.else86

if.then64:                                        ; preds = %if.end61
  %45 = load i32, i32* %assign_list, align 4
  %tobool65 = icmp ne i32 %45, 0
  br i1 %tobool65, label %if.then66, label %if.end73

if.then66:                                        ; preds = %if.then64
  %call67 = call i8* @libintl_gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i32 0, i32 0))
  %46 = load i8*, i8** %name, align 4
  call void (i8*, ...) @report_error(i8* %call67, i8* %46)
  br label %do.body

do.body:                                          ; preds = %if.then66
  br label %do.body68

do.body68:                                        ; preds = %do.body
  %47 = load i8*, i8** %value, align 4
  %tobool69 = icmp ne i8* %47, null
  br i1 %tobool69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %do.body68
  %48 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3163)
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %do.body68
  br label %do.end

do.end:                                           ; preds = %if.end71
  %49 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %49, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3163)
  store i32 0, i32* %retval, align 4
  br label %do.end154

do.end72:                                         ; No predecessors!
  br label %if.end73

if.end73:                                         ; preds = %do.end72, %if.then64
  %50 = load i8*, i8** %name, align 4
  %51 = load i8*, i8** %value, align 4
  %52 = load i32, i32* %aflags, align 4
  %call74 = call %struct.variable* @assign_array_element(i8* %50, i8* %51, i32 %52)
  store %struct.variable* %call74, %struct.variable** %entry2, align 4
  %53 = load %struct.variable*, %struct.variable** %entry2, align 4
  %cmp75 = icmp eq %struct.variable* %53, null
  br i1 %cmp75, label %if.then77, label %if.end85

if.then77:                                        ; preds = %if.end73
  br label %do.body78

do.body78:                                        ; preds = %if.then77
  br label %do.body79

do.body79:                                        ; preds = %do.body78
  %54 = load i8*, i8** %value, align 4
  %tobool80 = icmp ne i8* %54, null
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %do.body79
  %55 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3167)
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %do.body79
  br label %do.end83

do.end83:                                         ; preds = %if.end82
  %56 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3167)
  store i32 0, i32* %retval, align 4
  br label %do.end154

do.end84:                                         ; No predecessors!
  br label %if.end85

if.end85:                                         ; preds = %do.end84, %if.end73
  br label %if.end120

if.else86:                                        ; preds = %if.end61
  %57 = load i32, i32* %assign_list, align 4
  %tobool87 = icmp ne i32 %57, 0
  br i1 %tobool87, label %if.then88, label %if.else117

if.then88:                                        ; preds = %if.else86
  %58 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags89 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %58, i32 0, i32 1
  %59 = load i32, i32* %flags89, align 4
  %and90 = and i32 %59, 131072
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %land.lhs.true92, label %if.end99

land.lhs.true92:                                  ; preds = %if.then88
  %60 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags93 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %60, i32 0, i32 1
  %61 = load i32, i32* %flags93, align 4
  %and94 = and i32 %61, 33554432
  %cmp95 = icmp eq i32 %and94, 0
  br i1 %cmp95, label %if.then97, label %if.end99

if.then97:                                        ; preds = %land.lhs.true92
  %62 = load i32, i32* %aflags, align 4
  %or98 = or i32 %62, 2
  store i32 %or98, i32* %aflags, align 4
  br label %if.end99

if.end99:                                         ; preds = %if.then97, %land.lhs.true92, %if.then88
  %63 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags100 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %63, i32 0, i32 1
  %64 = load i32, i32* %flags100, align 4
  %and101 = and i32 %64, 131072
  %tobool102 = icmp ne i32 %and101, 0
  br i1 %tobool102, label %land.lhs.true103, label %if.end109

land.lhs.true103:                                 ; preds = %if.end99
  %65 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags104 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %65, i32 0, i32 1
  %66 = load i32, i32* %flags104, align 4
  %and105 = and i32 %66, 33554432
  %tobool106 = icmp ne i32 %and105, 0
  br i1 %tobool106, label %if.then107, label %if.end109

if.then107:                                       ; preds = %land.lhs.true103
  %67 = load i32, i32* %aflags, align 4
  %or108 = or i32 %67, 8
  store i32 %or108, i32* %aflags, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.then107, %land.lhs.true103, %if.end99
  %68 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags110 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %68, i32 0, i32 1
  %69 = load i32, i32* %flags110, align 4
  %and111 = and i32 %69, 4194304
  %tobool112 = icmp ne i32 %and111, 0
  br i1 %tobool112, label %if.then113, label %if.end115

if.then113:                                       ; preds = %if.end109
  %70 = load i32, i32* %aflags, align 4
  %or114 = or i32 %70, 4
  store i32 %or114, i32* %aflags, align 4
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %if.end109
  %71 = load i8*, i8** %name, align 4
  %72 = load i8*, i8** %value, align 4
  %73 = load i32, i32* %aflags, align 4
  %call116 = call %struct.variable* @do_compound_assignment(i8* %71, i8* %72, i32 %73)
  store %struct.variable* %call116, %struct.variable** %entry2, align 4
  br label %if.end119

if.else117:                                       ; preds = %if.else86
  %74 = load i8*, i8** %name, align 4
  %75 = load i8*, i8** %value, align 4
  %76 = load i32, i32* %aflags, align 4
  %call118 = call %struct.variable* @bind_variable(i8* %74, i8* %75, i32 %76)
  store %struct.variable* %call118, %struct.variable** %entry2, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.else117, %if.end115
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end85
  %77 = load i8*, i8** %name, align 4
  call void @stupidly_hack_special_variables(i8* %77)
  %78 = load %struct.variable*, %struct.variable** %entry2, align 4
  %cmp121 = icmp eq %struct.variable* %78, null
  br i1 %cmp121, label %if.then126, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %if.end120
  %79 = load %struct.variable*, %struct.variable** %entry2, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %79, i32 0, i32 5
  %80 = load i32, i32* %attributes, align 4
  %and124 = and i32 %80, 2
  %tobool125 = icmp ne i32 %and124, 0
  br i1 %tobool125, label %if.then126, label %if.else127

if.then126:                                       ; preds = %lor.lhs.false123, %if.end120
  store i32 0, i32* %retval1, align 4
  br label %if.end134

if.else127:                                       ; preds = %lor.lhs.false123
  %81 = load %struct.variable*, %struct.variable** %entry2, align 4
  %attributes128 = getelementptr inbounds %struct.variable, %struct.variable* %81, i32 0, i32 5
  %82 = load i32, i32* %attributes128, align 4
  %and129 = and i32 %82, 16384
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %if.then131, label %if.else132

if.then131:                                       ; preds = %if.else127
  store i32 1, i32* @last_command_exit_value, align 4
  store i32 1, i32* %retval1, align 4
  br label %if.end133

if.else132:                                       ; preds = %if.else127
  store i32 1, i32* %retval1, align 4
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.then131
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then126
  %83 = load %struct.variable*, %struct.variable** %entry2, align 4
  %tobool135 = icmp ne %struct.variable* %83, null
  br i1 %tobool135, label %land.lhs.true136, label %if.end147

land.lhs.true136:                                 ; preds = %if.end134
  %84 = load i32, i32* %retval1, align 4
  %cmp137 = icmp ne i32 %84, 0
  br i1 %cmp137, label %land.lhs.true139, label %if.end147

land.lhs.true139:                                 ; preds = %land.lhs.true136
  %85 = load %struct.variable*, %struct.variable** %entry2, align 4
  %attributes140 = getelementptr inbounds %struct.variable, %struct.variable* %85, i32 0, i32 5
  %86 = load i32, i32* %attributes140, align 4
  %and141 = and i32 %86, 16384
  %cmp142 = icmp eq i32 %and141, 0
  br i1 %cmp142, label %if.then144, label %if.end147

if.then144:                                       ; preds = %land.lhs.true139
  %87 = load %struct.variable*, %struct.variable** %entry2, align 4
  %attributes145 = getelementptr inbounds %struct.variable, %struct.variable* %87, i32 0, i32 5
  %88 = load i32, i32* %attributes145, align 4
  %and146 = and i32 %88, -4097
  store i32 %and146, i32* %attributes145, align 4
  br label %if.end147

if.end147:                                        ; preds = %if.then144, %land.lhs.true139, %land.lhs.true136, %if.end134
  br label %do.body148

do.body148:                                       ; preds = %if.end147
  br label %do.body149

do.body149:                                       ; preds = %do.body148
  %89 = load i8*, i8** %value, align 4
  %tobool150 = icmp ne i8* %89, null
  br i1 %tobool150, label %if.then151, label %if.end152

if.then151:                                       ; preds = %do.body149
  %90 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %90, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3199)
  br label %if.end152

if.end152:                                        ; preds = %if.then151, %do.body149
  br label %do.end153

do.end153:                                        ; preds = %if.end152
  %91 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3199)
  %92 = load i32, i32* %retval1, align 4
  store i32 %92, i32* %retval, align 4
  br label %do.end154

do.end154:                                        ; preds = %if.then, %do.end, %do.end83, %do.end153
  %93 = load i32, i32* %retval, align 4
  ret i32 %93
}

; Function Attrs: noinline nounwind
define i32 @do_word_assignment(%struct.word_desc* %word, i32 %flags) #0 {
entry:
  %word.addr = alloca %struct.word_desc*, align 4
  %flags.addr = alloca i32, align 4
  store %struct.word_desc* %word, %struct.word_desc** %word.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %call = call i32 @do_assignment_internal(%struct.word_desc* %0, i32 1)
  ret i32 %call
}

; Function Attrs: noinline nounwind
define i32 @do_assignment_no_expand(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %td = alloca %struct.word_desc, align 4
  store i8* %string, i8** %string.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 4, i32* %flags, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %0, i8** %word, align 4
  %call = call i32 @do_assignment_internal(%struct.word_desc* %td, i32 0)
  ret i32 %call
}

; Function Attrs: noinline nounwind
define %struct.word_list* @list_rest_of_args() #0 {
entry:
  %list = alloca %struct.word_list*, align 4
  %args = alloca %struct.word_list*, align 4
  %i = alloca i32, align 4
  store i32 1, i32* %i, align 4
  store %struct.word_list* null, %struct.word_list** %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 10
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %1
  %2 = load i8*, i8** %arrayidx, align 4
  %tobool = icmp ne i8* %2, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %3, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %arrayidx1 = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %4
  %5 = load i8*, i8** %arrayidx1, align 4
  %call = call %struct.word_desc* @make_bare_word(i8* %5)
  %6 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call2 = call %struct.word_list* @make_word_list(%struct.word_desc* %call, %struct.word_list* %6)
  store %struct.word_list* %call2, %struct.word_list** %list, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %8 = load %struct.word_list*, %struct.word_list** @rest_of_args, align 4
  store %struct.word_list* %8, %struct.word_list** %args, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc9, %for.end
  %9 = load %struct.word_list*, %struct.word_list** %args, align 4
  %tobool4 = icmp ne %struct.word_list* %9, null
  br i1 %tobool4, label %for.body5, label %for.end10

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.word_list*, %struct.word_list** %args, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %10, i32 0, i32 1
  %11 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %11, i32 0, i32 0
  %12 = load i8*, i8** %word6, align 4
  %call7 = call %struct.word_desc* @make_bare_word(i8* %12)
  %13 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call8 = call %struct.word_list* @make_word_list(%struct.word_desc* %call7, %struct.word_list* %13)
  store %struct.word_list* %call8, %struct.word_list** %list, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body5
  %14 = load %struct.word_list*, %struct.word_list** %args, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %14, i32 0, i32 0
  %15 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %15, %struct.word_list** %args, align 4
  br label %for.cond3

for.end10:                                        ; preds = %for.cond3
  %16 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool11 = icmp ne %struct.word_list* %16, null
  br i1 %tobool11, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %for.end10
  %17 = load %struct.word_list*, %struct.word_list** %list, align 4
  %next12 = getelementptr inbounds %struct.word_list, %struct.word_list* %17, i32 0, i32 0
  %18 = load %struct.word_list*, %struct.word_list** %next12, align 4
  %tobool13 = icmp ne %struct.word_list* %18, null
  br i1 %tobool13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %19 = load %struct.word_list*, %struct.word_list** %list, align 4
  %20 = bitcast %struct.word_list* %19 to %struct.g_list*
  %call14 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %20)
  %21 = bitcast %struct.g_list* %call14 to %struct.word_list*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %for.end10
  %22 = load %struct.word_list*, %struct.word_list** %list, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %21, %cond.true ], [ %22, %cond.false ]
  ret %struct.word_list* %cond
}

declare %struct.word_desc* @make_bare_word(i8*) #1

; Function Attrs: noinline nounwind
define i32 @number_of_args() #0 {
entry:
  %list = alloca %struct.word_list*, align 4
  %n = alloca i32, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4
  %cmp = icmp slt i32 %0, 9
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %n, align 4
  %add = add nsw i32 %1, 1
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %add
  %2 = load i8*, i8** %arrayidx, align 4
  %tobool = icmp ne i8* %2, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %3, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %n, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %5 = load %struct.word_list*, %struct.word_list** @rest_of_args, align 4
  store %struct.word_list* %5, %struct.word_list** %list, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc5, %for.end
  %6 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool2 = icmp ne %struct.word_list* %6, null
  br i1 %tobool2, label %for.body3, label %for.end6

for.body3:                                        ; preds = %for.cond1
  %7 = load i32, i32* %n, align 4
  %inc4 = add nsw i32 %7, 1
  store i32 %inc4, i32* %n, align 4
  br label %for.inc5

for.inc5:                                         ; preds = %for.body3
  %8 = load %struct.word_list*, %struct.word_list** %list, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %8, i32 0, i32 0
  %9 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %9, %struct.word_list** %list, align 4
  br label %for.cond1

for.end6:                                         ; preds = %for.cond1
  %10 = load i32, i32* %n, align 4
  ret i32 %10
}

; Function Attrs: noinline nounwind
define i8* @get_dollar_var_value(i64 %ind) #0 {
entry:
  %ind.addr = alloca i64, align 8
  %temp = alloca i8*, align 4
  %p = alloca %struct.word_list*, align 4
  store i64 %ind, i64* %ind.addr, align 8
  %0 = load i64, i64* %ind.addr, align 8
  %cmp = icmp slt i64 %0, 10
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %ind.addr, align 8
  %idxprom = trunc i64 %1 to i32
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %idxprom
  %2 = load i8*, i8** %arrayidx, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %3 = load i64, i64* %ind.addr, align 8
  %idxprom1 = trunc i64 %3 to i32
  %arrayidx2 = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %idxprom1
  %4 = load i8*, i8** %arrayidx2, align 4
  %call = call i32 @strlen(i8* %4)
  %add = add i32 1, %call
  %call3 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3284)
  %5 = load i64, i64* %ind.addr, align 8
  %idxprom4 = trunc i64 %5 to i32
  %arrayidx5 = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %idxprom4
  %6 = load i8*, i8** %arrayidx5, align 4
  %call6 = call i8* @strcpy(i8* %call3, i8* %6)
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call6, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %temp, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load i64, i64* %ind.addr, align 8
  %sub = sub nsw i64 %7, 10
  store i64 %sub, i64* %ind.addr, align 8
  %8 = load %struct.word_list*, %struct.word_list** @rest_of_args, align 4
  store %struct.word_list* %8, %struct.word_list** %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %9 = load %struct.word_list*, %struct.word_list** %p, align 4
  %tobool7 = icmp ne %struct.word_list* %9, null
  br i1 %tobool7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %10 = load i64, i64* %ind.addr, align 8
  %dec = add nsw i64 %10, -1
  store i64 %dec, i64* %ind.addr, align 8
  %tobool8 = icmp ne i64 %10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %tobool8, %land.rhs ]
  br i1 %11, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load %struct.word_list*, %struct.word_list** %p, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %12, i32 0, i32 0
  %13 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %13, %struct.word_list** %p, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %14 = load %struct.word_list*, %struct.word_list** %p, align 4
  %tobool9 = icmp ne %struct.word_list* %14, null
  br i1 %tobool9, label %cond.true10, label %cond.false18

cond.true10:                                      ; preds = %for.end
  %15 = load %struct.word_list*, %struct.word_list** %p, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 1
  %16 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word11 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %16, i32 0, i32 0
  %17 = load i8*, i8** %word11, align 4
  %call12 = call i32 @strlen(i8* %17)
  %add13 = add i32 1, %call12
  %call14 = call i8* @sh_xmalloc(i32 %add13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3290)
  %18 = load %struct.word_list*, %struct.word_list** %p, align 4
  %word15 = getelementptr inbounds %struct.word_list, %struct.word_list* %18, i32 0, i32 1
  %19 = load %struct.word_desc*, %struct.word_desc** %word15, align 4
  %word16 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %19, i32 0, i32 0
  %20 = load i8*, i8** %word16, align 4
  %call17 = call i8* @strcpy(i8* %call14, i8* %20)
  br label %cond.end19

cond.false18:                                     ; preds = %for.end
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false18, %cond.true10
  %cond20 = phi i8* [ %call17, %cond.true10 ], [ null, %cond.false18 ]
  store i8* %cond20, i8** %temp, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end19, %cond.end
  %21 = load i8*, i8** %temp, align 4
  ret i8* %21
}

; Function Attrs: noinline nounwind
define i8* @string_rest_of_args(i32 %dollar_star) #0 {
entry:
  %dollar_star.addr = alloca i32, align 4
  %list = alloca %struct.word_list*, align 4
  %string = alloca i8*, align 4
  store i32 %dollar_star, i32* %dollar_star.addr, align 4
  %call = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call, %struct.word_list** %list, align 4
  %0 = load i32, i32* %dollar_star.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call1 = call i8* @string_list_dollar_star(%struct.word_list* %1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call2 = call i8* @string_list(%struct.word_list* %2)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ %call2, %cond.false ]
  store i8* %cond, i8** %string, align 4
  %3 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %3)
  %4 = load i8*, i8** %string, align 4
  ret i8* %4
}

declare void @dispose_words(%struct.word_list*) #1

; Function Attrs: noinline nounwind
define i8* @expand_string_to_string(i8* %string, i32 %quoted) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i32, i32* %quoted.addr, align 4
  %call = call i8* @expand_string_to_string_internal(i8* %0, i32 %1, %struct.word_list* (i8*, i32)* @expand_string)
  ret i8* %call
}

; Function Attrs: noinline nounwind
define internal i8* @expand_string_to_string_internal(i8* %string, i32 %quoted, %struct.word_list* (i8*, i32)* %func) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %func.addr = alloca %struct.word_list* (i8*, i32)*, align 4
  %list = alloca %struct.word_list*, align 4
  %ret = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store %struct.word_list* (i8*, i32)* %func, %struct.word_list* (i8*, i32)** %func.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.word_list* (i8*, i32)*, %struct.word_list* (i8*, i32)** %func.addr, align 4
  %4 = load i8*, i8** %string.addr, align 4
  %5 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* %3(i8* %4, i32 %5)
  store %struct.word_list* %call, %struct.word_list** %list, align 4
  %6 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool = icmp ne %struct.word_list* %6, null
  br i1 %tobool, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %7 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call4 = call i8* @string_list(%struct.word_list* %7)
  store i8* %call4, i8** %ret, align 4
  %8 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %8)
  br label %if.end5

if.else:                                          ; preds = %if.end
  store i8* null, i8** %ret, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %9 = load i8*, i8** %ret, align 4
  store i8* %9, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end5, %if.then
  %10 = load i8*, i8** %retval, align 4
  ret i8* %10
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_string(i8* %string, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %result = alloca %struct.word_list*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8*, i8** %string.addr, align 4
  %4 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @expand_string_leave_quoted(i8* %3, i32 %4)
  store %struct.word_list* %call, %struct.word_list** %result, align 4
  %5 = load %struct.word_list*, %struct.word_list** %result, align 4
  %tobool = icmp ne %struct.word_list* %5, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %6 = load %struct.word_list*, %struct.word_list** %result, align 4
  %call3 = call %struct.word_list* @dequote_list(%struct.word_list* %6)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %7 = load %struct.word_list*, %struct.word_list** %result, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %call3, %cond.true ], [ %7, %cond.false ]
  store %struct.word_list* %cond, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %8 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %8
}

; Function Attrs: noinline nounwind
define i8* @expand_string_unsplit_to_string(i8* %string, i32 %quoted) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i32, i32* %quoted.addr, align 4
  %call = call i8* @expand_string_to_string_internal(i8* %0, i32 %1, %struct.word_list* (i8*, i32)* @expand_string_unsplit)
  ret i8* %call
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_string_unsplit(i8* %string, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %value = alloca %struct.word_list*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* @expand_no_split_dollar_star, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %4 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @expand_string_internal(i8* %3, i32 %4)
  store %struct.word_list* %call, %struct.word_list** %value, align 4
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  %5 = load %struct.word_list*, %struct.word_list** %value, align 4
  %tobool = icmp ne %struct.word_list* %5, null
  br i1 %tobool, label %if.then3, label %if.end12

if.then3:                                         ; preds = %if.end
  %6 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %6, i32 0, i32 1
  %7 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %tobool4 = icmp ne %struct.word_desc* %7, null
  br i1 %tobool4, label %if.then5, label %if.end10

if.then5:                                         ; preds = %if.then3
  %8 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word6 = getelementptr inbounds %struct.word_list, %struct.word_list* %8, i32 0, i32 1
  %9 = load %struct.word_desc*, %struct.word_desc** %word6, align 4
  %word7 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %9, i32 0, i32 0
  %10 = load i8*, i8** %word7, align 4
  %call8 = call i8* @remove_quoted_nulls(i8* %10)
  %11 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word9 = getelementptr inbounds %struct.word_list, %struct.word_list* %11, i32 0, i32 1
  %12 = load %struct.word_desc*, %struct.word_desc** %word9, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %12, i32 0, i32 1
  %13 = load i32, i32* %flags, align 4
  %and = and i32 %13, -262145
  store i32 %and, i32* %flags, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then5, %if.then3
  %14 = load %struct.word_list*, %struct.word_list** %value, align 4
  %call11 = call %struct.word_list* @dequote_list(%struct.word_list* %14)
  br label %if.end12

if.end12:                                         ; preds = %if.end10, %if.end
  %15 = load %struct.word_list*, %struct.word_list** %value, align 4
  store %struct.word_list* %15, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end12, %if.then
  %16 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %16
}

; Function Attrs: noinline nounwind
define i8* @expand_assignment_string_to_string(i8* %string, i32 %quoted) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i32, i32* %quoted.addr, align 4
  %call = call i8* @expand_string_to_string_internal(i8* %0, i32 %1, %struct.word_list* (i8*, i32)* @expand_string_assignment)
  ret i8* %call
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_string_assignment(i8* %string, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %td = alloca %struct.word_desc, align 4
  %value = alloca %struct.word_list*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* @expand_no_split_dollar_star, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 2048, i32* %flags, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %3)
  %add = add i32 1, %call
  %call3 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3701)
  %4 = load i8*, i8** %string.addr, align 4
  %call4 = call i8* @strcpy(i8* %call3, i8* %4)
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %call4, i8** %word, align 4
  %5 = load i32, i32* %quoted.addr, align 4
  %call5 = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %td, i32 %5, i32 0, i32* null, i32* null)
  store %struct.word_list* %call5, %struct.word_list** %value, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %6 = load i8*, i8** %word6, align 4
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %if.then7, label %if.end9

if.then7:                                         ; preds = %do.body
  %word8 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %7 = load i8*, i8** %word8, align 4
  call void @sh_xfree(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3703)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end9
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  %8 = load %struct.word_list*, %struct.word_list** %value, align 4
  %tobool10 = icmp ne %struct.word_list* %8, null
  br i1 %tobool10, label %if.then11, label %if.end22

if.then11:                                        ; preds = %do.end
  %9 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word12 = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 1
  %10 = load %struct.word_desc*, %struct.word_desc** %word12, align 4
  %tobool13 = icmp ne %struct.word_desc* %10, null
  br i1 %tobool13, label %if.then14, label %if.end20

if.then14:                                        ; preds = %if.then11
  %11 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word15 = getelementptr inbounds %struct.word_list, %struct.word_list* %11, i32 0, i32 1
  %12 = load %struct.word_desc*, %struct.word_desc** %word15, align 4
  %word16 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %12, i32 0, i32 0
  %13 = load i8*, i8** %word16, align 4
  %call17 = call i8* @remove_quoted_nulls(i8* %13)
  %14 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word18 = getelementptr inbounds %struct.word_list, %struct.word_list* %14, i32 0, i32 1
  %15 = load %struct.word_desc*, %struct.word_desc** %word18, align 4
  %flags19 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %15, i32 0, i32 1
  %16 = load i32, i32* %flags19, align 4
  %and = and i32 %16, -262145
  store i32 %and, i32* %flags19, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then14, %if.then11
  %17 = load %struct.word_list*, %struct.word_list** %value, align 4
  %call21 = call %struct.word_list* @dequote_list(%struct.word_list* %17)
  br label %if.end22

if.end22:                                         ; preds = %if.end20, %do.end
  %18 = load %struct.word_list*, %struct.word_list** %value, align 4
  store %struct.word_list* %18, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end22, %if.then
  %19 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %19
}

; Function Attrs: noinline nounwind
define i8* @expand_arith_string(i8* %string, i32 %quoted) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %td = alloca %struct.word_desc, align 4
  %list = alloca %struct.word_list*, align 4
  %tlist = alloca %struct.word_list*, align 4
  %slen = alloca i32, align 4
  %i = alloca i32, align 4
  %saw_quote = alloca i32, align 4
  %ret = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp = icmp ugt i32 %call, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %call1 = call i32 @strlen(i8* %1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %slen, align 4
  store i32 0, i32* %saw_quote, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %cond.end
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  %4 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %7 to i32
  %cmp3 = icmp eq i32 %conv, 36
  br i1 %cmp3, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %8 = load i8*, i8** %string.addr, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %10 to i32
  %cmp7 = icmp eq i32 %conv6, 96
  br i1 %cmp7, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %11 = load i8*, i8** %string.addr, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i32 %12
  %13 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %13 to i32
  %cmp12 = icmp eq i32 %conv11, 60
  br i1 %cmp12, label %if.then, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %14 = load i8*, i8** %string.addr, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx15 = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx15, align 1
  %conv16 = sext i8 %16 to i32
  %cmp17 = icmp eq i32 %conv16, 62
  br i1 %cmp17, label %if.then, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %17 = load i8*, i8** %string.addr, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx20 = getelementptr inbounds i8, i8* %17, i32 %18
  %19 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %19 to i32
  %cmp22 = icmp eq i32 %conv21, 1
  br i1 %cmp22, label %if.then, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false19
  %20 = load i8*, i8** %string.addr, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %arrayidx25, align 1
  %conv26 = sext i8 %22 to i32
  %cmp27 = icmp eq i32 %conv26, 126
  br i1 %cmp27, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false24, %lor.lhs.false19, %lor.lhs.false14, %lor.lhs.false9, %lor.lhs.false, %while.body
  br label %while.end

if.else:                                          ; preds = %lor.lhs.false24
  %23 = load i8*, i8** %string.addr, align 4
  %24 = load i32, i32* %i, align 4
  %arrayidx29 = getelementptr inbounds i8, i8* %23, i32 %24
  %25 = load i8, i8* %arrayidx29, align 1
  %conv30 = sext i8 %25 to i32
  %cmp31 = icmp eq i32 %conv30, 39
  br i1 %cmp31, label %if.then43, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %if.else
  %26 = load i8*, i8** %string.addr, align 4
  %27 = load i32, i32* %i, align 4
  %arrayidx34 = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %28 to i32
  %cmp36 = icmp eq i32 %conv35, 92
  br i1 %cmp36, label %if.then43, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %29 = load i8*, i8** %string.addr, align 4
  %30 = load i32, i32* %i, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %29, i32 %30
  %31 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %31 to i32
  %cmp41 = icmp eq i32 %conv40, 34
  br i1 %cmp41, label %if.then43, label %if.end

if.then43:                                        ; preds = %lor.lhs.false38, %lor.lhs.false33, %if.else
  store i32 1, i32* %saw_quote, align 4
  br label %if.end

if.end:                                           ; preds = %if.then43, %lor.lhs.false38
  br label %if.end44

if.end44:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end44
  %32 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp45 = icmp sgt i32 %32, 1
  br i1 %cmp45, label %if.then47, label %if.else69

if.then47:                                        ; preds = %do.body
  %33 = load i8*, i8** %string.addr, align 4
  %34 = load i32, i32* %i, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %33, i32 %34
  %35 = load i8, i8* %arrayidx48, align 1
  %call49 = call i32 @is_basic(i8 signext %35)
  store i32 %call49, i32* %_f, align 4
  %36 = load i32, i32* %_f, align 4
  %tobool50 = icmp ne i32 %36, 0
  br i1 %tobool50, label %if.then51, label %if.else52

if.then51:                                        ; preds = %if.then47
  store i32 1, i32* %mblength, align 4
  br label %if.end54

if.else52:                                        ; preds = %if.then47
  %37 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %38 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %37, i8* %38, i32 8, i32 4, i1 false)
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i32, i32* %slen, align 4
  %42 = load i32, i32* %i, align 4
  %sub = sub i32 %41, %42
  %call53 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call53, i32* %mblength, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then51
  %43 = load i32, i32* %mblength, align 4
  %cmp55 = icmp eq i32 %43, -2
  br i1 %cmp55, label %if.then60, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %if.end54
  %44 = load i32, i32* %mblength, align 4
  %cmp58 = icmp eq i32 %44, -1
  br i1 %cmp58, label %if.then60, label %if.else61

if.then60:                                        ; preds = %lor.lhs.false57, %if.end54
  %45 = bitcast %struct.__mbstate_t* %state to i8*
  %46 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 8, i32 4, i1 false)
  %47 = load i32, i32* %i, align 4
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end68

if.else61:                                        ; preds = %lor.lhs.false57
  %48 = load i32, i32* %mblength, align 4
  %cmp62 = icmp eq i32 %48, 0
  br i1 %cmp62, label %if.then64, label %if.else66

if.then64:                                        ; preds = %if.else61
  %49 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %49, 1
  store i32 %inc65, i32* %i, align 4
  br label %if.end67

if.else66:                                        ; preds = %if.else61
  %50 = load i32, i32* %mblength, align 4
  %51 = load i32, i32* %i, align 4
  %add = add i32 %51, %50
  store i32 %add, i32* %i, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then64
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then60
  br label %if.end71

if.else69:                                        ; preds = %do.body
  %52 = load i32, i32* %i, align 4
  %inc70 = add nsw i32 %52, 1
  store i32 %inc70, i32* %i, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.end68
  br label %do.end

do.end:                                           ; preds = %if.end71
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  %53 = load i8*, i8** %string.addr, align 4
  %54 = load i32, i32* %i, align 4
  %arrayidx72 = getelementptr inbounds i8, i8* %53, i32 %54
  %55 = load i8, i8* %arrayidx72, align 1
  %tobool73 = icmp ne i8 %55, 0
  br i1 %tobool73, label %if.then74, label %if.else100

if.then74:                                        ; preds = %while.end
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 1048576, i32* %flags, align 4
  %56 = load i8*, i8** %string.addr, align 4
  %call75 = call i32 @strlen(i8* %56)
  %add76 = add i32 1, %call75
  %call77 = call i8* @sh_xmalloc(i32 %add76, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3498)
  %57 = load i8*, i8** %string.addr, align 4
  %call78 = call i8* @strcpy(i8* %call77, i8* %57)
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %call78, i8** %word, align 4
  %58 = load i32, i32* %quoted.addr, align 4
  %call79 = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %td, i32 %58, i32 0, i32* null, i32* null)
  store %struct.word_list* %call79, %struct.word_list** %list, align 4
  %59 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool80 = icmp ne %struct.word_list* %59, null
  br i1 %tobool80, label %if.then81, label %if.end87

if.then81:                                        ; preds = %if.then74
  %60 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call82 = call %struct.word_list* @word_list_split(%struct.word_list* %60)
  store %struct.word_list* %call82, %struct.word_list** %tlist, align 4
  %61 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %61)
  %62 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  store %struct.word_list* %62, %struct.word_list** %list, align 4
  %63 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool83 = icmp ne %struct.word_list* %63, null
  br i1 %tobool83, label %if.then84, label %if.end86

if.then84:                                        ; preds = %if.then81
  %64 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call85 = call %struct.word_list* @dequote_list(%struct.word_list* %64)
  br label %if.end86

if.end86:                                         ; preds = %if.then84, %if.then81
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then74
  %65 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool88 = icmp ne %struct.word_list* %65, null
  br i1 %tobool88, label %if.then89, label %if.else91

if.then89:                                        ; preds = %if.end87
  %66 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call90 = call i8* @string_list(%struct.word_list* %66)
  store i8* %call90, i8** %ret, align 4
  %67 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %67)
  br label %if.end92

if.else91:                                        ; preds = %if.end87
  store i8* null, i8** %ret, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then89
  br label %do.body93

do.body93:                                        ; preds = %if.end92
  %word94 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %68 = load i8*, i8** %word94, align 4
  %tobool95 = icmp ne i8* %68, null
  br i1 %tobool95, label %if.then96, label %if.end98

if.then96:                                        ; preds = %do.body93
  %word97 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %69 = load i8*, i8** %word97, align 4
  call void @sh_xfree(i8* %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3518)
  br label %if.end98

if.end98:                                         ; preds = %if.then96, %do.body93
  br label %do.end99

do.end99:                                         ; preds = %if.end98
  br label %if.end120

if.else100:                                       ; preds = %while.end
  %70 = load i32, i32* %saw_quote, align 4
  %tobool101 = icmp ne i32 %70, 0
  br i1 %tobool101, label %land.lhs.true, label %if.else105

land.lhs.true:                                    ; preds = %if.else100
  %71 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %71, 256
  %tobool102 = icmp ne i32 %and, 0
  br i1 %tobool102, label %if.then103, label %if.else105

if.then103:                                       ; preds = %land.lhs.true
  %72 = load i8*, i8** %string.addr, align 4
  %73 = load i32, i32* %quoted.addr, align 4
  %call104 = call i8* @string_quote_removal(i8* %72, i32 %73)
  store i8* %call104, i8** %ret, align 4
  br label %if.end119

if.else105:                                       ; preds = %land.lhs.true, %if.else100
  %74 = load i32, i32* %saw_quote, align 4
  %tobool106 = icmp ne i32 %74, 0
  br i1 %tobool106, label %land.lhs.true107, label %if.else113

land.lhs.true107:                                 ; preds = %if.else105
  %75 = load i32, i32* %quoted.addr, align 4
  %and108 = and i32 %75, 3
  %cmp109 = icmp eq i32 %and108, 0
  br i1 %cmp109, label %if.then111, label %if.else113

if.then111:                                       ; preds = %land.lhs.true107
  %76 = load i8*, i8** %string.addr, align 4
  %77 = load i32, i32* %quoted.addr, align 4
  %call112 = call i8* @string_quote_removal(i8* %76, i32 %77)
  store i8* %call112, i8** %ret, align 4
  br label %if.end118

if.else113:                                       ; preds = %land.lhs.true107, %if.else105
  %78 = load i8*, i8** %string.addr, align 4
  %call114 = call i32 @strlen(i8* %78)
  %add115 = add i32 1, %call114
  %call116 = call i8* @sh_xmalloc(i32 %add115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3525)
  %79 = load i8*, i8** %string.addr, align 4
  %call117 = call i8* @strcpy(i8* %call116, i8* %79)
  store i8* %call117, i8** %ret, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.else113, %if.then111
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then103
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %do.end99
  %80 = load i8*, i8** %ret, align 4
  ret i8* %80
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @call_expand_word_internal(%struct.word_desc* %w, i32 %q, i32 %i, i32* %c, i32* %e) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %w.addr = alloca %struct.word_desc*, align 4
  %q.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %c.addr = alloca i32*, align 4
  %e.addr = alloca i32*, align 4
  %result = alloca %struct.word_list*, align 4
  store %struct.word_desc* %w, %struct.word_desc** %w.addr, align 4
  store i32 %q, i32* %q.addr, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32* %c, i32** %c.addr, align 4
  store i32* %e, i32** %e.addr, align 4
  %0 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %1 = load i32, i32* %q.addr, align 4
  %2 = load i32, i32* %i.addr, align 4
  %3 = load i32*, i32** %c.addr, align 4
  %4 = load i32*, i32** %e.addr, align 4
  %call = call %struct.word_list* @expand_word_internal(%struct.word_desc* %0, i32 %1, i32 %2, i32* %3, i32* %4)
  store %struct.word_list* %call, %struct.word_list** %result, align 4
  %5 = load %struct.word_list*, %struct.word_list** %result, align 4
  %cmp = icmp eq %struct.word_list* %5, @expand_word_error
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.word_list*, %struct.word_list** %result, align 4
  %cmp1 = icmp eq %struct.word_list* %6, @expand_word_fatal
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 0
  store i8* null, i8** %word, align 4
  store i32 1, i32* @last_command_exit_value, align 4
  %8 = load %struct.word_list*, %struct.word_list** %result, align 4
  %cmp2 = icmp eq %struct.word_list* %8, @expand_word_error
  %cond = select i1 %cmp2, i32 2, i32 1
  call void @exp_jump_to_top_level(i32 %cond)
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.else:                                          ; preds = %lor.lhs.false
  %9 = load %struct.word_list*, %struct.word_list** %result, align 4
  store %struct.word_list* %9, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %10
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @word_list_split(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %result = alloca %struct.word_list*, align 4
  %t = alloca %struct.word_list*, align 4
  %tresult = alloca %struct.word_list*, align 4
  %e = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %t, align 4
  store %struct.word_list* null, %struct.word_list** %result, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %t, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %t, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %4 = load i8*, i8** @ifs_value, align 4
  %call = call %struct.word_list* @word_split(%struct.word_desc* %3, i8* %4)
  store %struct.word_list* %call, %struct.word_list** %tresult, align 4
  %5 = load %struct.word_list*, %struct.word_list** %result, align 4
  %cmp = icmp eq %struct.word_list* %5, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  store %struct.word_list* %6, %struct.word_list** %e, align 4
  store %struct.word_list* %6, %struct.word_list** %result, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %7 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  %8 = load %struct.word_list*, %struct.word_list** %e, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %8, i32 0, i32 0
  store %struct.word_list* %7, %struct.word_list** %next, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else
  %9 = load %struct.word_list*, %struct.word_list** %e, align 4
  %next1 = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 0
  %10 = load %struct.word_list*, %struct.word_list** %next1, align 4
  %tobool2 = icmp ne %struct.word_list* %10, null
  br i1 %tobool2, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load %struct.word_list*, %struct.word_list** %e, align 4
  %next3 = getelementptr inbounds %struct.word_list, %struct.word_list* %11, i32 0, i32 0
  %12 = load %struct.word_list*, %struct.word_list** %next3, align 4
  store %struct.word_list* %12, %struct.word_list** %e, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load %struct.word_list*, %struct.word_list** %t, align 4
  %next4 = getelementptr inbounds %struct.word_list, %struct.word_list* %13, i32 0, i32 0
  %14 = load %struct.word_list*, %struct.word_list** %next4, align 4
  store %struct.word_list* %14, %struct.word_list** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load %struct.word_list*, %struct.word_list** %result, align 4
  ret %struct.word_list* %15
}

; Function Attrs: noinline nounwind
define %struct.word_list* @dequote_list(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %s = alloca i8*, align 4
  %tlist = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %tlist, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  %call = call i8* @dequote_string(i8* %4)
  store i8* %call, i8** %s, align 4
  %5 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %word2 = getelementptr inbounds %struct.word_list, %struct.word_list* %5, i32 0, i32 1
  %6 = load %struct.word_desc*, %struct.word_desc** %word2, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %6, i32 0, i32 0
  %7 = load i8*, i8** %word3, align 4
  %arrayidx = getelementptr inbounds i8, i8* %7, i32 0
  %8 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %8 to i32
  %cmp = icmp eq i32 %conv, 127
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %word5 = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 1
  %10 = load %struct.word_desc*, %struct.word_desc** %word5, align 4
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  %11 = load i8*, i8** %word6, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i32 1
  %12 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %12 to i32
  %cmp9 = icmp eq i32 %conv8, 0
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %word11 = getelementptr inbounds %struct.word_list, %struct.word_list* %13, i32 0, i32 1
  %14 = load %struct.word_desc*, %struct.word_desc** %word11, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %14, i32 0, i32 1
  %15 = load i32, i32* %flags, align 4
  %and = and i32 %15, -262145
  store i32 %and, i32* %flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %16 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %word12 = getelementptr inbounds %struct.word_list, %struct.word_list* %16, i32 0, i32 1
  %17 = load %struct.word_desc*, %struct.word_desc** %word12, align 4
  %word13 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %17, i32 0, i32 0
  %18 = load i8*, i8** %word13, align 4
  call void @sh_xfree(i8* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4112)
  %19 = load i8*, i8** %s, align 4
  %20 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %word14 = getelementptr inbounds %struct.word_list, %struct.word_list* %20, i32 0, i32 1
  %21 = load %struct.word_desc*, %struct.word_desc** %word14, align 4
  %word15 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %21, i32 0, i32 0
  store i8* %19, i8** %word15, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %22, i32 0, i32 0
  %23 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %23, %struct.word_list** %tlist, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  ret %struct.word_list* %24
}

; Function Attrs: noinline nounwind
define i8* @string_quote_removal(i8* %string, i32 %quoted) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %slen = alloca i32, align 4
  %r = alloca i8*, align 4
  %result_string = alloca i8*, align 4
  %temp = alloca i8*, align 4
  %send = alloca i8*, align 4
  %sindex = alloca i32, align 4
  %tindex = alloca i32, align 4
  %dquote = alloca i32, align 4
  %c = alloca i8, align 1
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_i = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %slen, align 4
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %slen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %2, i32 %3
  store i8* %add.ptr, i8** %send, align 4
  %4 = load i32, i32* %slen, align 4
  %add = add i32 %4, 1
  %call1 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9877)
  store i8* %call1, i8** %result_string, align 4
  store i8* %call1, i8** %r, align 4
  store i32 0, i32* %sindex, align 4
  store i32 0, i32* %dquote, align 4
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %entry
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i32, i32* %sindex, align 4
  %arrayidx = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx, align 1
  store i8 %7, i8* %c, align 1
  %tobool = icmp ne i8 %7, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i8, i8* %c, align 1
  %conv = zext i8 %8 to i32
  switch i32 %conv, label %sw.default [
    i32 92, label %sw.bb
    i32 39, label %sw.bb43
    i32 34, label %sw.bb60
  ]

sw.bb:                                            ; preds = %for.body
  %9 = load i8*, i8** %string.addr, align 4
  %10 = load i32, i32* %sindex, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %sindex, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %9, i32 %inc
  %11 = load i8, i8* %arrayidx2, align 1
  store i8 %11, i8* %c, align 1
  %12 = load i8, i8* %c, align 1
  %conv3 = zext i8 %12 to i32
  %cmp = icmp eq i32 %conv3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %13 = load i8*, i8** %r, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %r, align 4
  store i8 92, i8* %13, align 1
  br label %sw.epilog

if.end:                                           ; preds = %sw.bb
  %14 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %14, 3
  %tobool5 = icmp ne i32 %and, 0
  br i1 %tobool5, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %15 = load i32, i32* %dquote, align 4
  %tobool6 = icmp ne i32 %15, 0
  br i1 %tobool6, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %16 = load i8, i8* %c, align 1
  %idxprom = zext i8 %16 to i32
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %17 = load i32, i32* %arrayidx7, align 4
  %and8 = and i32 %17, 64
  %cmp9 = icmp eq i32 %and8, 0
  br i1 %cmp9, label %if.then11, label %if.end13

if.then11:                                        ; preds = %land.lhs.true
  %18 = load i8*, i8** %r, align 4
  %incdec.ptr12 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr12, i8** %r, align 4
  store i8 92, i8* %18, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %land.lhs.true, %lor.lhs.false
  br label %sw.default

sw.default:                                       ; preds = %for.body, %if.end13
  br label %do.body

do.body:                                          ; preds = %sw.default
  %19 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp14 = icmp sgt i32 %19, 1
  br i1 %cmp14, label %if.then16, label %if.else38

if.then16:                                        ; preds = %do.body
  %20 = load i8*, i8** %string.addr, align 4
  %21 = load i32, i32* %sindex, align 4
  %add.ptr17 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %add.ptr17, align 1
  %call18 = call i32 @is_basic(i8 signext %22)
  store i32 %call18, i32* %_i, align 4
  %23 = load i32, i32* %_i, align 4
  %tobool19 = icmp ne i32 %23, 0
  br i1 %tobool19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then16
  store i32 1, i32* %mblength, align 4
  br label %if.end24

if.else:                                          ; preds = %if.then16
  %24 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %25 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %24, i8* %25, i32 8, i32 4, i1 false)
  %26 = load i8*, i8** %string.addr, align 4
  %27 = load i32, i32* %sindex, align 4
  %add.ptr21 = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i8*, i8** %send, align 4
  %29 = load i8*, i8** %string.addr, align 4
  %30 = load i32, i32* %sindex, align 4
  %add.ptr22 = getelementptr inbounds i8, i8* %29, i32 %30
  %sub.ptr.lhs.cast = ptrtoint i8* %28 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %add.ptr22 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call23 = call i32 @mbrlen(i8* %add.ptr21, i32 %sub.ptr.sub, %struct.__mbstate_t* %state)
  store i32 %call23, i32* %mblength, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then20
  %31 = load i32, i32* %mblength, align 4
  %cmp25 = icmp eq i32 %31, -2
  br i1 %cmp25, label %if.then30, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %if.end24
  %32 = load i32, i32* %mblength, align 4
  %cmp28 = icmp eq i32 %32, -1
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %lor.lhs.false27, %if.end24
  %33 = bitcast %struct.__mbstate_t* %state to i8*
  %34 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %33, i8* %34, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end34

if.else31:                                        ; preds = %lor.lhs.false27
  %35 = load i32, i32* %mblength, align 4
  %cmp32 = icmp ult i32 %35, 1
  br i1 %cmp32, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else31
  br label %cond.end

cond.false:                                       ; preds = %if.else31
  %36 = load i32, i32* %mblength, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %36, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  br label %if.end34

if.end34:                                         ; preds = %cond.end, %if.then30
  %37 = load i8*, i8** %r, align 4
  %38 = load i8*, i8** %string.addr, align 4
  %39 = load i32, i32* %sindex, align 4
  %add.ptr35 = getelementptr inbounds i8, i8* %38, i32 %39
  %40 = load i32, i32* %mblength, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %37, i8* %add.ptr35, i32 %40, i32 1, i1 false)
  %41 = load i32, i32* %mblength, align 4
  %42 = load i8*, i8** %r, align 4
  %add.ptr36 = getelementptr inbounds i8, i8* %42, i32 %41
  store i8* %add.ptr36, i8** %r, align 4
  %43 = load i32, i32* %mblength, align 4
  %44 = load i32, i32* %sindex, align 4
  %add37 = add i32 %44, %43
  store i32 %add37, i32* %sindex, align 4
  br label %if.end42

if.else38:                                        ; preds = %do.body
  %45 = load i8*, i8** %string.addr, align 4
  %46 = load i32, i32* %sindex, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %45, i32 %46
  %47 = load i8, i8* %arrayidx39, align 1
  %48 = load i8*, i8** %r, align 4
  %incdec.ptr40 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr40, i8** %r, align 4
  store i8 %47, i8* %48, align 1
  %49 = load i32, i32* %sindex, align 4
  %inc41 = add nsw i32 %49, 1
  store i32 %inc41, i32* %sindex, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.else38, %if.end34
  br label %do.end

do.end:                                           ; preds = %if.end42
  br label %sw.epilog

sw.bb43:                                          ; preds = %for.body
  %50 = load i32, i32* %quoted.addr, align 4
  %and44 = and i32 %50, 3
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %if.then48, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %sw.bb43
  %51 = load i32, i32* %dquote, align 4
  %tobool47 = icmp ne i32 %51, 0
  br i1 %tobool47, label %if.then48, label %if.end51

if.then48:                                        ; preds = %lor.lhs.false46, %sw.bb43
  %52 = load i8, i8* %c, align 1
  %53 = load i8*, i8** %r, align 4
  %incdec.ptr49 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr49, i8** %r, align 4
  store i8 %52, i8* %53, align 1
  %54 = load i32, i32* %sindex, align 4
  %inc50 = add nsw i32 %54, 1
  store i32 %inc50, i32* %sindex, align 4
  br label %sw.epilog

if.end51:                                         ; preds = %lor.lhs.false46
  %55 = load i32, i32* %sindex, align 4
  %add52 = add nsw i32 %55, 1
  store i32 %add52, i32* %tindex, align 4
  %56 = load i8*, i8** %string.addr, align 4
  %call53 = call i8* @string_extract_single_quoted(i8* %56, i32* %tindex)
  store i8* %call53, i8** %temp, align 4
  %57 = load i8*, i8** %temp, align 4
  %tobool54 = icmp ne i8* %57, null
  br i1 %tobool54, label %if.then55, label %if.end59

if.then55:                                        ; preds = %if.end51
  %58 = load i8*, i8** %r, align 4
  %59 = load i8*, i8** %temp, align 4
  %call56 = call i8* @strcpy(i8* %58, i8* %59)
  %60 = load i8*, i8** %r, align 4
  %call57 = call i32 @strlen(i8* %60)
  %61 = load i8*, i8** %r, align 4
  %add.ptr58 = getelementptr inbounds i8, i8* %61, i32 %call57
  store i8* %add.ptr58, i8** %r, align 4
  %62 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %62, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9911)
  br label %if.end59

if.end59:                                         ; preds = %if.then55, %if.end51
  %63 = load i32, i32* %tindex, align 4
  store i32 %63, i32* %sindex, align 4
  br label %sw.epilog

sw.bb60:                                          ; preds = %for.body
  %64 = load i32, i32* %dquote, align 4
  %sub = sub nsw i32 1, %64
  store i32 %sub, i32* %dquote, align 4
  %65 = load i32, i32* %sindex, align 4
  %inc61 = add nsw i32 %65, 1
  store i32 %inc61, i32* %sindex, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb60, %if.end59, %if.then48, %do.end, %if.then
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %66 = load i8*, i8** %r, align 4
  store i8 0, i8* %66, align 1
  %67 = load i8*, i8** %result_string, align 4
  ret i8* %67
}

; Function Attrs: noinline nounwind
define i8* @remove_backslashes(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %r = alloca i8*, align 4
  %ret = alloca i8*, align 4
  %s = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %0)
  %add = add i32 %call, 1
  %call1 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3538)
  store i8* %call1, i8** %ret, align 4
  store i8* %call1, i8** %r, align 4
  %1 = load i8*, i8** %string.addr, align 4
  store i8* %1, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end9, %entry
  %2 = load i8*, i8** %s, align 4
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 4
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %tobool2 = icmp ne i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %tobool2, %land.rhs ]
  br i1 %5, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %6 = load i8*, i8** %s, align 4
  %7 = load i8, i8* %6, align 1
  %conv3 = sext i8 %7 to i32
  %cmp = icmp eq i32 %conv3, 92
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %9 = load i8*, i8** %s, align 4
  %10 = load i8, i8* %9, align 1
  %conv5 = sext i8 %10 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  br label %for.end

if.end9:                                          ; preds = %if.end
  %11 = load i8*, i8** %s, align 4
  %incdec.ptr10 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr10, i8** %s, align 4
  %12 = load i8, i8* %11, align 1
  %13 = load i8*, i8** %r, align 4
  %incdec.ptr11 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr11, i8** %r, align 4
  store i8 %12, i8* %13, align 1
  br label %for.cond

for.end:                                          ; preds = %if.then8, %land.end
  %14 = load i8*, i8** %r, align 4
  store i8 0, i8* %14, align 1
  %15 = load i8*, i8** %ret, align 4
  ret i8* %15
}

; Function Attrs: noinline nounwind
define i8* @cond_expand_word(%struct.word_desc* %w, i32 %special) #0 {
entry:
  %retval = alloca i8*, align 4
  %w.addr = alloca %struct.word_desc*, align 4
  %special.addr = alloca i32, align 4
  %r = alloca i8*, align 4
  %p = alloca i8*, align 4
  %l = alloca %struct.word_list*, align 4
  %qflags = alloca i32, align 4
  store %struct.word_desc* %w, %struct.word_desc** %w.addr, align 4
  store i32 %special, i32* %special.addr, align 4
  %0 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %0, i32 0, i32 0
  %1 = load i8*, i8** %word, align 4
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %2, i32 0, i32 0
  %3 = load i8*, i8** %word1, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 0
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* @expand_no_split_dollar_star, align 4
  %5 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %5, i32 0, i32 1
  %6 = load i32, i32* %flags, align 4
  %or = or i32 %6, 64
  store i32 %or, i32* %flags, align 4
  %7 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %call = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %7, i32 0, i32 0, i32* null, i32* null)
  store %struct.word_list* %call, %struct.word_list** %l, align 4
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  %8 = load %struct.word_list*, %struct.word_list** %l, align 4
  %tobool = icmp ne %struct.word_list* %8, null
  br i1 %tobool, label %if.then4, label %if.else18

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* %special.addr, align 4
  %cmp5 = icmp eq i32 %9, 0
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then4
  %10 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call8 = call %struct.word_list* @dequote_list(%struct.word_list* %10)
  %11 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call9 = call i8* @string_list(%struct.word_list* %11)
  store i8* %call9, i8** %r, align 4
  br label %if.end17

if.else:                                          ; preds = %if.then4
  store i32 1, i32* %qflags, align 4
  %12 = load i32, i32* %special.addr, align 4
  %cmp10 = icmp eq i32 %12, 2
  br i1 %cmp10, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.else
  %13 = load i32, i32* %qflags, align 4
  %or13 = or i32 %13, 4
  store i32 %or13, i32* %qflags, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.else
  %14 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @word_list_remove_quoted_nulls(%struct.word_list* %14)
  %15 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call15 = call i8* @string_list(%struct.word_list* %15)
  store i8* %call15, i8** %p, align 4
  %16 = load i8*, i8** %p, align 4
  %17 = load i32, i32* %qflags, align 4
  %call16 = call i8* @quote_string_for_globbing(i8* %16, i32 %17)
  store i8* %call16, i8** %r, align 4
  %18 = load i8*, i8** %p, align 4
  call void @sh_xfree(i8* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3593)
  br label %if.end17

if.end17:                                         ; preds = %if.end14, %if.then7
  %19 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @dispose_words(%struct.word_list* %19)
  br label %if.end19

if.else18:                                        ; preds = %if.end
  store i8* null, i8** %r, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.end17
  %20 = load i8*, i8** %r, align 4
  store i8* %20, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end19, %if.then
  %21 = load i8*, i8** %retval, align 4
  ret i8* %21
}

declare i8* @quote_string_for_globbing(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal %struct.word_list* @expand_string_internal(i8* %string, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %td = alloca %struct.word_desc, align 4
  %tresult = alloca %struct.word_list*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 0, i32* %flags, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %3)
  %add = add i32 1, %call
  %call3 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3647)
  %4 = load i8*, i8** %string.addr, align 4
  %call4 = call i8* @strcpy(i8* %call3, i8* %4)
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %call4, i8** %word, align 4
  %5 = load i32, i32* %quoted.addr, align 4
  %call5 = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %td, i32 %5, i32 0, i32* null, i32* null)
  store %struct.word_list* %call5, %struct.word_list** %tresult, align 4
  br label %do.body

do.body:                                          ; preds = %if.end
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %6 = load i8*, i8** %word6, align 4
  %tobool = icmp ne i8* %6, null
  br i1 %tobool, label %if.then7, label %if.end9

if.then7:                                         ; preds = %do.body
  %word8 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %7 = load i8*, i8** %word8, align 4
  call void @sh_xfree(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3651)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end9
  %8 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  store %struct.word_list* %8, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %do.end, %if.then
  %9 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %9
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_prompt_string(i8* %string, i32 %quoted, i32 %wflags) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %wflags.addr = alloca i32, align 4
  %value = alloca %struct.word_list*, align 4
  %td = alloca %struct.word_desc, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %wflags, i32* %wflags.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %wflags.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 %3, i32* %flags, align 4
  %4 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %4)
  %add = add i32 1, %call
  %call3 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3737)
  %5 = load i8*, i8** %string.addr, align 4
  %call4 = call i8* @strcpy(i8* %call3, i8* %5)
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %call4, i8** %word, align 4
  store i32 1, i32* @no_longjmp_on_fatal_error, align 4
  %6 = load i32, i32* %quoted.addr, align 4
  %call5 = call %struct.word_list* @expand_word_internal(%struct.word_desc* %td, i32 %6, i32 0, i32* null, i32* null)
  store %struct.word_list* %call5, %struct.word_list** %value, align 4
  store i32 0, i32* @no_longjmp_on_fatal_error, align 4
  %7 = load %struct.word_list*, %struct.word_list** %value, align 4
  %cmp6 = icmp eq %struct.word_list* %7, @expand_word_error
  br i1 %cmp6, label %if.then11, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %if.end
  %8 = load %struct.word_list*, %struct.word_list** %value, align 4
  %cmp9 = icmp eq %struct.word_list* %8, @expand_word_fatal
  br i1 %cmp9, label %if.then11, label %if.end14

if.then11:                                        ; preds = %lor.lhs.false8, %if.end
  %9 = load i8*, i8** %string.addr, align 4
  %call12 = call %struct.word_desc* @make_bare_word(i8* %9)
  %call13 = call %struct.word_list* @make_word_list(%struct.word_desc* %call12, %struct.word_list* null)
  store %struct.word_list* %call13, %struct.word_list** %value, align 4
  %10 = load %struct.word_list*, %struct.word_list** %value, align 4
  store %struct.word_list* %10, %struct.word_list** %retval, align 4
  br label %return

if.end14:                                         ; preds = %lor.lhs.false8
  br label %do.body

do.body:                                          ; preds = %if.end14
  %word15 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %11 = load i8*, i8** %word15, align 4
  %tobool = icmp ne i8* %11, null
  br i1 %tobool, label %if.then16, label %if.end18

if.then16:                                        ; preds = %do.body
  %word17 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  %12 = load i8*, i8** %word17, align 4
  call void @sh_xfree(i8* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3748)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end18
  %13 = load %struct.word_list*, %struct.word_list** %value, align 4
  %tobool19 = icmp ne %struct.word_list* %13, null
  br i1 %tobool19, label %if.then20, label %if.end31

if.then20:                                        ; preds = %do.end
  %14 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word21 = getelementptr inbounds %struct.word_list, %struct.word_list* %14, i32 0, i32 1
  %15 = load %struct.word_desc*, %struct.word_desc** %word21, align 4
  %tobool22 = icmp ne %struct.word_desc* %15, null
  br i1 %tobool22, label %if.then23, label %if.end29

if.then23:                                        ; preds = %if.then20
  %16 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word24 = getelementptr inbounds %struct.word_list, %struct.word_list* %16, i32 0, i32 1
  %17 = load %struct.word_desc*, %struct.word_desc** %word24, align 4
  %word25 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %17, i32 0, i32 0
  %18 = load i8*, i8** %word25, align 4
  %call26 = call i8* @remove_quoted_nulls(i8* %18)
  %19 = load %struct.word_list*, %struct.word_list** %value, align 4
  %word27 = getelementptr inbounds %struct.word_list, %struct.word_list* %19, i32 0, i32 1
  %20 = load %struct.word_desc*, %struct.word_desc** %word27, align 4
  %flags28 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %20, i32 0, i32 1
  %21 = load i32, i32* %flags28, align 4
  %and = and i32 %21, -262145
  store i32 %and, i32* %flags28, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then23, %if.then20
  %22 = load %struct.word_list*, %struct.word_list** %value, align 4
  %call30 = call %struct.word_list* @dequote_list(%struct.word_list* %22)
  br label %if.end31

if.end31:                                         ; preds = %if.end29, %do.end
  %23 = load %struct.word_list*, %struct.word_list** %value, align 4
  store %struct.word_list* %23, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end31, %if.then11, %if.then
  %24 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %24
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @expand_word_internal(%struct.word_desc* %word, i32 %quoted, i32 %isexp, i32* %contains_dollar_at, i32* %expanded_something) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %word.addr = alloca %struct.word_desc*, align 4
  %quoted.addr = alloca i32, align 4
  %isexp.addr = alloca i32, align 4
  %contains_dollar_at.addr = alloca i32*, align 4
  %expanded_something.addr = alloca i32*, align 4
  %list = alloca %struct.word_list*, align 4
  %tword = alloca %struct.word_desc*, align 4
  %istring = alloca i8*, align 4
  %istring_size = alloca i32, align 4
  %istring_index = alloca i32, align 4
  %temp = alloca i8*, align 4
  %temp1 = alloca i8*, align 4
  %string = alloca i8*, align 4
  %string_size = alloca i32, align 4
  %sindex = alloca i32, align 4
  %quoted_dollar_at = alloca i32, align 4
  %quoted_state = alloca i32, align 4
  %had_quoted_null = alloca i32, align 4
  %has_dollar_at = alloca i32, align 4
  %temp_has_dollar_at = alloca i32, align 4
  %split_on_spaces = alloca i32, align 4
  %tflag = alloca i32, align 4
  %pflags = alloca i32, align 4
  %mb_cur_max = alloca i32, align 4
  %assignoff = alloca i32, align 4
  %c = alloca i8, align 1
  %t_index = alloca i32, align 4
  %twochars = alloca [2 x i8], align 1
  %state = alloca %struct.__mbstate_t, align 4
  %i = alloca i32, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %state_bak507 = alloca %struct.__mbstate_t, align 4
  %mblength508 = alloca i32, align 4
  %_i = alloca i32, align 4
  %state_bak593 = alloca %struct.__mbstate_t, align 4
  %mblength594 = alloca i32, align 4
  %_i595 = alloca i32, align 4
  %state_bak654 = alloca %struct.__mbstate_t, align 4
  %mblength655 = alloca i32, align 4
  %_i656 = alloca i32, align 4
  %state_bak712 = alloca %struct.__mbstate_t, align 4
  %mblength713 = alloca i32, align 4
  %_i714 = alloca i32, align 4
  %i1029 = alloca i32, align 4
  %state_bak1030 = alloca %struct.__mbstate_t, align 4
  %mblength1031 = alloca i32, align 4
  %i1076 = alloca i32, align 4
  %state_bak1077 = alloca %struct.__mbstate_t, align 4
  %mblength1078 = alloca i32, align 4
  %ifs_chars = alloca i8*, align 4
  %tstring = alloca i8*, align 4
  store %struct.word_desc* %word, %struct.word_desc** %word.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %isexp, i32* %isexp.addr, align 4
  store i32* %contains_dollar_at, i32** %contains_dollar_at.addr, align 4
  store i32* %expanded_something, i32** %expanded_something.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %1, i32 0, i32 0
  %2 = load i8*, i8** %word1, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %4 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), align 1
  %conv2 = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv, %conv2
  br i1 %cmp, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %word4 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %5, i32 0, i32 0
  %6 = load i8*, i8** %word4, align 4
  %call = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0))
  %cmp5 = icmp eq i32 %call, 0
  br i1 %cmp5, label %land.lhs.true7, label %if.end23

land.lhs.true7:                                   ; preds = %land.lhs.true
  %7 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 1
  %8 = load i32, i32* %flags, align 4
  %cmp8 = icmp eq i32 %8, 3
  br i1 %cmp8, label %land.lhs.true10, label %if.end23

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %9 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 1), align 4
  %tobool = icmp ne i8* %9, null
  br i1 %tobool, label %if.then, label %if.end23

if.then:                                          ; preds = %land.lhs.true10
  %10 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool11 = icmp ne i32* %10, null
  br i1 %tobool11, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.then
  %11 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %11, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %if.then
  %12 = load i32*, i32** %expanded_something.addr, align 4
  %tobool13 = icmp ne i32* %12, null
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  %13 = load i32*, i32** %expanded_something.addr, align 4
  store i32 1, i32* %13, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end
  %14 = load %struct.word_list*, %struct.word_list** @cached_quoted_dollar_at, align 4
  %tobool16 = icmp ne %struct.word_list* %14, null
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end15
  %15 = load %struct.word_list*, %struct.word_list** @cached_quoted_dollar_at, align 4
  %call18 = call %struct.word_list* @copy_word_list(%struct.word_list* %15)
  store %struct.word_list* %call18, %struct.word_list** %retval, align 4
  br label %return

if.end19:                                         ; preds = %if.end15
  %call20 = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call20, %struct.word_list** %list, align 4
  %16 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call21 = call %struct.word_list* @quote_list(%struct.word_list* %16)
  store %struct.word_list* %call21, %struct.word_list** %list, align 4
  %17 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call22 = call %struct.word_list* @copy_word_list(%struct.word_list* %17)
  store %struct.word_list* %call22, %struct.word_list** @cached_quoted_dollar_at, align 4
  %18 = load %struct.word_list*, %struct.word_list** %list, align 4
  store %struct.word_list* %18, %struct.word_list** %retval, align 4
  br label %return

if.end23:                                         ; preds = %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %entry
  store i32 112, i32* %istring_size, align 4
  %call24 = call i8* @sh_xmalloc(i32 112, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9102)
  store i8* %call24, i8** %istring, align 4
  %19 = load i8*, i8** %istring, align 4
  store i32 0, i32* %istring_index, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %19, i32 0
  store i8 0, i8* %arrayidx25, align 1
  store i32 0, i32* %has_dollar_at, align 4
  store i32 0, i32* %had_quoted_null, align 4
  store i32 0, i32* %quoted_dollar_at, align 4
  store i32 0, i32* %split_on_spaces, align 4
  store i32 0, i32* %quoted_state, align 4
  %20 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %word26 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %20, i32 0, i32 0
  %21 = load i8*, i8** %word26, align 4
  store i8* %21, i8** %string, align 4
  %22 = load i8*, i8** %string, align 4
  %cmp27 = icmp eq i8* %22, null
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end23
  br label %finished_with_string

if.end30:                                         ; preds = %if.end23
  %call31 = call i32 @__ctype_get_mb_cur_max()
  store i32 %call31, i32* %mb_cur_max, align 4
  %23 = load i32, i32* %mb_cur_max, align 4
  %cmp32 = icmp sgt i32 %23, 1
  br i1 %cmp32, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end30
  %24 = load i8*, i8** %string, align 4
  %call34 = call i32 @strlen(i8* %24)
  br label %cond.end

cond.false:                                       ; preds = %if.end30
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call34, %cond.true ], [ 1, %cond.false ]
  store i32 %cond, i32* %string_size, align 4
  %25 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool35 = icmp ne i32* %25, null
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %cond.end
  %26 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 0, i32* %26, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %cond.end
  store i32 -1, i32* %assignoff, align 4
  store i32 0, i32* %sindex, align 4
  br label %for.cond

for.cond:                                         ; preds = %sw.epilog, %if.then987, %if.then947, %if.then481, %if.end37
  %27 = load i8*, i8** %string, align 4
  %28 = load i32, i32* %sindex, align 4
  %arrayidx38 = getelementptr inbounds i8, i8* %27, i32 %28
  %29 = load i8, i8* %arrayidx38, align 1
  store i8 %29, i8* %c, align 1
  %30 = load i8, i8* %c, align 1
  %conv39 = zext i8 %30 to i32
  switch i32 %conv39, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb40
    i32 60, label %sw.bb92
    i32 62, label %sw.bb92
    i32 61, label %sw.bb127
    i32 58, label %sw.bb198
    i32 126, label %sw.bb247
    i32 36, label %sw.bb349
    i32 96, label %sw.bb428
    i32 92, label %sw.bb475
    i32 34, label %sw.bb786
    i32 39, label %sw.bb954
  ]

sw.bb:                                            ; preds = %for.cond
  br label %finished_with_string

sw.bb40:                                          ; preds = %for.cond
  %31 = load i32, i32* %sindex, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %sindex, align 4
  %32 = load i32, i32* %mb_cur_max, align 4
  %cmp41 = icmp sgt i32 %32, 1
  br i1 %cmp41, label %land.lhs.true43, label %if.else76

land.lhs.true43:                                  ; preds = %sw.bb40
  %33 = load i8*, i8** %string, align 4
  %34 = load i32, i32* %sindex, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %33, i32 %34
  %35 = load i8, i8* %arrayidx44, align 1
  %conv45 = sext i8 %35 to i32
  %tobool46 = icmp ne i32 %conv45, 0
  br i1 %tobool46, label %if.then47, label %if.else76

if.then47:                                        ; preds = %land.lhs.true43
  %36 = load i8*, i8** %string, align 4
  %37 = load i32, i32* %sindex, align 4
  %add.ptr = getelementptr inbounds i8, i8* %36, i32 %37
  %38 = load i8, i8* %add.ptr, align 1
  %call48 = call i32 @is_basic(i8 signext %38)
  store i32 %call48, i32* %i, align 4
  %39 = load i32, i32* %i, align 4
  %tobool49 = icmp ne i32 %39, 0
  br i1 %tobool49, label %if.then50, label %if.else

if.then50:                                        ; preds = %if.then47
  store i32 1, i32* %mblength, align 4
  br label %if.end53

if.else:                                          ; preds = %if.then47
  %40 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %41 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %40, i8* %41, i32 8, i32 4, i1 false)
  %42 = load i8*, i8** %string, align 4
  %43 = load i32, i32* %sindex, align 4
  %add.ptr51 = getelementptr inbounds i8, i8* %42, i32 %43
  %44 = load i32, i32* %string_size, align 4
  %45 = load i32, i32* %sindex, align 4
  %sub = sub i32 %44, %45
  %call52 = call i32 @mbrlen(i8* %add.ptr51, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call52, i32* %mblength, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then50
  %46 = load i32, i32* %mblength, align 4
  %cmp54 = icmp eq i32 %46, -1
  br i1 %cmp54, label %if.then58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end53
  %47 = load i32, i32* %mblength, align 4
  %cmp56 = icmp eq i32 %47, -2
  br i1 %cmp56, label %if.then58, label %if.end59

if.then58:                                        ; preds = %lor.lhs.false, %if.end53
  %48 = bitcast %struct.__mbstate_t* %state to i8*
  %49 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %48, i8* %49, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %lor.lhs.false
  %50 = load i32, i32* %mblength, align 4
  %cmp60 = icmp ult i32 %50, 1
  br i1 %cmp60, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.end59
  store i32 1, i32* %mblength, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.end59
  %51 = load i32, i32* %mblength, align 4
  %add = add i32 %51, 2
  %call64 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9139)
  store i8* %call64, i8** %temp, align 4
  %52 = load i8*, i8** %temp, align 4
  %arrayidx65 = getelementptr inbounds i8, i8* %52, i32 0
  store i8 1, i8* %arrayidx65, align 1
  store i32 0, i32* %i, align 4
  br label %for.cond66

for.cond66:                                       ; preds = %for.inc, %if.end63
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %mblength, align 4
  %cmp67 = icmp ult i32 %53, %54
  br i1 %cmp67, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond66
  %55 = load i8*, i8** %string, align 4
  %56 = load i32, i32* %sindex, align 4
  %inc69 = add nsw i32 %56, 1
  store i32 %inc69, i32* %sindex, align 4
  %arrayidx70 = getelementptr inbounds i8, i8* %55, i32 %56
  %57 = load i8, i8* %arrayidx70, align 1
  %58 = load i8*, i8** %temp, align 4
  %59 = load i32, i32* %i, align 4
  %add71 = add nsw i32 %59, 1
  %arrayidx72 = getelementptr inbounds i8, i8* %58, i32 %add71
  store i8 %57, i8* %arrayidx72, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %60, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond66

for.end:                                          ; preds = %for.cond66
  %61 = load i8*, i8** %temp, align 4
  %62 = load i32, i32* %mblength, align 4
  %add74 = add i32 %62, 1
  %arrayidx75 = getelementptr inbounds i8, i8* %61, i32 %add74
  store i8 0, i8* %arrayidx75, align 1
  br label %add_string

if.else76:                                        ; preds = %land.lhs.true43, %sw.bb40
  %call77 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9144)
  store i8* %call77, i8** %temp, align 4
  %63 = load i8*, i8** %temp, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %63, i32 0
  store i8 1, i8* %arrayidx78, align 1
  %64 = load i8*, i8** %string, align 4
  %65 = load i32, i32* %sindex, align 4
  %arrayidx79 = getelementptr inbounds i8, i8* %64, i32 %65
  %66 = load i8, i8* %arrayidx79, align 1
  store i8 %66, i8* %c, align 1
  %67 = load i8*, i8** %temp, align 4
  %arrayidx80 = getelementptr inbounds i8, i8* %67, i32 1
  store i8 %66, i8* %arrayidx80, align 1
  %68 = load i8*, i8** %temp, align 4
  %arrayidx81 = getelementptr inbounds i8, i8* %68, i32 2
  store i8 0, i8* %arrayidx81, align 1
  br label %if.end82

if.end82:                                         ; preds = %if.else76
  br label %dollar_add_string

dollar_add_string:                                ; preds = %do.end474, %do.end, %if.end82
  %69 = load i8*, i8** %string, align 4
  %70 = load i32, i32* %sindex, align 4
  %arrayidx83 = getelementptr inbounds i8, i8* %69, i32 %70
  %71 = load i8, i8* %arrayidx83, align 1
  %tobool84 = icmp ne i8 %71, 0
  br i1 %tobool84, label %if.then85, label %if.end87

if.then85:                                        ; preds = %dollar_add_string
  %72 = load i32, i32* %sindex, align 4
  %inc86 = add nsw i32 %72, 1
  store i32 %inc86, i32* %sindex, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.then85, %dollar_add_string
  br label %add_string

add_string:                                       ; preds = %for.end1110, %for.end1065, %if.then950, %cond.end904, %for.end751, %for.end693, %for.end632, %for.end545, %if.end427, %if.end87, %for.end
  %73 = load i8*, i8** %temp, align 4
  %tobool88 = icmp ne i8* %73, null
  br i1 %tobool88, label %if.then89, label %if.end91

if.then89:                                        ; preds = %add_string
  %74 = load i8*, i8** %temp, align 4
  %75 = load i8*, i8** %istring, align 4
  %call90 = call i8* @sub_append_string(i8* %74, i8* %75, i32* %istring_index, i32* %istring_size)
  store i8* %call90, i8** %istring, align 4
  store i8* null, i8** %temp, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %add_string
  br label %sw.epilog

sw.bb92:                                          ; preds = %for.cond, %for.cond
  %76 = load i8*, i8** %string, align 4
  %77 = load i32, i32* %sindex, align 4
  %inc93 = add nsw i32 %77, 1
  store i32 %inc93, i32* %sindex, align 4
  %arrayidx94 = getelementptr inbounds i8, i8* %76, i32 %inc93
  %78 = load i8, i8* %arrayidx94, align 1
  %conv95 = sext i8 %78 to i32
  %cmp96 = icmp ne i32 %conv95, 40
  br i1 %cmp96, label %if.then106, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %sw.bb92
  %79 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %79, 3
  %tobool99 = icmp ne i32 %and, 0
  br i1 %tobool99, label %if.then106, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %lor.lhs.false98
  %80 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags101 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %80, i32 0, i32 1
  %81 = load i32, i32* %flags101, align 4
  %and102 = and i32 %81, 1572864
  %tobool103 = icmp ne i32 %and102, 0
  br i1 %tobool103, label %if.then106, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %lor.lhs.false100
  %82 = load i32, i32* @posixly_correct, align 4
  %tobool105 = icmp ne i32 %82, 0
  br i1 %tobool105, label %if.then106, label %if.else107

if.then106:                                       ; preds = %lor.lhs.false104, %lor.lhs.false100, %lor.lhs.false98, %sw.bb92
  %83 = load i32, i32* %sindex, align 4
  %dec = add nsw i32 %83, -1
  store i32 %dec, i32* %sindex, align 4
  br label %add_character

if.else107:                                       ; preds = %lor.lhs.false104
  %84 = load i32, i32* %sindex, align 4
  %add108 = add nsw i32 %84, 1
  store i32 %add108, i32* %t_index, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.else107
  %85 = load i8*, i8** %string, align 4
  %86 = load i8, i8* %c, align 1
  %conv110 = zext i8 %86 to i32
  %cmp111 = icmp eq i32 %conv110, 60
  %cond113 = select i1 %cmp111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0)
  %call114 = call i8* @extract_process_subst(i8* %85, i8* %cond113, i32* %t_index, i32 0)
  store i8* %call114, i8** %temp1, align 4
  %87 = load i32, i32* %t_index, align 4
  store i32 %87, i32* %sindex, align 4
  %88 = load i8*, i8** %temp1, align 4
  %tobool115 = icmp ne i8* %88, null
  br i1 %tobool115, label %cond.true116, label %cond.false121

cond.true116:                                     ; preds = %if.end109
  %89 = load i8*, i8** %temp1, align 4
  %90 = load i8, i8* %c, align 1
  %conv117 = zext i8 %90 to i32
  %cmp118 = icmp eq i32 %conv117, 62
  %conv119 = zext i1 %cmp118 to i32
  %call120 = call i8* @process_substitute(i8* %89, i32 %conv119)
  br label %cond.end122

cond.false121:                                    ; preds = %if.end109
  br label %cond.end122

cond.end122:                                      ; preds = %cond.false121, %cond.true116
  %cond123 = phi i8* [ %call120, %cond.true116 ], [ null, %cond.false121 ]
  store i8* %cond123, i8** %temp, align 4
  br label %do.body

do.body:                                          ; preds = %cond.end122
  %91 = load i8*, i8** %temp1, align 4
  %tobool124 = icmp ne i8* %91, null
  br i1 %tobool124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %do.body
  %92 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9188)
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end126
  br label %dollar_add_string

sw.bb127:                                         ; preds = %for.cond
  %93 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags128 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %93, i32 0, i32 1
  %94 = load i32, i32* %flags128, align 4
  %and129 = and i32 %94, 6144
  %tobool130 = icmp ne i32 %and129, 0
  br i1 %tobool130, label %if.then131, label %if.end146

if.then131:                                       ; preds = %sw.bb127
  %95 = load i32, i32* %isexp.addr, align 4
  %cmp132 = icmp eq i32 %95, 0
  br i1 %cmp132, label %land.lhs.true134, label %if.else145

land.lhs.true134:                                 ; preds = %if.then131
  %96 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags135 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %96, i32 0, i32 1
  %97 = load i32, i32* %flags135, align 4
  %and136 = and i32 %97, 80
  %cmp137 = icmp eq i32 %and136, 0
  br i1 %cmp137, label %land.lhs.true139, label %if.else145

land.lhs.true139:                                 ; preds = %land.lhs.true134
  %98 = load i8, i8* %c, align 1
  %idxprom = zext i8 %98 to i32
  %arrayidx140 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom
  %99 = load i8, i8* %arrayidx140, align 1
  %conv141 = zext i8 %99 to i32
  %cmp142 = icmp ne i32 %conv141, 0
  br i1 %cmp142, label %if.then144, label %if.else145

if.then144:                                       ; preds = %land.lhs.true139
  br label %add_ifs_character

if.else145:                                       ; preds = %land.lhs.true139, %land.lhs.true134, %if.then131
  br label %add_character

if.end146:                                        ; preds = %sw.bb127
  %100 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags147 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %100, i32 0, i32 1
  %101 = load i32, i32* %flags147, align 4
  %and148 = and i32 %101, 4
  %tobool149 = icmp ne i32 %and148, 0
  br i1 %tobool149, label %land.lhs.true150, label %if.end164

land.lhs.true150:                                 ; preds = %if.end146
  %102 = load i32, i32* @posixly_correct, align 4
  %cmp151 = icmp eq i32 %102, 0
  br i1 %cmp151, label %land.lhs.true157, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %land.lhs.true150
  %103 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags154 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %103, i32 0, i32 1
  %104 = load i32, i32* %flags154, align 4
  %and155 = and i32 %104, 128
  %tobool156 = icmp ne i32 %and155, 0
  br i1 %tobool156, label %land.lhs.true157, label %if.end164

land.lhs.true157:                                 ; preds = %lor.lhs.false153, %land.lhs.true150
  %105 = load i32, i32* %assignoff, align 4
  %cmp158 = icmp eq i32 %105, -1
  br i1 %cmp158, label %land.lhs.true160, label %if.end164

land.lhs.true160:                                 ; preds = %land.lhs.true157
  %106 = load i32, i32* %sindex, align 4
  %cmp161 = icmp sgt i32 %106, 0
  br i1 %cmp161, label %if.then163, label %if.end164

if.then163:                                       ; preds = %land.lhs.true160
  %107 = load i32, i32* %sindex, align 4
  store i32 %107, i32* %assignoff, align 4
  br label %if.end164

if.end164:                                        ; preds = %if.then163, %land.lhs.true160, %land.lhs.true157, %lor.lhs.false153, %if.end146
  %108 = load i32, i32* %sindex, align 4
  %109 = load i32, i32* %assignoff, align 4
  %cmp165 = icmp eq i32 %108, %109
  br i1 %cmp165, label %land.lhs.true167, label %if.end175

land.lhs.true167:                                 ; preds = %if.end164
  %110 = load i8*, i8** %string, align 4
  %111 = load i32, i32* %sindex, align 4
  %add168 = add nsw i32 %111, 1
  %arrayidx169 = getelementptr inbounds i8, i8* %110, i32 %add168
  %112 = load i8, i8* %arrayidx169, align 1
  %conv170 = sext i8 %112 to i32
  %cmp171 = icmp eq i32 %conv170, 126
  br i1 %cmp171, label %if.then173, label %if.end175

if.then173:                                       ; preds = %land.lhs.true167
  %113 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags174 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %113, i32 0, i32 1
  %114 = load i32, i32* %flags174, align 4
  %or = or i32 %114, 8192
  store i32 %or, i32* %flags174, align 4
  br label %if.end175

if.end175:                                        ; preds = %if.then173, %land.lhs.true167, %if.end164
  %115 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags176 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %115, i32 0, i32 1
  %116 = load i32, i32* %flags176, align 4
  %and177 = and i32 %116, 131072
  %tobool178 = icmp ne i32 %and177, 0
  br i1 %tobool178, label %if.then179, label %if.end182

if.then179:                                       ; preds = %if.end175
  %117 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags180 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %117, i32 0, i32 1
  %118 = load i32, i32* %flags180, align 4
  %or181 = or i32 %118, 2048
  store i32 %or181, i32* %flags180, align 4
  br label %if.end182

if.end182:                                        ; preds = %if.then179, %if.end175
  %119 = load i32, i32* %isexp.addr, align 4
  %cmp183 = icmp eq i32 %119, 0
  br i1 %cmp183, label %land.lhs.true185, label %if.else197

land.lhs.true185:                                 ; preds = %if.end182
  %120 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags186 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %120, i32 0, i32 1
  %121 = load i32, i32* %flags186, align 4
  %and187 = and i32 %121, 80
  %cmp188 = icmp eq i32 %and187, 0
  br i1 %cmp188, label %land.lhs.true190, label %if.else197

land.lhs.true190:                                 ; preds = %land.lhs.true185
  %122 = load i8, i8* %c, align 1
  %idxprom191 = zext i8 %122 to i32
  %arrayidx192 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom191
  %123 = load i8, i8* %arrayidx192, align 1
  %conv193 = zext i8 %123 to i32
  %cmp194 = icmp ne i32 %conv193, 0
  br i1 %cmp194, label %if.then196, label %if.else197

if.then196:                                       ; preds = %land.lhs.true190
  br label %add_ifs_character

if.else197:                                       ; preds = %land.lhs.true190, %land.lhs.true185, %if.end182
  br label %add_character

sw.bb198:                                         ; preds = %for.cond
  %124 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags199 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %124, i32 0, i32 1
  %125 = load i32, i32* %flags199, align 4
  %and200 = and i32 %125, 4096
  %tobool201 = icmp ne i32 %and200, 0
  br i1 %tobool201, label %if.then202, label %if.end218

if.then202:                                       ; preds = %sw.bb198
  %126 = load i32, i32* %isexp.addr, align 4
  %cmp203 = icmp eq i32 %126, 0
  br i1 %cmp203, label %land.lhs.true205, label %if.else217

land.lhs.true205:                                 ; preds = %if.then202
  %127 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags206 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %127, i32 0, i32 1
  %128 = load i32, i32* %flags206, align 4
  %and207 = and i32 %128, 80
  %cmp208 = icmp eq i32 %and207, 0
  br i1 %cmp208, label %land.lhs.true210, label %if.else217

land.lhs.true210:                                 ; preds = %land.lhs.true205
  %129 = load i8, i8* %c, align 1
  %idxprom211 = zext i8 %129 to i32
  %arrayidx212 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom211
  %130 = load i8, i8* %arrayidx212, align 1
  %conv213 = zext i8 %130 to i32
  %cmp214 = icmp ne i32 %conv213, 0
  br i1 %cmp214, label %if.then216, label %if.else217

if.then216:                                       ; preds = %land.lhs.true210
  br label %add_ifs_character

if.else217:                                       ; preds = %land.lhs.true210, %land.lhs.true205, %if.then202
  br label %add_character

if.end218:                                        ; preds = %sw.bb198
  %131 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags219 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %131, i32 0, i32 1
  %132 = load i32, i32* %flags219, align 4
  %and220 = and i32 %132, 2180
  %tobool221 = icmp ne i32 %and220, 0
  br i1 %tobool221, label %land.lhs.true222, label %if.end231

land.lhs.true222:                                 ; preds = %if.end218
  %133 = load i8*, i8** %string, align 4
  %134 = load i32, i32* %sindex, align 4
  %add223 = add nsw i32 %134, 1
  %arrayidx224 = getelementptr inbounds i8, i8* %133, i32 %add223
  %135 = load i8, i8* %arrayidx224, align 1
  %conv225 = sext i8 %135 to i32
  %cmp226 = icmp eq i32 %conv225, 126
  br i1 %cmp226, label %if.then228, label %if.end231

if.then228:                                       ; preds = %land.lhs.true222
  %136 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags229 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %136, i32 0, i32 1
  %137 = load i32, i32* %flags229, align 4
  %or230 = or i32 %137, 8192
  store i32 %or230, i32* %flags229, align 4
  br label %if.end231

if.end231:                                        ; preds = %if.then228, %land.lhs.true222, %if.end218
  %138 = load i32, i32* %isexp.addr, align 4
  %cmp232 = icmp eq i32 %138, 0
  br i1 %cmp232, label %land.lhs.true234, label %if.else246

land.lhs.true234:                                 ; preds = %if.end231
  %139 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags235 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %139, i32 0, i32 1
  %140 = load i32, i32* %flags235, align 4
  %and236 = and i32 %140, 80
  %cmp237 = icmp eq i32 %and236, 0
  br i1 %cmp237, label %land.lhs.true239, label %if.else246

land.lhs.true239:                                 ; preds = %land.lhs.true234
  %141 = load i8, i8* %c, align 1
  %idxprom240 = zext i8 %141 to i32
  %arrayidx241 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom240
  %142 = load i8, i8* %arrayidx241, align 1
  %conv242 = zext i8 %142 to i32
  %cmp243 = icmp ne i32 %conv242, 0
  br i1 %cmp243, label %if.then245, label %if.else246

if.then245:                                       ; preds = %land.lhs.true239
  br label %add_ifs_character

if.else246:                                       ; preds = %land.lhs.true239, %land.lhs.true234, %if.end231
  br label %add_character

sw.bb247:                                         ; preds = %for.cond
  %143 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags248 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %143, i32 0, i32 1
  %144 = load i32, i32* %flags248, align 4
  %and249 = and i32 %144, 528384
  %tobool250 = icmp ne i32 %and249, 0
  br i1 %tobool250, label %if.then266, label %lor.lhs.false251

lor.lhs.false251:                                 ; preds = %sw.bb247
  %145 = load i32, i32* %sindex, align 4
  %cmp252 = icmp sgt i32 %145, 0
  br i1 %cmp252, label %land.lhs.true254, label %lor.lhs.false259

land.lhs.true254:                                 ; preds = %lor.lhs.false251
  %146 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags255 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %146, i32 0, i32 1
  %147 = load i32, i32* %flags255, align 4
  %and256 = and i32 %147, 8192
  %cmp257 = icmp eq i32 %and256, 0
  br i1 %cmp257, label %if.then266, label %lor.lhs.false259

lor.lhs.false259:                                 ; preds = %land.lhs.true254, %lor.lhs.false251
  %148 = load i32, i32* %quoted.addr, align 4
  %and260 = and i32 %148, 3
  %tobool261 = icmp ne i32 %and260, 0
  br i1 %tobool261, label %land.lhs.true262, label %if.end288

land.lhs.true262:                                 ; preds = %lor.lhs.false259
  %149 = load i32, i32* %quoted.addr, align 4
  %and263 = and i32 %149, 256
  %cmp264 = icmp eq i32 %and263, 0
  br i1 %cmp264, label %if.then266, label %if.end288

if.then266:                                       ; preds = %land.lhs.true262, %land.lhs.true254, %sw.bb247
  %150 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags267 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %150, i32 0, i32 1
  %151 = load i32, i32* %flags267, align 4
  %and268 = and i32 %151, -8193
  store i32 %and268, i32* %flags267, align 4
  %152 = load i32, i32* %isexp.addr, align 4
  %cmp269 = icmp eq i32 %152, 0
  br i1 %cmp269, label %land.lhs.true271, label %if.else287

land.lhs.true271:                                 ; preds = %if.then266
  %153 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags272 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %153, i32 0, i32 1
  %154 = load i32, i32* %flags272, align 4
  %and273 = and i32 %154, 80
  %cmp274 = icmp eq i32 %and273, 0
  br i1 %cmp274, label %land.lhs.true276, label %if.else287

land.lhs.true276:                                 ; preds = %land.lhs.true271
  %155 = load i8, i8* %c, align 1
  %idxprom277 = zext i8 %155 to i32
  %arrayidx278 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom277
  %156 = load i8, i8* %arrayidx278, align 1
  %conv279 = zext i8 %156 to i32
  %cmp280 = icmp ne i32 %conv279, 0
  br i1 %cmp280, label %land.lhs.true282, label %if.else287

land.lhs.true282:                                 ; preds = %land.lhs.true276
  %157 = load i32, i32* %quoted.addr, align 4
  %and283 = and i32 %157, 3
  %cmp284 = icmp eq i32 %and283, 0
  br i1 %cmp284, label %if.then286, label %if.else287

if.then286:                                       ; preds = %land.lhs.true282
  br label %add_ifs_character

if.else287:                                       ; preds = %land.lhs.true282, %land.lhs.true276, %land.lhs.true271, %if.then266
  br label %add_character

if.end288:                                        ; preds = %land.lhs.true262, %lor.lhs.false259
  %158 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags289 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %158, i32 0, i32 1
  %159 = load i32, i32* %flags289, align 4
  %and290 = and i32 %159, 2048
  %tobool291 = icmp ne i32 %and290, 0
  br i1 %tobool291, label %if.then292, label %if.else293

if.then292:                                       ; preds = %if.end288
  store i32 2, i32* %tflag, align 4
  br label %if.end300

if.else293:                                       ; preds = %if.end288
  %160 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags294 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %160, i32 0, i32 1
  %161 = load i32, i32* %flags294, align 4
  %and295 = and i32 %161, 132
  %tobool296 = icmp ne i32 %and295, 0
  br i1 %tobool296, label %if.then297, label %if.else298

if.then297:                                       ; preds = %if.else293
  store i32 1, i32* %tflag, align 4
  br label %if.end299

if.else298:                                       ; preds = %if.else293
  store i32 0, i32* %tflag, align 4
  br label %if.end299

if.end299:                                        ; preds = %if.else298, %if.then297
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.then292
  %162 = load i8*, i8** %string, align 4
  %163 = load i32, i32* %sindex, align 4
  %add.ptr301 = getelementptr inbounds i8, i8* %162, i32 %163
  %164 = load i32, i32* %tflag, align 4
  %call302 = call i8* @bash_tilde_find_word(i8* %add.ptr301, i32 %164, i32* %t_index)
  store i8* %call302, i8** %temp, align 4
  %165 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags303 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %165, i32 0, i32 1
  %166 = load i32, i32* %flags303, align 4
  %and304 = and i32 %166, -8193
  store i32 %and304, i32* %flags303, align 4
  %167 = load i8*, i8** %temp, align 4
  %tobool305 = icmp ne i8* %167, null
  br i1 %tobool305, label %land.lhs.true306, label %if.else343

land.lhs.true306:                                 ; preds = %if.end300
  %168 = load i8*, i8** %temp, align 4
  %169 = load i8, i8* %168, align 1
  %conv307 = sext i8 %169 to i32
  %tobool308 = icmp ne i32 %conv307, 0
  br i1 %tobool308, label %land.lhs.true309, label %if.else343

land.lhs.true309:                                 ; preds = %land.lhs.true306
  %170 = load i32, i32* %t_index, align 4
  %cmp310 = icmp sgt i32 %170, 0
  br i1 %cmp310, label %if.then312, label %if.else343

if.then312:                                       ; preds = %land.lhs.true309
  %171 = load i8*, i8** %temp, align 4
  %172 = load i32, i32* %tflag, align 4
  %call313 = call i8* @bash_tilde_expand(i8* %171, i32 %172)
  store i8* %call313, i8** %temp1, align 4
  %173 = load i8*, i8** %temp1, align 4
  %tobool314 = icmp ne i8* %173, null
  br i1 %tobool314, label %land.lhs.true315, label %if.end341

land.lhs.true315:                                 ; preds = %if.then312
  %174 = load i8*, i8** %temp1, align 4
  %175 = load i8, i8* %174, align 1
  %conv316 = sext i8 %175 to i32
  %cmp317 = icmp eq i32 %conv316, 126
  br i1 %cmp317, label %land.lhs.true319, label %if.end341

land.lhs.true319:                                 ; preds = %land.lhs.true315
  %176 = load i8*, i8** %temp, align 4
  %arrayidx320 = getelementptr inbounds i8, i8* %176, i32 0
  %177 = load i8, i8* %arrayidx320, align 1
  %conv321 = sext i8 %177 to i32
  %178 = load i8*, i8** %temp1, align 4
  %arrayidx322 = getelementptr inbounds i8, i8* %178, i32 0
  %179 = load i8, i8* %arrayidx322, align 1
  %conv323 = sext i8 %179 to i32
  %cmp324 = icmp eq i32 %conv321, %conv323
  br i1 %cmp324, label %land.lhs.true326, label %if.end341

land.lhs.true326:                                 ; preds = %land.lhs.true319
  %180 = load i8*, i8** %temp, align 4
  %181 = load i8*, i8** %temp1, align 4
  %call327 = call i32 @strcmp(i8* %180, i8* %181)
  %cmp328 = icmp eq i32 %call327, 0
  br i1 %cmp328, label %if.then330, label %if.end341

if.then330:                                       ; preds = %land.lhs.true326
  br label %do.body331

do.body331:                                       ; preds = %if.then330
  %182 = load i8*, i8** %temp, align 4
  %tobool332 = icmp ne i8* %182, null
  br i1 %tobool332, label %if.then333, label %if.end334

if.then333:                                       ; preds = %do.body331
  %183 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %183, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9288)
  br label %if.end334

if.end334:                                        ; preds = %if.then333, %do.body331
  br label %do.end335

do.end335:                                        ; preds = %if.end334
  br label %do.body336

do.body336:                                       ; preds = %do.end335
  %184 = load i8*, i8** %temp1, align 4
  %tobool337 = icmp ne i8* %184, null
  br i1 %tobool337, label %if.then338, label %if.end339

if.then338:                                       ; preds = %do.body336
  %185 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %185, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9289)
  br label %if.end339

if.end339:                                        ; preds = %if.then338, %do.body336
  br label %do.end340

do.end340:                                        ; preds = %if.end339
  br label %add_character

if.end341:                                        ; preds = %land.lhs.true326, %land.lhs.true319, %land.lhs.true315, %if.then312
  %186 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %186, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9292)
  %187 = load i8*, i8** %temp1, align 4
  store i8* %187, i8** %temp, align 4
  %188 = load i32, i32* %t_index, align 4
  %189 = load i32, i32* %sindex, align 4
  %add342 = add nsw i32 %189, %188
  store i32 %add342, i32* %sindex, align 4
  br label %add_quoted_string

if.else343:                                       ; preds = %land.lhs.true309, %land.lhs.true306, %if.end300
  br label %do.body344

do.body344:                                       ; preds = %if.else343
  %190 = load i8*, i8** %temp, align 4
  %tobool345 = icmp ne i8* %190, null
  br i1 %tobool345, label %if.then346, label %if.end347

if.then346:                                       ; preds = %do.body344
  %191 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %191, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9299)
  br label %if.end347

if.end347:                                        ; preds = %if.then346, %do.body344
  br label %do.end348

do.end348:                                        ; preds = %if.end347
  br label %add_character

sw.bb349:                                         ; preds = %for.cond
  %192 = load i32*, i32** %expanded_something.addr, align 4
  %tobool350 = icmp ne i32* %192, null
  br i1 %tobool350, label %if.then351, label %if.end352

if.then351:                                       ; preds = %sw.bb349
  %193 = load i32*, i32** %expanded_something.addr, align 4
  store i32 1, i32* %193, align 4
  br label %if.end352

if.end352:                                        ; preds = %if.then351, %sw.bb349
  store i32 0, i32* %temp_has_dollar_at, align 4
  %194 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags353 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %194, i32 0, i32 1
  %195 = load i32, i32* %flags353, align 4
  %and354 = and i32 %195, 1024
  %tobool355 = icmp ne i32 %and354, 0
  %cond356 = select i1 %tobool355, i32 1, i32 0
  store i32 %cond356, i32* %pflags, align 4
  %196 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags357 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %196, i32 0, i32 1
  %197 = load i32, i32* %flags357, align 4
  %and358 = and i32 %197, 64
  %tobool359 = icmp ne i32 %and358, 0
  br i1 %tobool359, label %if.then360, label %if.end362

if.then360:                                       ; preds = %if.end352
  %198 = load i32, i32* %pflags, align 4
  %or361 = or i32 %198, 4
  store i32 %or361, i32* %pflags, align 4
  br label %if.end362

if.end362:                                        ; preds = %if.then360, %if.end352
  %199 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags363 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %199, i32 0, i32 1
  %200 = load i32, i32* %flags363, align 4
  %and364 = and i32 %200, 2048
  %tobool365 = icmp ne i32 %and364, 0
  br i1 %tobool365, label %if.then366, label %if.end368

if.then366:                                       ; preds = %if.end362
  %201 = load i32, i32* %pflags, align 4
  %or367 = or i32 %201, 8
  store i32 %or367, i32* %pflags, align 4
  br label %if.end368

if.end368:                                        ; preds = %if.then366, %if.end362
  %202 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags369 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %202, i32 0, i32 1
  %203 = load i32, i32* %flags369, align 4
  %and370 = and i32 %203, 134217728
  %tobool371 = icmp ne i32 %and370, 0
  br i1 %tobool371, label %if.then372, label %if.end374

if.then372:                                       ; preds = %if.end368
  %204 = load i32, i32* %pflags, align 4
  %or373 = or i32 %204, 16
  store i32 %or373, i32* %pflags, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.then372, %if.end368
  %205 = load i8*, i8** %string, align 4
  %206 = load i32, i32* %quoted.addr, align 4
  %207 = load i32*, i32** %expanded_something.addr, align 4
  %208 = load i32, i32* %pflags, align 4
  %call375 = call %struct.word_desc* @param_expand(i8* %205, i32* %sindex, i32 %206, i32* %207, i32* %temp_has_dollar_at, i32* %quoted_dollar_at, i32* %had_quoted_null, i32 %208)
  store %struct.word_desc* %call375, %struct.word_desc** %tword, align 4
  %209 = load i32, i32* %temp_has_dollar_at, align 4
  %210 = load i32, i32* %has_dollar_at, align 4
  %add376 = add nsw i32 %210, %209
  store i32 %add376, i32* %has_dollar_at, align 4
  %211 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags377 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %211, i32 0, i32 1
  %212 = load i32, i32* %flags377, align 4
  %and378 = and i32 %212, 8
  %213 = load i32, i32* %split_on_spaces, align 4
  %add379 = add nsw i32 %213, %and378
  store i32 %add379, i32* %split_on_spaces, align 4
  %214 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %cmp380 = icmp eq %struct.word_desc* %214, @expand_wdesc_error
  br i1 %cmp380, label %if.then385, label %lor.lhs.false382

lor.lhs.false382:                                 ; preds = %if.end374
  %215 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %cmp383 = icmp eq %struct.word_desc* %215, @expand_wdesc_fatal
  br i1 %cmp383, label %if.then385, label %if.end389

if.then385:                                       ; preds = %lor.lhs.false382, %if.end374
  %216 = load i8*, i8** %string, align 4
  call void @sh_xfree(i8* %216, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9323)
  %217 = load i8*, i8** %istring, align 4
  call void @sh_xfree(i8* %217, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9324)
  %218 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %cmp386 = icmp eq %struct.word_desc* %218, @expand_wdesc_error
  %cond388 = select i1 %cmp386, %struct.word_list* @expand_word_error, %struct.word_list* @expand_word_fatal
  store %struct.word_list* %cond388, %struct.word_list** %retval, align 4
  br label %return

if.end389:                                        ; preds = %lor.lhs.false382
  %219 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool390 = icmp ne i32* %219, null
  br i1 %tobool390, label %land.lhs.true391, label %if.end394

land.lhs.true391:                                 ; preds = %if.end389
  %220 = load i32, i32* %has_dollar_at, align 4
  %tobool392 = icmp ne i32 %220, 0
  br i1 %tobool392, label %if.then393, label %if.end394

if.then393:                                       ; preds = %land.lhs.true391
  %221 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %221, align 4
  br label %if.end394

if.end394:                                        ; preds = %if.then393, %land.lhs.true391, %if.end389
  %222 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %tobool395 = icmp ne %struct.word_desc* %222, null
  br i1 %tobool395, label %land.lhs.true396, label %if.end401

land.lhs.true396:                                 ; preds = %if.end394
  %223 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags397 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %223, i32 0, i32 1
  %224 = load i32, i32* %flags397, align 4
  %and398 = and i32 %224, 262144
  %tobool399 = icmp ne i32 %and398, 0
  br i1 %tobool399, label %if.then400, label %if.end401

if.then400:                                       ; preds = %land.lhs.true396
  store i32 1, i32* %had_quoted_null, align 4
  br label %if.end401

if.end401:                                        ; preds = %if.then400, %land.lhs.true396, %if.end394
  %225 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %tobool402 = icmp ne %struct.word_desc* %225, null
  br i1 %tobool402, label %cond.true403, label %cond.false405

cond.true403:                                     ; preds = %if.end401
  %226 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %word404 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %226, i32 0, i32 0
  %227 = load i8*, i8** %word404, align 4
  br label %cond.end406

cond.false405:                                    ; preds = %if.end401
  br label %cond.end406

cond.end406:                                      ; preds = %cond.false405, %cond.true403
  %cond407 = phi i8* [ %227, %cond.true403 ], [ null, %cond.false405 ]
  store i8* %cond407, i8** %temp, align 4
  %228 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  call void @dispose_word_desc(%struct.word_desc* %228)
  %229 = load i32, i32* %had_quoted_null, align 4
  %tobool408 = icmp ne i32 %229, 0
  br i1 %tobool408, label %land.lhs.true409, label %if.end427

land.lhs.true409:                                 ; preds = %cond.end406
  %230 = load i8*, i8** %temp, align 4
  %tobool410 = icmp ne i8* %230, null
  br i1 %tobool410, label %land.lhs.true411, label %if.end427

land.lhs.true411:                                 ; preds = %land.lhs.true409
  %231 = load i8*, i8** %temp, align 4
  %arrayidx412 = getelementptr inbounds i8, i8* %231, i32 0
  %232 = load i8, i8* %arrayidx412, align 1
  %conv413 = sext i8 %232 to i32
  %cmp414 = icmp eq i32 %conv413, 127
  br i1 %cmp414, label %land.lhs.true416, label %if.end427

land.lhs.true416:                                 ; preds = %land.lhs.true411
  %233 = load i8*, i8** %temp, align 4
  %arrayidx417 = getelementptr inbounds i8, i8* %233, i32 1
  %234 = load i8, i8* %arrayidx417, align 1
  %conv418 = sext i8 %234 to i32
  %cmp419 = icmp eq i32 %conv418, 0
  br i1 %cmp419, label %if.then421, label %if.end427

if.then421:                                       ; preds = %land.lhs.true416
  br label %do.body422

do.body422:                                       ; preds = %if.then421
  %235 = load i8*, i8** %temp, align 4
  %tobool423 = icmp ne i8* %235, null
  br i1 %tobool423, label %if.then424, label %if.end425

if.then424:                                       ; preds = %do.body422
  %236 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %236, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9341)
  br label %if.end425

if.end425:                                        ; preds = %if.then424, %do.body422
  br label %do.end426

do.end426:                                        ; preds = %if.end425
  store i8* null, i8** %temp, align 4
  br label %if.end427

if.end427:                                        ; preds = %do.end426, %land.lhs.true416, %land.lhs.true411, %land.lhs.true409, %cond.end406
  br label %add_string

sw.bb428:                                         ; preds = %for.cond
  %237 = load i32, i32* %sindex, align 4
  %inc429 = add nsw i32 %237, 1
  store i32 %inc429, i32* %sindex, align 4
  store i32 %237, i32* %t_index, align 4
  %238 = load i8*, i8** %string, align 4
  %call430 = call i8* @string_extract(i8* %238, i32* %sindex, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i32 4)
  store i8* %call430, i8** %temp, align 4
  %239 = load i8*, i8** %temp, align 4
  %cmp431 = icmp eq i8* %239, @extract_string_error
  br i1 %cmp431, label %if.then436, label %lor.lhs.false433

lor.lhs.false433:                                 ; preds = %sw.bb428
  %240 = load i8*, i8** %temp, align 4
  %cmp434 = icmp eq i8* %240, @extract_string_fatal
  br i1 %cmp434, label %if.then436, label %if.end447

if.then436:                                       ; preds = %lor.lhs.false433, %sw.bb428
  %241 = load i32, i32* %sindex, align 4
  %sub437 = sub nsw i32 %241, 1
  %242 = load i32, i32* %t_index, align 4
  %cmp438 = icmp eq i32 %sub437, %242
  br i1 %cmp438, label %if.then440, label %if.end441

if.then440:                                       ; preds = %if.then436
  %243 = load i32, i32* %t_index, align 4
  store i32 %243, i32* %sindex, align 4
  br label %add_character

if.end441:                                        ; preds = %if.then436
  store i32 1, i32* @last_command_exit_value, align 4
  %call442 = call i8* @libintl_gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25, i32 0, i32 0))
  %244 = load i8*, i8** %string, align 4
  %245 = load i32, i32* %t_index, align 4
  %add.ptr443 = getelementptr inbounds i8, i8* %244, i32 %245
  call void (i8*, ...) @report_error(i8* %call442, i8* %add.ptr443)
  %246 = load i8*, i8** %string, align 4
  call void @sh_xfree(i8* %246, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9364)
  %247 = load i8*, i8** %istring, align 4
  call void @sh_xfree(i8* %247, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9365)
  %248 = load i8*, i8** %temp, align 4
  %cmp444 = icmp eq i8* %248, @extract_string_error
  %cond446 = select i1 %cmp444, %struct.word_list* @expand_word_error, %struct.word_list* @expand_word_fatal
  store %struct.word_list* %cond446, %struct.word_list** %retval, align 4
  br label %return

if.end447:                                        ; preds = %lor.lhs.false433
  %249 = load i32*, i32** %expanded_something.addr, align 4
  %tobool448 = icmp ne i32* %249, null
  br i1 %tobool448, label %if.then449, label %if.end450

if.then449:                                       ; preds = %if.end447
  %250 = load i32*, i32** %expanded_something.addr, align 4
  store i32 1, i32* %250, align 4
  br label %if.end450

if.end450:                                        ; preds = %if.then449, %if.end447
  %251 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags451 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %251, i32 0, i32 1
  %252 = load i32, i32* %flags451, align 4
  %and452 = and i32 %252, 1024
  %tobool453 = icmp ne i32 %and452, 0
  br i1 %tobool453, label %if.then454, label %if.else457

if.then454:                                       ; preds = %if.end450
  %253 = load i8*, i8** %string, align 4
  %254 = load i32, i32* %t_index, align 4
  %255 = load i32, i32* %sindex, align 4
  %add455 = add nsw i32 %255, 1
  %call456 = call i8* @substring(i8* %253, i32 %254, i32 %add455)
  store i8* %call456, i8** %temp1, align 4
  br label %if.end469

if.else457:                                       ; preds = %if.end450
  %256 = load i8*, i8** %temp, align 4
  %call458 = call i8* @de_backslash(i8* %256)
  %257 = load i8*, i8** %temp, align 4
  %258 = load i32, i32* %quoted.addr, align 4
  %call459 = call %struct.word_desc* @command_substitute(i8* %257, i32 %258)
  store %struct.word_desc* %call459, %struct.word_desc** %tword, align 4
  %259 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %tobool460 = icmp ne %struct.word_desc* %259, null
  br i1 %tobool460, label %cond.true461, label %cond.false463

cond.true461:                                     ; preds = %if.else457
  %260 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %word462 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %260, i32 0, i32 0
  %261 = load i8*, i8** %word462, align 4
  br label %cond.end464

cond.false463:                                    ; preds = %if.else457
  br label %cond.end464

cond.end464:                                      ; preds = %cond.false463, %cond.true461
  %cond465 = phi i8* [ %261, %cond.true461 ], [ null, %cond.false463 ]
  store i8* %cond465, i8** %temp1, align 4
  %262 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %tobool466 = icmp ne %struct.word_desc* %262, null
  br i1 %tobool466, label %if.then467, label %if.end468

if.then467:                                       ; preds = %cond.end464
  %263 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  call void @dispose_word_desc(%struct.word_desc* %263)
  br label %if.end468

if.end468:                                        ; preds = %if.then467, %cond.end464
  br label %if.end469

if.end469:                                        ; preds = %if.end468, %if.then454
  br label %do.body470

do.body470:                                       ; preds = %if.end469
  %264 = load i8*, i8** %temp, align 4
  %tobool471 = icmp ne i8* %264, null
  br i1 %tobool471, label %if.then472, label %if.end473

if.then472:                                       ; preds = %do.body470
  %265 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %265, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9384)
  br label %if.end473

if.end473:                                        ; preds = %if.then472, %do.body470
  br label %do.end474

do.end474:                                        ; preds = %if.end473
  %266 = load i8*, i8** %temp1, align 4
  store i8* %266, i8** %temp, align 4
  br label %dollar_add_string

sw.bb475:                                         ; preds = %for.cond
  %267 = load i8*, i8** %string, align 4
  %268 = load i32, i32* %sindex, align 4
  %add476 = add nsw i32 %268, 1
  %arrayidx477 = getelementptr inbounds i8, i8* %267, i32 %add476
  %269 = load i8, i8* %arrayidx477, align 1
  %conv478 = sext i8 %269 to i32
  %cmp479 = icmp eq i32 %conv478, 10
  br i1 %cmp479, label %if.then481, label %if.end483

if.then481:                                       ; preds = %sw.bb475
  %270 = load i32, i32* %sindex, align 4
  %add482 = add nsw i32 %270, 2
  store i32 %add482, i32* %sindex, align 4
  br label %for.cond

if.end483:                                        ; preds = %sw.bb475
  %271 = load i8*, i8** %string, align 4
  %272 = load i32, i32* %sindex, align 4
  %inc484 = add nsw i32 %272, 1
  store i32 %inc484, i32* %sindex, align 4
  %arrayidx485 = getelementptr inbounds i8, i8* %271, i32 %inc484
  %273 = load i8, i8* %arrayidx485, align 1
  store i8 %273, i8* %c, align 1
  %274 = load i32, i32* %quoted.addr, align 4
  %and486 = and i32 %274, 2
  %tobool487 = icmp ne i32 %and486, 0
  br i1 %tobool487, label %if.then488, label %if.else489

if.then488:                                       ; preds = %if.end483
  store i32 128, i32* %tflag, align 4
  br label %if.end495

if.else489:                                       ; preds = %if.end483
  %275 = load i32, i32* %quoted.addr, align 4
  %and490 = and i32 %275, 1
  %tobool491 = icmp ne i32 %and490, 0
  br i1 %tobool491, label %if.then492, label %if.else493

if.then492:                                       ; preds = %if.else489
  store i32 64, i32* %tflag, align 4
  br label %if.end494

if.else493:                                       ; preds = %if.else489
  store i32 0, i32* %tflag, align 4
  br label %if.end494

if.end494:                                        ; preds = %if.else493, %if.then492
  br label %if.end495

if.end495:                                        ; preds = %if.end494, %if.then488
  %276 = load i32, i32* %quoted.addr, align 4
  %and496 = and i32 %276, 128
  %tobool497 = icmp ne i32 %and496, 0
  br i1 %tobool497, label %land.lhs.true498, label %if.else553

land.lhs.true498:                                 ; preds = %if.end495
  %277 = load i8, i8* %c, align 1
  %conv499 = zext i8 %277 to i32
  %cmp500 = icmp eq i32 %conv499, 125
  br i1 %cmp500, label %if.then502, label %if.else553

if.then502:                                       ; preds = %land.lhs.true498
  br label %do.body503

do.body503:                                       ; preds = %if.then502
  %278 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp504 = icmp sgt i32 %278, 1
  br i1 %cmp504, label %if.then506, label %if.else548

if.then506:                                       ; preds = %do.body503
  %279 = load i8*, i8** %string, align 4
  %280 = load i32, i32* %sindex, align 4
  %add.ptr509 = getelementptr inbounds i8, i8* %279, i32 %280
  %281 = load i8, i8* %add.ptr509, align 1
  %call510 = call i32 @is_basic(i8 signext %281)
  store i32 %call510, i32* %_i, align 4
  %282 = load i32, i32* %_i, align 4
  %tobool511 = icmp ne i32 %282, 0
  br i1 %tobool511, label %if.then512, label %if.else513

if.then512:                                       ; preds = %if.then506
  store i32 1, i32* %mblength508, align 4
  br label %if.end517

if.else513:                                       ; preds = %if.then506
  %283 = bitcast %struct.__mbstate_t* %state_bak507 to i8*
  %284 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %283, i8* %284, i32 8, i32 4, i1 false)
  %285 = load i8*, i8** %string, align 4
  %286 = load i32, i32* %sindex, align 4
  %add.ptr514 = getelementptr inbounds i8, i8* %285, i32 %286
  %287 = load i32, i32* %string_size, align 4
  %288 = load i32, i32* %sindex, align 4
  %sub515 = sub i32 %287, %288
  %call516 = call i32 @mbrlen(i8* %add.ptr514, i32 %sub515, %struct.__mbstate_t* %state)
  store i32 %call516, i32* %mblength508, align 4
  br label %if.end517

if.end517:                                        ; preds = %if.else513, %if.then512
  %289 = load i32, i32* %mblength508, align 4
  %cmp518 = icmp eq i32 %289, -2
  br i1 %cmp518, label %if.then523, label %lor.lhs.false520

lor.lhs.false520:                                 ; preds = %if.end517
  %290 = load i32, i32* %mblength508, align 4
  %cmp521 = icmp eq i32 %290, -1
  br i1 %cmp521, label %if.then523, label %if.else524

if.then523:                                       ; preds = %lor.lhs.false520, %if.end517
  %291 = bitcast %struct.__mbstate_t* %state to i8*
  %292 = bitcast %struct.__mbstate_t* %state_bak507 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %291, i8* %292, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength508, align 4
  br label %if.end531

if.else524:                                       ; preds = %lor.lhs.false520
  %293 = load i32, i32* %mblength508, align 4
  %cmp525 = icmp ult i32 %293, 1
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %if.else524
  br label %cond.end529

cond.false528:                                    ; preds = %if.else524
  %294 = load i32, i32* %mblength508, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ 1, %cond.true527 ], [ %294, %cond.false528 ]
  store i32 %cond530, i32* %mblength508, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %if.then523
  %295 = load i32, i32* %mblength508, align 4
  %add532 = add i32 %295, 2
  %call533 = call i8* @sh_xmalloc(i32 %add532, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9409)
  store i8* %call533, i8** %temp, align 4
  %296 = load i8*, i8** %temp, align 4
  %arrayidx534 = getelementptr inbounds i8, i8* %296, i32 0
  store i8 1, i8* %arrayidx534, align 1
  store i32 0, i32* %_i, align 4
  br label %for.cond535

for.cond535:                                      ; preds = %for.inc543, %if.end531
  %297 = load i32, i32* %_i, align 4
  %298 = load i32, i32* %mblength508, align 4
  %cmp536 = icmp ult i32 %297, %298
  br i1 %cmp536, label %for.body538, label %for.end545

for.body538:                                      ; preds = %for.cond535
  %299 = load i8*, i8** %string, align 4
  %300 = load i32, i32* %sindex, align 4
  %inc539 = add nsw i32 %300, 1
  store i32 %inc539, i32* %sindex, align 4
  %arrayidx540 = getelementptr inbounds i8, i8* %299, i32 %300
  %301 = load i8, i8* %arrayidx540, align 1
  %302 = load i8*, i8** %temp, align 4
  %303 = load i32, i32* %_i, align 4
  %add541 = add nsw i32 %303, 1
  %arrayidx542 = getelementptr inbounds i8, i8* %302, i32 %add541
  store i8 %301, i8* %arrayidx542, align 1
  br label %for.inc543

for.inc543:                                       ; preds = %for.body538
  %304 = load i32, i32* %_i, align 4
  %inc544 = add nsw i32 %304, 1
  store i32 %inc544, i32* %_i, align 4
  br label %for.cond535

for.end545:                                       ; preds = %for.cond535
  %305 = load i8*, i8** %temp, align 4
  %306 = load i32, i32* %mblength508, align 4
  %add546 = add i32 %306, 1
  %arrayidx547 = getelementptr inbounds i8, i8* %305, i32 %add546
  store i8 0, i8* %arrayidx547, align 1
  br label %add_string

if.else548:                                       ; preds = %do.body503
  %arrayidx549 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 0
  store i8 1, i8* %arrayidx549, align 1
  %307 = load i8, i8* %c, align 1
  %arrayidx550 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 1
  store i8 %307, i8* %arrayidx550, align 1
  br label %if.end551

if.end551:                                        ; preds = %if.else548
  br label %do.end552

do.end552:                                        ; preds = %if.end551
  br label %if.end762

if.else553:                                       ; preds = %land.lhs.true498, %if.end495
  %308 = load i32, i32* %quoted.addr, align 4
  %and554 = and i32 %308, 3
  %tobool555 = icmp ne i32 %and554, 0
  br i1 %tobool555, label %land.lhs.true556, label %if.else640

land.lhs.true556:                                 ; preds = %if.else553
  %309 = load i8, i8* %c, align 1
  %idxprom557 = zext i8 %309 to i32
  %arrayidx558 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom557
  %310 = load i32, i32* %arrayidx558, align 4
  %311 = load i32, i32* %tflag, align 4
  %and559 = and i32 %310, %311
  %cmp560 = icmp eq i32 %and559, 0
  br i1 %cmp560, label %land.lhs.true562, label %if.else640

land.lhs.true562:                                 ; preds = %land.lhs.true556
  %312 = load i32, i32* %isexp.addr, align 4
  %cmp563 = icmp eq i32 %312, 0
  br i1 %cmp563, label %land.lhs.true565, label %if.else640

land.lhs.true565:                                 ; preds = %land.lhs.true562
  %313 = load i8, i8* %c, align 1
  %idxprom566 = zext i8 %313 to i32
  %arrayidx567 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom566
  %314 = load i8, i8* %arrayidx567, align 1
  %conv568 = zext i8 %314 to i32
  %cmp569 = icmp ne i32 %conv568, 0
  br i1 %cmp569, label %if.then571, label %if.else640

if.then571:                                       ; preds = %land.lhs.true565
  br label %do.body572

do.body572:                                       ; preds = %if.then571
  %315 = load i32, i32* %istring_index, align 4
  %add573 = add nsw i32 %315, 2
  %316 = load i32, i32* %istring_size, align 4
  %cmp574 = icmp uge i32 %add573, %316
  br i1 %cmp574, label %if.then576, label %if.end582

if.then576:                                       ; preds = %do.body572
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then576
  %317 = load i32, i32* %istring_index, align 4
  %add577 = add nsw i32 %317, 2
  %318 = load i32, i32* %istring_size, align 4
  %cmp578 = icmp uge i32 %add577, %318
  br i1 %cmp578, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %319 = load i32, i32* %istring_size, align 4
  %add580 = add i32 %319, 128
  store i32 %add580, i32* %istring_size, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %320 = load i8*, i8** %istring, align 4
  %321 = load i32, i32* %istring_size, align 4
  %call581 = call i8* @sh_xrealloc(i8* %320, i32 %321, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9415)
  store i8* %call581, i8** %istring, align 4
  br label %if.end582

if.end582:                                        ; preds = %while.end, %do.body572
  br label %do.end583

do.end583:                                        ; preds = %if.end582
  %322 = load i8*, i8** %istring, align 4
  %323 = load i32, i32* %istring_index, align 4
  %inc584 = add nsw i32 %323, 1
  store i32 %inc584, i32* %istring_index, align 4
  %arrayidx585 = getelementptr inbounds i8, i8* %322, i32 %323
  store i8 1, i8* %arrayidx585, align 1
  %324 = load i8*, i8** %istring, align 4
  %325 = load i32, i32* %istring_index, align 4
  %inc586 = add nsw i32 %325, 1
  store i32 %inc586, i32* %istring_index, align 4
  %arrayidx587 = getelementptr inbounds i8, i8* %324, i32 %325
  store i8 92, i8* %arrayidx587, align 1
  %326 = load i8*, i8** %istring, align 4
  %327 = load i32, i32* %istring_index, align 4
  %arrayidx588 = getelementptr inbounds i8, i8* %326, i32 %327
  store i8 0, i8* %arrayidx588, align 1
  br label %do.body589

do.body589:                                       ; preds = %do.end583
  %328 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp590 = icmp sgt i32 %328, 1
  br i1 %cmp590, label %if.then592, label %if.else635

if.then592:                                       ; preds = %do.body589
  %329 = load i8*, i8** %string, align 4
  %330 = load i32, i32* %sindex, align 4
  %add.ptr596 = getelementptr inbounds i8, i8* %329, i32 %330
  %331 = load i8, i8* %add.ptr596, align 1
  %call597 = call i32 @is_basic(i8 signext %331)
  store i32 %call597, i32* %_i595, align 4
  %332 = load i32, i32* %_i595, align 4
  %tobool598 = icmp ne i32 %332, 0
  br i1 %tobool598, label %if.then599, label %if.else600

if.then599:                                       ; preds = %if.then592
  store i32 1, i32* %mblength594, align 4
  br label %if.end604

if.else600:                                       ; preds = %if.then592
  %333 = bitcast %struct.__mbstate_t* %state_bak593 to i8*
  %334 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %333, i8* %334, i32 8, i32 4, i1 false)
  %335 = load i8*, i8** %string, align 4
  %336 = load i32, i32* %sindex, align 4
  %add.ptr601 = getelementptr inbounds i8, i8* %335, i32 %336
  %337 = load i32, i32* %string_size, align 4
  %338 = load i32, i32* %sindex, align 4
  %sub602 = sub i32 %337, %338
  %call603 = call i32 @mbrlen(i8* %add.ptr601, i32 %sub602, %struct.__mbstate_t* %state)
  store i32 %call603, i32* %mblength594, align 4
  br label %if.end604

if.end604:                                        ; preds = %if.else600, %if.then599
  %339 = load i32, i32* %mblength594, align 4
  %cmp605 = icmp eq i32 %339, -2
  br i1 %cmp605, label %if.then610, label %lor.lhs.false607

lor.lhs.false607:                                 ; preds = %if.end604
  %340 = load i32, i32* %mblength594, align 4
  %cmp608 = icmp eq i32 %340, -1
  br i1 %cmp608, label %if.then610, label %if.else611

if.then610:                                       ; preds = %lor.lhs.false607, %if.end604
  %341 = bitcast %struct.__mbstate_t* %state to i8*
  %342 = bitcast %struct.__mbstate_t* %state_bak593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %341, i8* %342, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength594, align 4
  br label %if.end618

if.else611:                                       ; preds = %lor.lhs.false607
  %343 = load i32, i32* %mblength594, align 4
  %cmp612 = icmp ult i32 %343, 1
  br i1 %cmp612, label %cond.true614, label %cond.false615

cond.true614:                                     ; preds = %if.else611
  br label %cond.end616

cond.false615:                                    ; preds = %if.else611
  %344 = load i32, i32* %mblength594, align 4
  br label %cond.end616

cond.end616:                                      ; preds = %cond.false615, %cond.true614
  %cond617 = phi i32 [ 1, %cond.true614 ], [ %344, %cond.false615 ]
  store i32 %cond617, i32* %mblength594, align 4
  br label %if.end618

if.end618:                                        ; preds = %cond.end616, %if.then610
  %345 = load i32, i32* %mblength594, align 4
  %add619 = add i32 %345, 2
  %call620 = call i8* @sh_xmalloc(i32 %add619, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9420)
  store i8* %call620, i8** %temp, align 4
  %346 = load i8*, i8** %temp, align 4
  %arrayidx621 = getelementptr inbounds i8, i8* %346, i32 0
  store i8 1, i8* %arrayidx621, align 1
  store i32 0, i32* %_i595, align 4
  br label %for.cond622

for.cond622:                                      ; preds = %for.inc630, %if.end618
  %347 = load i32, i32* %_i595, align 4
  %348 = load i32, i32* %mblength594, align 4
  %cmp623 = icmp ult i32 %347, %348
  br i1 %cmp623, label %for.body625, label %for.end632

for.body625:                                      ; preds = %for.cond622
  %349 = load i8*, i8** %string, align 4
  %350 = load i32, i32* %sindex, align 4
  %inc626 = add nsw i32 %350, 1
  store i32 %inc626, i32* %sindex, align 4
  %arrayidx627 = getelementptr inbounds i8, i8* %349, i32 %350
  %351 = load i8, i8* %arrayidx627, align 1
  %352 = load i8*, i8** %temp, align 4
  %353 = load i32, i32* %_i595, align 4
  %add628 = add nsw i32 %353, 1
  %arrayidx629 = getelementptr inbounds i8, i8* %352, i32 %add628
  store i8 %351, i8* %arrayidx629, align 1
  br label %for.inc630

for.inc630:                                       ; preds = %for.body625
  %354 = load i32, i32* %_i595, align 4
  %inc631 = add nsw i32 %354, 1
  store i32 %inc631, i32* %_i595, align 4
  br label %for.cond622

for.end632:                                       ; preds = %for.cond622
  %355 = load i8*, i8** %temp, align 4
  %356 = load i32, i32* %mblength594, align 4
  %add633 = add i32 %356, 1
  %arrayidx634 = getelementptr inbounds i8, i8* %355, i32 %add633
  store i8 0, i8* %arrayidx634, align 1
  br label %add_string

if.else635:                                       ; preds = %do.body589
  %arrayidx636 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 0
  store i8 1, i8* %arrayidx636, align 1
  %357 = load i8, i8* %c, align 1
  %arrayidx637 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 1
  store i8 %357, i8* %arrayidx637, align 1
  br label %if.end638

if.end638:                                        ; preds = %if.else635
  br label %do.end639

do.end639:                                        ; preds = %if.end638
  br label %if.end761

if.else640:                                       ; preds = %land.lhs.true565, %land.lhs.true562, %land.lhs.true556, %if.else553
  %358 = load i32, i32* %quoted.addr, align 4
  %and641 = and i32 %358, 3
  %tobool642 = icmp ne i32 %and641, 0
  br i1 %tobool642, label %land.lhs.true643, label %if.else701

land.lhs.true643:                                 ; preds = %if.else640
  %359 = load i8, i8* %c, align 1
  %idxprom644 = zext i8 %359 to i32
  %arrayidx645 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom644
  %360 = load i32, i32* %arrayidx645, align 4
  %361 = load i32, i32* %tflag, align 4
  %and646 = and i32 %360, %361
  %cmp647 = icmp eq i32 %and646, 0
  br i1 %cmp647, label %if.then649, label %if.else701

if.then649:                                       ; preds = %land.lhs.true643
  br label %do.body650

do.body650:                                       ; preds = %if.then649
  %362 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp651 = icmp sgt i32 %362, 1
  br i1 %cmp651, label %if.then653, label %if.else696

if.then653:                                       ; preds = %do.body650
  %363 = load i8*, i8** %string, align 4
  %364 = load i32, i32* %sindex, align 4
  %add.ptr657 = getelementptr inbounds i8, i8* %363, i32 %364
  %365 = load i8, i8* %add.ptr657, align 1
  %call658 = call i32 @is_basic(i8 signext %365)
  store i32 %call658, i32* %_i656, align 4
  %366 = load i32, i32* %_i656, align 4
  %tobool659 = icmp ne i32 %366, 0
  br i1 %tobool659, label %if.then660, label %if.else661

if.then660:                                       ; preds = %if.then653
  store i32 1, i32* %mblength655, align 4
  br label %if.end665

if.else661:                                       ; preds = %if.then653
  %367 = bitcast %struct.__mbstate_t* %state_bak654 to i8*
  %368 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %367, i8* %368, i32 8, i32 4, i1 false)
  %369 = load i8*, i8** %string, align 4
  %370 = load i32, i32* %sindex, align 4
  %add.ptr662 = getelementptr inbounds i8, i8* %369, i32 %370
  %371 = load i32, i32* %string_size, align 4
  %372 = load i32, i32* %sindex, align 4
  %sub663 = sub i32 %371, %372
  %call664 = call i32 @mbrlen(i8* %add.ptr662, i32 %sub663, %struct.__mbstate_t* %state)
  store i32 %call664, i32* %mblength655, align 4
  br label %if.end665

if.end665:                                        ; preds = %if.else661, %if.then660
  %373 = load i32, i32* %mblength655, align 4
  %cmp666 = icmp eq i32 %373, -2
  br i1 %cmp666, label %if.then671, label %lor.lhs.false668

lor.lhs.false668:                                 ; preds = %if.end665
  %374 = load i32, i32* %mblength655, align 4
  %cmp669 = icmp eq i32 %374, -1
  br i1 %cmp669, label %if.then671, label %if.else672

if.then671:                                       ; preds = %lor.lhs.false668, %if.end665
  %375 = bitcast %struct.__mbstate_t* %state to i8*
  %376 = bitcast %struct.__mbstate_t* %state_bak654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %375, i8* %376, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength655, align 4
  br label %if.end679

if.else672:                                       ; preds = %lor.lhs.false668
  %377 = load i32, i32* %mblength655, align 4
  %cmp673 = icmp ult i32 %377, 1
  br i1 %cmp673, label %cond.true675, label %cond.false676

cond.true675:                                     ; preds = %if.else672
  br label %cond.end677

cond.false676:                                    ; preds = %if.else672
  %378 = load i32, i32* %mblength655, align 4
  br label %cond.end677

cond.end677:                                      ; preds = %cond.false676, %cond.true675
  %cond678 = phi i32 [ 1, %cond.true675 ], [ %378, %cond.false676 ]
  store i32 %cond678, i32* %mblength655, align 4
  br label %if.end679

if.end679:                                        ; preds = %cond.end677, %if.then671
  %379 = load i32, i32* %mblength655, align 4
  %add680 = add i32 %379, 2
  %call681 = call i8* @sh_xmalloc(i32 %add680, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9424)
  store i8* %call681, i8** %temp, align 4
  %380 = load i8*, i8** %temp, align 4
  %arrayidx682 = getelementptr inbounds i8, i8* %380, i32 0
  store i8 92, i8* %arrayidx682, align 1
  store i32 0, i32* %_i656, align 4
  br label %for.cond683

for.cond683:                                      ; preds = %for.inc691, %if.end679
  %381 = load i32, i32* %_i656, align 4
  %382 = load i32, i32* %mblength655, align 4
  %cmp684 = icmp ult i32 %381, %382
  br i1 %cmp684, label %for.body686, label %for.end693

for.body686:                                      ; preds = %for.cond683
  %383 = load i8*, i8** %string, align 4
  %384 = load i32, i32* %sindex, align 4
  %inc687 = add nsw i32 %384, 1
  store i32 %inc687, i32* %sindex, align 4
  %arrayidx688 = getelementptr inbounds i8, i8* %383, i32 %384
  %385 = load i8, i8* %arrayidx688, align 1
  %386 = load i8*, i8** %temp, align 4
  %387 = load i32, i32* %_i656, align 4
  %add689 = add nsw i32 %387, 1
  %arrayidx690 = getelementptr inbounds i8, i8* %386, i32 %add689
  store i8 %385, i8* %arrayidx690, align 1
  br label %for.inc691

for.inc691:                                       ; preds = %for.body686
  %388 = load i32, i32* %_i656, align 4
  %inc692 = add nsw i32 %388, 1
  store i32 %inc692, i32* %_i656, align 4
  br label %for.cond683

for.end693:                                       ; preds = %for.cond683
  %389 = load i8*, i8** %temp, align 4
  %390 = load i32, i32* %mblength655, align 4
  %add694 = add i32 %390, 1
  %arrayidx695 = getelementptr inbounds i8, i8* %389, i32 %add694
  store i8 0, i8* %arrayidx695, align 1
  br label %add_string

if.else696:                                       ; preds = %do.body650
  %arrayidx697 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 0
  store i8 92, i8* %arrayidx697, align 1
  %391 = load i8, i8* %c, align 1
  %arrayidx698 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 1
  store i8 %391, i8* %arrayidx698, align 1
  br label %if.end699

if.end699:                                        ; preds = %if.else696
  br label %do.end700

do.end700:                                        ; preds = %if.end699
  br label %if.end760

if.else701:                                       ; preds = %land.lhs.true643, %if.else640
  %392 = load i8, i8* %c, align 1
  %conv702 = zext i8 %392 to i32
  %cmp703 = icmp eq i32 %conv702, 0
  br i1 %cmp703, label %if.then705, label %if.else707

if.then705:                                       ; preds = %if.else701
  store i8 127, i8* %c, align 1
  %393 = load i32, i32* %sindex, align 4
  %dec706 = add nsw i32 %393, -1
  store i32 %dec706, i32* %sindex, align 4
  br label %add_character

if.else707:                                       ; preds = %if.else701
  br label %do.body708

do.body708:                                       ; preds = %if.else707
  %394 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp709 = icmp sgt i32 %394, 1
  br i1 %cmp709, label %if.then711, label %if.else754

if.then711:                                       ; preds = %do.body708
  %395 = load i8*, i8** %string, align 4
  %396 = load i32, i32* %sindex, align 4
  %add.ptr715 = getelementptr inbounds i8, i8* %395, i32 %396
  %397 = load i8, i8* %add.ptr715, align 1
  %call716 = call i32 @is_basic(i8 signext %397)
  store i32 %call716, i32* %_i714, align 4
  %398 = load i32, i32* %_i714, align 4
  %tobool717 = icmp ne i32 %398, 0
  br i1 %tobool717, label %if.then718, label %if.else719

if.then718:                                       ; preds = %if.then711
  store i32 1, i32* %mblength713, align 4
  br label %if.end723

if.else719:                                       ; preds = %if.then711
  %399 = bitcast %struct.__mbstate_t* %state_bak712 to i8*
  %400 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %399, i8* %400, i32 8, i32 4, i1 false)
  %401 = load i8*, i8** %string, align 4
  %402 = load i32, i32* %sindex, align 4
  %add.ptr720 = getelementptr inbounds i8, i8* %401, i32 %402
  %403 = load i32, i32* %string_size, align 4
  %404 = load i32, i32* %sindex, align 4
  %sub721 = sub i32 %403, %404
  %call722 = call i32 @mbrlen(i8* %add.ptr720, i32 %sub721, %struct.__mbstate_t* %state)
  store i32 %call722, i32* %mblength713, align 4
  br label %if.end723

if.end723:                                        ; preds = %if.else719, %if.then718
  %405 = load i32, i32* %mblength713, align 4
  %cmp724 = icmp eq i32 %405, -2
  br i1 %cmp724, label %if.then729, label %lor.lhs.false726

lor.lhs.false726:                                 ; preds = %if.end723
  %406 = load i32, i32* %mblength713, align 4
  %cmp727 = icmp eq i32 %406, -1
  br i1 %cmp727, label %if.then729, label %if.else730

if.then729:                                       ; preds = %lor.lhs.false726, %if.end723
  %407 = bitcast %struct.__mbstate_t* %state to i8*
  %408 = bitcast %struct.__mbstate_t* %state_bak712 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %407, i8* %408, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength713, align 4
  br label %if.end737

if.else730:                                       ; preds = %lor.lhs.false726
  %409 = load i32, i32* %mblength713, align 4
  %cmp731 = icmp ult i32 %409, 1
  br i1 %cmp731, label %cond.true733, label %cond.false734

cond.true733:                                     ; preds = %if.else730
  br label %cond.end735

cond.false734:                                    ; preds = %if.else730
  %410 = load i32, i32* %mblength713, align 4
  br label %cond.end735

cond.end735:                                      ; preds = %cond.false734, %cond.true733
  %cond736 = phi i32 [ 1, %cond.true733 ], [ %410, %cond.false734 ]
  store i32 %cond736, i32* %mblength713, align 4
  br label %if.end737

if.end737:                                        ; preds = %cond.end735, %if.then729
  %411 = load i32, i32* %mblength713, align 4
  %add738 = add i32 %411, 2
  %call739 = call i8* @sh_xmalloc(i32 %add738, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9434)
  store i8* %call739, i8** %temp, align 4
  %412 = load i8*, i8** %temp, align 4
  %arrayidx740 = getelementptr inbounds i8, i8* %412, i32 0
  store i8 1, i8* %arrayidx740, align 1
  store i32 0, i32* %_i714, align 4
  br label %for.cond741

for.cond741:                                      ; preds = %for.inc749, %if.end737
  %413 = load i32, i32* %_i714, align 4
  %414 = load i32, i32* %mblength713, align 4
  %cmp742 = icmp ult i32 %413, %414
  br i1 %cmp742, label %for.body744, label %for.end751

for.body744:                                      ; preds = %for.cond741
  %415 = load i8*, i8** %string, align 4
  %416 = load i32, i32* %sindex, align 4
  %inc745 = add nsw i32 %416, 1
  store i32 %inc745, i32* %sindex, align 4
  %arrayidx746 = getelementptr inbounds i8, i8* %415, i32 %416
  %417 = load i8, i8* %arrayidx746, align 1
  %418 = load i8*, i8** %temp, align 4
  %419 = load i32, i32* %_i714, align 4
  %add747 = add nsw i32 %419, 1
  %arrayidx748 = getelementptr inbounds i8, i8* %418, i32 %add747
  store i8 %417, i8* %arrayidx748, align 1
  br label %for.inc749

for.inc749:                                       ; preds = %for.body744
  %420 = load i32, i32* %_i714, align 4
  %inc750 = add nsw i32 %420, 1
  store i32 %inc750, i32* %_i714, align 4
  br label %for.cond741

for.end751:                                       ; preds = %for.cond741
  %421 = load i8*, i8** %temp, align 4
  %422 = load i32, i32* %mblength713, align 4
  %add752 = add i32 %422, 1
  %arrayidx753 = getelementptr inbounds i8, i8* %421, i32 %add752
  store i8 0, i8* %arrayidx753, align 1
  br label %add_string

if.else754:                                       ; preds = %do.body708
  %arrayidx755 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 0
  store i8 1, i8* %arrayidx755, align 1
  %423 = load i8, i8* %c, align 1
  %arrayidx756 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 1
  store i8 %423, i8* %arrayidx756, align 1
  br label %if.end757

if.end757:                                        ; preds = %if.else754
  br label %do.end758

do.end758:                                        ; preds = %if.end757
  br label %if.end759

if.end759:                                        ; preds = %do.end758
  br label %if.end760

if.end760:                                        ; preds = %if.end759, %do.end700
  br label %if.end761

if.end761:                                        ; preds = %if.end760, %do.end639
  br label %if.end762

if.end762:                                        ; preds = %if.end761, %do.end552
  %424 = load i32, i32* %sindex, align 4
  %inc763 = add nsw i32 %424, 1
  store i32 %inc763, i32* %sindex, align 4
  br label %add_twochars

add_twochars:                                     ; preds = %if.else1068, %if.end762
  br label %do.body764

do.body764:                                       ; preds = %add_twochars
  %425 = load i32, i32* %istring_index, align 4
  %add765 = add nsw i32 %425, 2
  %426 = load i32, i32* %istring_size, align 4
  %cmp766 = icmp uge i32 %add765, %426
  br i1 %cmp766, label %if.then768, label %if.end777

if.then768:                                       ; preds = %do.body764
  br label %while.cond769

while.cond769:                                    ; preds = %while.body773, %if.then768
  %427 = load i32, i32* %istring_index, align 4
  %add770 = add nsw i32 %427, 2
  %428 = load i32, i32* %istring_size, align 4
  %cmp771 = icmp uge i32 %add770, %428
  br i1 %cmp771, label %while.body773, label %while.end775

while.body773:                                    ; preds = %while.cond769
  %429 = load i32, i32* %istring_size, align 4
  %add774 = add i32 %429, 128
  store i32 %add774, i32* %istring_size, align 4
  br label %while.cond769

while.end775:                                     ; preds = %while.cond769
  %430 = load i8*, i8** %istring, align 4
  %431 = load i32, i32* %istring_size, align 4
  %call776 = call i8* @sh_xrealloc(i8* %430, i32 %431, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9441)
  store i8* %call776, i8** %istring, align 4
  br label %if.end777

if.end777:                                        ; preds = %while.end775, %do.body764
  br label %do.end778

do.end778:                                        ; preds = %if.end777
  %arrayidx779 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 0
  %432 = load i8, i8* %arrayidx779, align 1
  %433 = load i8*, i8** %istring, align 4
  %434 = load i32, i32* %istring_index, align 4
  %inc780 = add nsw i32 %434, 1
  store i32 %inc780, i32* %istring_index, align 4
  %arrayidx781 = getelementptr inbounds i8, i8* %433, i32 %434
  store i8 %432, i8* %arrayidx781, align 1
  %arrayidx782 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 1
  %435 = load i8, i8* %arrayidx782, align 1
  %436 = load i8*, i8** %istring, align 4
  %437 = load i32, i32* %istring_index, align 4
  %inc783 = add nsw i32 %437, 1
  store i32 %inc783, i32* %istring_index, align 4
  %arrayidx784 = getelementptr inbounds i8, i8* %436, i32 %437
  store i8 %435, i8* %arrayidx784, align 1
  %438 = load i8*, i8** %istring, align 4
  %439 = load i32, i32* %istring_index, align 4
  %arrayidx785 = getelementptr inbounds i8, i8* %438, i32 %439
  store i8 0, i8* %arrayidx785, align 1
  br label %sw.epilog

sw.bb786:                                         ; preds = %for.cond
  %440 = load i32, i32* %quoted.addr, align 4
  %and787 = and i32 %440, 3
  %tobool788 = icmp ne i32 %and787, 0
  br i1 %tobool788, label %land.lhs.true789, label %if.end794

land.lhs.true789:                                 ; preds = %sw.bb786
  %441 = load i32, i32* %quoted.addr, align 4
  %and790 = and i32 %441, 256
  %cmp791 = icmp eq i32 %and790, 0
  br i1 %cmp791, label %if.then793, label %if.end794

if.then793:                                       ; preds = %land.lhs.true789
  br label %add_character

if.end794:                                        ; preds = %land.lhs.true789, %sw.bb786
  %442 = load i32, i32* %sindex, align 4
  %inc795 = add nsw i32 %442, 1
  store i32 %inc795, i32* %sindex, align 4
  store i32 %inc795, i32* %t_index, align 4
  %443 = load i8*, i8** %string, align 4
  %444 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags796 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %444, i32 0, i32 1
  %445 = load i32, i32* %flags796, align 4
  %and797 = and i32 %445, 134217728
  %tobool798 = icmp ne i32 %and797, 0
  %cond799 = select i1 %tobool798, i32 1024, i32 0
  %call800 = call i8* @string_extract_double_quoted(i8* %443, i32* %sindex, i32 %cond799)
  store i8* %call800, i8** %temp, align 4
  %446 = load i32, i32* %t_index, align 4
  %cmp801 = icmp eq i32 %446, 1
  br i1 %cmp801, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end794
  %447 = load i8*, i8** %string, align 4
  %448 = load i32, i32* %sindex, align 4
  %arrayidx803 = getelementptr inbounds i8, i8* %447, i32 %448
  %449 = load i8, i8* %arrayidx803, align 1
  %conv804 = sext i8 %449 to i32
  %cmp805 = icmp eq i32 %conv804, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end794
  %450 = phi i1 [ false, %if.end794 ], [ %cmp805, %land.rhs ]
  %cond807 = select i1 %450, i32 2, i32 1
  store i32 %cond807, i32* %quoted_state, align 4
  %451 = load i8*, i8** %temp, align 4
  %tobool808 = icmp ne i8* %451, null
  br i1 %tobool808, label %land.lhs.true809, label %if.else887

land.lhs.true809:                                 ; preds = %land.end
  %452 = load i8*, i8** %temp, align 4
  %453 = load i8, i8* %452, align 1
  %conv810 = sext i8 %453 to i32
  %tobool811 = icmp ne i32 %conv810, 0
  br i1 %tobool811, label %if.then812, label %if.else887

if.then812:                                       ; preds = %land.lhs.true809
  %call813 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call813, %struct.word_desc** %tword, align 4
  %454 = load i8*, i8** %temp, align 4
  %455 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %word814 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %455, i32 0, i32 0
  store i8* %454, i8** %word814, align 4
  %456 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags815 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %456, i32 0, i32 1
  %457 = load i32, i32* %flags815, align 4
  %and816 = and i32 %457, 131072
  %tobool817 = icmp ne i32 %and816, 0
  br i1 %tobool817, label %if.then818, label %if.end823

if.then818:                                       ; preds = %if.then812
  %458 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags819 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %458, i32 0, i32 1
  %459 = load i32, i32* %flags819, align 4
  %and820 = and i32 %459, 133120
  %460 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags821 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %460, i32 0, i32 1
  %461 = load i32, i32* %flags821, align 4
  %or822 = or i32 %461, %and820
  store i32 %or822, i32* %flags821, align 4
  br label %if.end823

if.end823:                                        ; preds = %if.then818, %if.then812
  %462 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags824 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %462, i32 0, i32 1
  %463 = load i32, i32* %flags824, align 4
  %and825 = and i32 %463, 134217728
  %tobool826 = icmp ne i32 %and825, 0
  br i1 %tobool826, label %if.then827, label %if.end830

if.then827:                                       ; preds = %if.end823
  %464 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags828 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %464, i32 0, i32 1
  %465 = load i32, i32* %flags828, align 4
  %or829 = or i32 %465, 134217728
  store i32 %or829, i32* %flags828, align 4
  br label %if.end830

if.end830:                                        ; preds = %if.then827, %if.end823
  %466 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags831 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %466, i32 0, i32 1
  %467 = load i32, i32* %flags831, align 4
  %and832 = and i32 %467, 1024
  %tobool833 = icmp ne i32 %and832, 0
  br i1 %tobool833, label %if.then834, label %if.end837

if.then834:                                       ; preds = %if.end830
  %468 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags835 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %468, i32 0, i32 1
  %469 = load i32, i32* %flags835, align 4
  %or836 = or i32 %469, 1024
  store i32 %or836, i32* %flags835, align 4
  br label %if.end837

if.end837:                                        ; preds = %if.then834, %if.end830
  %470 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags838 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %470, i32 0, i32 1
  %471 = load i32, i32* %flags838, align 4
  %and839 = and i32 %471, 1048576
  %tobool840 = icmp ne i32 %and839, 0
  br i1 %tobool840, label %if.then841, label %if.end844

if.then841:                                       ; preds = %if.end837
  %472 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags842 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %472, i32 0, i32 1
  %473 = load i32, i32* %flags842, align 4
  %or843 = or i32 %473, 1048576
  store i32 %or843, i32* %flags842, align 4
  br label %if.end844

if.end844:                                        ; preds = %if.then841, %if.end837
  store i8* null, i8** %temp, align 4
  store i32 0, i32* %temp_has_dollar_at, align 4
  %474 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %call845 = call %struct.word_list* @expand_word_internal(%struct.word_desc* %474, i32 1, i32 0, i32* %temp_has_dollar_at, i32* null)
  store %struct.word_list* %call845, %struct.word_list** %list, align 4
  %475 = load i32, i32* %temp_has_dollar_at, align 4
  %476 = load i32, i32* %has_dollar_at, align 4
  %add846 = add nsw i32 %476, %475
  store i32 %add846, i32* %has_dollar_at, align 4
  %477 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp847 = icmp eq %struct.word_list* %477, @expand_word_error
  br i1 %cmp847, label %if.then852, label %lor.lhs.false849

lor.lhs.false849:                                 ; preds = %if.end844
  %478 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp850 = icmp eq %struct.word_list* %478, @expand_word_fatal
  br i1 %cmp850, label %if.then852, label %if.end854

if.then852:                                       ; preds = %lor.lhs.false849, %if.end844
  %479 = load i8*, i8** %istring, align 4
  call void @sh_xfree(i8* %479, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9485)
  %480 = load i8*, i8** %string, align 4
  call void @sh_xfree(i8* %480, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9486)
  %481 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %word853 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %481, i32 0, i32 0
  store i8* null, i8** %word853, align 4
  %482 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  call void @dispose_word(%struct.word_desc* %482)
  %483 = load %struct.word_list*, %struct.word_list** %list, align 4
  store %struct.word_list* %483, %struct.word_list** %retval, align 4
  br label %return

if.end854:                                        ; preds = %lor.lhs.false849
  %484 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  call void @dispose_word(%struct.word_desc* %484)
  %485 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp855 = icmp eq %struct.word_list* %485, null
  br i1 %cmp855, label %land.lhs.true857, label %if.end861

land.lhs.true857:                                 ; preds = %if.end854
  %486 = load i32, i32* %temp_has_dollar_at, align 4
  %tobool858 = icmp ne i32 %486, 0
  br i1 %tobool858, label %if.then859, label %if.end861

if.then859:                                       ; preds = %land.lhs.true857
  %487 = load i32, i32* %quoted_dollar_at, align 4
  %inc860 = add nsw i32 %487, 1
  store i32 %inc860, i32* %quoted_dollar_at, align 4
  br label %sw.epilog

if.end861:                                        ; preds = %land.lhs.true857, %if.end854
  %488 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool862 = icmp ne %struct.word_list* %488, null
  br i1 %tobool862, label %if.then863, label %if.end865

if.then863:                                       ; preds = %if.end861
  %489 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call864 = call %struct.word_list* @dequote_list(%struct.word_list* %489)
  br label %if.end865

if.end865:                                        ; preds = %if.then863, %if.end861
  %490 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool866 = icmp ne %struct.word_list* %490, null
  br i1 %tobool866, label %land.lhs.true867, label %if.end876

land.lhs.true867:                                 ; preds = %if.end865
  %491 = load %struct.word_list*, %struct.word_list** %list, align 4
  %word868 = getelementptr inbounds %struct.word_list, %struct.word_list* %491, i32 0, i32 1
  %492 = load %struct.word_desc*, %struct.word_desc** %word868, align 4
  %tobool869 = icmp ne %struct.word_desc* %492, null
  br i1 %tobool869, label %land.lhs.true870, label %if.end876

land.lhs.true870:                                 ; preds = %land.lhs.true867
  %493 = load %struct.word_list*, %struct.word_list** %list, align 4
  %word871 = getelementptr inbounds %struct.word_list, %struct.word_list* %493, i32 0, i32 1
  %494 = load %struct.word_desc*, %struct.word_desc** %word871, align 4
  %flags872 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %494, i32 0, i32 1
  %495 = load i32, i32* %flags872, align 4
  %and873 = and i32 %495, 262144
  %tobool874 = icmp ne i32 %and873, 0
  br i1 %tobool874, label %if.then875, label %if.end876

if.then875:                                       ; preds = %land.lhs.true870
  store i32 1, i32* %had_quoted_null, align 4
  br label %if.end876

if.end876:                                        ; preds = %if.then875, %land.lhs.true870, %land.lhs.true867, %if.end865
  %496 = load i32, i32* %temp_has_dollar_at, align 4
  %tobool877 = icmp ne i32 %496, 0
  br i1 %tobool877, label %if.then878, label %if.end886

if.then878:                                       ; preds = %if.end876
  %497 = load i32, i32* %quoted_dollar_at, align 4
  %inc879 = add nsw i32 %497, 1
  store i32 %inc879, i32* %quoted_dollar_at, align 4
  %498 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool880 = icmp ne i32* %498, null
  br i1 %tobool880, label %if.then881, label %if.end882

if.then881:                                       ; preds = %if.then878
  %499 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %499, align 4
  br label %if.end882

if.end882:                                        ; preds = %if.then881, %if.then878
  %500 = load i32*, i32** %expanded_something.addr, align 4
  %tobool883 = icmp ne i32* %500, null
  br i1 %tobool883, label %if.then884, label %if.end885

if.then884:                                       ; preds = %if.end882
  %501 = load i32*, i32** %expanded_something.addr, align 4
  store i32 1, i32* %501, align 4
  br label %if.end885

if.end885:                                        ; preds = %if.then884, %if.end882
  br label %if.end886

if.end886:                                        ; preds = %if.end885, %if.end876
  br label %if.end893

if.else887:                                       ; preds = %land.lhs.true809, %land.end
  br label %do.body888

do.body888:                                       ; preds = %if.else887
  %502 = load i8*, i8** %temp, align 4
  %tobool889 = icmp ne i8* %502, null
  br i1 %tobool889, label %if.then890, label %if.end891

if.then890:                                       ; preds = %do.body888
  %503 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %503, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9531)
  br label %if.end891

if.end891:                                        ; preds = %if.then890, %do.body888
  br label %do.end892

do.end892:                                        ; preds = %if.end891
  store %struct.word_list* null, %struct.word_list** %list, align 4
  br label %if.end893

if.end893:                                        ; preds = %do.end892, %if.end886
  %504 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool894 = icmp ne %struct.word_list* %504, null
  br i1 %tobool894, label %if.then895, label %if.else936

if.then895:                                       ; preds = %if.end893
  %505 = load %struct.word_list*, %struct.word_list** %list, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %505, i32 0, i32 0
  %506 = load %struct.word_list*, %struct.word_list** %next, align 4
  %tobool896 = icmp ne %struct.word_list* %506, null
  br i1 %tobool896, label %if.then897, label %if.else906

if.then897:                                       ; preds = %if.then895
  %507 = load i32, i32* %quoted_dollar_at, align 4
  %tobool898 = icmp ne i32 %507, 0
  br i1 %tobool898, label %cond.true899, label %cond.false901

cond.true899:                                     ; preds = %if.then897
  %508 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call900 = call i8* @string_list_dollar_at(%struct.word_list* %508, i32 1, i32 0)
  br label %cond.end904

cond.false901:                                    ; preds = %if.then897
  %509 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call902 = call %struct.word_list* @quote_list(%struct.word_list* %509)
  %call903 = call i8* @string_list(%struct.word_list* %call902)
  br label %cond.end904

cond.end904:                                      ; preds = %cond.false901, %cond.true899
  %cond905 = phi i8* [ %call900, %cond.true899 ], [ %call903, %cond.false901 ]
  store i8* %cond905, i8** %temp, align 4
  %510 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %510)
  br label %add_string

if.else906:                                       ; preds = %if.then895
  %511 = load %struct.word_list*, %struct.word_list** %list, align 4
  %word907 = getelementptr inbounds %struct.word_list, %struct.word_list* %511, i32 0, i32 1
  %512 = load %struct.word_desc*, %struct.word_desc** %word907, align 4
  %word908 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %512, i32 0, i32 0
  %513 = load i8*, i8** %word908, align 4
  %call909 = call i32 @strlen(i8* %513)
  %add910 = add i32 1, %call909
  %call911 = call i8* @sh_xmalloc(i32 %add910, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9557)
  %514 = load %struct.word_list*, %struct.word_list** %list, align 4
  %word912 = getelementptr inbounds %struct.word_list, %struct.word_list* %514, i32 0, i32 1
  %515 = load %struct.word_desc*, %struct.word_desc** %word912, align 4
  %word913 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %515, i32 0, i32 0
  %516 = load i8*, i8** %word913, align 4
  %call914 = call i8* @strcpy(i8* %call911, i8* %516)
  store i8* %call914, i8** %temp, align 4
  %517 = load %struct.word_list*, %struct.word_list** %list, align 4
  %word915 = getelementptr inbounds %struct.word_list, %struct.word_list* %517, i32 0, i32 1
  %518 = load %struct.word_desc*, %struct.word_desc** %word915, align 4
  %flags916 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %518, i32 0, i32 1
  %519 = load i32, i32* %flags916, align 4
  store i32 %519, i32* %tflag, align 4
  %520 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %520)
  %521 = load i32, i32* %tflag, align 4
  %and917 = and i32 %521, 262144
  %tobool918 = icmp ne i32 %and917, 0
  br i1 %tobool918, label %land.lhs.true919, label %if.end934

land.lhs.true919:                                 ; preds = %if.else906
  %522 = load i8*, i8** %temp, align 4
  %arrayidx920 = getelementptr inbounds i8, i8* %522, i32 0
  %523 = load i8, i8* %arrayidx920, align 1
  %conv921 = sext i8 %523 to i32
  %cmp922 = icmp eq i32 %conv921, 127
  br i1 %cmp922, label %land.rhs924, label %land.end929

land.rhs924:                                      ; preds = %land.lhs.true919
  %524 = load i8*, i8** %temp, align 4
  %arrayidx925 = getelementptr inbounds i8, i8* %524, i32 1
  %525 = load i8, i8* %arrayidx925, align 1
  %conv926 = sext i8 %525 to i32
  %cmp927 = icmp eq i32 %conv926, 0
  br label %land.end929

land.end929:                                      ; preds = %land.rhs924, %land.lhs.true919
  %526 = phi i1 [ false, %land.lhs.true919 ], [ %cmp927, %land.rhs924 ]
  %land.ext = zext i1 %526 to i32
  %cmp930 = icmp eq i32 %land.ext, 0
  br i1 %cmp930, label %if.then932, label %if.end934

if.then932:                                       ; preds = %land.end929
  %527 = load i8*, i8** %temp, align 4
  %call933 = call i8* @remove_quoted_nulls(i8* %527)
  br label %if.end934

if.end934:                                        ; preds = %if.then932, %land.end929, %if.else906
  br label %if.end935

if.end935:                                        ; preds = %if.end934
  br label %if.end937

if.else936:                                       ; preds = %if.end893
  store i8* null, i8** %temp, align 4
  br label %if.end937

if.end937:                                        ; preds = %if.else936, %if.end935
  %528 = load i8*, i8** %temp, align 4
  %cmp938 = icmp eq i8* %528, null
  br i1 %cmp938, label %land.lhs.true940, label %if.end948

land.lhs.true940:                                 ; preds = %if.end937
  %529 = load i32, i32* %quoted_state, align 4
  %cmp941 = icmp eq i32 %529, 1
  br i1 %cmp941, label %land.lhs.true943, label %if.end948

land.lhs.true943:                                 ; preds = %land.lhs.true940
  %530 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags944 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %530, i32 0, i32 1
  %531 = load i32, i32* %flags944, align 4
  %and945 = and i32 %531, 80
  %tobool946 = icmp ne i32 %and945, 0
  br i1 %tobool946, label %if.then947, label %if.end948

if.then947:                                       ; preds = %land.lhs.true943
  br label %for.cond

if.end948:                                        ; preds = %land.lhs.true943, %land.lhs.true940, %if.end937
  br label %add_quoted_string

add_quoted_string:                                ; preds = %if.else993, %if.end948, %if.end341
  %532 = load i8*, i8** %temp, align 4
  %tobool949 = icmp ne i8* %532, null
  br i1 %tobool949, label %if.then950, label %if.else952

if.then950:                                       ; preds = %add_quoted_string
  %533 = load i8*, i8** %temp, align 4
  store i8* %533, i8** %temp1, align 4
  %534 = load i8*, i8** %temp, align 4
  %call951 = call i8* @quote_string(i8* %534)
  store i8* %call951, i8** %temp, align 4
  %535 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %535, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9595)
  br label %add_string

if.else952:                                       ; preds = %add_quoted_string
  store i8 127, i8* %c, align 1
  %536 = load i32, i32* %sindex, align 4
  %dec953 = add nsw i32 %536, -1
  store i32 %dec953, i32* %sindex, align 4
  br label %add_character

sw.bb954:                                         ; preds = %for.cond
  %537 = load i32, i32* %quoted.addr, align 4
  %and955 = and i32 %537, 3
  %tobool956 = icmp ne i32 %and955, 0
  br i1 %tobool956, label %if.then957, label %if.end958

if.then957:                                       ; preds = %sw.bb954
  br label %add_character

if.end958:                                        ; preds = %sw.bb954
  %538 = load i32, i32* %sindex, align 4
  %inc959 = add nsw i32 %538, 1
  store i32 %inc959, i32* %sindex, align 4
  store i32 %inc959, i32* %t_index, align 4
  %539 = load i8*, i8** %string, align 4
  %call960 = call i8* @string_extract_single_quoted(i8* %539, i32* %sindex)
  store i8* %call960, i8** %temp, align 4
  %540 = load i32, i32* %t_index, align 4
  %cmp961 = icmp eq i32 %540, 1
  br i1 %cmp961, label %land.rhs963, label %land.end968

land.rhs963:                                      ; preds = %if.end958
  %541 = load i8*, i8** %string, align 4
  %542 = load i32, i32* %sindex, align 4
  %arrayidx964 = getelementptr inbounds i8, i8* %541, i32 %542
  %543 = load i8, i8* %arrayidx964, align 1
  %conv965 = sext i8 %543 to i32
  %cmp966 = icmp eq i32 %conv965, 0
  br label %land.end968

land.end968:                                      ; preds = %land.rhs963, %if.end958
  %544 = phi i1 [ false, %if.end958 ], [ %cmp966, %land.rhs963 ]
  %cond970 = select i1 %544, i32 2, i32 1
  store i32 %cond970, i32* %quoted_state, align 4
  %545 = load i8*, i8** %temp, align 4
  %546 = load i8, i8* %545, align 1
  %conv971 = sext i8 %546 to i32
  %cmp972 = icmp eq i32 %conv971, 0
  br i1 %cmp972, label %if.then974, label %if.else975

if.then974:                                       ; preds = %land.end968
  %547 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %547, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9624)
  store i8* null, i8** %temp, align 4
  br label %if.end977

if.else975:                                       ; preds = %land.end968
  %548 = load i8*, i8** %temp, align 4
  %call976 = call i8* @remove_quoted_escapes(i8* %548)
  br label %if.end977

if.end977:                                        ; preds = %if.else975, %if.then974
  %549 = load i8*, i8** %temp, align 4
  %cmp978 = icmp eq i8* %549, null
  br i1 %cmp978, label %land.lhs.true980, label %if.end988

land.lhs.true980:                                 ; preds = %if.end977
  %550 = load i32, i32* %quoted_state, align 4
  %cmp981 = icmp eq i32 %550, 1
  br i1 %cmp981, label %land.lhs.true983, label %if.end988

land.lhs.true983:                                 ; preds = %land.lhs.true980
  %551 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags984 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %551, i32 0, i32 1
  %552 = load i32, i32* %flags984, align 4
  %and985 = and i32 %552, 80
  %tobool986 = icmp ne i32 %and985, 0
  br i1 %tobool986, label %if.then987, label %if.end988

if.then987:                                       ; preds = %land.lhs.true983
  br label %for.cond

if.end988:                                        ; preds = %land.lhs.true983, %land.lhs.true980, %if.end977
  %553 = load i8*, i8** %temp, align 4
  %cmp989 = icmp eq i8* %553, null
  br i1 %cmp989, label %if.then991, label %if.else993

if.then991:                                       ; preds = %if.end988
  store i8 127, i8* %c, align 1
  %554 = load i32, i32* %sindex, align 4
  %dec992 = add nsw i32 %554, -1
  store i32 %dec992, i32* %sindex, align 4
  br label %add_character

if.else993:                                       ; preds = %if.end988
  br label %add_quoted_string

sw.default:                                       ; preds = %for.cond
  br label %add_ifs_character

add_ifs_character:                                ; preds = %sw.default, %if.then286, %if.then245, %if.then216, %if.then196, %if.then144
  %555 = load i32, i32* %quoted.addr, align 4
  %and994 = and i32 %555, 3
  %tobool995 = icmp ne i32 %and994, 0
  br i1 %tobool995, label %if.then1010, label %lor.lhs.false996

lor.lhs.false996:                                 ; preds = %add_ifs_character
  %556 = load i32, i32* %isexp.addr, align 4
  %cmp997 = icmp eq i32 %556, 0
  br i1 %cmp997, label %land.lhs.true999, label %if.end1071

land.lhs.true999:                                 ; preds = %lor.lhs.false996
  %557 = load i8, i8* %c, align 1
  %idxprom1000 = zext i8 %557 to i32
  %arrayidx1001 = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom1000
  %558 = load i8, i8* %arrayidx1001, align 1
  %conv1002 = zext i8 %558 to i32
  %cmp1003 = icmp ne i32 %conv1002, 0
  br i1 %cmp1003, label %land.lhs.true1005, label %if.end1071

land.lhs.true1005:                                ; preds = %land.lhs.true999
  %559 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1006 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %559, i32 0, i32 1
  %560 = load i32, i32* %flags1006, align 4
  %and1007 = and i32 %560, 80
  %cmp1008 = icmp eq i32 %and1007, 0
  br i1 %cmp1008, label %if.then1010, label %if.end1071

if.then1010:                                      ; preds = %land.lhs.true1005, %add_ifs_character
  %561 = load i8*, i8** %string, align 4
  %562 = load i32, i32* %sindex, align 4
  %arrayidx1011 = getelementptr inbounds i8, i8* %561, i32 %562
  %563 = load i8, i8* %arrayidx1011, align 1
  %tobool1012 = icmp ne i8 %563, 0
  br i1 %tobool1012, label %if.then1013, label %if.end1015

if.then1013:                                      ; preds = %if.then1010
  %564 = load i32, i32* %sindex, align 4
  %inc1014 = add nsw i32 %564, 1
  store i32 %inc1014, i32* %sindex, align 4
  br label %if.end1015

if.end1015:                                       ; preds = %if.then1013, %if.then1010
  %565 = load i8, i8* %c, align 1
  %conv1016 = zext i8 %565 to i32
  %cmp1017 = icmp eq i32 %conv1016, 0
  br i1 %cmp1017, label %if.then1019, label %if.else1020

if.then1019:                                      ; preds = %if.end1015
  store i8 127, i8* %c, align 1
  br label %add_character

if.else1020:                                      ; preds = %if.end1015
  %566 = load i32, i32* %mb_cur_max, align 4
  %cmp1021 = icmp sgt i32 %566, 1
  br i1 %cmp1021, label %if.then1023, label %if.end1025

if.then1023:                                      ; preds = %if.else1020
  %567 = load i32, i32* %sindex, align 4
  %dec1024 = add nsw i32 %567, -1
  store i32 %dec1024, i32* %sindex, align 4
  br label %if.end1025

if.end1025:                                       ; preds = %if.then1023, %if.else1020
  %568 = load i32, i32* %mb_cur_max, align 4
  %cmp1026 = icmp sgt i32 %568, 1
  br i1 %cmp1026, label %if.then1028, label %if.else1068

if.then1028:                                      ; preds = %if.end1025
  %569 = load i8*, i8** %string, align 4
  %570 = load i32, i32* %sindex, align 4
  %add.ptr1032 = getelementptr inbounds i8, i8* %569, i32 %570
  %571 = load i8, i8* %add.ptr1032, align 1
  %call1033 = call i32 @is_basic(i8 signext %571)
  store i32 %call1033, i32* %i1029, align 4
  %572 = load i32, i32* %i1029, align 4
  %tobool1034 = icmp ne i32 %572, 0
  br i1 %tobool1034, label %if.then1035, label %if.else1036

if.then1035:                                      ; preds = %if.then1028
  store i32 1, i32* %mblength1031, align 4
  br label %if.end1040

if.else1036:                                      ; preds = %if.then1028
  %573 = bitcast %struct.__mbstate_t* %state_bak1030 to i8*
  %574 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %573, i8* %574, i32 8, i32 4, i1 false)
  %575 = load i8*, i8** %string, align 4
  %576 = load i32, i32* %sindex, align 4
  %add.ptr1037 = getelementptr inbounds i8, i8* %575, i32 %576
  %577 = load i32, i32* %string_size, align 4
  %578 = load i32, i32* %sindex, align 4
  %sub1038 = sub i32 %577, %578
  %call1039 = call i32 @mbrlen(i8* %add.ptr1037, i32 %sub1038, %struct.__mbstate_t* %state)
  store i32 %call1039, i32* %mblength1031, align 4
  br label %if.end1040

if.end1040:                                       ; preds = %if.else1036, %if.then1035
  %579 = load i32, i32* %mblength1031, align 4
  %cmp1041 = icmp eq i32 %579, -1
  br i1 %cmp1041, label %if.then1046, label %lor.lhs.false1043

lor.lhs.false1043:                                ; preds = %if.end1040
  %580 = load i32, i32* %mblength1031, align 4
  %cmp1044 = icmp eq i32 %580, -2
  br i1 %cmp1044, label %if.then1046, label %if.end1047

if.then1046:                                      ; preds = %lor.lhs.false1043, %if.end1040
  %581 = bitcast %struct.__mbstate_t* %state to i8*
  %582 = bitcast %struct.__mbstate_t* %state_bak1030 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %581, i8* %582, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength1031, align 4
  br label %if.end1047

if.end1047:                                       ; preds = %if.then1046, %lor.lhs.false1043
  %583 = load i32, i32* %mblength1031, align 4
  %cmp1048 = icmp ult i32 %583, 1
  br i1 %cmp1048, label %if.then1050, label %if.end1051

if.then1050:                                      ; preds = %if.end1047
  store i32 1, i32* %mblength1031, align 4
  br label %if.end1051

if.end1051:                                       ; preds = %if.then1050, %if.end1047
  %584 = load i32, i32* %mblength1031, align 4
  %add1052 = add i32 %584, 2
  %call1053 = call i8* @sh_xmalloc(i32 %add1052, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9668)
  store i8* %call1053, i8** %temp, align 4
  %585 = load i8*, i8** %temp, align 4
  %arrayidx1054 = getelementptr inbounds i8, i8* %585, i32 0
  store i8 1, i8* %arrayidx1054, align 1
  store i32 0, i32* %i1029, align 4
  br label %for.cond1055

for.cond1055:                                     ; preds = %for.inc1063, %if.end1051
  %586 = load i32, i32* %i1029, align 4
  %587 = load i32, i32* %mblength1031, align 4
  %cmp1056 = icmp ult i32 %586, %587
  br i1 %cmp1056, label %for.body1058, label %for.end1065

for.body1058:                                     ; preds = %for.cond1055
  %588 = load i8*, i8** %string, align 4
  %589 = load i32, i32* %sindex, align 4
  %inc1059 = add nsw i32 %589, 1
  store i32 %inc1059, i32* %sindex, align 4
  %arrayidx1060 = getelementptr inbounds i8, i8* %588, i32 %589
  %590 = load i8, i8* %arrayidx1060, align 1
  %591 = load i8*, i8** %temp, align 4
  %592 = load i32, i32* %i1029, align 4
  %add1061 = add nsw i32 %592, 1
  %arrayidx1062 = getelementptr inbounds i8, i8* %591, i32 %add1061
  store i8 %590, i8* %arrayidx1062, align 1
  br label %for.inc1063

for.inc1063:                                      ; preds = %for.body1058
  %593 = load i32, i32* %i1029, align 4
  %inc1064 = add nsw i32 %593, 1
  store i32 %inc1064, i32* %i1029, align 4
  br label %for.cond1055

for.end1065:                                      ; preds = %for.cond1055
  %594 = load i8*, i8** %temp, align 4
  %595 = load i32, i32* %mblength1031, align 4
  %add1066 = add i32 %595, 1
  %arrayidx1067 = getelementptr inbounds i8, i8* %594, i32 %add1066
  store i8 0, i8* %arrayidx1067, align 1
  br label %add_string

if.else1068:                                      ; preds = %if.end1025
  %arrayidx1069 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 0
  store i8 1, i8* %arrayidx1069, align 1
  %596 = load i8, i8* %c, align 1
  %arrayidx1070 = getelementptr inbounds [2 x i8], [2 x i8]* %twochars, i32 0, i32 1
  store i8 %596, i8* %arrayidx1070, align 1
  br label %add_twochars

if.end1071:                                       ; preds = %land.lhs.true1005, %land.lhs.true999, %lor.lhs.false996
  br label %do.body1072

do.body1072:                                      ; preds = %if.end1071
  %597 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp1073 = icmp sgt i32 %597, 1
  br i1 %cmp1073, label %if.then1075, label %if.end1112

if.then1075:                                      ; preds = %do.body1072
  %598 = load i8*, i8** %string, align 4
  %599 = load i32, i32* %sindex, align 4
  %add.ptr1079 = getelementptr inbounds i8, i8* %598, i32 %599
  %600 = load i8, i8* %add.ptr1079, align 1
  %call1080 = call i32 @is_basic(i8 signext %600)
  store i32 %call1080, i32* %i1076, align 4
  %601 = load i32, i32* %i1076, align 4
  %tobool1081 = icmp ne i32 %601, 0
  br i1 %tobool1081, label %if.then1082, label %if.else1083

if.then1082:                                      ; preds = %if.then1075
  store i32 1, i32* %mblength1078, align 4
  br label %if.end1087

if.else1083:                                      ; preds = %if.then1075
  %602 = bitcast %struct.__mbstate_t* %state_bak1077 to i8*
  %603 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %602, i8* %603, i32 8, i32 4, i1 false)
  %604 = load i8*, i8** %string, align 4
  %605 = load i32, i32* %sindex, align 4
  %add.ptr1084 = getelementptr inbounds i8, i8* %604, i32 %605
  %606 = load i32, i32* %string_size, align 4
  %607 = load i32, i32* %sindex, align 4
  %sub1085 = sub i32 %606, %607
  %call1086 = call i32 @mbrlen(i8* %add.ptr1084, i32 %sub1085, %struct.__mbstate_t* %state)
  store i32 %call1086, i32* %mblength1078, align 4
  br label %if.end1087

if.end1087:                                       ; preds = %if.else1083, %if.then1082
  %608 = load i32, i32* %mblength1078, align 4
  %cmp1088 = icmp eq i32 %608, -1
  br i1 %cmp1088, label %if.then1093, label %lor.lhs.false1090

lor.lhs.false1090:                                ; preds = %if.end1087
  %609 = load i32, i32* %mblength1078, align 4
  %cmp1091 = icmp eq i32 %609, -2
  br i1 %cmp1091, label %if.then1093, label %if.end1094

if.then1093:                                      ; preds = %lor.lhs.false1090, %if.end1087
  %610 = bitcast %struct.__mbstate_t* %state to i8*
  %611 = bitcast %struct.__mbstate_t* %state_bak1077 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %610, i8* %611, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength1078, align 4
  br label %if.end1094

if.end1094:                                       ; preds = %if.then1093, %lor.lhs.false1090
  %612 = load i32, i32* %mblength1078, align 4
  %cmp1095 = icmp ult i32 %612, 1
  br i1 %cmp1095, label %if.then1097, label %if.end1098

if.then1097:                                      ; preds = %if.end1094
  store i32 1, i32* %mblength1078, align 4
  br label %if.end1098

if.end1098:                                       ; preds = %if.then1097, %if.end1094
  %613 = load i32, i32* %mblength1078, align 4
  %add1099 = add i32 %613, 1
  %call1100 = call i8* @sh_xmalloc(i32 %add1099, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9680)
  store i8* %call1100, i8** %temp, align 4
  store i32 0, i32* %i1076, align 4
  br label %for.cond1101

for.cond1101:                                     ; preds = %for.inc1108, %if.end1098
  %614 = load i32, i32* %i1076, align 4
  %615 = load i32, i32* %mblength1078, align 4
  %cmp1102 = icmp ult i32 %614, %615
  br i1 %cmp1102, label %for.body1104, label %for.end1110

for.body1104:                                     ; preds = %for.cond1101
  %616 = load i8*, i8** %string, align 4
  %617 = load i32, i32* %sindex, align 4
  %inc1105 = add nsw i32 %617, 1
  store i32 %inc1105, i32* %sindex, align 4
  %arrayidx1106 = getelementptr inbounds i8, i8* %616, i32 %617
  %618 = load i8, i8* %arrayidx1106, align 1
  %619 = load i8*, i8** %temp, align 4
  %620 = load i32, i32* %i1076, align 4
  %arrayidx1107 = getelementptr inbounds i8, i8* %619, i32 %620
  store i8 %618, i8* %arrayidx1107, align 1
  br label %for.inc1108

for.inc1108:                                      ; preds = %for.body1104
  %621 = load i32, i32* %i1076, align 4
  %inc1109 = add nsw i32 %621, 1
  store i32 %inc1109, i32* %i1076, align 4
  br label %for.cond1101

for.end1110:                                      ; preds = %for.cond1101
  %622 = load i8*, i8** %temp, align 4
  %623 = load i32, i32* %mblength1078, align 4
  %arrayidx1111 = getelementptr inbounds i8, i8* %622, i32 %623
  store i8 0, i8* %arrayidx1111, align 1
  br label %add_string

if.end1112:                                       ; preds = %do.body1072
  br label %do.end1113

do.end1113:                                       ; preds = %if.end1112
  br label %add_character

add_character:                                    ; preds = %do.end1113, %if.then1019, %if.then991, %if.then957, %if.else952, %if.then793, %if.then705, %if.then440, %do.end348, %do.end340, %if.else287, %if.else246, %if.else217, %if.else197, %if.else145, %if.then106
  br label %do.body1114

do.body1114:                                      ; preds = %add_character
  %624 = load i32, i32* %istring_index, align 4
  %add1115 = add nsw i32 %624, 1
  %625 = load i32, i32* %istring_size, align 4
  %cmp1116 = icmp uge i32 %add1115, %625
  br i1 %cmp1116, label %if.then1118, label %if.end1127

if.then1118:                                      ; preds = %do.body1114
  br label %while.cond1119

while.cond1119:                                   ; preds = %while.body1123, %if.then1118
  %626 = load i32, i32* %istring_index, align 4
  %add1120 = add nsw i32 %626, 1
  %627 = load i32, i32* %istring_size, align 4
  %cmp1121 = icmp uge i32 %add1120, %627
  br i1 %cmp1121, label %while.body1123, label %while.end1125

while.body1123:                                   ; preds = %while.cond1119
  %628 = load i32, i32* %istring_size, align 4
  %add1124 = add i32 %628, 128
  store i32 %add1124, i32* %istring_size, align 4
  br label %while.cond1119

while.end1125:                                    ; preds = %while.cond1119
  %629 = load i8*, i8** %istring, align 4
  %630 = load i32, i32* %istring_size, align 4
  %call1126 = call i8* @sh_xrealloc(i8* %629, i32 %630, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9684)
  store i8* %call1126, i8** %istring, align 4
  br label %if.end1127

if.end1127:                                       ; preds = %while.end1125, %do.body1114
  br label %do.end1128

do.end1128:                                       ; preds = %if.end1127
  %631 = load i8, i8* %c, align 1
  %632 = load i8*, i8** %istring, align 4
  %633 = load i32, i32* %istring_index, align 4
  %inc1129 = add nsw i32 %633, 1
  store i32 %inc1129, i32* %istring_index, align 4
  %arrayidx1130 = getelementptr inbounds i8, i8* %632, i32 %633
  store i8 %631, i8* %arrayidx1130, align 1
  %634 = load i8*, i8** %istring, align 4
  %635 = load i32, i32* %istring_index, align 4
  %arrayidx1131 = getelementptr inbounds i8, i8* %634, i32 %635
  store i8 0, i8* %arrayidx1131, align 1
  %636 = load i32, i32* %sindex, align 4
  %inc1132 = add nsw i32 %636, 1
  store i32 %inc1132, i32* %sindex, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end1128, %if.then859, %do.end778, %if.end91
  br label %for.cond

finished_with_string:                             ; preds = %sw.bb, %if.then29
  %637 = load i8*, i8** %istring, align 4
  %638 = load i8, i8* %637, align 1
  %conv1133 = sext i8 %638 to i32
  %cmp1134 = icmp eq i32 %conv1133, 0
  br i1 %cmp1134, label %if.then1136, label %if.else1166

if.then1136:                                      ; preds = %finished_with_string
  %639 = load i32, i32* %quoted_dollar_at, align 4
  %cmp1137 = icmp eq i32 %639, 0
  br i1 %cmp1137, label %land.lhs.true1139, label %if.else1157

land.lhs.true1139:                                ; preds = %if.then1136
  %640 = load i32, i32* %had_quoted_null, align 4
  %tobool1140 = icmp ne i32 %640, 0
  br i1 %tobool1140, label %if.then1144, label %lor.lhs.false1141

lor.lhs.false1141:                                ; preds = %land.lhs.true1139
  %641 = load i32, i32* %quoted_state, align 4
  %cmp1142 = icmp eq i32 %641, 1
  br i1 %cmp1142, label %if.then1144, label %if.else1157

if.then1144:                                      ; preds = %lor.lhs.false1141, %land.lhs.true1139
  %642 = load i8*, i8** %istring, align 4
  %arrayidx1145 = getelementptr inbounds i8, i8* %642, i32 0
  store i8 127, i8* %arrayidx1145, align 1
  %643 = load i8*, i8** %istring, align 4
  %arrayidx1146 = getelementptr inbounds i8, i8* %643, i32 1
  store i8 0, i8* %arrayidx1146, align 1
  %644 = load i8*, i8** %istring, align 4
  %call1147 = call %struct.word_desc* @make_bare_word(i8* %644)
  store %struct.word_desc* %call1147, %struct.word_desc** %tword, align 4
  %645 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1148 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %645, i32 0, i32 1
  %646 = load i32, i32* %flags1148, align 4
  %or1149 = or i32 %646, 262144
  store i32 %or1149, i32* %flags1148, align 4
  %647 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %call1150 = call %struct.word_list* @make_word_list(%struct.word_desc* %647, %struct.word_list* null)
  store %struct.word_list* %call1150, %struct.word_list** %list, align 4
  %648 = load i32, i32* %quoted.addr, align 4
  %and1151 = and i32 %648, 3
  %tobool1152 = icmp ne i32 %and1151, 0
  br i1 %tobool1152, label %if.then1153, label %if.end1156

if.then1153:                                      ; preds = %if.then1144
  %649 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1154 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %649, i32 0, i32 1
  %650 = load i32, i32* %flags1154, align 4
  %or1155 = or i32 %650, 2
  store i32 %or1155, i32* %flags1154, align 4
  br label %if.end1156

if.end1156:                                       ; preds = %if.then1153, %if.then1144
  br label %if.end1165

if.else1157:                                      ; preds = %lor.lhs.false1141, %if.then1136
  %651 = load i32, i32* %quoted_state, align 4
  %cmp1158 = icmp eq i32 %651, 0
  br i1 %cmp1158, label %if.then1162, label %lor.lhs.false1160

lor.lhs.false1160:                                ; preds = %if.else1157
  %652 = load i32, i32* %quoted_dollar_at, align 4
  %tobool1161 = icmp ne i32 %652, 0
  br i1 %tobool1161, label %if.then1162, label %if.else1163

if.then1162:                                      ; preds = %lor.lhs.false1160, %if.else1157
  store %struct.word_list* null, %struct.word_list** %list, align 4
  br label %if.end1164

if.else1163:                                      ; preds = %lor.lhs.false1160
  store %struct.word_list* null, %struct.word_list** %list, align 4
  br label %if.end1164

if.end1164:                                       ; preds = %if.else1163, %if.then1162
  br label %if.end1165

if.end1165:                                       ; preds = %if.end1164, %if.end1156
  br label %if.end1355

if.else1166:                                      ; preds = %finished_with_string
  %653 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1167 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %653, i32 0, i32 1
  %654 = load i32, i32* %flags1167, align 4
  %and1168 = and i32 %654, 16
  %tobool1169 = icmp ne i32 %and1168, 0
  br i1 %tobool1169, label %if.then1170, label %if.else1229

if.then1170:                                      ; preds = %if.else1166
  %655 = load i8*, i8** %istring, align 4
  %call1171 = call %struct.word_desc* @make_bare_word(i8* %655)
  store %struct.word_desc* %call1171, %struct.word_desc** %tword, align 4
  %656 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1172 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %656, i32 0, i32 1
  %657 = load i32, i32* %flags1172, align 4
  %and1173 = and i32 %657, 4
  %tobool1174 = icmp ne i32 %and1173, 0
  br i1 %tobool1174, label %if.then1175, label %if.end1178

if.then1175:                                      ; preds = %if.then1170
  %658 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1176 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %658, i32 0, i32 1
  %659 = load i32, i32* %flags1176, align 4
  %or1177 = or i32 %659, 4
  store i32 %or1177, i32* %flags1176, align 4
  br label %if.end1178

if.end1178:                                       ; preds = %if.then1175, %if.then1170
  %660 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1179 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %660, i32 0, i32 1
  %661 = load i32, i32* %flags1179, align 4
  %and1180 = and i32 %661, 32768
  %tobool1181 = icmp ne i32 %and1180, 0
  br i1 %tobool1181, label %if.then1182, label %if.end1185

if.then1182:                                      ; preds = %if.end1178
  %662 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1183 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %662, i32 0, i32 1
  %663 = load i32, i32* %flags1183, align 4
  %or1184 = or i32 %663, 32768
  store i32 %or1184, i32* %flags1183, align 4
  br label %if.end1185

if.end1185:                                       ; preds = %if.then1182, %if.end1178
  %664 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1186 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %664, i32 0, i32 1
  %665 = load i32, i32* %flags1186, align 4
  %and1187 = and i32 %665, 32
  %tobool1188 = icmp ne i32 %and1187, 0
  br i1 %tobool1188, label %if.then1189, label %if.end1192

if.then1189:                                      ; preds = %if.end1185
  %666 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1190 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %666, i32 0, i32 1
  %667 = load i32, i32* %flags1190, align 4
  %or1191 = or i32 %667, 32
  store i32 %or1191, i32* %flags1190, align 4
  br label %if.end1192

if.end1192:                                       ; preds = %if.then1189, %if.end1185
  %668 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1193 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %668, i32 0, i32 1
  %669 = load i32, i32* %flags1193, align 4
  %and1194 = and i32 %669, 67108864
  %tobool1195 = icmp ne i32 %and1194, 0
  br i1 %tobool1195, label %if.then1196, label %if.end1199

if.then1196:                                      ; preds = %if.end1192
  %670 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1197 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %670, i32 0, i32 1
  %671 = load i32, i32* %flags1197, align 4
  %or1198 = or i32 %671, 67108864
  store i32 %or1198, i32* %flags1197, align 4
  br label %if.end1199

if.end1199:                                       ; preds = %if.then1196, %if.end1192
  %672 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1200 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %672, i32 0, i32 1
  %673 = load i32, i32* %flags1200, align 4
  %and1201 = and i32 %673, 16384
  %tobool1202 = icmp ne i32 %and1201, 0
  br i1 %tobool1202, label %if.then1203, label %if.end1206

if.then1203:                                      ; preds = %if.end1199
  %674 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1204 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %674, i32 0, i32 1
  %675 = load i32, i32* %flags1204, align 4
  %or1205 = or i32 %675, 16384
  store i32 %or1205, i32* %flags1204, align 4
  br label %if.end1206

if.end1206:                                       ; preds = %if.then1203, %if.end1199
  %676 = load i32, i32* %quoted.addr, align 4
  %and1207 = and i32 %676, 3
  %tobool1208 = icmp ne i32 %and1207, 0
  br i1 %tobool1208, label %if.then1209, label %if.end1212

if.then1209:                                      ; preds = %if.end1206
  %677 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1210 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %677, i32 0, i32 1
  %678 = load i32, i32* %flags1210, align 4
  %or1211 = or i32 %678, 2
  store i32 %or1211, i32* %flags1210, align 4
  br label %if.end1212

if.end1212:                                       ; preds = %if.then1209, %if.end1206
  %679 = load i32, i32* %had_quoted_null, align 4
  %tobool1213 = icmp ne i32 %679, 0
  br i1 %tobool1213, label %land.lhs.true1214, label %if.end1227

land.lhs.true1214:                                ; preds = %if.end1212
  %680 = load i8*, i8** %istring, align 4
  %arrayidx1215 = getelementptr inbounds i8, i8* %680, i32 0
  %681 = load i8, i8* %arrayidx1215, align 1
  %conv1216 = sext i8 %681 to i32
  %cmp1217 = icmp eq i32 %conv1216, 127
  br i1 %cmp1217, label %land.lhs.true1219, label %if.end1227

land.lhs.true1219:                                ; preds = %land.lhs.true1214
  %682 = load i8*, i8** %istring, align 4
  %arrayidx1220 = getelementptr inbounds i8, i8* %682, i32 1
  %683 = load i8, i8* %arrayidx1220, align 1
  %conv1221 = sext i8 %683 to i32
  %cmp1222 = icmp eq i32 %conv1221, 0
  br i1 %cmp1222, label %if.then1224, label %if.end1227

if.then1224:                                      ; preds = %land.lhs.true1219
  %684 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1225 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %684, i32 0, i32 1
  %685 = load i32, i32* %flags1225, align 4
  %or1226 = or i32 %685, 262144
  store i32 %or1226, i32* %flags1225, align 4
  br label %if.end1227

if.end1227:                                       ; preds = %if.then1224, %land.lhs.true1219, %land.lhs.true1214, %if.end1212
  %686 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %call1228 = call %struct.word_list* @make_word_list(%struct.word_desc* %686, %struct.word_list* null)
  store %struct.word_list* %call1228, %struct.word_list** %list, align 4
  br label %if.end1354

if.else1229:                                      ; preds = %if.else1166
  %687 = load i32, i32* %quoted_dollar_at, align 4
  %tobool1230 = icmp ne i32 %687, 0
  br i1 %tobool1230, label %cond.true1233, label %lor.lhs.false1231

lor.lhs.false1231:                                ; preds = %if.else1229
  %688 = load i32, i32* %has_dollar_at, align 4
  %tobool1232 = icmp ne i32 %688, 0
  br i1 %tobool1232, label %cond.true1233, label %cond.false1234

cond.true1233:                                    ; preds = %lor.lhs.false1231, %if.else1229
  %689 = load i8*, i8** @ifs_value, align 4
  br label %cond.end1235

cond.false1234:                                   ; preds = %lor.lhs.false1231
  br label %cond.end1235

cond.end1235:                                     ; preds = %cond.false1234, %cond.true1233
  %cond1236 = phi i8* [ %689, %cond.true1233 ], [ null, %cond.false1234 ]
  store i8* %cond1236, i8** %ifs_chars, align 4
  %690 = load i32, i32* %split_on_spaces, align 4
  %tobool1237 = icmp ne i32 %690, 0
  br i1 %tobool1237, label %if.then1238, label %if.else1240

if.then1238:                                      ; preds = %cond.end1235
  %691 = load i8*, i8** %istring, align 4
  %call1239 = call %struct.word_list* @list_string(i8* %691, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), i32 1)
  store %struct.word_list* %call1239, %struct.word_list** %list, align 4
  br label %if.end1353

if.else1240:                                      ; preds = %cond.end1235
  %692 = load i32, i32* %has_dollar_at, align 4
  %tobool1241 = icmp ne i32 %692, 0
  br i1 %tobool1241, label %land.lhs.true1242, label %if.else1277

land.lhs.true1242:                                ; preds = %if.else1240
  %693 = load i32, i32* %quoted_dollar_at, align 4
  %cmp1243 = icmp eq i32 %693, 0
  br i1 %cmp1243, label %land.lhs.true1245, label %if.else1277

land.lhs.true1245:                                ; preds = %land.lhs.true1242
  %694 = load i8*, i8** %ifs_chars, align 4
  %tobool1246 = icmp ne i8* %694, null
  br i1 %tobool1246, label %land.lhs.true1247, label %if.else1277

land.lhs.true1247:                                ; preds = %land.lhs.true1245
  %695 = load i32, i32* %quoted.addr, align 4
  %cmp1248 = icmp eq i32 %695, 0
  br i1 %cmp1248, label %land.lhs.true1250, label %if.else1277

land.lhs.true1250:                                ; preds = %land.lhs.true1247
  %696 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1251 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %696, i32 0, i32 1
  %697 = load i32, i32* %flags1251, align 4
  %and1252 = and i32 %697, 64
  %tobool1253 = icmp ne i32 %and1252, 0
  br i1 %tobool1253, label %if.then1254, label %if.else1277

if.then1254:                                      ; preds = %land.lhs.true1250
  %698 = load i8*, i8** %ifs_chars, align 4
  %699 = load i8, i8* %698, align 1
  %conv1255 = sext i8 %699 to i32
  %tobool1256 = icmp ne i32 %conv1255, 0
  br i1 %tobool1256, label %land.lhs.true1257, label %if.else1270

land.lhs.true1257:                                ; preds = %if.then1254
  %700 = load i8*, i8** %ifs_chars, align 4
  %701 = load i8, i8* %700, align 1
  %conv1258 = sext i8 %701 to i32
  %cmp1259 = icmp ne i32 %conv1258, 32
  br i1 %cmp1259, label %if.then1261, label %if.else1270

if.then1261:                                      ; preds = %land.lhs.true1257
  %702 = load i8*, i8** %istring, align 4
  %703 = load i8*, i8** %ifs_chars, align 4
  %704 = load i8, i8* %703, align 1
  %conv1262 = sext i8 %704 to i32
  %tobool1263 = icmp ne i32 %conv1262, 0
  br i1 %tobool1263, label %cond.true1264, label %cond.false1265

cond.true1264:                                    ; preds = %if.then1261
  %705 = load i8*, i8** %ifs_chars, align 4
  br label %cond.end1266

cond.false1265:                                   ; preds = %if.then1261
  br label %cond.end1266

cond.end1266:                                     ; preds = %cond.false1265, %cond.true1264
  %cond1267 = phi i8* [ %705, %cond.true1264 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), %cond.false1265 ]
  %call1268 = call %struct.word_list* @list_string(i8* %702, i8* %cond1267, i32 1)
  store %struct.word_list* %call1268, %struct.word_list** %list, align 4
  %706 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call1269 = call i8* @string_list(%struct.word_list* %706)
  store i8* %call1269, i8** %tstring, align 4
  br label %if.end1271

if.else1270:                                      ; preds = %land.lhs.true1257, %if.then1254
  %707 = load i8*, i8** %istring, align 4
  store i8* %707, i8** %tstring, align 4
  br label %if.end1271

if.end1271:                                       ; preds = %if.else1270, %cond.end1266
  %708 = load i8*, i8** %tstring, align 4
  %call1272 = call %struct.word_desc* @make_bare_word(i8* %708)
  store %struct.word_desc* %call1272, %struct.word_desc** %tword, align 4
  %709 = load i8*, i8** %tstring, align 4
  %710 = load i8*, i8** %istring, align 4
  %cmp1273 = icmp ne i8* %709, %710
  br i1 %cmp1273, label %if.then1275, label %if.end1276

if.then1275:                                      ; preds = %if.end1271
  %711 = load i8*, i8** %tstring, align 4
  call void @sh_xfree(i8* %711, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9812)
  br label %if.end1276

if.end1276:                                       ; preds = %if.then1275, %if.end1271
  br label %set_word_flags

if.else1277:                                      ; preds = %land.lhs.true1250, %land.lhs.true1247, %land.lhs.true1245, %land.lhs.true1242, %if.else1240
  %712 = load i32, i32* %has_dollar_at, align 4
  %tobool1278 = icmp ne i32 %712, 0
  br i1 %tobool1278, label %land.lhs.true1279, label %if.else1289

land.lhs.true1279:                                ; preds = %if.else1277
  %713 = load i8*, i8** %ifs_chars, align 4
  %tobool1280 = icmp ne i8* %713, null
  br i1 %tobool1280, label %if.then1281, label %if.else1289

if.then1281:                                      ; preds = %land.lhs.true1279
  %714 = load i8*, i8** %istring, align 4
  %715 = load i8*, i8** %ifs_chars, align 4
  %716 = load i8, i8* %715, align 1
  %conv1282 = sext i8 %716 to i32
  %tobool1283 = icmp ne i32 %conv1282, 0
  br i1 %tobool1283, label %cond.true1284, label %cond.false1285

cond.true1284:                                    ; preds = %if.then1281
  %717 = load i8*, i8** %ifs_chars, align 4
  br label %cond.end1286

cond.false1285:                                   ; preds = %if.then1281
  br label %cond.end1286

cond.end1286:                                     ; preds = %cond.false1285, %cond.true1284
  %cond1287 = phi i8* [ %717, %cond.true1284 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), %cond.false1285 ]
  %call1288 = call %struct.word_list* @list_string(i8* %714, i8* %cond1287, i32 1)
  store %struct.word_list* %call1288, %struct.word_list** %list, align 4
  br label %if.end1351

if.else1289:                                      ; preds = %land.lhs.true1279, %if.else1277
  %718 = load i8*, i8** %istring, align 4
  %call1290 = call %struct.word_desc* @make_bare_word(i8* %718)
  store %struct.word_desc* %call1290, %struct.word_desc** %tword, align 4
  br label %set_word_flags

set_word_flags:                                   ; preds = %if.else1289, %if.end1276
  %719 = load i32, i32* %quoted.addr, align 4
  %and1291 = and i32 %719, 3
  %tobool1292 = icmp ne i32 %and1291, 0
  br i1 %tobool1292, label %if.then1296, label %lor.lhs.false1293

lor.lhs.false1293:                                ; preds = %set_word_flags
  %720 = load i32, i32* %quoted_state, align 4
  %cmp1294 = icmp eq i32 %720, 2
  br i1 %cmp1294, label %if.then1296, label %if.end1299

if.then1296:                                      ; preds = %lor.lhs.false1293, %set_word_flags
  %721 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1297 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %721, i32 0, i32 1
  %722 = load i32, i32* %flags1297, align 4
  %or1298 = or i32 %722, 2
  store i32 %or1298, i32* %flags1297, align 4
  br label %if.end1299

if.end1299:                                       ; preds = %if.then1296, %lor.lhs.false1293
  %723 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1300 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %723, i32 0, i32 1
  %724 = load i32, i32* %flags1300, align 4
  %and1301 = and i32 %724, 4
  %tobool1302 = icmp ne i32 %and1301, 0
  br i1 %tobool1302, label %if.then1303, label %if.end1306

if.then1303:                                      ; preds = %if.end1299
  %725 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1304 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %725, i32 0, i32 1
  %726 = load i32, i32* %flags1304, align 4
  %or1305 = or i32 %726, 4
  store i32 %or1305, i32* %flags1304, align 4
  br label %if.end1306

if.end1306:                                       ; preds = %if.then1303, %if.end1299
  %727 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1307 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %727, i32 0, i32 1
  %728 = load i32, i32* %flags1307, align 4
  %and1308 = and i32 %728, 32768
  %tobool1309 = icmp ne i32 %and1308, 0
  br i1 %tobool1309, label %if.then1310, label %if.end1313

if.then1310:                                      ; preds = %if.end1306
  %729 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1311 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %729, i32 0, i32 1
  %730 = load i32, i32* %flags1311, align 4
  %or1312 = or i32 %730, 32768
  store i32 %or1312, i32* %flags1311, align 4
  br label %if.end1313

if.end1313:                                       ; preds = %if.then1310, %if.end1306
  %731 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1314 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %731, i32 0, i32 1
  %732 = load i32, i32* %flags1314, align 4
  %and1315 = and i32 %732, 32
  %tobool1316 = icmp ne i32 %and1315, 0
  br i1 %tobool1316, label %if.then1317, label %if.end1320

if.then1317:                                      ; preds = %if.end1313
  %733 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1318 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %733, i32 0, i32 1
  %734 = load i32, i32* %flags1318, align 4
  %or1319 = or i32 %734, 32
  store i32 %or1319, i32* %flags1318, align 4
  br label %if.end1320

if.end1320:                                       ; preds = %if.then1317, %if.end1313
  %735 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1321 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %735, i32 0, i32 1
  %736 = load i32, i32* %flags1321, align 4
  %and1322 = and i32 %736, 67108864
  %tobool1323 = icmp ne i32 %and1322, 0
  br i1 %tobool1323, label %if.then1324, label %if.end1327

if.then1324:                                      ; preds = %if.end1320
  %737 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1325 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %737, i32 0, i32 1
  %738 = load i32, i32* %flags1325, align 4
  %or1326 = or i32 %738, 67108864
  store i32 %or1326, i32* %flags1325, align 4
  br label %if.end1327

if.end1327:                                       ; preds = %if.then1324, %if.end1320
  %739 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags1328 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %739, i32 0, i32 1
  %740 = load i32, i32* %flags1328, align 4
  %and1329 = and i32 %740, 16384
  %tobool1330 = icmp ne i32 %and1329, 0
  br i1 %tobool1330, label %if.then1331, label %if.end1334

if.then1331:                                      ; preds = %if.end1327
  %741 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1332 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %741, i32 0, i32 1
  %742 = load i32, i32* %flags1332, align 4
  %or1333 = or i32 %742, 16384
  store i32 %or1333, i32* %flags1332, align 4
  br label %if.end1334

if.end1334:                                       ; preds = %if.then1331, %if.end1327
  %743 = load i32, i32* %had_quoted_null, align 4
  %tobool1335 = icmp ne i32 %743, 0
  br i1 %tobool1335, label %land.lhs.true1336, label %if.end1349

land.lhs.true1336:                                ; preds = %if.end1334
  %744 = load i8*, i8** %istring, align 4
  %arrayidx1337 = getelementptr inbounds i8, i8* %744, i32 0
  %745 = load i8, i8* %arrayidx1337, align 1
  %conv1338 = sext i8 %745 to i32
  %cmp1339 = icmp eq i32 %conv1338, 127
  br i1 %cmp1339, label %land.lhs.true1341, label %if.end1349

land.lhs.true1341:                                ; preds = %land.lhs.true1336
  %746 = load i8*, i8** %istring, align 4
  %arrayidx1342 = getelementptr inbounds i8, i8* %746, i32 1
  %747 = load i8, i8* %arrayidx1342, align 1
  %conv1343 = sext i8 %747 to i32
  %cmp1344 = icmp eq i32 %conv1343, 0
  br i1 %cmp1344, label %if.then1346, label %if.end1349

if.then1346:                                      ; preds = %land.lhs.true1341
  %748 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %flags1347 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %748, i32 0, i32 1
  %749 = load i32, i32* %flags1347, align 4
  %or1348 = or i32 %749, 262144
  store i32 %or1348, i32* %flags1347, align 4
  br label %if.end1349

if.end1349:                                       ; preds = %if.then1346, %land.lhs.true1341, %land.lhs.true1336, %if.end1334
  %750 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %call1350 = call %struct.word_list* @make_word_list(%struct.word_desc* %750, %struct.word_list* null)
  store %struct.word_list* %call1350, %struct.word_list** %list, align 4
  br label %if.end1351

if.end1351:                                       ; preds = %if.end1349, %cond.end1286
  br label %if.end1352

if.end1352:                                       ; preds = %if.end1351
  br label %if.end1353

if.end1353:                                       ; preds = %if.end1352, %if.then1238
  br label %if.end1354

if.end1354:                                       ; preds = %if.end1353, %if.end1227
  br label %if.end1355

if.end1355:                                       ; preds = %if.end1354, %if.end1165
  %751 = load i8*, i8** %istring, align 4
  call void @sh_xfree(i8* %751, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 9850)
  %752 = load %struct.word_list*, %struct.word_list** %list, align 4
  store %struct.word_list* %752, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end1355, %if.then852, %if.end441, %if.then385, %if.end19, %if.then17
  %753 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %753
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @expand_string_leave_quoted(i8* %string, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %tlist = alloca %struct.word_list*, align 4
  %tresult = alloca %struct.word_list*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8*, i8** %string.addr, align 4
  %4 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @expand_string_internal(i8* %3, i32 %4)
  store %struct.word_list* %call, %struct.word_list** %tlist, align 4
  %5 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %tobool = icmp ne %struct.word_list* %5, null
  br i1 %tobool, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %6 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  %call4 = call %struct.word_list* @word_list_split(%struct.word_list* %6)
  store %struct.word_list* %call4, %struct.word_list** %tresult, align 4
  %7 = load %struct.word_list*, %struct.word_list** %tlist, align 4
  call void @dispose_words(%struct.word_list* %7)
  %8 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  store %struct.word_list* %8, %struct.word_list** %retval, align 4
  br label %return

if.end5:                                          ; preds = %if.end
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %9 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %9
}

; Function Attrs: noinline nounwind
define i8* @quote_escapes(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %slen = alloca i32, align 4
  %result = alloca i8*, align 4
  %send = alloca i8*, align 4
  %quote_spaces = alloca i32, align 4
  %skip_ctlesc = alloca i32, align 4
  %skip_ctlnul = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_k = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %slen, align 4
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %slen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %2, i32 %3
  store i8* %add.ptr, i8** %send, align 4
  %4 = load i8*, i8** @ifs_value, align 4
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %5 = load i8*, i8** @ifs_value, align 4
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %land.ext = zext i1 %7 to i32
  store i32 %land.ext, i32* %quote_spaces, align 4
  store i32 0, i32* %skip_ctlnul, align 4
  store i32 0, i32* %skip_ctlesc, align 4
  %8 = load i8*, i8** @ifs_value, align 4
  store i8* %8, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %land.end
  %9 = load i8*, i8** %s, align 4
  %tobool2 = icmp ne i8* %9, null
  br i1 %tobool2, label %land.rhs3, label %land.end6

land.rhs3:                                        ; preds = %for.cond
  %10 = load i8*, i8** %s, align 4
  %11 = load i8, i8* %10, align 1
  %conv4 = sext i8 %11 to i32
  %tobool5 = icmp ne i32 %conv4, 0
  br label %land.end6

land.end6:                                        ; preds = %land.rhs3, %for.cond
  %12 = phi i1 [ false, %for.cond ], [ %tobool5, %land.rhs3 ]
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %land.end6
  %13 = load i8*, i8** %s, align 4
  %14 = load i8, i8* %13, align 1
  %conv8 = sext i8 %14 to i32
  %cmp9 = icmp eq i32 %conv8, 1
  %conv10 = zext i1 %cmp9 to i32
  %15 = load i32, i32* %skip_ctlesc, align 4
  %or = or i32 %15, %conv10
  store i32 %or, i32* %skip_ctlesc, align 4
  %16 = load i8*, i8** %s, align 4
  %17 = load i8, i8* %16, align 1
  %conv11 = sext i8 %17 to i32
  %cmp12 = icmp eq i32 %conv11, 127
  %conv13 = zext i1 %cmp12 to i32
  %18 = load i32, i32* %skip_ctlnul, align 4
  %or14 = or i32 %18, %conv13
  store i32 %or14, i32* %skip_ctlnul, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end6
  %20 = load i32, i32* %slen, align 4
  %mul = mul i32 %20, 2
  %add = add i32 %mul, 1
  %call15 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3868)
  store i8* %call15, i8** %result, align 4
  store i8* %call15, i8** %t, align 4
  %21 = load i8*, i8** %string.addr, align 4
  store i8* %21, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %for.end
  %22 = load i8*, i8** %s, align 4
  %23 = load i8, i8* %22, align 1
  %tobool16 = icmp ne i8 %23, 0
  br i1 %tobool16, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i32, i32* %skip_ctlesc, align 4
  %cmp17 = icmp eq i32 %24, 0
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %while.body
  %25 = load i8*, i8** %s, align 4
  %26 = load i8, i8* %25, align 1
  %conv19 = sext i8 %26 to i32
  %cmp20 = icmp eq i32 %conv19, 1
  br i1 %cmp20, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %27 = load i32, i32* %skip_ctlnul, align 4
  %cmp22 = icmp eq i32 %27, 0
  br i1 %cmp22, label %land.lhs.true24, label %lor.lhs.false28

land.lhs.true24:                                  ; preds = %lor.lhs.false
  %28 = load i8*, i8** %s, align 4
  %29 = load i8, i8* %28, align 1
  %conv25 = sext i8 %29 to i32
  %cmp26 = icmp eq i32 %conv25, 127
  br i1 %cmp26, label %if.then, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %land.lhs.true24, %lor.lhs.false
  %30 = load i32, i32* %quote_spaces, align 4
  %tobool29 = icmp ne i32 %30, 0
  br i1 %tobool29, label %land.lhs.true30, label %if.end

land.lhs.true30:                                  ; preds = %lor.lhs.false28
  %31 = load i8*, i8** %s, align 4
  %32 = load i8, i8* %31, align 1
  %conv31 = sext i8 %32 to i32
  %cmp32 = icmp eq i32 %conv31, 32
  br i1 %cmp32, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true30, %land.lhs.true24, %land.lhs.true
  %33 = load i8*, i8** %t, align 4
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %incdec.ptr34, i8** %t, align 4
  store i8 1, i8* %33, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true30, %lor.lhs.false28
  br label %do.body

do.body:                                          ; preds = %if.end
  %34 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp35 = icmp sgt i32 %34, 1
  br i1 %cmp35, label %if.then37, label %if.else61

if.then37:                                        ; preds = %do.body
  %35 = load i8*, i8** %s, align 4
  %36 = load i8, i8* %35, align 1
  %call38 = call i32 @is_basic(i8 signext %36)
  store i32 %call38, i32* %_k, align 4
  %37 = load i32, i32* %_k, align 4
  %tobool39 = icmp ne i32 %37, 0
  br i1 %tobool39, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.then37
  store i32 1, i32* %mblength, align 4
  br label %if.end42

if.else:                                          ; preds = %if.then37
  %38 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %39 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %38, i8* %39, i32 8, i32 4, i1 false)
  %40 = load i8*, i8** %s, align 4
  %41 = load i8*, i8** %send, align 4
  %42 = load i8*, i8** %s, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %41 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %42 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call41 = call i32 @mbrlen(i8* %40, i32 %sub.ptr.sub, %struct.__mbstate_t* %state)
  store i32 %call41, i32* %mblength, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then40
  %43 = load i32, i32* %mblength, align 4
  %cmp43 = icmp eq i32 %43, -2
  br i1 %cmp43, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.end42
  %44 = load i32, i32* %mblength, align 4
  %cmp46 = icmp eq i32 %44, -1
  br i1 %cmp46, label %if.then48, label %if.else49

if.then48:                                        ; preds = %lor.lhs.false45, %if.end42
  %45 = bitcast %struct.__mbstate_t* %state to i8*
  %46 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end52

if.else49:                                        ; preds = %lor.lhs.false45
  %47 = load i32, i32* %mblength, align 4
  %cmp50 = icmp ult i32 %47, 1
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else49
  br label %cond.end

cond.false:                                       ; preds = %if.else49
  %48 = load i32, i32* %mblength, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %48, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  br label %if.end52

if.end52:                                         ; preds = %cond.end, %if.then48
  store i32 0, i32* %_k, align 4
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc59, %if.end52
  %49 = load i32, i32* %_k, align 4
  %50 = load i32, i32* %mblength, align 4
  %cmp54 = icmp ult i32 %49, %50
  br i1 %cmp54, label %for.body56, label %for.end60

for.body56:                                       ; preds = %for.cond53
  %51 = load i8*, i8** %s, align 4
  %incdec.ptr57 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %incdec.ptr57, i8** %s, align 4
  %52 = load i8, i8* %51, align 1
  %53 = load i8*, i8** %t, align 4
  %incdec.ptr58 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr58, i8** %t, align 4
  store i8 %52, i8* %53, align 1
  br label %for.inc59

for.inc59:                                        ; preds = %for.body56
  %54 = load i32, i32* %_k, align 4
  %inc = add nsw i32 %54, 1
  store i32 %inc, i32* %_k, align 4
  br label %for.cond53

for.end60:                                        ; preds = %for.cond53
  br label %if.end64

if.else61:                                        ; preds = %do.body
  %55 = load i8*, i8** %s, align 4
  %incdec.ptr62 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %incdec.ptr62, i8** %s, align 4
  %56 = load i8, i8* %55, align 1
  %57 = load i8*, i8** %t, align 4
  %incdec.ptr63 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr63, i8** %t, align 4
  store i8 %56, i8* %57, align 1
  br label %if.end64

if.end64:                                         ; preds = %if.else61, %for.end60
  br label %do.end

do.end:                                           ; preds = %if.end64
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %58 = load i8*, i8** %t, align 4
  store i8 0, i8* %58, align 1
  %59 = load i8*, i8** %result, align 4
  ret i8* %59
}

; Function Attrs: noinline nounwind
define i8* @dequote_escapes(i8* %string) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %s1 = alloca i8*, align 4
  %slen = alloca i32, align 4
  %result = alloca i8*, align 4
  %send = alloca i8*, align 4
  %quote_spaces = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_k = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %string.addr, align 4
  store i8* %2, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %3)
  store i32 %call, i32* %slen, align 4
  %4 = load i8*, i8** %string.addr, align 4
  %5 = load i32, i32* %slen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %4, i32 %5
  store i8* %add.ptr, i8** %send, align 4
  %6 = load i32, i32* %slen, align 4
  %add = add i32 %6, 1
  %call1 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3925)
  store i8* %call1, i8** %result, align 4
  store i8* %call1, i8** %t, align 4
  %7 = load i8*, i8** %string.addr, align 4
  %call2 = call i8* @strchr(i8* %7, i32 1)
  %cmp3 = icmp eq i8* %call2, null
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %8 = load i8*, i8** %result, align 4
  %9 = load i8*, i8** %string.addr, align 4
  %call5 = call i8* @strcpy(i8* %8, i8* %9)
  store i8* %call5, i8** %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end
  %10 = load i8*, i8** @ifs_value, align 4
  %tobool = icmp ne i8* %10, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end6
  %11 = load i8*, i8** @ifs_value, align 4
  %12 = load i8, i8* %11, align 1
  %conv = sext i8 %12 to i32
  %cmp7 = icmp eq i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end6
  %13 = phi i1 [ false, %if.end6 ], [ %cmp7, %land.rhs ]
  %land.ext = zext i1 %13 to i32
  store i32 %land.ext, i32* %quote_spaces, align 4
  %14 = load i8*, i8** %string.addr, align 4
  store i8* %14, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %land.end
  %15 = load i8*, i8** %s, align 4
  %16 = load i8, i8* %15, align 1
  %tobool9 = icmp ne i8 %16, 0
  br i1 %tobool9, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i8*, i8** %s, align 4
  %18 = load i8, i8* %17, align 1
  %conv10 = sext i8 %18 to i32
  %cmp11 = icmp eq i32 %conv10, 1
  br i1 %cmp11, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %while.body
  %19 = load i8*, i8** %s, align 4
  %arrayidx = getelementptr inbounds i8, i8* %19, i32 1
  %20 = load i8, i8* %arrayidx, align 1
  %conv13 = sext i8 %20 to i32
  %cmp14 = icmp eq i32 %conv13, 1
  br i1 %cmp14, label %if.then27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %21 = load i8*, i8** %s, align 4
  %arrayidx16 = getelementptr inbounds i8, i8* %21, i32 1
  %22 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %22 to i32
  %cmp18 = icmp eq i32 %conv17, 127
  br i1 %cmp18, label %if.then27, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %23 = load i32, i32* %quote_spaces, align 4
  %tobool21 = icmp ne i32 %23, 0
  br i1 %tobool21, label %land.lhs.true22, label %if.end33

land.lhs.true22:                                  ; preds = %lor.lhs.false20
  %24 = load i8*, i8** %s, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %24, i32 1
  %25 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %25 to i32
  %cmp25 = icmp eq i32 %conv24, 32
  br i1 %cmp25, label %if.then27, label %if.end33

if.then27:                                        ; preds = %land.lhs.true22, %lor.lhs.false, %land.lhs.true
  %26 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  %27 = load i8*, i8** %s, align 4
  %28 = load i8, i8* %27, align 1
  %conv28 = sext i8 %28 to i32
  %cmp29 = icmp eq i32 %conv28, 0
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.then27
  br label %while.end

if.end32:                                         ; preds = %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %land.lhs.true22, %lor.lhs.false20, %while.body
  br label %do.body

do.body:                                          ; preds = %if.end33
  %29 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp34 = icmp sgt i32 %29, 1
  br i1 %cmp34, label %if.then36, label %if.else56

if.then36:                                        ; preds = %do.body
  %30 = load i8*, i8** %s, align 4
  %31 = load i8, i8* %30, align 1
  %call37 = call i32 @is_basic(i8 signext %31)
  store i32 %call37, i32* %_k, align 4
  %32 = load i32, i32* %_k, align 4
  %tobool38 = icmp ne i32 %32, 0
  br i1 %tobool38, label %if.then39, label %if.else

if.then39:                                        ; preds = %if.then36
  store i32 1, i32* %mblength, align 4
  br label %if.end41

if.else:                                          ; preds = %if.then36
  %33 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %34 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %33, i8* %34, i32 8, i32 4, i1 false)
  %35 = load i8*, i8** %s, align 4
  %36 = load i8*, i8** %send, align 4
  %37 = load i8*, i8** %s, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %36 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %37 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call40 = call i32 @mbrlen(i8* %35, i32 %sub.ptr.sub, %struct.__mbstate_t* %state)
  store i32 %call40, i32* %mblength, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then39
  %38 = load i32, i32* %mblength, align 4
  %cmp42 = icmp eq i32 %38, -2
  br i1 %cmp42, label %if.then47, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %if.end41
  %39 = load i32, i32* %mblength, align 4
  %cmp45 = icmp eq i32 %39, -1
  br i1 %cmp45, label %if.then47, label %if.else48

if.then47:                                        ; preds = %lor.lhs.false44, %if.end41
  %40 = bitcast %struct.__mbstate_t* %state to i8*
  %41 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %40, i8* %41, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end51

if.else48:                                        ; preds = %lor.lhs.false44
  %42 = load i32, i32* %mblength, align 4
  %cmp49 = icmp ult i32 %42, 1
  br i1 %cmp49, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else48
  br label %cond.end

cond.false:                                       ; preds = %if.else48
  %43 = load i32, i32* %mblength, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %43, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  br label %if.end51

if.end51:                                         ; preds = %cond.end, %if.then47
  store i32 0, i32* %_k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end51
  %44 = load i32, i32* %_k, align 4
  %45 = load i32, i32* %mblength, align 4
  %cmp52 = icmp ult i32 %44, %45
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load i8*, i8** %s, align 4
  %incdec.ptr54 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr54, i8** %s, align 4
  %47 = load i8, i8* %46, align 1
  %48 = load i8*, i8** %t, align 4
  %incdec.ptr55 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr55, i8** %t, align 4
  store i8 %47, i8* %48, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %49 = load i32, i32* %_k, align 4
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %_k, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end59

if.else56:                                        ; preds = %do.body
  %50 = load i8*, i8** %s, align 4
  %incdec.ptr57 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr57, i8** %s, align 4
  %51 = load i8, i8* %50, align 1
  %52 = load i8*, i8** %t, align 4
  %incdec.ptr58 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr58, i8** %t, align 4
  store i8 %51, i8* %52, align 1
  br label %if.end59

if.end59:                                         ; preds = %if.else56, %for.end
  br label %do.end

do.end:                                           ; preds = %if.end59
  br label %while.cond

while.end:                                        ; preds = %if.then31, %while.cond
  %53 = load i8*, i8** %t, align 4
  store i8 0, i8* %53, align 1
  %54 = load i8*, i8** %result, align 4
  store i8* %54, i8** %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then4, %if.then
  %55 = load i8*, i8** %retval, align 4
  ret i8* %55
}

declare i8* @strchr(i8*, i32) #1

; Function Attrs: noinline nounwind
define i8* @quote_string(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  %slen = alloca i32, align 4
  %result = alloca i8*, align 4
  %send = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_k = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i8* @sh_xmalloc(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4001)
  store i8* %call, i8** %result, align 4
  %2 = load i8*, i8** %result, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  store i8 127, i8* %arrayidx, align 1
  %3 = load i8*, i8** %result, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i32 1
  store i8 0, i8* %arrayidx2, align 1
  br label %if.end34

if.else:                                          ; preds = %entry
  %4 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %4, i8 0, i32 8, i32 4, i1 false)
  %5 = load i8*, i8** %string.addr, align 4
  %call3 = call i32 @strlen(i8* %5)
  store i32 %call3, i32* %slen, align 4
  %6 = load i8*, i8** %string.addr, align 4
  %7 = load i32, i32* %slen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %6, i32 %7
  store i8* %add.ptr, i8** %send, align 4
  %8 = load i32, i32* %slen, align 4
  %mul = mul i32 %8, 2
  %add = add i32 %mul, 1
  %call4 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4012)
  store i8* %call4, i8** %result, align 4
  %9 = load i8*, i8** %result, align 4
  store i8* %9, i8** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %do.end, %if.else
  %10 = load i8*, i8** %string.addr, align 4
  %11 = load i8*, i8** %send, align 4
  %cmp5 = icmp ult i8* %10, %11
  br i1 %cmp5, label %for.body, label %for.end33

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  store i8 1, i8* %12, align 1
  br label %do.body

do.body:                                          ; preds = %for.body
  %13 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp7 = icmp sgt i32 %13, 1
  br i1 %cmp7, label %if.then9, label %if.else29

if.then9:                                         ; preds = %do.body
  %14 = load i8*, i8** %string.addr, align 4
  %15 = load i8, i8* %14, align 1
  %call10 = call i32 @is_basic(i8 signext %15)
  store i32 %call10, i32* %_k, align 4
  %16 = load i32, i32* %_k, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.then9
  store i32 1, i32* %mblength, align 4
  br label %if.end

if.else12:                                        ; preds = %if.then9
  %17 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %18 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %17, i8* %18, i32 8, i32 4, i1 false)
  %19 = load i8*, i8** %string.addr, align 4
  %20 = load i8*, i8** %send, align 4
  %21 = load i8*, i8** %string.addr, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %21 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call13 = call i32 @mbrlen(i8* %19, i32 %sub.ptr.sub, %struct.__mbstate_t* %state)
  store i32 %call13, i32* %mblength, align 4
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then11
  %22 = load i32, i32* %mblength, align 4
  %cmp14 = icmp eq i32 %22, -2
  br i1 %cmp14, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %23 = load i32, i32* %mblength, align 4
  %cmp16 = icmp eq i32 %23, -1
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %lor.lhs.false, %if.end
  %24 = bitcast %struct.__mbstate_t* %state to i8*
  %25 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %24, i8* %25, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end22

if.else19:                                        ; preds = %lor.lhs.false
  %26 = load i32, i32* %mblength, align 4
  %cmp20 = icmp ult i32 %26, 1
  br i1 %cmp20, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else19
  br label %cond.end

cond.false:                                       ; preds = %if.else19
  %27 = load i32, i32* %mblength, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %27, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  br label %if.end22

if.end22:                                         ; preds = %cond.end, %if.then18
  store i32 0, i32* %_k, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc, %if.end22
  %28 = load i32, i32* %_k, align 4
  %29 = load i32, i32* %mblength, align 4
  %cmp24 = icmp ult i32 %28, %29
  br i1 %cmp24, label %for.body26, label %for.end

for.body26:                                       ; preds = %for.cond23
  %30 = load i8*, i8** %string.addr, align 4
  %incdec.ptr27 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr27, i8** %string.addr, align 4
  %31 = load i8, i8* %30, align 1
  %32 = load i8*, i8** %t, align 4
  %incdec.ptr28 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr28, i8** %t, align 4
  store i8 %31, i8* %32, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body26
  %33 = load i32, i32* %_k, align 4
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %_k, align 4
  br label %for.cond23

for.end:                                          ; preds = %for.cond23
  br label %if.end32

if.else29:                                        ; preds = %do.body
  %34 = load i8*, i8** %string.addr, align 4
  %incdec.ptr30 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr30, i8** %string.addr, align 4
  %35 = load i8, i8* %34, align 1
  %36 = load i8*, i8** %t, align 4
  %incdec.ptr31 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %incdec.ptr31, i8** %t, align 4
  store i8 %35, i8* %36, align 1
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %for.end
  br label %do.end

do.end:                                           ; preds = %if.end32
  br label %for.cond

for.end33:                                        ; preds = %for.cond
  %37 = load i8*, i8** %t, align 4
  store i8 0, i8* %37, align 1
  br label %if.end34

if.end34:                                         ; preds = %for.end33, %if.then
  %38 = load i8*, i8** %result, align 4
  ret i8* %38
}

; Function Attrs: noinline nounwind
define i8* @dequote_string(i8* %string) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %s = alloca i8*, align 4
  %t = alloca i8*, align 4
  %slen = alloca i32, align 4
  %result = alloca i8*, align 4
  %send = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_k = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i32 @strlen(i8* %1)
  store i32 %call, i32* %slen, align 4
  %2 = load i32, i32* %slen, align 4
  %add = add i32 %2, 1
  %call1 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4041)
  store i8* %call1, i8** %result, align 4
  store i8* %call1, i8** %t, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 0
  %4 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv, 127
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i8*, i8** %string.addr, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i32 1
  %6 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %6 to i32
  %cmp5 = icmp eq i32 %conv4, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %7 = load i8*, i8** %result, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %7, i32 0
  store i8 0, i8* %arrayidx7, align 1
  %8 = load i8*, i8** %result, align 4
  store i8* %8, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load i8*, i8** %string.addr, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i32 0
  %10 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 1
  br i1 %cmp10, label %land.lhs.true12, label %if.end20

land.lhs.true12:                                  ; preds = %if.end
  %11 = load i8*, i8** %string.addr, align 4
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i32 1
  %12 = load i8, i8* %arrayidx13, align 1
  %conv14 = sext i8 %12 to i32
  %cmp15 = icmp eq i32 %conv14, 0
  br i1 %cmp15, label %if.then17, label %if.end20

if.then17:                                        ; preds = %land.lhs.true12
  %13 = load i8*, i8** %result, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %13, i32 0
  store i8 1, i8* %arrayidx18, align 1
  %14 = load i8*, i8** %result, align 4
  %arrayidx19 = getelementptr inbounds i8, i8* %14, i32 1
  store i8 0, i8* %arrayidx19, align 1
  %15 = load i8*, i8** %result, align 4
  store i8* %15, i8** %retval, align 4
  br label %return

if.end20:                                         ; preds = %land.lhs.true12, %if.end
  %16 = load i8*, i8** %string.addr, align 4
  %call21 = call i8* @strchr(i8* %16, i32 1)
  %cmp22 = icmp eq i8* %call21, null
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end20
  %17 = load i8*, i8** %result, align 4
  %18 = load i8*, i8** %string.addr, align 4
  %call25 = call i8* @strcpy(i8* %17, i8* %18)
  store i8* %call25, i8** %retval, align 4
  br label %return

if.end26:                                         ; preds = %if.end20
  %19 = load i8*, i8** %string.addr, align 4
  %20 = load i32, i32* %slen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %19, i32 %20
  store i8* %add.ptr, i8** %send, align 4
  %21 = load i8*, i8** %string.addr, align 4
  store i8* %21, i8** %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %if.end26
  %22 = load i8*, i8** %s, align 4
  %23 = load i8, i8* %22, align 1
  %tobool = icmp ne i8 %23, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %s, align 4
  %25 = load i8, i8* %24, align 1
  %conv27 = sext i8 %25 to i32
  %cmp28 = icmp eq i32 %conv27, 1
  br i1 %cmp28, label %if.then30, label %if.end36

if.then30:                                        ; preds = %while.body
  %26 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  %27 = load i8*, i8** %s, align 4
  %28 = load i8, i8* %27, align 1
  %conv31 = sext i8 %28 to i32
  %cmp32 = icmp eq i32 %conv31, 0
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.then30
  br label %while.end

if.end35:                                         ; preds = %if.then30
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %while.body
  br label %do.body

do.body:                                          ; preds = %if.end36
  %29 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp37 = icmp sgt i32 %29, 1
  br i1 %cmp37, label %if.then39, label %if.else58

if.then39:                                        ; preds = %do.body
  %30 = load i8*, i8** %s, align 4
  %31 = load i8, i8* %30, align 1
  %call40 = call i32 @is_basic(i8 signext %31)
  store i32 %call40, i32* %_k, align 4
  %32 = load i32, i32* %_k, align 4
  %tobool41 = icmp ne i32 %32, 0
  br i1 %tobool41, label %if.then42, label %if.else

if.then42:                                        ; preds = %if.then39
  store i32 1, i32* %mblength, align 4
  br label %if.end44

if.else:                                          ; preds = %if.then39
  %33 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %34 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %33, i8* %34, i32 8, i32 4, i1 false)
  %35 = load i8*, i8** %s, align 4
  %36 = load i8*, i8** %send, align 4
  %37 = load i8*, i8** %s, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %36 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %37 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call43 = call i32 @mbrlen(i8* %35, i32 %sub.ptr.sub, %struct.__mbstate_t* %state)
  store i32 %call43, i32* %mblength, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then42
  %38 = load i32, i32* %mblength, align 4
  %cmp45 = icmp eq i32 %38, -2
  br i1 %cmp45, label %if.then49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end44
  %39 = load i32, i32* %mblength, align 4
  %cmp47 = icmp eq i32 %39, -1
  br i1 %cmp47, label %if.then49, label %if.else50

if.then49:                                        ; preds = %lor.lhs.false, %if.end44
  %40 = bitcast %struct.__mbstate_t* %state to i8*
  %41 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %40, i8* %41, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end53

if.else50:                                        ; preds = %lor.lhs.false
  %42 = load i32, i32* %mblength, align 4
  %cmp51 = icmp ult i32 %42, 1
  br i1 %cmp51, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else50
  br label %cond.end

cond.false:                                       ; preds = %if.else50
  %43 = load i32, i32* %mblength, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %43, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  br label %if.end53

if.end53:                                         ; preds = %cond.end, %if.then49
  store i32 0, i32* %_k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end53
  %44 = load i32, i32* %_k, align 4
  %45 = load i32, i32* %mblength, align 4
  %cmp54 = icmp ult i32 %44, %45
  br i1 %cmp54, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load i8*, i8** %s, align 4
  %incdec.ptr56 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr56, i8** %s, align 4
  %47 = load i8, i8* %46, align 1
  %48 = load i8*, i8** %t, align 4
  %incdec.ptr57 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr57, i8** %t, align 4
  store i8 %47, i8* %48, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %49 = load i32, i32* %_k, align 4
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %_k, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end61

if.else58:                                        ; preds = %do.body
  %50 = load i8*, i8** %s, align 4
  %incdec.ptr59 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %incdec.ptr59, i8** %s, align 4
  %51 = load i8, i8* %50, align 1
  %52 = load i8*, i8** %t, align 4
  %incdec.ptr60 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr60, i8** %t, align 4
  store i8 %51, i8* %52, align 1
  br label %if.end61

if.end61:                                         ; preds = %if.else58, %for.end
  br label %do.end

do.end:                                           ; preds = %if.end61
  br label %while.cond

while.end:                                        ; preds = %if.then34, %while.cond
  %53 = load i8*, i8** %t, align 4
  store i8 0, i8* %53, align 1
  %54 = load i8*, i8** %result, align 4
  store i8* %54, i8** %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then24, %if.then17, %if.then
  %55 = load i8*, i8** %retval, align 4
  ret i8* %55
}

; Function Attrs: noinline nounwind
define i8* @remove_quoted_escapes(i8* %string) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %call = call i8* @dequote_escapes(i8* %1)
  store i8* %call, i8** %t, align 4
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i8*, i8** %t, align 4
  %call1 = call i8* @strcpy(i8* %2, i8* %3)
  %4 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4130)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %string.addr, align 4
  ret i8* %5
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_word(%struct.word_desc* %word, i32 %quoted) #0 {
entry:
  %word.addr = alloca %struct.word_desc*, align 4
  %quoted.addr = alloca i32, align 4
  %result = alloca %struct.word_list*, align 4
  %tresult = alloca %struct.word_list*, align 4
  store %struct.word_desc* %word, %struct.word_desc** %word.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %1 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %0, i32 %1, i32 0, i32* null, i32* null)
  store %struct.word_list* %call, %struct.word_list** %tresult, align 4
  %2 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  %call1 = call %struct.word_list* @word_list_split(%struct.word_list* %2)
  store %struct.word_list* %call1, %struct.word_list** %result, align 4
  %3 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  call void @dispose_words(%struct.word_list* %3)
  %4 = load %struct.word_list*, %struct.word_list** %result, align 4
  %tobool = icmp ne %struct.word_list* %4, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.word_list*, %struct.word_list** %result, align 4
  %call2 = call %struct.word_list* @dequote_list(%struct.word_list* %5)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.word_list*, %struct.word_list** %result, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %call2, %cond.true ], [ %6, %cond.false ]
  ret %struct.word_list* %cond
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_word_unsplit(%struct.word_desc* %word, i32 %quoted) #0 {
entry:
  %word.addr = alloca %struct.word_desc*, align 4
  %quoted.addr = alloca i32, align 4
  %result = alloca %struct.word_list*, align 4
  store %struct.word_desc* %word, %struct.word_desc** %word.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 1, i32* @expand_no_split_dollar_star, align 4
  %0 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %1, i32 0, i32 1
  %2 = load i32, i32* %flags, align 4
  %or = or i32 %2, 16
  store i32 %or, i32* %flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags2 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 1
  %4 = load i32, i32* %flags2, align 4
  %or3 = or i32 %4, 64
  store i32 %or3, i32* %flags2, align 4
  %5 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %6 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %5, i32 %6, i32 0, i32* null, i32* null)
  store %struct.word_list* %call, %struct.word_list** %result, align 4
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  %7 = load %struct.word_list*, %struct.word_list** %result, align 4
  %tobool = icmp ne %struct.word_list* %7, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %8 = load %struct.word_list*, %struct.word_list** %result, align 4
  %call4 = call %struct.word_list* @dequote_list(%struct.word_list* %8)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %9 = load %struct.word_list*, %struct.word_list** %result, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %call4, %cond.true ], [ %9, %cond.false ]
  ret %struct.word_list* %cond
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_word_leave_quoted(%struct.word_desc* %word, i32 %quoted) #0 {
entry:
  %word.addr = alloca %struct.word_desc*, align 4
  %quoted.addr = alloca i32, align 4
  %result = alloca %struct.word_list*, align 4
  store %struct.word_desc* %word, %struct.word_desc** %word.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 1, i32* @expand_no_split_dollar_star, align 4
  %0 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  %conv = zext i8 %0 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %1, i32 0, i32 1
  %2 = load i32, i32* %flags, align 4
  %or = or i32 %2, 16
  store i32 %or, i32* %flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %flags2 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 1
  %4 = load i32, i32* %flags2, align 4
  %or3 = or i32 %4, 64
  store i32 %or3, i32* %flags2, align 4
  %5 = load %struct.word_desc*, %struct.word_desc** %word.addr, align 4
  %6 = load i32, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %5, i32 %6, i32 0, i32* null, i32* null)
  store %struct.word_list* %call, %struct.word_list** %result, align 4
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  %7 = load %struct.word_list*, %struct.word_list** %result, align 4
  ret %struct.word_list* %7
}

; Function Attrs: noinline nounwind
define void @clear_fifo(i32 %i) #0 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  %0 = load i8*, i8** @dev_fd_list, align 4
  %1 = load i32, i32* %i.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** @dev_fd_list, align 4
  %4 = load i32, i32* %i.addr, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %3, i32 %4
  store i8 0, i8* %arrayidx1, align 1
  %5 = load i32, i32* @nfds, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* @nfds, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind
define void @clear_fifo_list() #0 {
entry:
  %i = alloca i32, align 4
  %0 = load i32, i32* @nfds, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* @nfds, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* @totfds, align 4
  %cmp1 = icmp slt i32 %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %5 = load i32, i32* %i, align 4
  call void @clear_fifo(i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  store i32 0, i32* @nfds, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define i8* @copy_fifo_list(i32* %sizep) #0 {
entry:
  %retval = alloca i8*, align 4
  %sizep.addr = alloca i32*, align 4
  %ret = alloca i8*, align 4
  store i32* %sizep, i32** %sizep.addr, align 4
  %0 = load i32, i32* @nfds, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @totfds, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then, label %if.end3

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32*, i32** %sizep.addr, align 4
  %tobool = icmp ne i32* %2, null
  br i1 %tobool, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %3 = load i32*, i32** %sizep.addr, align 4
  store i32 0, i32* %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  store i8* null, i8** %retval, align 4
  br label %return

if.end3:                                          ; preds = %lor.lhs.false
  %4 = load i32*, i32** %sizep.addr, align 4
  %tobool4 = icmp ne i32* %4, null
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %5 = load i32, i32* @totfds, align 4
  %6 = load i32*, i32** %sizep.addr, align 4
  store i32 %5, i32* %6, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end3
  %7 = load i32, i32* @totfds, align 4
  %call = call i8* @sh_xmalloc(i32 %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5586)
  store i8* %call, i8** %ret, align 4
  %8 = load i8*, i8** %ret, align 4
  %9 = load i8*, i8** @dev_fd_list, align 4
  %10 = load i32, i32* @totfds, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %8, i8* %9, i32 %10, i32 1, i1 false)
  store i8* %8, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end6, %if.end
  %11 = load i8*, i8** %retval, align 4
  ret i8* %11
}

; Function Attrs: noinline nounwind
define i32 @fifos_pending() #0 {
entry:
  ret i32 0
}

; Function Attrs: noinline nounwind
define i32 @num_fifos() #0 {
entry:
  %0 = load i32, i32* @nfds, align 4
  ret i32 %0
}

; Function Attrs: noinline nounwind
define void @unlink_fifo(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i8*, i8** @dev_fd_list, align 4
  %1 = load i32, i32* %fd.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 %1
  %2 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %fd.addr, align 4
  %call = call i32 @close(i32 %3)
  %4 = load i8*, i8** @dev_fd_list, align 4
  %5 = load i32, i32* %fd.addr, align 4
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i32 %5
  store i8 0, i8* %arrayidx1, align 1
  %6 = load i32, i32* @nfds, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* @nfds, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare i32 @close(i32) #1

; Function Attrs: noinline nounwind
define void @unlink_fifo_list() #0 {
entry:
  %i = alloca i32, align 4
  %0 = load i32, i32* @nfds, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* @nfds, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* @totfds, align 4
  %cmp1 = icmp slt i32 %2, %3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %5 = load i32, i32* %i, align 4
  call void @unlink_fifo(i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  store i32 0, i32* @nfds, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind
define void @close_new_fifos(i8* %list, i32 %lsize) #0 {
entry:
  %list.addr = alloca i8*, align 4
  %lsize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %list, i8** %list.addr, align 4
  store i32 %lsize, i32* %lsize.addr, align 4
  %0 = load i8*, i8** %list.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @unlink_fifo_list()
  br label %for.end17

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %lsize.addr, align 4
  %cmp1 = icmp slt i32 %1, %2
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %list.addr, align 4
  %4 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 %4
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %7 = load i32, i32* @totfds, align 4
  %cmp4 = icmp slt i32 %6, %7
  br i1 %cmp4, label %land.lhs.true6, label %if.end10

land.lhs.true6:                                   ; preds = %land.lhs.true
  %8 = load i8*, i8** @dev_fd_list, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %10 to i32
  %tobool = icmp ne i32 %conv8, 0
  br i1 %tobool, label %if.then9, label %if.end10

if.then9:                                         ; preds = %land.lhs.true6
  %11 = load i32, i32* %i, align 4
  call void @unlink_fifo(i32 %11)
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %land.lhs.true6, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end10
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %lsize.addr, align 4
  store i32 %13, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc15, %for.end
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* @totfds, align 4
  %cmp12 = icmp slt i32 %14, %15
  br i1 %cmp12, label %for.body14, label %for.end17

for.body14:                                       ; preds = %for.cond11
  %16 = load i32, i32* %i, align 4
  call void @unlink_fifo(i32 %16)
  br label %for.inc15

for.inc15:                                        ; preds = %for.body14
  %17 = load i32, i32* %i, align 4
  %inc16 = add nsw i32 %17, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond11

for.end17:                                        ; preds = %if.then, %for.cond11
  ret void
}

; Function Attrs: noinline nounwind
define %struct.word_desc* @command_substitute(i8* %string, i32 %quoted) #0 {
entry:
  %retval = alloca %struct.word_desc*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %pid = alloca i32, align 4
  %old_pid = alloca i32, align 4
  %old_pipeline_pgrp = alloca i32, align 4
  %old_async_pid = alloca i32, align 4
  %istring = alloca i8*, align 4
  %s = alloca i8*, align 4
  %result = alloca i32, align 4
  %fildes = alloca [2 x i32], align 4
  %function_value = alloca i32, align 4
  %pflags = alloca i32, align 4
  %rc = alloca i32, align 4
  %tflag = alloca i32, align 4
  %ret = alloca %struct.word_desc*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i8* null, i8** %istring, align 4
  %0 = load i8*, i8** %string.addr, align 4
  store i8* %0, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %for.cond
  %2 = load i8*, i8** %s, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load i8*, i8** %s, align 4
  %5 = load i8, i8* %4, align 1
  %idxprom = zext i8 %5 to i32
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %6 = load i32, i32* %arrayidx, align 4
  %and = and i32 %6, 8192
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %7 = load i8*, i8** %s, align 4
  %8 = load i8, i8* %7, align 1
  %conv3 = sext i8 %8 to i32
  %cmp = icmp eq i32 %conv3, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %cmp, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true, %for.cond
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %9, %lor.end ]
  br i1 %10, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %12 = load i8*, i8** %s, align 4
  %cmp5 = icmp eq i8* %12, null
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %13 = load i8*, i8** %s, align 4
  %14 = load i8, i8* %13, align 1
  %conv7 = sext i8 %14 to i32
  %cmp8 = icmp eq i32 %conv7, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end
  store %struct.word_desc* null, %struct.word_desc** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %15 = load i32, i32* @wordexp_only, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true11, label %if.end14

land.lhs.true11:                                  ; preds = %if.end
  %16 = load i32, i32* @read_but_dont_execute, align 4
  %tobool12 = icmp ne i32 %16, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %land.lhs.true11
  store i32 125, i32* @last_command_exit_value, align 4
  call void @jump_to_top_level(i32 3) #7
  unreachable

if.end14:                                         ; preds = %land.lhs.true11, %if.end
  %17 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  %cmp15 = icmp eq %struct.word_list* %17, null
  br i1 %cmp15, label %if.then20, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %if.end14
  %18 = load %struct.word_list*, %struct.word_list** @garglist, align 4
  %cmp18 = icmp eq %struct.word_list* %18, null
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %lor.lhs.false17, %if.end14
  call void @maybe_make_export_env()
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %lor.lhs.false17
  %19 = load i32, i32* @interactive, align 4
  %tobool22 = icmp ne i32 %19, 0
  br i1 %tobool22, label %land.rhs23, label %land.end26

land.rhs23:                                       ; preds = %if.end21
  %20 = load i32, i32* @sourcelevel, align 4
  %cmp24 = icmp eq i32 %20, 0
  br label %land.end26

land.end26:                                       ; preds = %land.rhs23, %if.end21
  %21 = phi i1 [ false, %if.end21 ], [ %cmp24, %land.rhs23 ]
  %cond = select i1 %21, i32 16, i32 0
  store i32 %cond, i32* %pflags, align 4
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %call = call i32 @pipe(i32* %arraydecay)
  %cmp27 = icmp slt i32 %call, 0
  br i1 %cmp27, label %if.then29, label %if.end31

if.then29:                                        ; preds = %land.end26
  %call30 = call i8* @libintl_gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i32 0, i32 0))
  call void (i8*, ...) @sys_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* %call30)
  br label %error_exit

if.end31:                                         ; preds = %land.end26
  %22 = load volatile i32, i32* @last_made_pid, align 4
  store i32 %22, i32* %old_pid, align 4
  %23 = load volatile i32, i32* @last_asynchronous_pid, align 4
  store i32 %23, i32* %old_async_pid, align 4
  %24 = load i32, i32* @subshell_environment, align 4
  %and32 = and i32 %24, 1
  %call33 = call i32 @make_child(i8* null, i32 %and32)
  store i32 %call33, i32* %pid, align 4
  %25 = load i32, i32* %old_async_pid, align 4
  store volatile i32 %25, i32* @last_asynchronous_pid, align 4
  %26 = load i32, i32* %pid, align 4
  %cmp34 = icmp eq i32 %26, 0
  br i1 %cmp34, label %if.then36, label %if.end49

if.then36:                                        ; preds = %if.end31
  call void @reset_signal_handlers()
  %27 = load volatile i32, i32* @interrupt_state, align 4
  %cmp37 = icmp ne i32 %27, 0
  br i1 %cmp37, label %if.then39, label %if.end42

if.then39:                                        ; preds = %if.then36
  %call40 = call i32 @getpid()
  %call41 = call i32 @kill(i32 %call40, i32 2)
  store volatile i32 0, i32* @interrupt_state, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %if.then36
  br label %do.body

do.body:                                          ; preds = %if.end42
  %28 = load volatile i32, i32* @terminating_signal, align 4
  %tobool43 = icmp ne i32 %28, 0
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %do.body
  %29 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %29)
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %do.body
  %30 = load volatile i32, i32* @interrupt_state, align 4
  %tobool46 = icmp ne i32 %30, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end45
  call void @throw_to_top_level()
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end45
  br label %do.end

do.end:                                           ; preds = %if.end48
  %31 = load i32, i32* @subshell_environment, align 4
  %or = or i32 %31, 128
  store i32 %or, i32* @subshell_environment, align 4
  br label %if.end49

if.end49:                                         ; preds = %do.end, %if.end31
  call void @stop_making_children()
  %32 = load i32, i32* %pid, align 4
  %cmp50 = icmp slt i32 %32, 0
  br i1 %cmp50, label %if.then52, label %if.end63

if.then52:                                        ; preds = %if.end49
  %call53 = call i8* @libintl_gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14, i32 0, i32 0))
  call void (i8*, ...) @sys_error(i8* %call53)
  br label %error_exit

error_exit:                                       ; preds = %if.then52, %if.then29
  %33 = load i32, i32* %old_pid, align 4
  store volatile i32 %33, i32* @last_made_pid, align 4
  br label %do.body54

do.body54:                                        ; preds = %error_exit
  %34 = load i8*, i8** %istring, align 4
  %tobool55 = icmp ne i8* %34, null
  br i1 %tobool55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %do.body54
  %35 = load i8*, i8** %istring, align 4
  call void @sh_xfree(i8* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6146)
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %do.body54
  br label %do.end58

do.end58:                                         ; preds = %if.end57
  %arrayidx59 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %36 = load i32, i32* %arrayidx59, align 4
  %call60 = call i32 @close(i32 %36)
  %arrayidx61 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %37 = load i32, i32* %arrayidx61, align 4
  %call62 = call i32 @close(i32 %37)
  store %struct.word_desc* null, %struct.word_desc** %retval, align 4
  br label %return

if.end63:                                         ; preds = %if.end49
  %38 = load i32, i32* %pid, align 4
  %cmp64 = icmp eq i32 %38, 0
  br i1 %cmp64, label %if.then66, label %if.else152

if.then66:                                        ; preds = %if.end63
  store i32 0, i32* @interactive, align 4
  %call67 = call void (i32)* @set_sigint_handler()
  call void @free_pushed_string_input()
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call68 = call i32 @_bash_fpurge(%struct._IO_FILE* %39)
  %arrayidx69 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %40 = load i32, i32* %arrayidx69, align 4
  %call70 = call i32 @dup2(i32 %40, i32 1)
  %cmp71 = icmp slt i32 %call70, 0
  br i1 %cmp71, label %if.then73, label %if.end75

if.then73:                                        ; preds = %if.then66
  %call74 = call i8* @libintl_gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i32 0, i32 0))
  call void (i8*, ...) @sys_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* %call74)
  call void @exit(i32 1) #7
  unreachable

if.end75:                                         ; preds = %if.then66
  %arrayidx76 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %41 = load i32, i32* %arrayidx76, align 4
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 4
  %call77 = call i32 @fileno(%struct._IO_FILE* %42)
  %cmp78 = icmp ne i32 %41, %call77
  br i1 %cmp78, label %land.lhs.true80, label %if.end93

land.lhs.true80:                                  ; preds = %if.end75
  %arrayidx81 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %43 = load i32, i32* %arrayidx81, align 4
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call82 = call i32 @fileno(%struct._IO_FILE* %44)
  %cmp83 = icmp ne i32 %43, %call82
  br i1 %cmp83, label %land.lhs.true85, label %if.end93

land.lhs.true85:                                  ; preds = %land.lhs.true80
  %arrayidx86 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %45 = load i32, i32* %arrayidx86, align 4
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call87 = call i32 @fileno(%struct._IO_FILE* %46)
  %cmp88 = icmp ne i32 %45, %call87
  br i1 %cmp88, label %if.then90, label %if.end93

if.then90:                                        ; preds = %land.lhs.true85
  %arrayidx91 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %47 = load i32, i32* %arrayidx91, align 4
  %call92 = call i32 @close(i32 %47)
  br label %if.end93

if.end93:                                         ; preds = %if.then90, %land.lhs.true85, %land.lhs.true80, %if.end75
  %arrayidx94 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %48 = load i32, i32* %arrayidx94, align 4
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 4
  %call95 = call i32 @fileno(%struct._IO_FILE* %49)
  %cmp96 = icmp ne i32 %48, %call95
  br i1 %cmp96, label %land.lhs.true98, label %if.end111

land.lhs.true98:                                  ; preds = %if.end93
  %arrayidx99 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %50 = load i32, i32* %arrayidx99, align 4
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call100 = call i32 @fileno(%struct._IO_FILE* %51)
  %cmp101 = icmp ne i32 %50, %call100
  br i1 %cmp101, label %land.lhs.true103, label %if.end111

land.lhs.true103:                                 ; preds = %land.lhs.true98
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %52 = load i32, i32* %arrayidx104, align 4
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 4
  %call105 = call i32 @fileno(%struct._IO_FILE* %53)
  %cmp106 = icmp ne i32 %52, %call105
  br i1 %cmp106, label %if.then108, label %if.end111

if.then108:                                       ; preds = %land.lhs.true103
  %arrayidx109 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %54 = load i32, i32* %arrayidx109, align 4
  %call110 = call i32 @close(i32 %54)
  br label %if.end111

if.end111:                                        ; preds = %if.then108, %land.lhs.true103, %land.lhs.true98, %if.end93
  %55 = load i32, i32* @subshell_environment, align 4
  %or112 = or i32 %55, 4
  store i32 %or112, i32* @subshell_environment, align 4
  %call113 = call i32 @change_flag(i32 118, i32 43)
  %56 = load i32, i32* @inherit_errexit, align 4
  %cmp114 = icmp eq i32 %56, 0
  br i1 %cmp114, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.end111
  store i32 0, i32* @builtin_ignoring_errexit, align 4
  %call117 = call i32 @change_flag(i32 101, i32 43)
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %if.end111
  call void @set_shellopts()
  %57 = load i32, i32* @expanding_redir, align 4
  %tobool119 = icmp ne i32 %57, 0
  br i1 %tobool119, label %if.then120, label %if.end121

if.then120:                                       ; preds = %if.end118
  call void @flush_temporary_env()
  store i32 0, i32* @expanding_redir, align 4
  br label %if.end121

if.end121:                                        ; preds = %if.then120, %if.end118
  %58 = load i8*, i8** %string.addr, align 4
  %call122 = call i8* @remove_quoted_escapes(i8* %58)
  store i32 2, i32* @startup_state, align 4
  %call123 = call i32 @setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @top_level, i32 0, i32 0)) #8
  store i32 %call123, i32* %result, align 4
  %59 = load i32, i32* %result, align 4
  %cmp124 = icmp eq i32 %59, 0
  br i1 %cmp124, label %land.lhs.true126, label %if.else

land.lhs.true126:                                 ; preds = %if.end121
  %60 = load i32, i32* @return_catch_flag, align 4
  %tobool127 = icmp ne i32 %60, 0
  br i1 %tobool127, label %if.then128, label %if.else

if.then128:                                       ; preds = %land.lhs.true126
  %call129 = call i32 @setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @return_catch, i32 0, i32 0)) #8
  store i32 %call129, i32* %function_value, align 4
  br label %if.end130

if.else:                                          ; preds = %land.lhs.true126, %if.end121
  store i32 0, i32* %function_value, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.else, %if.then128
  %61 = load i32, i32* %result, align 4
  %cmp131 = icmp eq i32 %61, 4
  br i1 %cmp131, label %if.then133, label %if.else134

if.then133:                                       ; preds = %if.end130
  %62 = load i32, i32* @last_command_exit_value, align 4
  store i32 %62, i32* %rc, align 4
  br label %if.end150

if.else134:                                       ; preds = %if.end130
  %63 = load i32, i32* %result, align 4
  %cmp135 = icmp eq i32 %63, 3
  br i1 %cmp135, label %if.then137, label %if.else138

if.then137:                                       ; preds = %if.else134
  %64 = load i32, i32* @last_command_exit_value, align 4
  store i32 %64, i32* %rc, align 4
  br label %if.end149

if.else138:                                       ; preds = %if.else134
  %65 = load i32, i32* %result, align 4
  %tobool139 = icmp ne i32 %65, 0
  br i1 %tobool139, label %if.then140, label %if.else141

if.then140:                                       ; preds = %if.else138
  store i32 1, i32* %rc, align 4
  br label %if.end148

if.else141:                                       ; preds = %if.else138
  %66 = load i32, i32* %function_value, align 4
  %tobool142 = icmp ne i32 %66, 0
  br i1 %tobool142, label %if.then143, label %if.else144

if.then143:                                       ; preds = %if.else141
  %67 = load i32, i32* @return_catch_value, align 4
  store i32 %67, i32* %rc, align 4
  br label %if.end147

if.else144:                                       ; preds = %if.else141
  %68 = load i32, i32* @subshell_level, align 4
  %inc = add nsw i32 %68, 1
  store i32 %inc, i32* @subshell_level, align 4
  %69 = load i8*, i8** %string.addr, align 4
  %70 = load i32, i32* %pflags, align 4
  %or145 = or i32 %70, 4
  %call146 = call i32 @parse_and_execute(i8* %69, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i32 0, i32 0), i32 %or145)
  store i32 %call146, i32* %rc, align 4
  %71 = load i32, i32* @subshell_level, align 4
  %dec = add nsw i32 %71, -1
  store i32 %dec, i32* @subshell_level, align 4
  br label %if.end147

if.end147:                                        ; preds = %if.else144, %if.then143
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then140
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then137
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then133
  %72 = load i32, i32* %rc, align 4
  store i32 %72, i32* @last_command_exit_value, align 4
  %call151 = call i32 @run_exit_trap()
  store i32 %call151, i32* %rc, align 4
  call void @unlink_fifo_list()
  %73 = load i32, i32* %rc, align 4
  call void @exit(i32 %73) #7
  unreachable

if.else152:                                       ; preds = %if.end63
  %arrayidx153 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 1
  %74 = load i32, i32* %arrayidx153, align 4
  %call154 = call i32 @close(i32 %74)
  store i32 0, i32* %tflag, align 4
  %arrayidx155 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %75 = load i32, i32* %arrayidx155, align 4
  %76 = load i32, i32* %quoted.addr, align 4
  %call156 = call i8* @read_comsub(i32 %75, i32 %76, i32* %tflag)
  store i8* %call156, i8** %istring, align 4
  %arrayidx157 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %77 = load i32, i32* %arrayidx157, align 4
  %call158 = call i32 @close(i32 %77)
  %78 = load i32, i32* %pid, align 4
  store i32 %78, i32* @current_command_subst_pid, align 4
  %79 = load i32, i32* %pid, align 4
  %call159 = call i32 @wait_for(i32 %79)
  store i32 %call159, i32* @last_command_exit_value, align 4
  %80 = load i32, i32* %pid, align 4
  store i32 %80, i32* @last_command_subst_pid, align 4
  %81 = load i32, i32* %old_pid, align 4
  store volatile i32 %81, i32* @last_made_pid, align 4
  %call160 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call160, %struct.word_desc** %ret, align 4
  %82 = load i8*, i8** %istring, align 4
  %83 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %83, i32 0, i32 0
  store i8* %82, i8** %word, align 4
  %84 = load i32, i32* %tflag, align 4
  %85 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %85, i32 0, i32 1
  store i32 %84, i32* %flags, align 4
  %86 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %86, %struct.word_desc** %retval, align 4
  br label %return

return:                                           ; preds = %if.else152, %do.end58, %if.then
  %87 = load %struct.word_desc*, %struct.word_desc** %retval, align 4
  ret %struct.word_desc* %87
}

; Function Attrs: noreturn
declare void @jump_to_top_level(i32) #4

declare void @maybe_make_export_env() #1

declare i32 @pipe(i32*) #1

declare void @sys_error(i8*, ...) #1

declare i8* @libintl_gettext(i8*) #1

declare i32 @make_child(i8*, i32) #1

declare void @reset_signal_handlers() #1

declare i32 @kill(i32, i32) #1

declare i32 @getpid() #1

declare void @termsig_handler(i32) #1

declare void @throw_to_top_level() #1

declare void @stop_making_children() #1

declare void (i32)* @set_sigint_handler() #1

declare void @free_pushed_string_input() #1

declare i32 @_bash_fpurge(%struct._IO_FILE*) #1

declare i32 @dup2(i32, i32) #1

; Function Attrs: noreturn
declare void @exit(i32) #4

declare i32 @fileno(%struct._IO_FILE*) #1

declare i32 @change_flag(i32, i32) #1

declare void @set_shellopts() #1

declare void @flush_temporary_env() #1

; Function Attrs: returns_twice
declare i32 @setjmp(%struct.__jmp_buf_tag*) #5

declare i32 @parse_and_execute(i8*, i8*, i32) #1

declare i32 @run_exit_trap() #1

; Function Attrs: noinline nounwind
define internal i8* @read_comsub(i32 %fd, i32 %quoted, i32* %rflag) #0 {
entry:
  %retval = alloca i8*, align 4
  %fd.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %rflag.addr = alloca i32*, align 4
  %istring = alloca i8*, align 4
  %buf = alloca [128 x i8], align 1
  %bufp = alloca i8*, align 4
  %s = alloca i8*, align 4
  %istring_index = alloca i32, align 4
  %istring_size = alloca i32, align 4
  %c = alloca i32, align 4
  %tflag = alloca i32, align 4
  %skip_ctlesc = alloca i32, align 4
  %skip_ctlnul = alloca i32, align 4
  %bufn = alloca i32, align 4
  %nullbyte = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32* %rflag, i32** %rflag.addr, align 4
  store i8* null, i8** %istring, align 4
  store i32 0, i32* %tflag, align 4
  store i32 0, i32* %bufn, align 4
  store i32 0, i32* %istring_size, align 4
  store i32 0, i32* %istring_index, align 4
  store i32 0, i32* %skip_ctlnul, align 4
  store i32 0, i32* %skip_ctlesc, align 4
  %0 = load i8*, i8** @ifs_value, align 4
  store i8* %0, i8** %s, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %s, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %tobool1, %land.rhs ]
  br i1 %4, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %5 = load i8*, i8** %s, align 4
  %6 = load i8, i8* %5, align 1
  %conv2 = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv2, 1
  %conv3 = zext i1 %cmp to i32
  %7 = load i32, i32* %skip_ctlesc, align 4
  %or = or i32 %7, %conv3
  store i32 %or, i32* %skip_ctlesc, align 4
  %8 = load i8*, i8** %s, align 4
  %9 = load i8, i8* %8, align 1
  %conv4 = sext i8 %9 to i32
  %cmp5 = icmp eq i32 %conv4, 127
  %conv6 = zext i1 %cmp5 to i32
  %10 = load i32, i32* %skip_ctlnul, align 4
  %or7 = or i32 %10, %conv6
  store i32 %or7, i32* %skip_ctlnul, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i8*, i8** %s, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %s, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  store i32 0, i32* %nullbyte, align 4
  br label %while.body

while.body:                                       ; preds = %for.end, %if.end28, %if.end70
  %12 = load i32, i32* %fd.addr, align 4
  %cmp8 = icmp slt i32 %12, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end74

if.end:                                           ; preds = %while.body
  %13 = load i32, i32* %bufn, align 4
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %bufn, align 4
  %cmp10 = icmp sle i32 %dec, 0
  br i1 %cmp10, label %if.then12, label %if.end18

if.then12:                                        ; preds = %if.end
  %14 = load i32, i32* %fd.addr, align 4
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0
  %call = call i32 @zread(i32 %14, i8* %arraydecay, i32 128)
  store i32 %call, i32* %bufn, align 4
  %15 = load i32, i32* %bufn, align 4
  %cmp13 = icmp sle i32 %15, 0
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.then12
  br label %while.end74

if.end16:                                         ; preds = %if.then12
  %arraydecay17 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay17, i8** %bufp, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.end16, %if.end
  %16 = load i8*, i8** %bufp, align 4
  %incdec.ptr19 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr19, i8** %bufp, align 4
  %17 = load i8, i8* %16, align 1
  %conv20 = sext i8 %17 to i32
  store i32 %conv20, i32* %c, align 4
  %18 = load i32, i32* %c, align 4
  %cmp21 = icmp eq i32 %18, 0
  br i1 %cmp21, label %if.then23, label %if.end29

if.then23:                                        ; preds = %if.end18
  %19 = load i32, i32* %nullbyte, align 4
  %cmp24 = icmp eq i32 %19, 0
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.then23
  %call27 = call i8* @libintl_gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.23, i32 0, i32 0))
  call void (i8*, ...) @internal_warning(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* %call27)
  store i32 1, i32* %nullbyte, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.then23
  br label %while.body

if.end29:                                         ; preds = %if.end18
  br label %do.body

do.body:                                          ; preds = %if.end29
  %20 = load i32, i32* %istring_index, align 4
  %add = add nsw i32 %20, 2
  %21 = load i32, i32* %istring_size, align 4
  %cmp30 = icmp sge i32 %add, %21
  br i1 %cmp30, label %if.then32, label %if.end40

if.then32:                                        ; preds = %do.body
  br label %while.cond33

while.cond33:                                     ; preds = %while.body37, %if.then32
  %22 = load i32, i32* %istring_index, align 4
  %add34 = add nsw i32 %22, 2
  %23 = load i32, i32* %istring_size, align 4
  %cmp35 = icmp sge i32 %add34, %23
  br i1 %cmp35, label %while.body37, label %while.end

while.body37:                                     ; preds = %while.cond33
  %24 = load i32, i32* %istring_size, align 4
  %add38 = add nsw i32 %24, 128
  store i32 %add38, i32* %istring_size, align 4
  br label %while.cond33

while.end:                                        ; preds = %while.cond33
  %25 = load i8*, i8** %istring, align 4
  %26 = load i32, i32* %istring_size, align 4
  %call39 = call i8* @sh_xrealloc(i8* %25, i32 %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5979)
  store i8* %call39, i8** %istring, align 4
  br label %if.end40

if.end40:                                         ; preds = %while.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end40
  %27 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %27, 3
  %tobool41 = icmp ne i32 %and, 0
  br i1 %tobool41, label %if.then42, label %if.else

if.then42:                                        ; preds = %do.end
  %28 = load i8*, i8** %istring, align 4
  %29 = load i32, i32* %istring_index, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %istring_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %28, i32 %29
  store i8 1, i8* %arrayidx, align 1
  br label %if.end70

if.else:                                          ; preds = %do.end
  %30 = load i32, i32* %skip_ctlesc, align 4
  %cmp43 = icmp eq i32 %30, 0
  br i1 %cmp43, label %land.lhs.true, label %if.else51

land.lhs.true:                                    ; preds = %if.else
  %31 = load i32, i32* %c, align 4
  %cmp45 = icmp eq i32 %31, 1
  br i1 %cmp45, label %if.then47, label %if.else51

if.then47:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %tflag, align 4
  %or48 = or i32 %32, 2097152
  store i32 %or48, i32* %tflag, align 4
  %33 = load i8*, i8** %istring, align 4
  %34 = load i32, i32* %istring_index, align 4
  %inc49 = add nsw i32 %34, 1
  store i32 %inc49, i32* %istring_index, align 4
  %arrayidx50 = getelementptr inbounds i8, i8* %33, i32 %34
  store i8 1, i8* %arrayidx50, align 1
  br label %if.end69

if.else51:                                        ; preds = %land.lhs.true, %if.else
  %35 = load i32, i32* %skip_ctlnul, align 4
  %cmp52 = icmp eq i32 %35, 0
  br i1 %cmp52, label %land.lhs.true54, label %lor.lhs.false

land.lhs.true54:                                  ; preds = %if.else51
  %36 = load i32, i32* %c, align 4
  %cmp55 = icmp eq i32 %36, 127
  br i1 %cmp55, label %if.then65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true54, %if.else51
  %37 = load i32, i32* %c, align 4
  %cmp57 = icmp eq i32 %37, 32
  br i1 %cmp57, label %land.lhs.true59, label %if.end68

land.lhs.true59:                                  ; preds = %lor.lhs.false
  %38 = load i8*, i8** @ifs_value, align 4
  %tobool60 = icmp ne i8* %38, null
  br i1 %tobool60, label %land.lhs.true61, label %if.end68

land.lhs.true61:                                  ; preds = %land.lhs.true59
  %39 = load i8*, i8** @ifs_value, align 4
  %40 = load i8, i8* %39, align 1
  %conv62 = sext i8 %40 to i32
  %cmp63 = icmp eq i32 %conv62, 0
  br i1 %cmp63, label %if.then65, label %if.end68

if.then65:                                        ; preds = %land.lhs.true61, %land.lhs.true54
  %41 = load i8*, i8** %istring, align 4
  %42 = load i32, i32* %istring_index, align 4
  %inc66 = add nsw i32 %42, 1
  store i32 %inc66, i32* %istring_index, align 4
  %arrayidx67 = getelementptr inbounds i8, i8* %41, i32 %42
  store i8 1, i8* %arrayidx67, align 1
  br label %if.end68

if.end68:                                         ; preds = %if.then65, %land.lhs.true61, %land.lhs.true59, %lor.lhs.false
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then47
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then42
  %43 = load i32, i32* %c, align 4
  %conv71 = trunc i32 %43 to i8
  %44 = load i8*, i8** %istring, align 4
  %45 = load i32, i32* %istring_index, align 4
  %inc72 = add nsw i32 %45, 1
  store i32 %inc72, i32* %istring_index, align 4
  %arrayidx73 = getelementptr inbounds i8, i8* %44, i32 %45
  store i8 %conv71, i8* %arrayidx73, align 1
  br label %while.body

while.end74:                                      ; preds = %if.then15, %if.then
  %46 = load i8*, i8** %istring, align 4
  %tobool75 = icmp ne i8* %46, null
  br i1 %tobool75, label %if.then76, label %if.end78

if.then76:                                        ; preds = %while.end74
  %47 = load i8*, i8** %istring, align 4
  %48 = load i32, i32* %istring_index, align 4
  %arrayidx77 = getelementptr inbounds i8, i8* %47, i32 %48
  store i8 0, i8* %arrayidx77, align 1
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %while.end74
  %49 = load i32, i32* %istring_index, align 4
  %cmp79 = icmp eq i32 %49, 0
  br i1 %cmp79, label %if.then81, label %if.end90

if.then81:                                        ; preds = %if.end78
  br label %do.body82

do.body82:                                        ; preds = %if.then81
  %50 = load i8*, i8** %istring, align 4
  %tobool83 = icmp ne i8* %50, null
  br i1 %tobool83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %do.body82
  %51 = load i8*, i8** %istring, align 4
  call void @sh_xfree(i8* %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6015)
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %do.body82
  br label %do.end86

do.end86:                                         ; preds = %if.end85
  %52 = load i32*, i32** %rflag.addr, align 4
  %tobool87 = icmp ne i32* %52, null
  br i1 %tobool87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %do.end86
  %53 = load i32, i32* %tflag, align 4
  %54 = load i32*, i32** %rflag.addr, align 4
  store i32 %53, i32* %54, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %do.end86
  store i8* null, i8** %retval, align 4
  br label %return

if.end90:                                         ; preds = %if.end78
  %55 = load i32, i32* %quoted.addr, align 4
  %and91 = and i32 %55, 3
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %if.then93, label %if.else115

if.then93:                                        ; preds = %if.end90
  br label %while.cond

while.cond:                                       ; preds = %if.end112, %if.then93
  %56 = load i32, i32* %istring_index, align 4
  %cmp94 = icmp sgt i32 %56, 0
  br i1 %cmp94, label %while.body96, label %while.end113

while.body96:                                     ; preds = %while.cond
  %57 = load i8*, i8** %istring, align 4
  %58 = load i32, i32* %istring_index, align 4
  %sub = sub nsw i32 %58, 1
  %arrayidx97 = getelementptr inbounds i8, i8* %57, i32 %sub
  %59 = load i8, i8* %arrayidx97, align 1
  %conv98 = sext i8 %59 to i32
  %cmp99 = icmp eq i32 %conv98, 10
  br i1 %cmp99, label %if.then101, label %if.else111

if.then101:                                       ; preds = %while.body96
  %60 = load i32, i32* %istring_index, align 4
  %dec102 = add nsw i32 %60, -1
  store i32 %dec102, i32* %istring_index, align 4
  %61 = load i8*, i8** %istring, align 4
  %62 = load i32, i32* %istring_index, align 4
  %sub103 = sub nsw i32 %62, 1
  %arrayidx104 = getelementptr inbounds i8, i8* %61, i32 %sub103
  %63 = load i8, i8* %arrayidx104, align 1
  %conv105 = sext i8 %63 to i32
  %cmp106 = icmp eq i32 %conv105, 1
  br i1 %cmp106, label %if.then108, label %if.end110

if.then108:                                       ; preds = %if.then101
  %64 = load i32, i32* %istring_index, align 4
  %dec109 = add nsw i32 %64, -1
  store i32 %dec109, i32* %istring_index, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %if.then101
  br label %if.end112

if.else111:                                       ; preds = %while.body96
  br label %while.end113

if.end112:                                        ; preds = %if.end110
  br label %while.cond

while.end113:                                     ; preds = %if.else111, %while.cond
  %65 = load i8*, i8** %istring, align 4
  %66 = load i32, i32* %istring_index, align 4
  %arrayidx114 = getelementptr inbounds i8, i8* %65, i32 %66
  store i8 0, i8* %arrayidx114, align 1
  br label %if.end117

if.else115:                                       ; preds = %if.end90
  %67 = load i8*, i8** %istring, align 4
  %68 = load i32, i32* %istring_index, align 4
  %sub116 = sub nsw i32 %68, 1
  call void @strip_trailing(i8* %67, i32 %sub116, i32 1)
  br label %if.end117

if.end117:                                        ; preds = %if.else115, %while.end113
  %69 = load i32*, i32** %rflag.addr, align 4
  %tobool118 = icmp ne i32* %69, null
  br i1 %tobool118, label %if.then119, label %if.end120

if.then119:                                       ; preds = %if.end117
  %70 = load i32, i32* %tflag, align 4
  %71 = load i32*, i32** %rflag.addr, align 4
  store i32 %70, i32* %71, align 4
  br label %if.end120

if.end120:                                        ; preds = %if.then119, %if.end117
  %72 = load i8*, i8** %istring, align 4
  store i8* %72, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end120, %if.end89
  %73 = load i8*, i8** %retval, align 4
  ret i8* %73
}

declare i32 @wait_for(i32) #1

; Function Attrs: noinline nounwind
define i8* @pat_subst(i8* %string, i8* %pat, i8* %rep, i32 %mflags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %pat.addr = alloca i8*, align 4
  %rep.addr = alloca i8*, align 4
  %mflags.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %s = alloca i8*, align 4
  %e = alloca i8*, align 4
  %str = alloca i8*, align 4
  %rstr = alloca i8*, align 4
  %mstr = alloca i8*, align 4
  %rptr = alloca i32, align 4
  %mtype = alloca i32, align 4
  %rxpand = alloca i32, align 4
  %mlen = alloca i32, align 4
  %rsize = alloca i32, align 4
  %l = alloca i32, align 4
  %replen = alloca i32, align 4
  %rslen = alloca i32, align 4
  %x = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %pat, i8** %pat.addr, align 4
  store i8* %rep, i8** %rep.addr, align 4
  store i32 %mflags, i32* %mflags.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7417)
  %call1 = call i8* @strcpy(i8* %call, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  store i8* %call1, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %mflags.addr, align 4
  %and = and i32 %1, 3
  store i32 %and, i32* %mtype, align 4
  store i32 0, i32* %rxpand, align 4
  %2 = load i8*, i8** %pat.addr, align 4
  %cmp2 = icmp eq i8* %2, null
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %pat.addr, align 4
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp3 = icmp eq i32 %conv, 0
  br i1 %cmp3, label %land.lhs.true, label %if.else70

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load i32, i32* %mtype, align 4
  %cmp5 = icmp eq i32 %5, 1
  br i1 %cmp5, label %if.then10, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* %mtype, align 4
  %cmp8 = icmp eq i32 %6, 2
  br i1 %cmp8, label %if.then10, label %if.else70

if.then10:                                        ; preds = %lor.lhs.false7, %land.lhs.true
  %7 = load i8*, i8** %rep.addr, align 4
  %tobool = icmp ne i8* %7, null
  br i1 %tobool, label %land.lhs.true11, label %cond.false26

land.lhs.true11:                                  ; preds = %if.then10
  %8 = load i8*, i8** %rep.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 0
  %9 = load i8, i8* %arrayidx, align 1
  %conv12 = sext i8 %9 to i32
  %tobool13 = icmp ne i32 %conv12, 0
  br i1 %tobool13, label %cond.true, label %cond.false26

cond.true:                                        ; preds = %land.lhs.true11
  %10 = load i8*, i8** %rep.addr, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %10, i32 1
  %11 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %11 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  br i1 %tobool16, label %cond.true17, label %cond.false23

cond.true17:                                      ; preds = %cond.true
  %12 = load i8*, i8** %rep.addr, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %12, i32 2
  %13 = load i8, i8* %arrayidx18, align 1
  %conv19 = sext i8 %13 to i32
  %tobool20 = icmp ne i32 %conv19, 0
  br i1 %tobool20, label %cond.true21, label %cond.false

cond.true21:                                      ; preds = %cond.true17
  %14 = load i8*, i8** %rep.addr, align 4
  %call22 = call i32 @strlen(i8* %14)
  br label %cond.end

cond.false:                                       ; preds = %cond.true17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true21
  %cond = phi i32 [ %call22, %cond.true21 ], [ 2, %cond.false ]
  br label %cond.end24

cond.false23:                                     ; preds = %cond.true
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false23, %cond.end
  %cond25 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false23 ]
  br label %cond.end27

cond.false26:                                     ; preds = %land.lhs.true11, %if.then10
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.end24
  %cond28 = phi i32 [ %cond25, %cond.end24 ], [ 0, %cond.false26 ]
  store i32 %cond28, i32* %replen, align 4
  %15 = load i8*, i8** %string.addr, align 4
  %tobool29 = icmp ne i8* %15, null
  br i1 %tobool29, label %land.lhs.true30, label %cond.false50

land.lhs.true30:                                  ; preds = %cond.end27
  %16 = load i8*, i8** %string.addr, align 4
  %arrayidx31 = getelementptr inbounds i8, i8* %16, i32 0
  %17 = load i8, i8* %arrayidx31, align 1
  %conv32 = sext i8 %17 to i32
  %tobool33 = icmp ne i32 %conv32, 0
  br i1 %tobool33, label %cond.true34, label %cond.false50

cond.true34:                                      ; preds = %land.lhs.true30
  %18 = load i8*, i8** %string.addr, align 4
  %arrayidx35 = getelementptr inbounds i8, i8* %18, i32 1
  %19 = load i8, i8* %arrayidx35, align 1
  %conv36 = sext i8 %19 to i32
  %tobool37 = icmp ne i32 %conv36, 0
  br i1 %tobool37, label %cond.true38, label %cond.false47

cond.true38:                                      ; preds = %cond.true34
  %20 = load i8*, i8** %string.addr, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %20, i32 2
  %21 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %21 to i32
  %tobool41 = icmp ne i32 %conv40, 0
  br i1 %tobool41, label %cond.true42, label %cond.false44

cond.true42:                                      ; preds = %cond.true38
  %22 = load i8*, i8** %string.addr, align 4
  %call43 = call i32 @strlen(i8* %22)
  br label %cond.end45

cond.false44:                                     ; preds = %cond.true38
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.true42
  %cond46 = phi i32 [ %call43, %cond.true42 ], [ 2, %cond.false44 ]
  br label %cond.end48

cond.false47:                                     ; preds = %cond.true34
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false47, %cond.end45
  %cond49 = phi i32 [ %cond46, %cond.end45 ], [ 1, %cond.false47 ]
  br label %cond.end51

cond.false50:                                     ; preds = %land.lhs.true30, %cond.end27
  br label %cond.end51

cond.end51:                                       ; preds = %cond.false50, %cond.end48
  %cond52 = phi i32 [ %cond49, %cond.end48 ], [ 0, %cond.false50 ]
  store i32 %cond52, i32* %l, align 4
  %23 = load i32, i32* %replen, align 4
  %24 = load i32, i32* %l, align 4
  %add = add i32 %23, %24
  %add53 = add i32 %add, 2
  %call54 = call i8* @sh_xmalloc(i32 %add53, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7440)
  store i8* %call54, i8** %ret, align 4
  %25 = load i32, i32* %replen, align 4
  %cmp55 = icmp eq i32 %25, 0
  br i1 %cmp55, label %if.then57, label %if.else

if.then57:                                        ; preds = %cond.end51
  %26 = load i8*, i8** %ret, align 4
  %27 = load i8*, i8** %string.addr, align 4
  %call58 = call i8* @strcpy(i8* %26, i8* %27)
  br label %if.end69

if.else:                                          ; preds = %cond.end51
  %28 = load i32, i32* %mtype, align 4
  %cmp59 = icmp eq i32 %28, 1
  br i1 %cmp59, label %if.then61, label %if.else64

if.then61:                                        ; preds = %if.else
  %29 = load i8*, i8** %ret, align 4
  %30 = load i8*, i8** %rep.addr, align 4
  %call62 = call i8* @strcpy(i8* %29, i8* %30)
  %31 = load i8*, i8** %ret, align 4
  %32 = load i32, i32* %replen, align 4
  %add.ptr = getelementptr inbounds i8, i8* %31, i32 %32
  %33 = load i8*, i8** %string.addr, align 4
  %call63 = call i8* @strcpy(i8* %add.ptr, i8* %33)
  br label %if.end68

if.else64:                                        ; preds = %if.else
  %34 = load i8*, i8** %ret, align 4
  %35 = load i8*, i8** %string.addr, align 4
  %call65 = call i8* @strcpy(i8* %34, i8* %35)
  %36 = load i8*, i8** %ret, align 4
  %37 = load i32, i32* %l, align 4
  %add.ptr66 = getelementptr inbounds i8, i8* %36, i32 %37
  %38 = load i8*, i8** %rep.addr, align 4
  %call67 = call i8* @strcpy(i8* %add.ptr66, i8* %38)
  br label %if.end68

if.end68:                                         ; preds = %if.else64, %if.then61
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then57
  %39 = load i8*, i8** %ret, align 4
  store i8* %39, i8** %retval, align 4
  br label %return

if.else70:                                        ; preds = %lor.lhs.false7, %lor.lhs.false
  %40 = load i8*, i8** %string.addr, align 4
  %41 = load i8, i8* %40, align 1
  %conv71 = sext i8 %41 to i32
  %cmp72 = icmp eq i32 %conv71, 0
  br i1 %cmp72, label %land.lhs.true74, label %if.end112

land.lhs.true74:                                  ; preds = %if.else70
  %42 = load i8*, i8** %string.addr, align 4
  %43 = load i8*, i8** %pat.addr, align 4
  %44 = load i32, i32* %mtype, align 4
  %call75 = call i32 @match_pattern(i8* %42, i8* %43, i32 %44, i8** %s, i8** %e)
  %cmp76 = icmp ne i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.end112

if.then78:                                        ; preds = %land.lhs.true74
  %45 = load i8*, i8** %rep.addr, align 4
  %tobool79 = icmp ne i8* %45, null
  br i1 %tobool79, label %land.lhs.true80, label %cond.false100

land.lhs.true80:                                  ; preds = %if.then78
  %46 = load i8*, i8** %rep.addr, align 4
  %arrayidx81 = getelementptr inbounds i8, i8* %46, i32 0
  %47 = load i8, i8* %arrayidx81, align 1
  %conv82 = sext i8 %47 to i32
  %tobool83 = icmp ne i32 %conv82, 0
  br i1 %tobool83, label %cond.true84, label %cond.false100

cond.true84:                                      ; preds = %land.lhs.true80
  %48 = load i8*, i8** %rep.addr, align 4
  %arrayidx85 = getelementptr inbounds i8, i8* %48, i32 1
  %49 = load i8, i8* %arrayidx85, align 1
  %conv86 = sext i8 %49 to i32
  %tobool87 = icmp ne i32 %conv86, 0
  br i1 %tobool87, label %cond.true88, label %cond.false97

cond.true88:                                      ; preds = %cond.true84
  %50 = load i8*, i8** %rep.addr, align 4
  %arrayidx89 = getelementptr inbounds i8, i8* %50, i32 2
  %51 = load i8, i8* %arrayidx89, align 1
  %conv90 = sext i8 %51 to i32
  %tobool91 = icmp ne i32 %conv90, 0
  br i1 %tobool91, label %cond.true92, label %cond.false94

cond.true92:                                      ; preds = %cond.true88
  %52 = load i8*, i8** %rep.addr, align 4
  %call93 = call i32 @strlen(i8* %52)
  br label %cond.end95

cond.false94:                                     ; preds = %cond.true88
  br label %cond.end95

cond.end95:                                       ; preds = %cond.false94, %cond.true92
  %cond96 = phi i32 [ %call93, %cond.true92 ], [ 2, %cond.false94 ]
  br label %cond.end98

cond.false97:                                     ; preds = %cond.true84
  br label %cond.end98

cond.end98:                                       ; preds = %cond.false97, %cond.end95
  %cond99 = phi i32 [ %cond96, %cond.end95 ], [ 1, %cond.false97 ]
  br label %cond.end101

cond.false100:                                    ; preds = %land.lhs.true80, %if.then78
  br label %cond.end101

cond.end101:                                      ; preds = %cond.false100, %cond.end98
  %cond102 = phi i32 [ %cond99, %cond.end98 ], [ 0, %cond.false100 ]
  store i32 %cond102, i32* %replen, align 4
  %53 = load i32, i32* %replen, align 4
  %add103 = add i32 %53, 1
  %call104 = call i8* @sh_xmalloc(i32 %add103, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7458)
  store i8* %call104, i8** %ret, align 4
  %54 = load i32, i32* %replen, align 4
  %cmp105 = icmp eq i32 %54, 0
  br i1 %cmp105, label %if.then107, label %if.else109

if.then107:                                       ; preds = %cond.end101
  %55 = load i8*, i8** %ret, align 4
  %arrayidx108 = getelementptr inbounds i8, i8* %55, i32 0
  store i8 0, i8* %arrayidx108, align 1
  br label %if.end111

if.else109:                                       ; preds = %cond.end101
  %56 = load i8*, i8** %ret, align 4
  %57 = load i8*, i8** %rep.addr, align 4
  %call110 = call i8* @strcpy(i8* %56, i8* %57)
  br label %if.end111

if.end111:                                        ; preds = %if.else109, %if.then107
  %58 = load i8*, i8** %ret, align 4
  store i8* %58, i8** %retval, align 4
  br label %return

if.end112:                                        ; preds = %land.lhs.true74, %if.else70
  br label %if.end113

if.end113:                                        ; preds = %if.end112
  store i32 64, i32* %rsize, align 4
  %call114 = call i8* @sh_xmalloc(i32 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7466)
  store i8* %call114, i8** %ret, align 4
  %59 = load i8*, i8** %ret, align 4
  %arrayidx115 = getelementptr inbounds i8, i8* %59, i32 0
  store i8 0, i8* %arrayidx115, align 1
  %60 = load i8*, i8** %rep.addr, align 4
  %tobool116 = icmp ne i8* %60, null
  br i1 %tobool116, label %land.lhs.true117, label %cond.false137

land.lhs.true117:                                 ; preds = %if.end113
  %61 = load i8*, i8** %rep.addr, align 4
  %arrayidx118 = getelementptr inbounds i8, i8* %61, i32 0
  %62 = load i8, i8* %arrayidx118, align 1
  %conv119 = sext i8 %62 to i32
  %tobool120 = icmp ne i32 %conv119, 0
  br i1 %tobool120, label %cond.true121, label %cond.false137

cond.true121:                                     ; preds = %land.lhs.true117
  %63 = load i8*, i8** %rep.addr, align 4
  %arrayidx122 = getelementptr inbounds i8, i8* %63, i32 1
  %64 = load i8, i8* %arrayidx122, align 1
  %conv123 = sext i8 %64 to i32
  %tobool124 = icmp ne i32 %conv123, 0
  br i1 %tobool124, label %cond.true125, label %cond.false134

cond.true125:                                     ; preds = %cond.true121
  %65 = load i8*, i8** %rep.addr, align 4
  %arrayidx126 = getelementptr inbounds i8, i8* %65, i32 2
  %66 = load i8, i8* %arrayidx126, align 1
  %conv127 = sext i8 %66 to i32
  %tobool128 = icmp ne i32 %conv127, 0
  br i1 %tobool128, label %cond.true129, label %cond.false131

cond.true129:                                     ; preds = %cond.true125
  %67 = load i8*, i8** %rep.addr, align 4
  %call130 = call i32 @strlen(i8* %67)
  br label %cond.end132

cond.false131:                                    ; preds = %cond.true125
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false131, %cond.true129
  %cond133 = phi i32 [ %call130, %cond.true129 ], [ 2, %cond.false131 ]
  br label %cond.end135

cond.false134:                                    ; preds = %cond.true121
  br label %cond.end135

cond.end135:                                      ; preds = %cond.false134, %cond.end132
  %cond136 = phi i32 [ %cond133, %cond.end132 ], [ 1, %cond.false134 ]
  br label %cond.end138

cond.false137:                                    ; preds = %land.lhs.true117, %if.end113
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.end135
  %cond139 = phi i32 [ %cond136, %cond.end135 ], [ 0, %cond.false137 ]
  store i32 %cond139, i32* %replen, align 4
  store i32 0, i32* %rptr, align 4
  %68 = load i8*, i8** %string.addr, align 4
  store i8* %68, i8** %str, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end223, %cond.end138
  %69 = load i8*, i8** %str, align 4
  %70 = load i8, i8* %69, align 1
  %tobool140 = icmp ne i8 %70, 0
  br i1 %tobool140, label %for.body, label %for.end224

for.body:                                         ; preds = %for.cond
  %71 = load i8*, i8** %str, align 4
  %72 = load i8*, i8** %pat.addr, align 4
  %73 = load i32, i32* %mtype, align 4
  %call141 = call i32 @match_pattern(i8* %71, i8* %72, i32 %73, i8** %s, i8** %e)
  %cmp142 = icmp eq i32 %call141, 0
  br i1 %cmp142, label %if.then144, label %if.end145

if.then144:                                       ; preds = %for.body
  br label %for.end224

if.end145:                                        ; preds = %for.body
  %74 = load i8*, i8** %s, align 4
  %75 = load i8*, i8** %str, align 4
  %sub.ptr.lhs.cast = ptrtoint i8* %74 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %75 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  store i32 %sub.ptr.sub, i32* %l, align 4
  %76 = load i8*, i8** %rep.addr, align 4
  %tobool146 = icmp ne i8* %76, null
  br i1 %tobool146, label %land.lhs.true147, label %if.else164

land.lhs.true147:                                 ; preds = %if.end145
  %77 = load i32, i32* %rxpand, align 4
  %tobool148 = icmp ne i32 %77, 0
  br i1 %tobool148, label %if.then149, label %if.else164

if.then149:                                       ; preds = %land.lhs.true147
  %78 = load i8*, i8** %e, align 4
  %79 = load i8*, i8** %s, align 4
  %sub.ptr.lhs.cast150 = ptrtoint i8* %78 to i32
  %sub.ptr.rhs.cast151 = ptrtoint i8* %79 to i32
  %sub.ptr.sub152 = sub i32 %sub.ptr.lhs.cast150, %sub.ptr.rhs.cast151
  store i32 %sub.ptr.sub152, i32* %mlen, align 4
  %80 = load i32, i32* %mlen, align 4
  %add153 = add nsw i32 %80, 1
  %call154 = call i8* @sh_xmalloc(i32 %add153, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7479)
  store i8* %call154, i8** %mstr, align 4
  store i32 0, i32* %x, align 4
  br label %for.cond155

for.cond155:                                      ; preds = %for.inc, %if.then149
  %81 = load i32, i32* %x, align 4
  %82 = load i32, i32* %mlen, align 4
  %cmp156 = icmp slt i32 %81, %82
  br i1 %cmp156, label %for.body158, label %for.end

for.body158:                                      ; preds = %for.cond155
  %83 = load i8*, i8** %s, align 4
  %84 = load i32, i32* %x, align 4
  %arrayidx159 = getelementptr inbounds i8, i8* %83, i32 %84
  %85 = load i8, i8* %arrayidx159, align 1
  %86 = load i8*, i8** %mstr, align 4
  %87 = load i32, i32* %x, align 4
  %arrayidx160 = getelementptr inbounds i8, i8* %86, i32 %87
  store i8 %85, i8* %arrayidx160, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body158
  %88 = load i32, i32* %x, align 4
  %inc = add nsw i32 %88, 1
  store i32 %inc, i32* %x, align 4
  br label %for.cond155

for.end:                                          ; preds = %for.cond155
  %89 = load i8*, i8** %mstr, align 4
  %90 = load i32, i32* %mlen, align 4
  %arrayidx161 = getelementptr inbounds i8, i8* %89, i32 %90
  store i8 0, i8* %arrayidx161, align 1
  %91 = load i8*, i8** %rep.addr, align 4
  %92 = load i8*, i8** %mstr, align 4
  %call162 = call i8* @strcreplace(i8* %91, i32 38, i8* %92, i32 0)
  store i8* %call162, i8** %rstr, align 4
  %93 = load i8*, i8** %mstr, align 4
  call void @sh_xfree(i8* %93, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7484)
  %94 = load i8*, i8** %rstr, align 4
  %call163 = call i32 @strlen(i8* %94)
  store i32 %call163, i32* %rslen, align 4
  br label %if.end165

if.else164:                                       ; preds = %land.lhs.true147, %if.end145
  %95 = load i8*, i8** %rep.addr, align 4
  store i8* %95, i8** %rstr, align 4
  %96 = load i32, i32* %replen, align 4
  store i32 %96, i32* %rslen, align 4
  br label %if.end165

if.end165:                                        ; preds = %if.else164, %for.end
  br label %do.body

do.body:                                          ; preds = %if.end165
  %97 = load i32, i32* %rptr, align 4
  %98 = load i32, i32* %l, align 4
  %99 = load i32, i32* %rslen, align 4
  %add166 = add i32 %98, %99
  %add167 = add i32 %97, %add166
  %100 = load i32, i32* %rsize, align 4
  %cmp168 = icmp uge i32 %add167, %100
  br i1 %cmp168, label %if.then170, label %if.end177

if.then170:                                       ; preds = %do.body
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then170
  %101 = load i32, i32* %rptr, align 4
  %102 = load i32, i32* %l, align 4
  %103 = load i32, i32* %rslen, align 4
  %add171 = add i32 %102, %103
  %add172 = add i32 %101, %add171
  %104 = load i32, i32* %rsize, align 4
  %cmp173 = icmp uge i32 %add172, %104
  br i1 %cmp173, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %105 = load i32, i32* %rsize, align 4
  %add175 = add i32 %105, 64
  store i32 %add175, i32* %rsize, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %106 = load i8*, i8** %ret, align 4
  %107 = load i32, i32* %rsize, align 4
  %call176 = call i8* @sh_xrealloc(i8* %106, i32 %107, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7493)
  store i8* %call176, i8** %ret, align 4
  br label %if.end177

if.end177:                                        ; preds = %while.end, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end177
  %108 = load i32, i32* %l, align 4
  %tobool178 = icmp ne i32 %108, 0
  br i1 %tobool178, label %if.then179, label %if.end183

if.then179:                                       ; preds = %do.end
  %109 = load i8*, i8** %ret, align 4
  %110 = load i32, i32* %rptr, align 4
  %add.ptr180 = getelementptr inbounds i8, i8* %109, i32 %110
  %111 = load i8*, i8** %str, align 4
  %112 = load i32, i32* %l, align 4
  %call181 = call i8* @strncpy(i8* %add.ptr180, i8* %111, i32 %112)
  %113 = load i32, i32* %l, align 4
  %114 = load i32, i32* %rptr, align 4
  %add182 = add i32 %114, %113
  store i32 %add182, i32* %rptr, align 4
  br label %if.end183

if.end183:                                        ; preds = %if.then179, %do.end
  %115 = load i32, i32* %replen, align 4
  %tobool184 = icmp ne i32 %115, 0
  br i1 %tobool184, label %if.then185, label %if.end189

if.then185:                                       ; preds = %if.end183
  %116 = load i8*, i8** %ret, align 4
  %117 = load i32, i32* %rptr, align 4
  %add.ptr186 = getelementptr inbounds i8, i8* %116, i32 %117
  %118 = load i8*, i8** %rstr, align 4
  %119 = load i32, i32* %rslen, align 4
  %call187 = call i8* @strncpy(i8* %add.ptr186, i8* %118, i32 %119)
  %120 = load i32, i32* %rslen, align 4
  %121 = load i32, i32* %rptr, align 4
  %add188 = add i32 %121, %120
  store i32 %add188, i32* %rptr, align 4
  br label %if.end189

if.end189:                                        ; preds = %if.then185, %if.end183
  %122 = load i8*, i8** %e, align 4
  store i8* %122, i8** %str, align 4
  %123 = load i8*, i8** %rstr, align 4
  %124 = load i8*, i8** %rep.addr, align 4
  %cmp190 = icmp ne i8* %123, %124
  br i1 %cmp190, label %if.then192, label %if.end193

if.then192:                                       ; preds = %if.end189
  %125 = load i8*, i8** %rstr, align 4
  call void @sh_xfree(i8* %125, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7512)
  br label %if.end193

if.end193:                                        ; preds = %if.then192, %if.end189
  %126 = load i32, i32* %mflags.addr, align 4
  %and194 = and i32 %126, 16
  %cmp195 = icmp eq i32 %and194, 0
  br i1 %cmp195, label %if.then200, label %lor.lhs.false197

lor.lhs.false197:                                 ; preds = %if.end193
  %127 = load i32, i32* %mtype, align 4
  %cmp198 = icmp ne i32 %127, 0
  br i1 %cmp198, label %if.then200, label %if.end201

if.then200:                                       ; preds = %lor.lhs.false197, %if.end193
  br label %for.end224

if.end201:                                        ; preds = %lor.lhs.false197
  %128 = load i8*, i8** %s, align 4
  %129 = load i8*, i8** %e, align 4
  %cmp202 = icmp eq i8* %128, %129
  br i1 %cmp202, label %if.then204, label %if.end223

if.then204:                                       ; preds = %if.end201
  br label %do.body205

do.body205:                                       ; preds = %if.then204
  %130 = load i32, i32* %rptr, align 4
  %add206 = add nsw i32 %130, 1
  %131 = load i32, i32* %rsize, align 4
  %cmp207 = icmp uge i32 %add206, %131
  br i1 %cmp207, label %if.then209, label %if.end218

if.then209:                                       ; preds = %do.body205
  br label %while.cond210

while.cond210:                                    ; preds = %while.body214, %if.then209
  %132 = load i32, i32* %rptr, align 4
  %add211 = add nsw i32 %132, 1
  %133 = load i32, i32* %rsize, align 4
  %cmp212 = icmp uge i32 %add211, %133
  br i1 %cmp212, label %while.body214, label %while.end216

while.body214:                                    ; preds = %while.cond210
  %134 = load i32, i32* %rsize, align 4
  %add215 = add i32 %134, 64
  store i32 %add215, i32* %rsize, align 4
  br label %while.cond210

while.end216:                                     ; preds = %while.cond210
  %135 = load i8*, i8** %ret, align 4
  %136 = load i32, i32* %rsize, align 4
  %call217 = call i8* @sh_xrealloc(i8* %135, i32 %136, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7521)
  store i8* %call217, i8** %ret, align 4
  br label %if.end218

if.end218:                                        ; preds = %while.end216, %do.body205
  br label %do.end219

do.end219:                                        ; preds = %if.end218
  %137 = load i8*, i8** %str, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %incdec.ptr, i8** %str, align 4
  %138 = load i8, i8* %137, align 1
  %139 = load i8*, i8** %ret, align 4
  %140 = load i32, i32* %rptr, align 4
  %inc220 = add nsw i32 %140, 1
  store i32 %inc220, i32* %rptr, align 4
  %arrayidx221 = getelementptr inbounds i8, i8* %139, i32 %140
  store i8 %138, i8* %arrayidx221, align 1
  %141 = load i8*, i8** %e, align 4
  %incdec.ptr222 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %incdec.ptr222, i8** %e, align 4
  br label %if.end223

if.end223:                                        ; preds = %do.end219, %if.end201
  br label %for.cond

for.end224:                                       ; preds = %if.then200, %if.then144, %for.cond
  %142 = load i8*, i8** %str, align 4
  %tobool225 = icmp ne i8* %142, null
  br i1 %tobool225, label %land.lhs.true226, label %if.else297

land.lhs.true226:                                 ; preds = %for.end224
  %143 = load i8*, i8** %str, align 4
  %144 = load i8, i8* %143, align 1
  %conv227 = sext i8 %144 to i32
  %tobool228 = icmp ne i32 %conv227, 0
  br i1 %tobool228, label %if.then229, label %if.else297

if.then229:                                       ; preds = %land.lhs.true226
  br label %do.body230

do.body230:                                       ; preds = %if.then229
  %145 = load i32, i32* %rptr, align 4
  %146 = load i8*, i8** %str, align 4
  %tobool231 = icmp ne i8* %146, null
  br i1 %tobool231, label %land.lhs.true232, label %cond.false252

land.lhs.true232:                                 ; preds = %do.body230
  %147 = load i8*, i8** %str, align 4
  %arrayidx233 = getelementptr inbounds i8, i8* %147, i32 0
  %148 = load i8, i8* %arrayidx233, align 1
  %conv234 = sext i8 %148 to i32
  %tobool235 = icmp ne i32 %conv234, 0
  br i1 %tobool235, label %cond.true236, label %cond.false252

cond.true236:                                     ; preds = %land.lhs.true232
  %149 = load i8*, i8** %str, align 4
  %arrayidx237 = getelementptr inbounds i8, i8* %149, i32 1
  %150 = load i8, i8* %arrayidx237, align 1
  %conv238 = sext i8 %150 to i32
  %tobool239 = icmp ne i32 %conv238, 0
  br i1 %tobool239, label %cond.true240, label %cond.false249

cond.true240:                                     ; preds = %cond.true236
  %151 = load i8*, i8** %str, align 4
  %arrayidx241 = getelementptr inbounds i8, i8* %151, i32 2
  %152 = load i8, i8* %arrayidx241, align 1
  %conv242 = sext i8 %152 to i32
  %tobool243 = icmp ne i32 %conv242, 0
  br i1 %tobool243, label %cond.true244, label %cond.false246

cond.true244:                                     ; preds = %cond.true240
  %153 = load i8*, i8** %str, align 4
  %call245 = call i32 @strlen(i8* %153)
  br label %cond.end247

cond.false246:                                    ; preds = %cond.true240
  br label %cond.end247

cond.end247:                                      ; preds = %cond.false246, %cond.true244
  %cond248 = phi i32 [ %call245, %cond.true244 ], [ 2, %cond.false246 ]
  br label %cond.end250

cond.false249:                                    ; preds = %cond.true236
  br label %cond.end250

cond.end250:                                      ; preds = %cond.false249, %cond.end247
  %cond251 = phi i32 [ %cond248, %cond.end247 ], [ 1, %cond.false249 ]
  br label %cond.end253

cond.false252:                                    ; preds = %land.lhs.true232, %do.body230
  br label %cond.end253

cond.end253:                                      ; preds = %cond.false252, %cond.end250
  %cond254 = phi i32 [ %cond251, %cond.end250 ], [ 0, %cond.false252 ]
  %add255 = add i32 %cond254, 1
  %add256 = add i32 %145, %add255
  %154 = load i32, i32* %rsize, align 4
  %cmp257 = icmp uge i32 %add256, %154
  br i1 %cmp257, label %if.then259, label %if.end293

if.then259:                                       ; preds = %cond.end253
  br label %while.cond260

while.cond260:                                    ; preds = %while.body289, %if.then259
  %155 = load i32, i32* %rptr, align 4
  %156 = load i8*, i8** %str, align 4
  %tobool261 = icmp ne i8* %156, null
  br i1 %tobool261, label %land.lhs.true262, label %cond.false282

land.lhs.true262:                                 ; preds = %while.cond260
  %157 = load i8*, i8** %str, align 4
  %arrayidx263 = getelementptr inbounds i8, i8* %157, i32 0
  %158 = load i8, i8* %arrayidx263, align 1
  %conv264 = sext i8 %158 to i32
  %tobool265 = icmp ne i32 %conv264, 0
  br i1 %tobool265, label %cond.true266, label %cond.false282

cond.true266:                                     ; preds = %land.lhs.true262
  %159 = load i8*, i8** %str, align 4
  %arrayidx267 = getelementptr inbounds i8, i8* %159, i32 1
  %160 = load i8, i8* %arrayidx267, align 1
  %conv268 = sext i8 %160 to i32
  %tobool269 = icmp ne i32 %conv268, 0
  br i1 %tobool269, label %cond.true270, label %cond.false279

cond.true270:                                     ; preds = %cond.true266
  %161 = load i8*, i8** %str, align 4
  %arrayidx271 = getelementptr inbounds i8, i8* %161, i32 2
  %162 = load i8, i8* %arrayidx271, align 1
  %conv272 = sext i8 %162 to i32
  %tobool273 = icmp ne i32 %conv272, 0
  br i1 %tobool273, label %cond.true274, label %cond.false276

cond.true274:                                     ; preds = %cond.true270
  %163 = load i8*, i8** %str, align 4
  %call275 = call i32 @strlen(i8* %163)
  br label %cond.end277

cond.false276:                                    ; preds = %cond.true270
  br label %cond.end277

cond.end277:                                      ; preds = %cond.false276, %cond.true274
  %cond278 = phi i32 [ %call275, %cond.true274 ], [ 2, %cond.false276 ]
  br label %cond.end280

cond.false279:                                    ; preds = %cond.true266
  br label %cond.end280

cond.end280:                                      ; preds = %cond.false279, %cond.end277
  %cond281 = phi i32 [ %cond278, %cond.end277 ], [ 1, %cond.false279 ]
  br label %cond.end283

cond.false282:                                    ; preds = %land.lhs.true262, %while.cond260
  br label %cond.end283

cond.end283:                                      ; preds = %cond.false282, %cond.end280
  %cond284 = phi i32 [ %cond281, %cond.end280 ], [ 0, %cond.false282 ]
  %add285 = add i32 %cond284, 1
  %add286 = add i32 %155, %add285
  %164 = load i32, i32* %rsize, align 4
  %cmp287 = icmp uge i32 %add286, %164
  br i1 %cmp287, label %while.body289, label %while.end291

while.body289:                                    ; preds = %cond.end283
  %165 = load i32, i32* %rsize, align 4
  %add290 = add i32 %165, 64
  store i32 %add290, i32* %rsize, align 4
  br label %while.cond260

while.end291:                                     ; preds = %cond.end283
  %166 = load i8*, i8** %ret, align 4
  %167 = load i32, i32* %rsize, align 4
  %call292 = call i8* @sh_xrealloc(i8* %166, i32 %167, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7530)
  store i8* %call292, i8** %ret, align 4
  br label %if.end293

if.end293:                                        ; preds = %while.end291, %cond.end253
  br label %do.end294

do.end294:                                        ; preds = %if.end293
  %168 = load i8*, i8** %ret, align 4
  %169 = load i32, i32* %rptr, align 4
  %add.ptr295 = getelementptr inbounds i8, i8* %168, i32 %169
  %170 = load i8*, i8** %str, align 4
  %call296 = call i8* @strcpy(i8* %add.ptr295, i8* %170)
  br label %if.end299

if.else297:                                       ; preds = %land.lhs.true226, %for.end224
  %171 = load i8*, i8** %ret, align 4
  %172 = load i32, i32* %rptr, align 4
  %arrayidx298 = getelementptr inbounds i8, i8* %171, i32 %172
  store i8 0, i8* %arrayidx298, align 1
  br label %if.end299

if.end299:                                        ; preds = %if.else297, %do.end294
  %173 = load i8*, i8** %ret, align 4
  store i8* %173, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end299, %if.end111, %if.end69, %if.then
  %174 = load i8*, i8** %retval, align 4
  ret i8* %174
}

; Function Attrs: noinline nounwind
define internal i32 @match_pattern(i8* %string, i8* %pat, i32 %mtype, i8** %sp, i8** %ep) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %pat.addr = alloca i8*, align 4
  %mtype.addr = alloca i32, align 4
  %sp.addr = alloca i8**, align 4
  %ep.addr = alloca i8**, align 4
  %ret = alloca i32, align 4
  %n = alloca i32, align 4
  %wstring = alloca i32*, align 4
  %wpat = alloca i32*, align 4
  %indices = alloca i8**, align 4
  %slen = alloca i32, align 4
  %plen = alloca i32, align 4
  %mslen = alloca i32, align 4
  %mplen = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %pat, i8** %pat.addr, align 4
  store i32 %mtype, i32* %mtype.addr, align 4
  store i8** %sp, i8*** %sp.addr, align 4
  store i8** %ep, i8*** %ep.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %pat.addr, align 4
  %cmp1 = icmp eq i8* %1, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %pat.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp5 = icmp ugt i32 %call, 1
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %4 = load i8*, i8** %string.addr, align 4
  %call8 = call i8* @mbsmbchar(i8* %4)
  %cmp9 = icmp eq i8* %call8, null
  br i1 %cmp9, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %if.then7
  %5 = load i8*, i8** %pat.addr, align 4
  %call11 = call i8* @mbsmbchar(i8* %5)
  %cmp12 = icmp eq i8* %call11, null
  br i1 %cmp12, label %if.then14, label %if.end16

if.then14:                                        ; preds = %land.lhs.true
  %6 = load i8*, i8** %string.addr, align 4
  %7 = load i8*, i8** %pat.addr, align 4
  %8 = load i32, i32* %mtype.addr, align 4
  %9 = load i8**, i8*** %sp.addr, align 4
  %10 = load i8**, i8*** %ep.addr, align 4
  %call15 = call i32 @match_upattern(i8* %6, i8* %7, i32 %8, i8** %9, i8** %10)
  store i32 %call15, i32* %retval, align 4
  br label %return

if.end16:                                         ; preds = %land.lhs.true, %if.then7
  %11 = load i8*, i8** %pat.addr, align 4
  %call17 = call i32 @xdupmbstowcs(i32** %wpat, i8*** null, i8* %11)
  store i32 %call17, i32* %n, align 4
  %12 = load i32, i32* %n, align 4
  %cmp18 = icmp eq i32 %12, -1
  br i1 %cmp18, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end16
  %13 = load i8*, i8** %string.addr, align 4
  %14 = load i8*, i8** %pat.addr, align 4
  %15 = load i32, i32* %mtype.addr, align 4
  %16 = load i8**, i8*** %sp.addr, align 4
  %17 = load i8**, i8*** %ep.addr, align 4
  %call21 = call i32 @match_upattern(i8* %13, i8* %14, i32 %15, i8** %16, i8** %17)
  store i32 %call21, i32* %retval, align 4
  br label %return

if.end22:                                         ; preds = %if.end16
  %18 = load i8*, i8** %string.addr, align 4
  %call23 = call i32 @xdupmbstowcs(i32** %wstring, i8*** %indices, i8* %18)
  store i32 %call23, i32* %n, align 4
  %19 = load i32, i32* %n, align 4
  %cmp24 = icmp eq i32 %19, -1
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end22
  %20 = load i32*, i32** %wpat, align 4
  %21 = bitcast i32* %20 to i8*
  call void @sh_xfree(i8* %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4789)
  %22 = load i8*, i8** %string.addr, align 4
  %23 = load i8*, i8** %pat.addr, align 4
  %24 = load i32, i32* %mtype.addr, align 4
  %25 = load i8**, i8*** %sp.addr, align 4
  %26 = load i8**, i8*** %ep.addr, align 4
  %call27 = call i32 @match_upattern(i8* %22, i8* %23, i32 %24, i8** %25, i8** %26)
  store i32 %call27, i32* %retval, align 4
  br label %return

if.end28:                                         ; preds = %if.end22
  %27 = load i32*, i32** %wstring, align 4
  %28 = load i8**, i8*** %indices, align 4
  %29 = load i32, i32* %n, align 4
  %30 = load i32*, i32** %wpat, align 4
  %31 = load i32, i32* %mtype.addr, align 4
  %32 = load i8**, i8*** %sp.addr, align 4
  %33 = load i8**, i8*** %ep.addr, align 4
  %call29 = call i32 @match_wpattern(i32* %27, i8** %28, i32 %29, i32* %30, i32 %31, i8** %32, i8** %33)
  store i32 %call29, i32* %ret, align 4
  %34 = load i32*, i32** %wpat, align 4
  %35 = bitcast i32* %34 to i8*
  call void @sh_xfree(i8* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4794)
  %36 = load i32*, i32** %wstring, align 4
  %37 = bitcast i32* %36 to i8*
  call void @sh_xfree(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4795)
  %38 = load i8**, i8*** %indices, align 4
  %39 = bitcast i8** %38 to i8*
  call void @sh_xfree(i8* %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4796)
  %40 = load i32, i32* %ret, align 4
  store i32 %40, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end
  %41 = load i8*, i8** %string.addr, align 4
  %42 = load i8*, i8** %pat.addr, align 4
  %43 = load i32, i32* %mtype.addr, align 4
  %44 = load i8**, i8*** %sp.addr, align 4
  %45 = load i8**, i8*** %ep.addr, align 4
  %call30 = call i32 @match_upattern(i8* %41, i8* %42, i32 %43, i8** %44, i8** %45)
  store i32 %call30, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.end28, %if.then26, %if.then20, %if.then14, %if.then
  %46 = load i32, i32* %retval, align 4
  ret i32 %46
}

declare i8* @strcreplace(i8*, i32, i8*, i32) #1

declare i8* @strncpy(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define void @invalidate_cached_quoted_dollar_at() #0 {
entry:
  %0 = load %struct.word_list*, %struct.word_list** @cached_quoted_dollar_at, align 4
  call void @dispose_words(%struct.word_list* %0)
  store %struct.word_list* null, %struct.word_list** @cached_quoted_dollar_at, align 4
  ret void
}

; Function Attrs: noinline nounwind
define internal i8* @string_extract_single_quoted(i8* %string, i32* %sindex) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %i = alloca i32, align 4
  %slen = alloca i32, align 4
  %t = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp = icmp ugt i32 %call, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32*, i32** %sindex.addr, align 4
  %3 = load i32, i32* %2, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %3
  %call1 = call i32 @strlen(i8* %add.ptr)
  %4 = load i32*, i32** %sindex.addr, align 4
  %5 = load i32, i32* %4, align 4
  %add = add i32 %call1, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %slen, align 4
  %6 = load i32*, i32** %sindex.addr, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %cond.end
  %8 = load i8*, i8** %string.addr, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %10 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %11 = load i8*, i8** %string.addr, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %11, i32 %12
  %13 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %13 to i32
  %cmp4 = icmp ne i32 %conv3, 39
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %do.body

do.body:                                          ; preds = %while.body
  %15 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp6 = icmp sgt i32 %15, 1
  br i1 %cmp6, label %if.then, label %if.else28

if.then:                                          ; preds = %do.body
  %16 = load i8*, i8** %string.addr, align 4
  %17 = load i32, i32* %i, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8, i8* %arrayidx8, align 1
  %call9 = call i32 @is_basic(i8 signext %18)
  store i32 %call9, i32* %_f, align 4
  %19 = load i32, i32* %_f, align 4
  %tobool10 = icmp ne i32 %19, 0
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then
  store i32 1, i32* %mblength, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %20 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %21 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 8, i32 4, i1 false)
  %22 = load i8*, i8** %string.addr, align 4
  %23 = load i32, i32* %i, align 4
  %add.ptr12 = getelementptr inbounds i8, i8* %22, i32 %23
  %24 = load i32, i32* %slen, align 4
  %25 = load i32, i32* %i, align 4
  %sub = sub i32 %24, %25
  %call13 = call i32 @mbrlen(i8* %add.ptr12, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call13, i32* %mblength, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  %26 = load i32, i32* %mblength, align 4
  %cmp14 = icmp eq i32 %26, -2
  br i1 %cmp14, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %27 = load i32, i32* %mblength, align 4
  %cmp16 = icmp eq i32 %27, -1
  br i1 %cmp16, label %if.then18, label %if.else19

if.then18:                                        ; preds = %lor.lhs.false, %if.end
  %28 = bitcast %struct.__mbstate_t* %state to i8*
  %29 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %28, i8* %29, i32 8, i32 4, i1 false)
  %30 = load i32, i32* %i, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end27

if.else19:                                        ; preds = %lor.lhs.false
  %31 = load i32, i32* %mblength, align 4
  %cmp20 = icmp eq i32 %31, 0
  br i1 %cmp20, label %if.then22, label %if.else24

if.then22:                                        ; preds = %if.else19
  %32 = load i32, i32* %i, align 4
  %inc23 = add nsw i32 %32, 1
  store i32 %inc23, i32* %i, align 4
  br label %if.end26

if.else24:                                        ; preds = %if.else19
  %33 = load i32, i32* %mblength, align 4
  %34 = load i32, i32* %i, align 4
  %add25 = add i32 %34, %33
  store i32 %add25, i32* %i, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then18
  br label %if.end30

if.else28:                                        ; preds = %do.body
  %35 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %35, 1
  store i32 %inc29, i32* %i, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.end27
  br label %do.end

do.end:                                           ; preds = %if.end30
  br label %while.cond

while.end:                                        ; preds = %land.end
  %36 = load i8*, i8** %string.addr, align 4
  %37 = load i32*, i32** %sindex.addr, align 4
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %i, align 4
  %call31 = call i8* @substring(i8* %36, i32 %38, i32 %39)
  store i8* %call31, i8** %t, align 4
  %40 = load i8*, i8** %string.addr, align 4
  %41 = load i32, i32* %i, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %40, i32 %41
  %42 = load i8, i8* %arrayidx32, align 1
  %tobool33 = icmp ne i8 %42, 0
  br i1 %tobool33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %while.end
  %43 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %43, 1
  store i32 %inc35, i32* %i, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %while.end
  %44 = load i32, i32* %i, align 4
  %45 = load i32*, i32** %sindex.addr, align 4
  store i32 %44, i32* %45, align 4
  %46 = load i8*, i8** %t, align 4
  ret i8* %46
}

; Function Attrs: noinline nounwind
define void @setifs(%struct.variable* %v) #0 {
entry:
  %v.addr = alloca %struct.variable*, align 4
  %t = alloca i8*, align 4
  %uc = alloca i8, align 1
  %ifs_len = alloca i32, align 4
  store %struct.variable* %v, %struct.variable** %v.addr, align 4
  %0 = load %struct.variable*, %struct.variable** %v.addr, align 4
  store %struct.variable* %0, %struct.variable** @ifs_var, align 4
  %1 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %tobool = icmp ne %struct.variable* %1, null
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %2, i32 0, i32 1
  %3 = load i8*, i8** %value, align 4
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %4 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %value2 = getelementptr inbounds %struct.variable, %struct.variable* %4, i32 0, i32 1
  %5 = load i8*, i8** %value2, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), %cond.false ]
  store i8* %cond, i8** @ifs_value, align 4
  %6 = load %struct.variable*, %struct.variable** @ifs_var, align 4
  %cmp = icmp ne %struct.variable* %6, null
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* @ifs_is_set, align 4
  %7 = load i32, i32* @ifs_is_set, align 4
  %tobool3 = icmp ne i32 %7, 0
  br i1 %tobool3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end
  %8 = load i8*, i8** @ifs_value, align 4
  %9 = load i8, i8* %8, align 1
  %conv4 = sext i8 %9 to i32
  %cmp5 = icmp eq i32 %conv4, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %10 = phi i1 [ false, %cond.end ], [ %cmp5, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  store i32 %land.ext, i32* @ifs_is_null, align 4
  call void @llvm.memset.p0i8.i32(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 0), i8 0, i32 256, i32 1, i1 false)
  %11 = load i8*, i8** @ifs_value, align 4
  store i8* %11, i8** %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %land.end
  %12 = load i8*, i8** %t, align 4
  %tobool7 = icmp ne i8* %12, null
  br i1 %tobool7, label %land.rhs8, label %land.end11

land.rhs8:                                        ; preds = %for.cond
  %13 = load i8*, i8** %t, align 4
  %14 = load i8, i8* %13, align 1
  %conv9 = sext i8 %14 to i32
  %tobool10 = icmp ne i32 %conv9, 0
  br label %land.end11

land.end11:                                       ; preds = %land.rhs8, %for.cond
  %15 = phi i1 [ false, %for.cond ], [ %tobool10, %land.rhs8 ]
  br i1 %15, label %for.body, label %for.end

for.body:                                         ; preds = %land.end11
  %16 = load i8*, i8** %t, align 4
  %17 = load i8, i8* %16, align 1
  store i8 %17, i8* %uc, align 1
  %18 = load i8, i8* %uc, align 1
  %idxprom = zext i8 %18 to i32
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* @ifs_cmap, i32 0, i32 %idxprom
  store i8 1, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end11
  %20 = load i8*, i8** @ifs_value, align 4
  %cmp13 = icmp eq i8* %20, null
  br i1 %cmp13, label %if.then, label %if.else

if.then:                                          ; preds = %for.end
  store i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  store i32 1, i32* @ifs_firstc_len, align 4
  br label %if.end37

if.else:                                          ; preds = %for.end
  %21 = load i8*, i8** @ifs_value, align 4
  %call = call i32 @__ctype_get_mb_cur_max()
  %call15 = call i32 @strnlen(i8* %21, i32 %call)
  store i32 %call15, i32* %ifs_len, align 4
  %call16 = call i32 @__ctype_get_mb_cur_max()
  %cmp17 = icmp ugt i32 %call16, 1
  br i1 %cmp17, label %cond.true19, label %cond.false21

cond.true19:                                      ; preds = %if.else
  %22 = load i8*, i8** @ifs_value, align 4
  %23 = load i32, i32* %ifs_len, align 4
  %call20 = call i32 @mblen(i8* %22, i32 %23)
  br label %cond.end22

cond.false21:                                     ; preds = %if.else
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi i32 [ %call20, %cond.true19 ], [ 1, %cond.false21 ]
  store i32 %cond23, i32* @ifs_firstc_len, align 4
  %24 = load i32, i32* @ifs_firstc_len, align 4
  %cmp24 = icmp eq i32 %24, 1
  br i1 %cmp24, label %if.then34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end22
  %25 = load i32, i32* @ifs_firstc_len, align 4
  %cmp26 = icmp eq i32 %25, 0
  br i1 %cmp26, label %if.then34, label %lor.lhs.false28

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %26 = load i32, i32* @ifs_firstc_len, align 4
  %cmp29 = icmp eq i32 %26, -1
  br i1 %cmp29, label %if.then34, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %lor.lhs.false28
  %27 = load i32, i32* @ifs_firstc_len, align 4
  %cmp32 = icmp eq i32 %27, -2
  br i1 %cmp32, label %if.then34, label %if.else36

if.then34:                                        ; preds = %lor.lhs.false31, %lor.lhs.false28, %lor.lhs.false, %cond.end22
  %28 = load i8*, i8** @ifs_value, align 4
  %arrayidx35 = getelementptr inbounds i8, i8* %28, i32 0
  %29 = load i8, i8* %arrayidx35, align 1
  store i8 %29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  store i8 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 1), align 1
  store i32 1, i32* @ifs_firstc_len, align 4
  br label %if.end

if.else36:                                        ; preds = %lor.lhs.false31
  %30 = load i8*, i8** @ifs_value, align 4
  %31 = load i32, i32* @ifs_firstc_len, align 4
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), i8* %30, i32 %31, i32 1, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else36, %if.then34
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then
  ret void
}

declare i32 @strnlen(i8*, i32) #1

declare i32 @mblen(i8*, i32) #1

; Function Attrs: noinline nounwind
define i8* @getifs() #0 {
entry:
  %0 = load i8*, i8** @ifs_value, align 4
  ret i8* %0
}

; Function Attrs: noinline nounwind
define %struct.word_list* @word_split(%struct.word_desc* %w, i8* %ifs_chars) #0 {
entry:
  %w.addr = alloca %struct.word_desc*, align 4
  %ifs_chars.addr = alloca i8*, align 4
  %result = alloca %struct.word_list*, align 4
  %xifs = alloca i8*, align 4
  store %struct.word_desc* %w, %struct.word_desc** %w.addr, align 4
  store i8* %ifs_chars, i8** %ifs_chars.addr, align 4
  %0 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %tobool = icmp ne %struct.word_desc* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %1, i32 0, i32 1
  %2 = load i32, i32* %flags, align 4
  %and = and i32 %2, 2
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %ifs_chars.addr, align 4
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %4 = load i8*, i8** %ifs_chars.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0), %cond.true ], [ %4, %cond.false ]
  store i8* %cond, i8** %xifs, align 4
  %5 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %5, i32 0, i32 0
  %6 = load i8*, i8** %word, align 4
  %7 = load i8*, i8** %xifs, align 4
  %8 = load %struct.word_desc*, %struct.word_desc** %w.addr, align 4
  %flags2 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %8, i32 0, i32 1
  %9 = load i32, i32* %flags2, align 4
  %and3 = and i32 %9, 2
  %call = call %struct.word_list* @list_string(i8* %6, i8* %7, i32 %and3)
  store %struct.word_list* %call, %struct.word_list** %result, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store %struct.word_list* null, %struct.word_list** %result, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %10 = load %struct.word_list*, %struct.word_list** %result, align 4
  ret %struct.word_list* %10
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_words(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call = call %struct.word_list* @expand_word_list_internal(%struct.word_list* %0, i32 31)
  ret %struct.word_list* %call
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @expand_word_list_internal(%struct.word_list* %list, i32 %eflags) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %list.addr = alloca %struct.word_list*, align 4
  %eflags.addr = alloca i32, align 4
  %new_list = alloca %struct.word_list*, align 4
  %temp_list = alloca %struct.word_list*, align 4
  %tint = alloca i32, align 4
  %savecmd = alloca i8*, align 4
  %assign_func = alloca i32 (%struct.word_desc*, i32)*, align 4
  %is_special_builtin = alloca i32, align 4
  %is_builtin_or_func = alloca i32, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i32 %eflags, i32* %eflags.addr, align 4
  store i32 0, i32* @tempenv_assign_error, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call = call %struct.word_list* @copy_word_list(%struct.word_list* %1)
  store %struct.word_list* %call, %struct.word_list** %new_list, align 4
  store %struct.word_list* %call, %struct.word_list** @garglist, align 4
  %2 = load i32, i32* %eflags.addr, align 4
  %and = and i32 %2, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then1, label %if.end18

if.then1:                                         ; preds = %if.end
  %3 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %call2 = call %struct.word_list* @separate_out_assignments(%struct.word_list* %3)
  store %struct.word_list* %call2, %struct.word_list** %new_list, align 4
  store %struct.word_list* %call2, %struct.word_list** @garglist, align 4
  %4 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %cmp3 = icmp eq %struct.word_list* %4, null
  br i1 %cmp3, label %if.then4, label %if.end17

if.then4:                                         ; preds = %if.then1
  %5 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  %tobool5 = icmp ne %struct.word_list* %5, null
  br i1 %tobool5, label %if.then6, label %if.end16

if.then6:                                         ; preds = %if.then4
  %6 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  store %struct.word_list* %6, %struct.word_list** %temp_list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then6
  %7 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %tobool7 = icmp ne %struct.word_list* %7, null
  br i1 %tobool7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** @this_command_name, align 4
  store i8* %8, i8** %savecmd, align 4
  store i8* null, i8** @this_command_name, align 4
  %9 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 1
  %10 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %call8 = call i32 @do_word_assignment(%struct.word_desc* %10, i32 0)
  store i32 %call8, i32* %tint, align 4
  %11 = load i8*, i8** %savecmd, align 4
  store i8* %11, i8** @this_command_name, align 4
  %12 = load i32, i32* %tint, align 4
  %cmp9 = icmp eq i32 %12, 0
  br i1 %cmp9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %for.body
  store i32 1, i32* @last_command_exit_value, align 4
  %13 = load i32, i32* @interactive_shell, align 4
  %cmp11 = icmp eq i32 %13, 0
  br i1 %cmp11, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then10
  %14 = load i32, i32* @posixly_correct, align 4
  %tobool12 = icmp ne i32 %14, 0
  br i1 %tobool12, label %if.then13, label %if.else

if.then13:                                        ; preds = %land.lhs.true
  call void @exp_jump_to_top_level(i32 1)
  br label %if.end14

if.else:                                          ; preds = %land.lhs.true, %if.then10
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then13
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end15
  %15 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 0
  %16 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %16, %struct.word_list** %temp_list, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  call void @dispose_words(%struct.word_list* %17)
  store %struct.word_list* null, %struct.word_list** @subst_assign_varlist, align 4
  br label %if.end16

if.end16:                                         ; preds = %for.end, %if.then4
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end17:                                         ; preds = %if.then1
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  %18 = load i32, i32* %eflags.addr, align 4
  %and19 = and i32 %18, 2
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %land.lhs.true21, label %if.end27

land.lhs.true21:                                  ; preds = %if.end18
  %19 = load i32, i32* @brace_expansion, align 4
  %tobool22 = icmp ne i32 %19, 0
  br i1 %tobool22, label %land.lhs.true23, label %if.end27

land.lhs.true23:                                  ; preds = %land.lhs.true21
  %20 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool24 = icmp ne %struct.word_list* %20, null
  br i1 %tobool24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %land.lhs.true23
  %21 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %22 = load i32, i32* %eflags.addr, align 4
  %call26 = call %struct.word_list* @brace_expand_word_list(%struct.word_list* %21, i32 %22)
  store %struct.word_list* %call26, %struct.word_list** %new_list, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %land.lhs.true23, %land.lhs.true21, %if.end18
  %23 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %24 = load i32, i32* %eflags.addr, align 4
  %call28 = call %struct.word_list* @shell_expand_word_list(%struct.word_list* %23, i32 %24)
  store %struct.word_list* %call28, %struct.word_list** %new_list, align 4
  %25 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool29 = icmp ne %struct.word_list* %25, null
  br i1 %tobool29, label %if.then30, label %if.end40

if.then30:                                        ; preds = %if.end27
  %26 = load i32, i32* %eflags.addr, align 4
  %and31 = and i32 %26, 16
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else37

land.lhs.true33:                                  ; preds = %if.then30
  %27 = load i32, i32* @disallow_filename_globbing, align 4
  %cmp34 = icmp eq i32 %27, 0
  br i1 %cmp34, label %if.then35, label %if.else37

if.then35:                                        ; preds = %land.lhs.true33
  %28 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %29 = load i32, i32* %eflags.addr, align 4
  %call36 = call %struct.word_list* @glob_expand_word_list(%struct.word_list* %28, i32 %29)
  store %struct.word_list* %call36, %struct.word_list** %new_list, align 4
  br label %if.end39

if.else37:                                        ; preds = %land.lhs.true33, %if.then30
  %30 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %call38 = call %struct.word_list* @dequote_list(%struct.word_list* %30)
  store %struct.word_list* %call38, %struct.word_list** %new_list, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then35
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end27
  %31 = load i32, i32* %eflags.addr, align 4
  %and41 = and i32 %31, 1
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %land.lhs.true43, label %if.end99

land.lhs.true43:                                  ; preds = %if.end40
  %32 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  %tobool44 = icmp ne %struct.word_list* %32, null
  br i1 %tobool44, label %if.then45, label %if.end99

if.then45:                                        ; preds = %land.lhs.true43
  %33 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool46 = icmp ne %struct.word_list* %33, null
  %cond = select i1 %tobool46, i32 (%struct.word_desc*, i32)* @assign_in_env, i32 (%struct.word_desc*, i32)* @do_word_assignment
  store i32 (%struct.word_desc*, i32)* %cond, i32 (%struct.word_desc*, i32)** %assign_func, align 4
  store i32 0, i32* @tempenv_assign_error, align 4
  %34 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool47 = icmp ne %struct.word_list* %34, null
  br i1 %tobool47, label %land.lhs.true48, label %land.end

land.lhs.true48:                                  ; preds = %if.then45
  %35 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %word49 = getelementptr inbounds %struct.word_list, %struct.word_list* %35, i32 0, i32 1
  %36 = load %struct.word_desc*, %struct.word_desc** %word49, align 4
  %tobool50 = icmp ne %struct.word_desc* %36, null
  br i1 %tobool50, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true48
  %37 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %word51 = getelementptr inbounds %struct.word_list, %struct.word_list* %37, i32 0, i32 1
  %38 = load %struct.word_desc*, %struct.word_desc** %word51, align 4
  %word52 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %38, i32 0, i32 0
  %39 = load i8*, i8** %word52, align 4
  %call53 = call i32 (%struct.word_list*)* @find_shell_builtin(i8* %39)
  %tobool54 = icmp ne i32 (%struct.word_list*)* %call53, null
  br i1 %tobool54, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %40 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %word55 = getelementptr inbounds %struct.word_list, %struct.word_list* %40, i32 0, i32 1
  %41 = load %struct.word_desc*, %struct.word_desc** %word55, align 4
  %word56 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %41, i32 0, i32 0
  %42 = load i8*, i8** %word56, align 4
  %call57 = call %struct.variable* @find_function(i8* %42)
  %tobool58 = icmp ne %struct.variable* %call57, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %43 = phi i1 [ true, %land.rhs ], [ %tobool58, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true48, %if.then45
  %44 = phi i1 [ false, %land.lhs.true48 ], [ false, %if.then45 ], [ %43, %lor.end ]
  %land.ext = zext i1 %44 to i32
  store i32 %land.ext, i32* %is_builtin_or_func, align 4
  %45 = load i32, i32* @posixly_correct, align 4
  %tobool59 = icmp ne i32 %45, 0
  br i1 %tobool59, label %land.lhs.true60, label %land.end70

land.lhs.true60:                                  ; preds = %land.end
  %46 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool61 = icmp ne %struct.word_list* %46, null
  br i1 %tobool61, label %land.lhs.true62, label %land.end70

land.lhs.true62:                                  ; preds = %land.lhs.true60
  %47 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %word63 = getelementptr inbounds %struct.word_list, %struct.word_list* %47, i32 0, i32 1
  %48 = load %struct.word_desc*, %struct.word_desc** %word63, align 4
  %tobool64 = icmp ne %struct.word_desc* %48, null
  br i1 %tobool64, label %land.rhs65, label %land.end70

land.rhs65:                                       ; preds = %land.lhs.true62
  %49 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %word66 = getelementptr inbounds %struct.word_list, %struct.word_list* %49, i32 0, i32 1
  %50 = load %struct.word_desc*, %struct.word_desc** %word66, align 4
  %word67 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %50, i32 0, i32 0
  %51 = load i8*, i8** %word67, align 4
  %call68 = call i32 (%struct.word_list*)* @find_special_builtin(i8* %51)
  %tobool69 = icmp ne i32 (%struct.word_list*)* %call68, null
  br label %land.end70

land.end70:                                       ; preds = %land.rhs65, %land.lhs.true62, %land.lhs.true60, %land.end
  %52 = phi i1 [ false, %land.lhs.true62 ], [ false, %land.lhs.true60 ], [ false, %land.end ], [ %tobool69, %land.rhs65 ]
  %land.ext71 = zext i1 %52 to i32
  store i32 %land.ext71, i32* %is_special_builtin, align 4
  %53 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  store %struct.word_list* %53, %struct.word_list** %temp_list, align 4
  br label %for.cond72

for.cond72:                                       ; preds = %for.inc96, %land.end70
  %54 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %tobool73 = icmp ne %struct.word_list* %54, null
  br i1 %tobool73, label %for.body74, label %for.end98

for.body74:                                       ; preds = %for.cond72
  %55 = load i8*, i8** @this_command_name, align 4
  store i8* %55, i8** %savecmd, align 4
  store i8* null, i8** @this_command_name, align 4
  %56 = load i32 (%struct.word_desc*, i32)*, i32 (%struct.word_desc*, i32)** %assign_func, align 4
  %cmp75 = icmp eq i32 (%struct.word_desc*, i32)* %56, @assign_in_env
  %conv = zext i1 %cmp75 to i32
  store i32 %conv, i32* @assigning_in_environment, align 4
  %57 = load i32 (%struct.word_desc*, i32)*, i32 (%struct.word_desc*, i32)** %assign_func, align 4
  %58 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %word76 = getelementptr inbounds %struct.word_list, %struct.word_list* %58, i32 0, i32 1
  %59 = load %struct.word_desc*, %struct.word_desc** %word76, align 4
  %60 = load i32, i32* %is_builtin_or_func, align 4
  %call77 = call i32 %57(%struct.word_desc* %59, i32 %60)
  store i32 %call77, i32* %tint, align 4
  store i32 0, i32* @assigning_in_environment, align 4
  %61 = load i8*, i8** %savecmd, align 4
  store i8* %61, i8** @this_command_name, align 4
  %62 = load i32, i32* %tint, align 4
  %cmp78 = icmp eq i32 %62, 0
  br i1 %cmp78, label %if.then80, label %if.end95

if.then80:                                        ; preds = %for.body74
  %63 = load i32 (%struct.word_desc*, i32)*, i32 (%struct.word_desc*, i32)** %assign_func, align 4
  %cmp81 = icmp eq i32 (%struct.word_desc*, i32)* %63, @do_word_assignment
  br i1 %cmp81, label %if.then83, label %if.else93

if.then83:                                        ; preds = %if.then80
  store i32 1, i32* @last_command_exit_value, align 4
  %64 = load i32, i32* @interactive_shell, align 4
  %cmp84 = icmp eq i32 %64, 0
  br i1 %cmp84, label %land.lhs.true86, label %if.else91

land.lhs.true86:                                  ; preds = %if.then83
  %65 = load i32, i32* @posixly_correct, align 4
  %tobool87 = icmp ne i32 %65, 0
  br i1 %tobool87, label %land.lhs.true88, label %if.else91

land.lhs.true88:                                  ; preds = %land.lhs.true86
  %66 = load i32, i32* %is_special_builtin, align 4
  %tobool89 = icmp ne i32 %66, 0
  br i1 %tobool89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %land.lhs.true88
  call void @exp_jump_to_top_level(i32 1)
  br label %if.end92

if.else91:                                        ; preds = %land.lhs.true88, %land.lhs.true86, %if.then83
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end94

if.else93:                                        ; preds = %if.then80
  %67 = load i32, i32* @tempenv_assign_error, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* @tempenv_assign_error, align 4
  br label %if.end94

if.end94:                                         ; preds = %if.else93, %if.end92
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %for.body74
  br label %for.inc96

for.inc96:                                        ; preds = %if.end95
  %68 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %next97 = getelementptr inbounds %struct.word_list, %struct.word_list* %68, i32 0, i32 0
  %69 = load %struct.word_list*, %struct.word_list** %next97, align 4
  store %struct.word_list* %69, %struct.word_list** %temp_list, align 4
  br label %for.cond72

for.end98:                                        ; preds = %for.cond72
  %70 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  call void @dispose_words(%struct.word_list* %70)
  store %struct.word_list* null, %struct.word_list** @subst_assign_varlist, align 4
  br label %if.end99

if.end99:                                         ; preds = %for.end98, %land.lhs.true43, %if.end40
  %71 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  store %struct.word_list* %71, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end99, %if.end16, %if.then
  %72 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %72
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_words_no_vars(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call = call %struct.word_list* @expand_word_list_internal(%struct.word_list* %0, i32 30)
  ret %struct.word_list* %call
}

; Function Attrs: noinline nounwind
define %struct.word_list* @expand_words_shellexp(%struct.word_list* %list) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %call = call %struct.word_list* @expand_word_list_internal(%struct.word_list* %0, i32 14)
  ret %struct.word_list* %call
}

; Function Attrs: noinline nounwind
define internal i8* @string_extract(i8* %string, i32* %sindex, i8* %charlist, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %charlist.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %i = alloca i32, align 4
  %found = alloca i32, align 4
  %slen = alloca i32, align 4
  %temp = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %ni = alloca i32, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i8* %charlist, i8** %charlist.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp = icmp ugt i32 %call, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32*, i32** %sindex.addr, align 4
  %3 = load i32, i32* %2, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %3
  %call1 = call i32 @strlen(i8* %add.ptr)
  %4 = load i32*, i32** %sindex.addr, align 4
  %5 = load i32, i32* %4, align 4
  %add = add i32 %call1, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %slen, align 4
  %6 = load i32*, i32** %sindex.addr, align 4
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %i, align 4
  store i32 0, i32* %found, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %cond.end
  %8 = load i8*, i8** %string.addr, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %10 to i32
  store i32 %conv, i32* %c, align 4
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %c, align 4
  %cmp2 = icmp eq i32 %11, 92
  br i1 %cmp2, label %if.then, label %if.else8

if.then:                                          ; preds = %while.body
  %12 = load i8*, i8** %string.addr, align 4
  %13 = load i32, i32* %i, align 4
  %add4 = add nsw i32 %13, 1
  %arrayidx5 = getelementptr inbounds i8, i8* %12, i32 %add4
  %14 = load i8, i8* %arrayidx5, align 1
  %tobool6 = icmp ne i8 %14, 0
  br i1 %tobool6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  br label %while.end

if.end:                                           ; preds = %if.then7
  br label %if.end39

if.else8:                                         ; preds = %while.body
  %16 = load i32, i32* %flags.addr, align 4
  %and = and i32 %16, 2
  %tobool9 = icmp ne i32 %and, 0
  br i1 %tobool9, label %land.lhs.true, label %if.else20

land.lhs.true:                                    ; preds = %if.else8
  %17 = load i32, i32* %c, align 4
  %cmp10 = icmp eq i32 %17, 91
  br i1 %cmp10, label %if.then12, label %if.else20

if.then12:                                        ; preds = %land.lhs.true
  %18 = load i8*, i8** %string.addr, align 4
  %19 = load i32, i32* %i, align 4
  %call13 = call i32 @skipsubscript(i8* %18, i32 %19, i32 0)
  store i32 %call13, i32* %ni, align 4
  %20 = load i8*, i8** %string.addr, align 4
  %21 = load i32, i32* %ni, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %22 to i32
  %cmp16 = icmp eq i32 %conv15, 93
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then12
  %23 = load i32, i32* %ni, align 4
  store i32 %23, i32* %i, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then12
  br label %if.end38

if.else20:                                        ; preds = %land.lhs.true, %if.else8
  %24 = load i32, i32* %c, align 4
  %tobool21 = icmp ne i32 %24, 0
  br i1 %tobool21, label %land.lhs.true22, label %lor.lhs.false

land.lhs.true22:                                  ; preds = %if.else20
  %25 = load i32, i32* %c, align 4
  %26 = load i8*, i8** %charlist.addr, align 4
  %arrayidx23 = getelementptr inbounds i8, i8* %26, i32 0
  %27 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %27 to i32
  %cmp25 = icmp eq i32 %25, %conv24
  br i1 %cmp25, label %land.lhs.true27, label %lor.lhs.false

land.lhs.true27:                                  ; preds = %land.lhs.true22
  %28 = load i8*, i8** %charlist.addr, align 4
  %arrayidx28 = getelementptr inbounds i8, i8* %28, i32 1
  %29 = load i8, i8* %arrayidx28, align 1
  %tobool29 = icmp ne i8 %29, 0
  br i1 %tobool29, label %lor.lhs.false, label %if.then36

lor.lhs.false:                                    ; preds = %land.lhs.true27, %land.lhs.true22, %if.else20
  %30 = load i32, i32* %c, align 4
  %tobool30 = icmp ne i32 %30, 0
  br i1 %tobool30, label %cond.true31, label %cond.false35

cond.true31:                                      ; preds = %lor.lhs.false
  %31 = load i8*, i8** %charlist.addr, align 4
  %32 = load i32, i32* %c, align 4
  %call32 = call i8* @mbschr(i8* %31, i32 %32)
  %cmp33 = icmp ne i8* %call32, null
  br i1 %cmp33, label %if.then36, label %if.end37

cond.false35:                                     ; preds = %lor.lhs.false
  br i1 false, label %if.then36, label %if.end37

if.then36:                                        ; preds = %cond.false35, %cond.true31, %land.lhs.true27
  store i32 1, i32* %found, align 4
  br label %while.end

if.end37:                                         ; preds = %cond.false35, %cond.true31
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end19
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  br label %do.body

do.body:                                          ; preds = %if.end39
  %33 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp40 = icmp sgt i32 %33, 1
  br i1 %cmp40, label %if.then42, label %if.else67

if.then42:                                        ; preds = %do.body
  %34 = load i8*, i8** %string.addr, align 4
  %35 = load i32, i32* %i, align 4
  %arrayidx43 = getelementptr inbounds i8, i8* %34, i32 %35
  %36 = load i8, i8* %arrayidx43, align 1
  %call44 = call i32 @is_basic(i8 signext %36)
  store i32 %call44, i32* %_f, align 4
  %37 = load i32, i32* %_f, align 4
  %tobool45 = icmp ne i32 %37, 0
  br i1 %tobool45, label %if.then46, label %if.else47

if.then46:                                        ; preds = %if.then42
  store i32 1, i32* %mblength, align 4
  br label %if.end50

if.else47:                                        ; preds = %if.then42
  %38 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %39 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %38, i8* %39, i32 8, i32 4, i1 false)
  %40 = load i8*, i8** %string.addr, align 4
  %41 = load i32, i32* %i, align 4
  %add.ptr48 = getelementptr inbounds i8, i8* %40, i32 %41
  %42 = load i32, i32* %slen, align 4
  %43 = load i32, i32* %i, align 4
  %sub = sub i32 %42, %43
  %call49 = call i32 @mbrlen(i8* %add.ptr48, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call49, i32* %mblength, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.else47, %if.then46
  %44 = load i32, i32* %mblength, align 4
  %cmp51 = icmp eq i32 %44, -2
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %if.end50
  %45 = load i32, i32* %mblength, align 4
  %cmp54 = icmp eq i32 %45, -1
  br i1 %cmp54, label %if.then56, label %if.else58

if.then56:                                        ; preds = %lor.lhs.false53, %if.end50
  %46 = bitcast %struct.__mbstate_t* %state to i8*
  %47 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %46, i8* %47, i32 8, i32 4, i1 false)
  %48 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %48, 1
  store i32 %inc57, i32* %i, align 4
  br label %if.end66

if.else58:                                        ; preds = %lor.lhs.false53
  %49 = load i32, i32* %mblength, align 4
  %cmp59 = icmp eq i32 %49, 0
  br i1 %cmp59, label %if.then61, label %if.else63

if.then61:                                        ; preds = %if.else58
  %50 = load i32, i32* %i, align 4
  %inc62 = add nsw i32 %50, 1
  store i32 %inc62, i32* %i, align 4
  br label %if.end65

if.else63:                                        ; preds = %if.else58
  %51 = load i32, i32* %mblength, align 4
  %52 = load i32, i32* %i, align 4
  %add64 = add i32 %52, %51
  store i32 %add64, i32* %i, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then56
  br label %if.end69

if.else67:                                        ; preds = %do.body
  %53 = load i32, i32* %i, align 4
  %inc68 = add nsw i32 %53, 1
  store i32 %inc68, i32* %i, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %if.end66
  br label %do.end

do.end:                                           ; preds = %if.end69
  br label %while.cond

while.end:                                        ; preds = %if.then36, %if.else, %while.cond
  %54 = load i32, i32* %flags.addr, align 4
  %and70 = and i32 %54, 4
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %land.lhs.true72, label %if.end76

land.lhs.true72:                                  ; preds = %while.end
  %55 = load i32, i32* %found, align 4
  %cmp73 = icmp eq i32 %55, 0
  br i1 %cmp73, label %if.then75, label %if.end76

if.then75:                                        ; preds = %land.lhs.true72
  %56 = load i32, i32* %i, align 4
  %57 = load i32*, i32** %sindex.addr, align 4
  store i32 %56, i32* %57, align 4
  store i8* @extract_string_error, i8** %retval, align 4
  br label %return

if.end76:                                         ; preds = %land.lhs.true72, %while.end
  %58 = load i32, i32* %flags.addr, align 4
  %and77 = and i32 %58, 1
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %cond.true79, label %cond.false80

cond.true79:                                      ; preds = %if.end76
  br label %cond.end82

cond.false80:                                     ; preds = %if.end76
  %59 = load i8*, i8** %string.addr, align 4
  %60 = load i32*, i32** %sindex.addr, align 4
  %61 = load i32, i32* %60, align 4
  %62 = load i32, i32* %i, align 4
  %call81 = call i8* @substring(i8* %59, i32 %61, i32 %62)
  br label %cond.end82

cond.end82:                                       ; preds = %cond.false80, %cond.true79
  %cond83 = phi i8* [ null, %cond.true79 ], [ %call81, %cond.false80 ]
  store i8* %cond83, i8** %temp, align 4
  %63 = load i32, i32* %i, align 4
  %64 = load i32*, i32** %sindex.addr, align 4
  store i32 %63, i32* %64, align 4
  %65 = load i8*, i8** %temp, align 4
  store i8* %65, i8** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end82, %if.then75
  %66 = load i8*, i8** %retval, align 4
  ret i8* %66
}

declare void @report_error(i8*, ...) #1

; Function Attrs: noinline nounwind
define internal void @exp_jump_to_top_level(i32 %v) #0 {
entry:
  %v.addr = alloca i32, align 4
  store i32 %v, i32* %v.addr, align 4
  %0 = load i32, i32* @last_command_exit_value, align 4
  call void @set_pipestatus_from_exit(i32 %0)
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  store i32 0, i32* @expanding_redir, align 4
  store i32 0, i32* @assigning_in_environment, align 4
  %1 = load i32, i32* @parse_and_execute_level, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @top_level_cleanup()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %v.addr, align 4
  call void @jump_to_top_level(i32 %2) #7
  unreachable

return:                                           ; No predecessors!
  ret void
}

declare void @set_pipestatus_from_exit(i32) #1

declare void @top_level_cleanup() #1

declare i32 @mbtowc(i32*, i8*, i32) #1

declare i32 @mbstowcs(i32*, i8*, i32) #1

declare i32* @wcschr(i32*, i32) #1

declare i32 @assignment(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @expand_string_if_necessary(i8* %string, i32 %quoted, %struct.word_list* (i8*, i32)* %func) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %func.addr = alloca %struct.word_list* (i8*, i32)*, align 4
  %list = alloca %struct.word_list*, align 4
  %slen = alloca i32, align 4
  %i = alloca i32, align 4
  %saw_quote = alloca i32, align 4
  %ret = alloca i8*, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store %struct.word_list* (i8*, i32)* %func, %struct.word_list* (i8*, i32)** %func.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp = icmp ugt i32 %call, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %call1 = call i32 @strlen(i8* %1)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %slen, align 4
  store i32 0, i32* %saw_quote, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %cond.end
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %3
  %4 = load i8, i8* %arrayidx, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %string.addr, align 4
  %6 = load i32, i32* %i, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i32 %6
  %7 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %7 to i32
  %cmp3 = icmp eq i32 %conv, 36
  br i1 %cmp3, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %8 = load i8*, i8** %string.addr, align 4
  %9 = load i32, i32* %i, align 4
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i32 %9
  %10 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %10 to i32
  %cmp7 = icmp eq i32 %conv6, 96
  br i1 %cmp7, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %11 = load i8*, i8** %string.addr, align 4
  %12 = load i32, i32* %i, align 4
  %arrayidx10 = getelementptr inbounds i8, i8* %11, i32 %12
  %13 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %13 to i32
  %cmp12 = icmp eq i32 %conv11, 60
  br i1 %cmp12, label %if.then, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %14 = load i8*, i8** %string.addr, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx15 = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx15, align 1
  %conv16 = sext i8 %16 to i32
  %cmp17 = icmp eq i32 %conv16, 62
  br i1 %cmp17, label %if.then, label %lor.lhs.false19

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %17 = load i8*, i8** %string.addr, align 4
  %18 = load i32, i32* %i, align 4
  %arrayidx20 = getelementptr inbounds i8, i8* %17, i32 %18
  %19 = load i8, i8* %arrayidx20, align 1
  %conv21 = sext i8 %19 to i32
  %cmp22 = icmp eq i32 %conv21, 1
  br i1 %cmp22, label %if.then, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false19
  %20 = load i8*, i8** %string.addr, align 4
  %21 = load i32, i32* %i, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %20, i32 %21
  %22 = load i8, i8* %arrayidx25, align 1
  %conv26 = sext i8 %22 to i32
  %cmp27 = icmp eq i32 %conv26, 126
  br i1 %cmp27, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false24, %lor.lhs.false19, %lor.lhs.false14, %lor.lhs.false9, %lor.lhs.false, %while.body
  br label %while.end

if.else:                                          ; preds = %lor.lhs.false24
  %23 = load i8*, i8** %string.addr, align 4
  %24 = load i32, i32* %i, align 4
  %arrayidx29 = getelementptr inbounds i8, i8* %23, i32 %24
  %25 = load i8, i8* %arrayidx29, align 1
  %conv30 = sext i8 %25 to i32
  %cmp31 = icmp eq i32 %conv30, 39
  br i1 %cmp31, label %if.then43, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %if.else
  %26 = load i8*, i8** %string.addr, align 4
  %27 = load i32, i32* %i, align 4
  %arrayidx34 = getelementptr inbounds i8, i8* %26, i32 %27
  %28 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %28 to i32
  %cmp36 = icmp eq i32 %conv35, 92
  br i1 %cmp36, label %if.then43, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %29 = load i8*, i8** %string.addr, align 4
  %30 = load i32, i32* %i, align 4
  %arrayidx39 = getelementptr inbounds i8, i8* %29, i32 %30
  %31 = load i8, i8* %arrayidx39, align 1
  %conv40 = sext i8 %31 to i32
  %cmp41 = icmp eq i32 %conv40, 34
  br i1 %cmp41, label %if.then43, label %if.end

if.then43:                                        ; preds = %lor.lhs.false38, %lor.lhs.false33, %if.else
  store i32 1, i32* %saw_quote, align 4
  br label %if.end

if.end:                                           ; preds = %if.then43, %lor.lhs.false38
  br label %if.end44

if.end44:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end44
  %32 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp45 = icmp sgt i32 %32, 1
  br i1 %cmp45, label %if.then47, label %if.else69

if.then47:                                        ; preds = %do.body
  %33 = load i8*, i8** %string.addr, align 4
  %34 = load i32, i32* %i, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %33, i32 %34
  %35 = load i8, i8* %arrayidx48, align 1
  %call49 = call i32 @is_basic(i8 signext %35)
  store i32 %call49, i32* %_f, align 4
  %36 = load i32, i32* %_f, align 4
  %tobool50 = icmp ne i32 %36, 0
  br i1 %tobool50, label %if.then51, label %if.else52

if.then51:                                        ; preds = %if.then47
  store i32 1, i32* %mblength, align 4
  br label %if.end54

if.else52:                                        ; preds = %if.then47
  %37 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %38 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %37, i8* %38, i32 8, i32 4, i1 false)
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i32, i32* %slen, align 4
  %42 = load i32, i32* %i, align 4
  %sub = sub i32 %41, %42
  %call53 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call53, i32* %mblength, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then51
  %43 = load i32, i32* %mblength, align 4
  %cmp55 = icmp eq i32 %43, -2
  br i1 %cmp55, label %if.then60, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %if.end54
  %44 = load i32, i32* %mblength, align 4
  %cmp58 = icmp eq i32 %44, -1
  br i1 %cmp58, label %if.then60, label %if.else61

if.then60:                                        ; preds = %lor.lhs.false57, %if.end54
  %45 = bitcast %struct.__mbstate_t* %state to i8*
  %46 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 8, i32 4, i1 false)
  %47 = load i32, i32* %i, align 4
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end68

if.else61:                                        ; preds = %lor.lhs.false57
  %48 = load i32, i32* %mblength, align 4
  %cmp62 = icmp eq i32 %48, 0
  br i1 %cmp62, label %if.then64, label %if.else66

if.then64:                                        ; preds = %if.else61
  %49 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %49, 1
  store i32 %inc65, i32* %i, align 4
  br label %if.end67

if.else66:                                        ; preds = %if.else61
  %50 = load i32, i32* %mblength, align 4
  %51 = load i32, i32* %i, align 4
  %add = add i32 %51, %50
  store i32 %add, i32* %i, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then64
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then60
  br label %if.end71

if.else69:                                        ; preds = %do.body
  %52 = load i32, i32* %i, align 4
  %inc70 = add nsw i32 %52, 1
  store i32 %inc70, i32* %i, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.end68
  br label %do.end

do.end:                                           ; preds = %if.end71
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  %53 = load i8*, i8** %string.addr, align 4
  %54 = load i32, i32* %i, align 4
  %arrayidx72 = getelementptr inbounds i8, i8* %53, i32 %54
  %55 = load i8, i8* %arrayidx72, align 1
  %tobool73 = icmp ne i8 %55, 0
  br i1 %tobool73, label %if.then74, label %if.else81

if.then74:                                        ; preds = %while.end
  %56 = load %struct.word_list* (i8*, i32)*, %struct.word_list* (i8*, i32)** %func.addr, align 4
  %57 = load i8*, i8** %string.addr, align 4
  %58 = load i32, i32* %quoted.addr, align 4
  %call75 = call %struct.word_list* %56(i8* %57, i32 %58)
  store %struct.word_list* %call75, %struct.word_list** %list, align 4
  %59 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool76 = icmp ne %struct.word_list* %59, null
  br i1 %tobool76, label %if.then77, label %if.else79

if.then77:                                        ; preds = %if.then74
  %60 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call78 = call i8* @string_list(%struct.word_list* %60)
  store i8* %call78, i8** %ret, align 4
  %61 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %61)
  br label %if.end80

if.else79:                                        ; preds = %if.then74
  store i8* null, i8** %ret, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then77
  br label %if.end93

if.else81:                                        ; preds = %while.end
  %62 = load i32, i32* %saw_quote, align 4
  %tobool82 = icmp ne i32 %62, 0
  br i1 %tobool82, label %land.lhs.true, label %if.else87

land.lhs.true:                                    ; preds = %if.else81
  %63 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %63, 3
  %cmp83 = icmp eq i32 %and, 0
  br i1 %cmp83, label %if.then85, label %if.else87

if.then85:                                        ; preds = %land.lhs.true
  %64 = load i8*, i8** %string.addr, align 4
  %65 = load i32, i32* %quoted.addr, align 4
  %call86 = call i8* @string_quote_removal(i8* %64, i32 %65)
  store i8* %call86, i8** %ret, align 4
  br label %if.end92

if.else87:                                        ; preds = %land.lhs.true, %if.else81
  %66 = load i8*, i8** %string.addr, align 4
  %call88 = call i32 @strlen(i8* %66)
  %add89 = add i32 1, %call88
  %call90 = call i8* @sh_xmalloc(i32 %add89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 3416)
  %67 = load i8*, i8** %string.addr, align 4
  %call91 = call i8* @strcpy(i8* %call90, i8* %67)
  store i8* %call91, i8** %ret, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else87, %if.then85
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end80
  %68 = load i8*, i8** %ret, align 4
  ret i8* %68
}

declare void @xtrace_print_assignment(i8*, i8*, i32, i32) #1

declare %struct.variable* @assign_array_element(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define internal %struct.variable* @do_compound_assignment(i8* %name, i8* %value, i32 %flags) #0 {
entry:
  %retval = alloca %struct.variable*, align 4
  %name.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %flags.addr = alloca i32, align 4
  %v = alloca %struct.variable*, align 4
  %mklocal = alloca i32, align 4
  %mkassoc = alloca i32, align 4
  %mkglobal = alloca i32, align 4
  %list = alloca %struct.word_list*, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i32, i32* %flags.addr, align 4
  %and = and i32 %0, 2
  store i32 %and, i32* %mklocal, align 4
  %1 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %1, 4
  store i32 %and1, i32* %mkassoc, align 4
  %2 = load i32, i32* %flags.addr, align 4
  %and2 = and i32 %2, 8
  store i32 %and2, i32* %mkglobal, align 4
  %3 = load i32, i32* %mklocal, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %land.lhs.true, label %if.else46

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* @variable_context, align 4
  %tobool3 = icmp ne i32 %4, 0
  br i1 %tobool3, label %if.then, label %if.else46

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** %name.addr, align 4
  %call = call %struct.variable* @find_variable(i8* %5)
  store %struct.variable* %call, %struct.variable** %v, align 4
  %6 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool4 = icmp ne %struct.variable* %6, null
  br i1 %tobool4, label %land.lhs.true5, label %if.end20

land.lhs.true5:                                   ; preds = %if.then
  %7 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %7, i32 0, i32 5
  %8 = load i32, i32* %attributes, align 4
  %and6 = and i32 %8, 2
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %land.lhs.true8, label %lor.lhs.false

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %9 = load i32, i32* %flags.addr, align 4
  %and9 = and i32 %9, 32
  %cmp = icmp eq i32 %and9, 0
  br i1 %cmp, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true5
  %10 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes10 = getelementptr inbounds %struct.variable, %struct.variable* %10, i32 0, i32 5
  %11 = load i32, i32* %attributes10, align 4
  %and11 = and i32 %11, 16384
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end20

if.then13:                                        ; preds = %lor.lhs.false, %land.lhs.true8
  %12 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool14 = icmp ne %struct.variable* %12, null
  br i1 %tobool14, label %land.lhs.true15, label %if.end

land.lhs.true15:                                  ; preds = %if.then13
  %13 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes16 = getelementptr inbounds %struct.variable, %struct.variable* %13, i32 0, i32 5
  %14 = load i32, i32* %attributes16, align 4
  %and17 = and i32 %14, 2
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %if.then19, label %if.end

if.then19:                                        ; preds = %land.lhs.true15
  %15 = load i8*, i8** %name.addr, align 4
  call void @err_readonly(i8* %15)
  br label %if.end

if.end:                                           ; preds = %if.then19, %land.lhs.true15, %if.then13
  %16 = load %struct.variable*, %struct.variable** %v, align 4
  store %struct.variable* %16, %struct.variable** %retval, align 4
  br label %return

if.end20:                                         ; preds = %lor.lhs.false, %if.then
  %17 = load %struct.variable*, %struct.variable** %v, align 4
  %18 = load i8*, i8** %value.addr, align 4
  %19 = load i32, i32* %flags.addr, align 4
  %call21 = call %struct.word_list* @expand_compound_array_assignment(%struct.variable* %17, i8* %18, i32 %19)
  store %struct.word_list* %call21, %struct.word_list** %list, align 4
  %20 = load i32, i32* %mkassoc, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end20
  %21 = load i8*, i8** %name.addr, align 4
  %call24 = call %struct.variable* @make_local_assoc_variable(i8* %21)
  store %struct.variable* %call24, %struct.variable** %v, align 4
  br label %if.end39

if.else:                                          ; preds = %if.end20
  %22 = load %struct.variable*, %struct.variable** %v, align 4
  %cmp25 = icmp eq %struct.variable* %22, null
  br i1 %cmp25, label %if.then36, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %if.else
  %23 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes27 = getelementptr inbounds %struct.variable, %struct.variable* %23, i32 0, i32 5
  %24 = load i32, i32* %attributes27, align 4
  %and28 = and i32 %24, 4
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %land.lhs.true30, label %lor.lhs.false34

land.lhs.true30:                                  ; preds = %lor.lhs.false26
  %25 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes31 = getelementptr inbounds %struct.variable, %struct.variable* %25, i32 0, i32 5
  %26 = load i32, i32* %attributes31, align 4
  %and32 = and i32 %26, 64
  %cmp33 = icmp eq i32 %and32, 0
  br i1 %cmp33, label %if.then36, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %land.lhs.true30, %lor.lhs.false26
  %27 = load %struct.variable*, %struct.variable** %v, align 4
  %context = getelementptr inbounds %struct.variable, %struct.variable* %27, i32 0, i32 6
  %28 = load i32, i32* %context, align 4
  %29 = load i32, i32* @variable_context, align 4
  %cmp35 = icmp ne i32 %28, %29
  br i1 %cmp35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %lor.lhs.false34, %land.lhs.true30, %if.else
  %30 = load i8*, i8** %name.addr, align 4
  %call37 = call %struct.variable* @make_local_array_variable(i8* %30, i32 0)
  store %struct.variable* %call37, %struct.variable** %v, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %lor.lhs.false34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then23
  %31 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool40 = icmp ne %struct.variable* %31, null
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end39
  %32 = load %struct.variable*, %struct.variable** %v, align 4
  %33 = load %struct.word_list*, %struct.word_list** %list, align 4
  %34 = load i32, i32* %flags.addr, align 4
  call void @assign_compound_array_list(%struct.variable* %32, %struct.word_list* %33, i32 %34)
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %if.end39
  %35 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool43 = icmp ne %struct.word_list* %35, null
  br i1 %tobool43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.end42
  %36 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %36)
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.end42
  br label %if.end137

if.else46:                                        ; preds = %land.lhs.true, %entry
  %37 = load i32, i32* %mkglobal, align 4
  %tobool47 = icmp ne i32 %37, 0
  br i1 %tobool47, label %land.lhs.true48, label %if.else113

land.lhs.true48:                                  ; preds = %if.else46
  %38 = load i32, i32* @variable_context, align 4
  %tobool49 = icmp ne i32 %38, 0
  br i1 %tobool49, label %if.then50, label %if.else113

if.then50:                                        ; preds = %land.lhs.true48
  %39 = load i8*, i8** %name.addr, align 4
  %call51 = call %struct.variable* @find_global_variable(i8* %39)
  store %struct.variable* %call51, %struct.variable** %v, align 4
  %40 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool52 = icmp ne %struct.variable* %40, null
  br i1 %tobool52, label %land.lhs.true53, label %if.end72

land.lhs.true53:                                  ; preds = %if.then50
  %41 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes54 = getelementptr inbounds %struct.variable, %struct.variable* %41, i32 0, i32 5
  %42 = load i32, i32* %attributes54, align 4
  %and55 = and i32 %42, 2
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %land.lhs.true57, label %lor.lhs.false60

land.lhs.true57:                                  ; preds = %land.lhs.true53
  %43 = load i32, i32* %flags.addr, align 4
  %and58 = and i32 %43, 32
  %cmp59 = icmp eq i32 %and58, 0
  br i1 %cmp59, label %if.then64, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %land.lhs.true57, %land.lhs.true53
  %44 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes61 = getelementptr inbounds %struct.variable, %struct.variable* %44, i32 0, i32 5
  %45 = load i32, i32* %attributes61, align 4
  %and62 = and i32 %45, 16384
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %if.end72

if.then64:                                        ; preds = %lor.lhs.false60, %land.lhs.true57
  %46 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool65 = icmp ne %struct.variable* %46, null
  br i1 %tobool65, label %land.lhs.true66, label %if.end71

land.lhs.true66:                                  ; preds = %if.then64
  %47 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes67 = getelementptr inbounds %struct.variable, %struct.variable* %47, i32 0, i32 5
  %48 = load i32, i32* %attributes67, align 4
  %and68 = and i32 %48, 2
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %land.lhs.true66
  %49 = load i8*, i8** %name.addr, align 4
  call void @err_readonly(i8* %49)
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %land.lhs.true66, %if.then64
  %50 = load %struct.variable*, %struct.variable** %v, align 4
  store %struct.variable* %50, %struct.variable** %retval, align 4
  br label %return

if.end72:                                         ; preds = %lor.lhs.false60, %if.then50
  %51 = load %struct.variable*, %struct.variable** %v, align 4
  %52 = load i8*, i8** %value.addr, align 4
  %53 = load i32, i32* %flags.addr, align 4
  %call73 = call %struct.word_list* @expand_compound_array_assignment(%struct.variable* %51, i8* %52, i32 %53)
  store %struct.word_list* %call73, %struct.word_list** %list, align 4
  %54 = load %struct.variable*, %struct.variable** %v, align 4
  %cmp74 = icmp eq %struct.variable* %54, null
  br i1 %cmp74, label %land.lhs.true75, label %if.else79

land.lhs.true75:                                  ; preds = %if.end72
  %55 = load i32, i32* %mkassoc, align 4
  %tobool76 = icmp ne i32 %55, 0
  br i1 %tobool76, label %if.then77, label %if.else79

if.then77:                                        ; preds = %land.lhs.true75
  %56 = load i8*, i8** %name.addr, align 4
  %call78 = call %struct.variable* @make_new_assoc_variable(i8* %56)
  store %struct.variable* %call78, %struct.variable** %v, align 4
  br label %if.end106

if.else79:                                        ; preds = %land.lhs.true75, %if.end72
  %57 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool80 = icmp ne %struct.variable* %57, null
  br i1 %tobool80, label %land.lhs.true81, label %if.else89

land.lhs.true81:                                  ; preds = %if.else79
  %58 = load i32, i32* %mkassoc, align 4
  %tobool82 = icmp ne i32 %58, 0
  br i1 %tobool82, label %land.lhs.true83, label %if.else89

land.lhs.true83:                                  ; preds = %land.lhs.true81
  %59 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes84 = getelementptr inbounds %struct.variable, %struct.variable* %59, i32 0, i32 5
  %60 = load i32, i32* %attributes84, align 4
  %and85 = and i32 %60, 64
  %cmp86 = icmp eq i32 %and85, 0
  br i1 %cmp86, label %if.then87, label %if.else89

if.then87:                                        ; preds = %land.lhs.true83
  %61 = load %struct.variable*, %struct.variable** %v, align 4
  %call88 = call %struct.variable* @convert_var_to_assoc(%struct.variable* %61)
  store %struct.variable* %call88, %struct.variable** %v, align 4
  br label %if.end105

if.else89:                                        ; preds = %land.lhs.true83, %land.lhs.true81, %if.else79
  %62 = load %struct.variable*, %struct.variable** %v, align 4
  %cmp90 = icmp eq %struct.variable* %62, null
  br i1 %cmp90, label %if.then91, label %if.else93

if.then91:                                        ; preds = %if.else89
  %63 = load i8*, i8** %name.addr, align 4
  %call92 = call %struct.variable* @make_new_array_variable(i8* %63)
  store %struct.variable* %call92, %struct.variable** %v, align 4
  br label %if.end104

if.else93:                                        ; preds = %if.else89
  %64 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool94 = icmp ne %struct.variable* %64, null
  br i1 %tobool94, label %land.lhs.true95, label %if.end103

land.lhs.true95:                                  ; preds = %if.else93
  %65 = load i32, i32* %mkassoc, align 4
  %cmp96 = icmp eq i32 %65, 0
  br i1 %cmp96, label %land.lhs.true97, label %if.end103

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %66 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes98 = getelementptr inbounds %struct.variable, %struct.variable* %66, i32 0, i32 5
  %67 = load i32, i32* %attributes98, align 4
  %and99 = and i32 %67, 4
  %cmp100 = icmp eq i32 %and99, 0
  br i1 %cmp100, label %if.then101, label %if.end103

if.then101:                                       ; preds = %land.lhs.true97
  %68 = load %struct.variable*, %struct.variable** %v, align 4
  %call102 = call %struct.variable* @convert_var_to_array(%struct.variable* %68)
  store %struct.variable* %call102, %struct.variable** %v, align 4
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %land.lhs.true97, %land.lhs.true95, %if.else93
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then91
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then87
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then77
  %69 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool107 = icmp ne %struct.variable* %69, null
  br i1 %tobool107, label %if.then108, label %if.end109

if.then108:                                       ; preds = %if.end106
  %70 = load %struct.variable*, %struct.variable** %v, align 4
  %71 = load %struct.word_list*, %struct.word_list** %list, align 4
  %72 = load i32, i32* %flags.addr, align 4
  call void @assign_compound_array_list(%struct.variable* %70, %struct.word_list* %71, i32 %72)
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %if.end106
  %73 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool110 = icmp ne %struct.word_list* %73, null
  br i1 %tobool110, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.end109
  %74 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %74)
  br label %if.end112

if.end112:                                        ; preds = %if.then111, %if.end109
  br label %if.end136

if.else113:                                       ; preds = %land.lhs.true48, %if.else46
  %75 = load i8*, i8** %name.addr, align 4
  %76 = load i8*, i8** %value.addr, align 4
  %77 = load i32, i32* %flags.addr, align 4
  %call114 = call %struct.variable* @assign_array_from_string(i8* %75, i8* %76, i32 %77)
  store %struct.variable* %call114, %struct.variable** %v, align 4
  %78 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool115 = icmp ne %struct.variable* %78, null
  br i1 %tobool115, label %land.lhs.true116, label %if.end135

land.lhs.true116:                                 ; preds = %if.else113
  %79 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes117 = getelementptr inbounds %struct.variable, %struct.variable* %79, i32 0, i32 5
  %80 = load i32, i32* %attributes117, align 4
  %and118 = and i32 %80, 2
  %tobool119 = icmp ne i32 %and118, 0
  br i1 %tobool119, label %land.lhs.true120, label %lor.lhs.false123

land.lhs.true120:                                 ; preds = %land.lhs.true116
  %81 = load i32, i32* %flags.addr, align 4
  %and121 = and i32 %81, 32
  %cmp122 = icmp eq i32 %and121, 0
  br i1 %cmp122, label %if.then127, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %land.lhs.true120, %land.lhs.true116
  %82 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes124 = getelementptr inbounds %struct.variable, %struct.variable* %82, i32 0, i32 5
  %83 = load i32, i32* %attributes124, align 4
  %and125 = and i32 %83, 16384
  %tobool126 = icmp ne i32 %and125, 0
  br i1 %tobool126, label %if.then127, label %if.end135

if.then127:                                       ; preds = %lor.lhs.false123, %land.lhs.true120
  %84 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool128 = icmp ne %struct.variable* %84, null
  br i1 %tobool128, label %land.lhs.true129, label %if.end134

land.lhs.true129:                                 ; preds = %if.then127
  %85 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes130 = getelementptr inbounds %struct.variable, %struct.variable* %85, i32 0, i32 5
  %86 = load i32, i32* %attributes130, align 4
  %and131 = and i32 %86, 2
  %tobool132 = icmp ne i32 %and131, 0
  br i1 %tobool132, label %if.then133, label %if.end134

if.then133:                                       ; preds = %land.lhs.true129
  %87 = load i8*, i8** %name.addr, align 4
  call void @err_readonly(i8* %87)
  br label %if.end134

if.end134:                                        ; preds = %if.then133, %land.lhs.true129, %if.then127
  %88 = load %struct.variable*, %struct.variable** %v, align 4
  store %struct.variable* %88, %struct.variable** %retval, align 4
  br label %return

if.end135:                                        ; preds = %lor.lhs.false123, %if.else113
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end112
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end45
  %89 = load %struct.variable*, %struct.variable** %v, align 4
  store %struct.variable* %89, %struct.variable** %retval, align 4
  br label %return

return:                                           ; preds = %if.end137, %if.end134, %if.end71, %if.end
  %90 = load %struct.variable*, %struct.variable** %retval, align 4
  ret %struct.variable* %90
}

declare %struct.variable* @bind_variable(i8*, i8*, i32) #1

declare void @stupidly_hack_special_variables(i8*) #1

declare %struct.variable* @find_variable(i8*) #1

declare void @err_readonly(i8*) #1

declare %struct.word_list* @expand_compound_array_assignment(%struct.variable*, i8*, i32) #1

declare %struct.variable* @make_local_assoc_variable(i8*) #1

declare %struct.variable* @make_local_array_variable(i8*, i32) #1

declare void @assign_compound_array_list(%struct.variable*, %struct.word_list*, i32) #1

declare %struct.variable* @find_global_variable(i8*) #1

declare %struct.variable* @make_new_assoc_variable(i8*) #1

declare %struct.variable* @convert_var_to_assoc(%struct.variable*) #1

declare %struct.variable* @make_new_array_variable(i8*) #1

declare %struct.variable* @convert_var_to_array(%struct.variable*) #1

declare %struct.variable* @assign_array_from_string(i8*, i8*, i32) #1

declare i32 @zread(i32, i8*, i32) #1

declare void @internal_warning(i8*, ...) #1

declare void @strip_trailing(i8*, i32, i32) #1

declare i8* @mbsmbchar(i8*) #1

; Function Attrs: noinline nounwind
define internal i32 @match_upattern(i8* %string, i8* %pat, i32 %mtype, i8** %sp, i8** %ep) #0 {
entry:
  %retval = alloca i32, align 4
  %string.addr = alloca i8*, align 4
  %pat.addr = alloca i8*, align 4
  %mtype.addr = alloca i32, align 4
  %sp.addr = alloca i8**, align 4
  %ep.addr = alloca i8**, align 4
  %c = alloca i32, align 4
  %mlen = alloca i32, align 4
  %len = alloca i32, align 4
  %p = alloca i8*, align 4
  %p1 = alloca i8*, align 4
  %npat = alloca i8*, align 4
  %end = alloca i8*, align 4
  %n1 = alloca i32, align 4
  %unescaped_backslash = alloca i32, align 4
  %pp = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %pat, i8** %pat.addr, align 4
  store i32 %mtype, i32* %mtype.addr, align 4
  store i8** %sp, i8*** %sp.addr, align 4
  store i8** %ep, i8*** %ep.addr, align 4
  %0 = load i8*, i8** %pat.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.lhs.true, label %cond.false13

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %pat.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 0
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %cond.true, label %cond.false13

cond.true:                                        ; preds = %land.lhs.true
  %3 = load i8*, i8** %pat.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i32 1
  %4 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %4 to i32
  %tobool4 = icmp ne i32 %conv3, 0
  br i1 %tobool4, label %cond.true5, label %cond.false10

cond.true5:                                       ; preds = %cond.true
  %5 = load i8*, i8** %pat.addr, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i32 2
  %6 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %6 to i32
  %tobool8 = icmp ne i32 %conv7, 0
  br i1 %tobool8, label %cond.true9, label %cond.false

cond.true9:                                       ; preds = %cond.true5
  %7 = load i8*, i8** %pat.addr, align 4
  %call = call i32 @strlen(i8* %7)
  br label %cond.end

cond.false:                                       ; preds = %cond.true5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true9
  %cond = phi i32 [ %call, %cond.true9 ], [ 2, %cond.false ]
  br label %cond.end11

cond.false10:                                     ; preds = %cond.true
  br label %cond.end11

cond.end11:                                       ; preds = %cond.false10, %cond.end
  %cond12 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false10 ]
  br label %cond.end14

cond.false13:                                     ; preds = %land.lhs.true, %entry
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.end11
  %cond15 = phi i32 [ %cond12, %cond.end11 ], [ 0, %cond.false13 ]
  store i32 %cond15, i32* %len, align 4
  %8 = load i8*, i8** %pat.addr, align 4
  %arrayidx16 = getelementptr inbounds i8, i8* %8, i32 0
  %9 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %9 to i32
  %cmp = icmp ne i32 %conv17, 42
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end14
  %10 = load i8*, i8** %pat.addr, align 4
  %arrayidx19 = getelementptr inbounds i8, i8* %10, i32 0
  %11 = load i8, i8* %arrayidx19, align 1
  %conv20 = sext i8 %11 to i32
  %cmp21 = icmp eq i32 %conv20, 42
  br i1 %cmp21, label %land.lhs.true23, label %lor.lhs.false30

land.lhs.true23:                                  ; preds = %lor.lhs.false
  %12 = load i8*, i8** %pat.addr, align 4
  %arrayidx24 = getelementptr inbounds i8, i8* %12, i32 1
  %13 = load i8, i8* %arrayidx24, align 1
  %conv25 = sext i8 %13 to i32
  %cmp26 = icmp eq i32 %conv25, 40
  br i1 %cmp26, label %land.lhs.true28, label %lor.lhs.false30

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %14 = load i32, i32* @extended_glob, align 4
  %tobool29 = icmp ne i32 %14, 0
  br i1 %tobool29, label %if.then, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %land.lhs.true28, %land.lhs.true23, %lor.lhs.false
  %15 = load i8*, i8** %pat.addr, align 4
  %16 = load i32, i32* %len, align 4
  %sub = sub i32 %16, 1
  %arrayidx31 = getelementptr inbounds i8, i8* %15, i32 %sub
  %17 = load i8, i8* %arrayidx31, align 1
  %conv32 = sext i8 %17 to i32
  %cmp33 = icmp ne i32 %conv32, 42
  br i1 %cmp33, label %if.then, label %if.else86

if.then:                                          ; preds = %lor.lhs.false30, %land.lhs.true28, %cond.end14
  %18 = load i32, i32* %len, align 4
  %add = add i32 %18, 3
  %call35 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4486)
  store i8* %call35, i8** %npat, align 4
  store i8* %call35, i8** %p, align 4
  %19 = load i8*, i8** %pat.addr, align 4
  store i8* %19, i8** %p1, align 4
  %20 = load i8*, i8** %p1, align 4
  %21 = load i8, i8* %20, align 1
  %conv36 = sext i8 %21 to i32
  %cmp37 = icmp ne i32 %conv36, 42
  br i1 %cmp37, label %if.then50, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %if.then
  %22 = load i8*, i8** %p1, align 4
  %23 = load i8, i8* %22, align 1
  %conv40 = sext i8 %23 to i32
  %cmp41 = icmp eq i32 %conv40, 42
  br i1 %cmp41, label %land.lhs.true43, label %if.end

land.lhs.true43:                                  ; preds = %lor.lhs.false39
  %24 = load i8*, i8** %p1, align 4
  %arrayidx44 = getelementptr inbounds i8, i8* %24, i32 1
  %25 = load i8, i8* %arrayidx44, align 1
  %conv45 = sext i8 %25 to i32
  %cmp46 = icmp eq i32 %conv45, 40
  br i1 %cmp46, label %land.lhs.true48, label %if.end

land.lhs.true48:                                  ; preds = %land.lhs.true43
  %26 = load i32, i32* @extended_glob, align 4
  %tobool49 = icmp ne i32 %26, 0
  br i1 %tobool49, label %if.then50, label %if.end

if.then50:                                        ; preds = %land.lhs.true48, %if.then
  %27 = load i8*, i8** %p, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %incdec.ptr, i8** %p, align 4
  store i8 42, i8* %27, align 1
  br label %if.end

if.end:                                           ; preds = %if.then50, %land.lhs.true48, %land.lhs.true43, %lor.lhs.false39
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %28 = load i8*, i8** %p1, align 4
  %29 = load i8, i8* %28, align 1
  %tobool51 = icmp ne i8 %29, 0
  br i1 %tobool51, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %30 = load i8*, i8** %p1, align 4
  %incdec.ptr52 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr52, i8** %p1, align 4
  %31 = load i8, i8* %30, align 1
  %32 = load i8*, i8** %p, align 4
  %incdec.ptr53 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %incdec.ptr53, i8** %p, align 4
  store i8 %31, i8* %32, align 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %33 = load i8*, i8** %p1, align 4
  %arrayidx54 = getelementptr inbounds i8, i8* %33, i32 -1
  %34 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %34 to i32
  %cmp56 = icmp eq i32 %conv55, 42
  br i1 %cmp56, label %land.lhs.true58, label %if.else

land.lhs.true58:                                  ; preds = %while.end
  %35 = load i8*, i8** %p1, align 4
  %arrayidx59 = getelementptr inbounds i8, i8* %35, i32 -2
  %36 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %36 to i32
  %cmp61 = icmp eq i32 %conv60, 92
  %conv62 = zext i1 %cmp61 to i32
  store i32 %conv62, i32* %unescaped_backslash, align 4
  br i1 %cmp61, label %if.then63, label %if.else

if.then63:                                        ; preds = %land.lhs.true58
  %37 = load i8*, i8** %p1, align 4
  %add.ptr = getelementptr inbounds i8, i8* %37, i32 -3
  store i8* %add.ptr, i8** %pp, align 4
  br label %while.cond64

while.cond64:                                     ; preds = %while.body71, %if.then63
  %38 = load i8*, i8** %pp, align 4
  %39 = load i8*, i8** %pat.addr, align 4
  %cmp65 = icmp uge i8* %38, %39
  br i1 %cmp65, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond64
  %40 = load i8*, i8** %pp, align 4
  %incdec.ptr67 = getelementptr inbounds i8, i8* %40, i32 -1
  store i8* %incdec.ptr67, i8** %pp, align 4
  %41 = load i8, i8* %40, align 1
  %conv68 = sext i8 %41 to i32
  %cmp69 = icmp eq i32 %conv68, 92
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond64
  %42 = phi i1 [ false, %while.cond64 ], [ %cmp69, %land.rhs ]
  br i1 %42, label %while.body71, label %while.end73

while.body71:                                     ; preds = %land.end
  %43 = load i32, i32* %unescaped_backslash, align 4
  %sub72 = sub nsw i32 1, %43
  store i32 %sub72, i32* %unescaped_backslash, align 4
  br label %while.cond64

while.end73:                                      ; preds = %land.end
  %44 = load i32, i32* %unescaped_backslash, align 4
  %tobool74 = icmp ne i32 %44, 0
  br i1 %tobool74, label %if.then75, label %if.end77

if.then75:                                        ; preds = %while.end73
  %45 = load i8*, i8** %p, align 4
  %incdec.ptr76 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr76, i8** %p, align 4
  store i8 42, i8* %45, align 1
  br label %if.end77

if.end77:                                         ; preds = %if.then75, %while.end73
  br label %if.end85

if.else:                                          ; preds = %land.lhs.true58, %while.end
  %46 = load i8*, i8** %p1, align 4
  %arrayidx78 = getelementptr inbounds i8, i8* %46, i32 -1
  %47 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %47 to i32
  %cmp80 = icmp ne i32 %conv79, 42
  br i1 %cmp80, label %if.then82, label %if.end84

if.then82:                                        ; preds = %if.else
  %48 = load i8*, i8** %p, align 4
  %incdec.ptr83 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %incdec.ptr83, i8** %p, align 4
  store i8 42, i8* %48, align 1
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end77
  %49 = load i8*, i8** %p, align 4
  store i8 0, i8* %49, align 1
  br label %if.end87

if.else86:                                        ; preds = %lor.lhs.false30
  %50 = load i8*, i8** %pat.addr, align 4
  store i8* %50, i8** %npat, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.end85
  %51 = load i8*, i8** %npat, align 4
  %52 = load i8*, i8** %string.addr, align 4
  %53 = load i32, i32* @extended_glob, align 4
  %tobool88 = icmp ne i32 %53, 0
  %cond89 = select i1 %tobool88, i32 32, i32 0
  %54 = load i32, i32* @match_ignore_case, align 4
  %tobool90 = icmp ne i32 %54, 0
  %cond91 = select i1 %tobool90, i32 16, i32 0
  %or = or i32 %cond89, %cond91
  %call92 = call i32 @strmatch(i8* %51, i8* %52, i32 %or)
  store i32 %call92, i32* %c, align 4
  %55 = load i8*, i8** %npat, align 4
  %56 = load i8*, i8** %pat.addr, align 4
  %cmp93 = icmp ne i8* %55, %56
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.end87
  %57 = load i8*, i8** %npat, align 4
  call void @sh_xfree(i8* %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4519)
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end87
  %58 = load i32, i32* %c, align 4
  %cmp97 = icmp eq i32 %58, 1
  br i1 %cmp97, label %if.then99, label %if.end100

if.then99:                                        ; preds = %if.end96
  store i32 0, i32* %retval, align 4
  br label %return

if.end100:                                        ; preds = %if.end96
  %59 = load i8*, i8** %string.addr, align 4
  %tobool101 = icmp ne i8* %59, null
  br i1 %tobool101, label %land.lhs.true102, label %cond.false122

land.lhs.true102:                                 ; preds = %if.end100
  %60 = load i8*, i8** %string.addr, align 4
  %arrayidx103 = getelementptr inbounds i8, i8* %60, i32 0
  %61 = load i8, i8* %arrayidx103, align 1
  %conv104 = sext i8 %61 to i32
  %tobool105 = icmp ne i32 %conv104, 0
  br i1 %tobool105, label %cond.true106, label %cond.false122

cond.true106:                                     ; preds = %land.lhs.true102
  %62 = load i8*, i8** %string.addr, align 4
  %arrayidx107 = getelementptr inbounds i8, i8* %62, i32 1
  %63 = load i8, i8* %arrayidx107, align 1
  %conv108 = sext i8 %63 to i32
  %tobool109 = icmp ne i32 %conv108, 0
  br i1 %tobool109, label %cond.true110, label %cond.false119

cond.true110:                                     ; preds = %cond.true106
  %64 = load i8*, i8** %string.addr, align 4
  %arrayidx111 = getelementptr inbounds i8, i8* %64, i32 2
  %65 = load i8, i8* %arrayidx111, align 1
  %conv112 = sext i8 %65 to i32
  %tobool113 = icmp ne i32 %conv112, 0
  br i1 %tobool113, label %cond.true114, label %cond.false116

cond.true114:                                     ; preds = %cond.true110
  %66 = load i8*, i8** %string.addr, align 4
  %call115 = call i32 @strlen(i8* %66)
  br label %cond.end117

cond.false116:                                    ; preds = %cond.true110
  br label %cond.end117

cond.end117:                                      ; preds = %cond.false116, %cond.true114
  %cond118 = phi i32 [ %call115, %cond.true114 ], [ 2, %cond.false116 ]
  br label %cond.end120

cond.false119:                                    ; preds = %cond.true106
  br label %cond.end120

cond.end120:                                      ; preds = %cond.false119, %cond.end117
  %cond121 = phi i32 [ %cond118, %cond.end117 ], [ 1, %cond.false119 ]
  br label %cond.end123

cond.false122:                                    ; preds = %land.lhs.true102, %if.end100
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false122, %cond.end120
  %cond124 = phi i32 [ %cond121, %cond.end120 ], [ 0, %cond.false122 ]
  store i32 %cond124, i32* %len, align 4
  %67 = load i8*, i8** %string.addr, align 4
  %68 = load i32, i32* %len, align 4
  %add.ptr125 = getelementptr inbounds i8, i8* %67, i32 %68
  store i8* %add.ptr125, i8** %end, align 4
  %69 = load i8*, i8** %pat.addr, align 4
  %70 = load i32, i32* %len, align 4
  %call126 = call i32 @umatchlen(i8* %69, i32 %70)
  store i32 %call126, i32* %mlen, align 4
  %71 = load i32, i32* %mtype.addr, align 4
  switch i32 %71, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb171
    i32 2, label %sw.bb210
  ]

sw.bb:                                            ; preds = %cond.end123
  %72 = load i8*, i8** %string.addr, align 4
  store i8* %72, i8** %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc168, %sw.bb
  %73 = load i8*, i8** %p, align 4
  %74 = load i8*, i8** %end, align 4
  %cmp127 = icmp ule i8* %73, %74
  br i1 %cmp127, label %for.body, label %for.end170

for.body:                                         ; preds = %for.cond
  %75 = load i8*, i8** %pat.addr, align 4
  %76 = load i8*, i8** %p, align 4
  %77 = load i32, i32* @match_ignore_case, align 4
  %tobool129 = icmp ne i32 %77, 0
  %cond130 = select i1 %tobool129, i32 16, i32 0
  %call131 = call i32 @match_pattern_char(i8* %75, i8* %76, i32 %cond130)
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.then133, label %if.end167

if.then133:                                       ; preds = %for.body
  %78 = load i32, i32* %mlen, align 4
  %cmp134 = icmp eq i32 %78, -1
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %if.then133
  %79 = load i8*, i8** %end, align 4
  br label %cond.end139

cond.false137:                                    ; preds = %if.then133
  %80 = load i8*, i8** %p, align 4
  %81 = load i32, i32* %mlen, align 4
  %add.ptr138 = getelementptr inbounds i8, i8* %80, i32 %81
  br label %cond.end139

cond.end139:                                      ; preds = %cond.false137, %cond.true136
  %cond140 = phi i8* [ %79, %cond.true136 ], [ %add.ptr138, %cond.false137 ]
  store i8* %cond140, i8** %p1, align 4
  %82 = load i8*, i8** %p1, align 4
  %83 = load i8*, i8** %end, align 4
  %cmp141 = icmp ugt i8* %82, %83
  br i1 %cmp141, label %if.then143, label %if.end144

if.then143:                                       ; preds = %cond.end139
  br label %for.end170

if.end144:                                        ; preds = %cond.end139
  br label %for.cond145

for.cond145:                                      ; preds = %for.inc, %if.end144
  %84 = load i8*, i8** %p1, align 4
  %85 = load i8*, i8** %p, align 4
  %cmp146 = icmp uge i8* %84, %85
  br i1 %cmp146, label %for.body148, label %for.end

for.body148:                                      ; preds = %for.cond145
  %86 = load i8*, i8** %p1, align 4
  %87 = load i8, i8* %86, align 1
  %conv149 = sext i8 %87 to i32
  store i32 %conv149, i32* %c, align 4
  %88 = load i8*, i8** %p1, align 4
  store i8 0, i8* %88, align 1
  %89 = load i8*, i8** %pat.addr, align 4
  %90 = load i8*, i8** %p, align 4
  %91 = load i32, i32* @extended_glob, align 4
  %tobool150 = icmp ne i32 %91, 0
  %cond151 = select i1 %tobool150, i32 32, i32 0
  %92 = load i32, i32* @match_ignore_case, align 4
  %tobool152 = icmp ne i32 %92, 0
  %cond153 = select i1 %tobool152, i32 16, i32 0
  %or154 = or i32 %cond151, %cond153
  %call155 = call i32 @strmatch(i8* %89, i8* %90, i32 %or154)
  %cmp156 = icmp eq i32 %call155, 0
  br i1 %cmp156, label %if.then158, label %if.end160

if.then158:                                       ; preds = %for.body148
  %93 = load i32, i32* %c, align 4
  %conv159 = trunc i32 %93 to i8
  %94 = load i8*, i8** %p1, align 4
  store i8 %conv159, i8* %94, align 1
  %95 = load i8*, i8** %p, align 4
  %96 = load i8**, i8*** %sp.addr, align 4
  store i8* %95, i8** %96, align 4
  %97 = load i8*, i8** %p1, align 4
  %98 = load i8**, i8*** %ep.addr, align 4
  store i8* %97, i8** %98, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end160:                                        ; preds = %for.body148
  %99 = load i32, i32* %c, align 4
  %conv161 = trunc i32 %99 to i8
  %100 = load i8*, i8** %p1, align 4
  store i8 %conv161, i8* %100, align 1
  %101 = load i32, i32* %mlen, align 4
  %cmp162 = icmp ne i32 %101, -1
  br i1 %cmp162, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.end160
  br label %for.end

if.end165:                                        ; preds = %if.end160
  br label %for.inc

for.inc:                                          ; preds = %if.end165
  %102 = load i8*, i8** %p1, align 4
  %incdec.ptr166 = getelementptr inbounds i8, i8* %102, i32 -1
  store i8* %incdec.ptr166, i8** %p1, align 4
  br label %for.cond145

for.end:                                          ; preds = %if.then164, %for.cond145
  br label %if.end167

if.end167:                                        ; preds = %for.end, %for.body
  br label %for.inc168

for.inc168:                                       ; preds = %if.end167
  %103 = load i8*, i8** %p, align 4
  %incdec.ptr169 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %incdec.ptr169, i8** %p, align 4
  br label %for.cond

for.end170:                                       ; preds = %if.then143, %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

sw.bb171:                                         ; preds = %cond.end123
  %104 = load i8*, i8** %pat.addr, align 4
  %105 = load i8*, i8** %string.addr, align 4
  %106 = load i32, i32* @match_ignore_case, align 4
  %tobool172 = icmp ne i32 %106, 0
  %cond173 = select i1 %tobool172, i32 16, i32 0
  %call174 = call i32 @match_pattern_char(i8* %104, i8* %105, i32 %cond173)
  %cmp175 = icmp eq i32 %call174, 0
  br i1 %cmp175, label %if.then177, label %if.end178

if.then177:                                       ; preds = %sw.bb171
  store i32 0, i32* %retval, align 4
  br label %return

if.end178:                                        ; preds = %sw.bb171
  %107 = load i32, i32* %mlen, align 4
  %cmp179 = icmp eq i32 %107, -1
  br i1 %cmp179, label %cond.true181, label %cond.false182

cond.true181:                                     ; preds = %if.end178
  %108 = load i8*, i8** %end, align 4
  br label %cond.end184

cond.false182:                                    ; preds = %if.end178
  %109 = load i8*, i8** %string.addr, align 4
  %110 = load i32, i32* %mlen, align 4
  %add.ptr183 = getelementptr inbounds i8, i8* %109, i32 %110
  br label %cond.end184

cond.end184:                                      ; preds = %cond.false182, %cond.true181
  %cond185 = phi i8* [ %108, %cond.true181 ], [ %add.ptr183, %cond.false182 ]
  store i8* %cond185, i8** %p, align 4
  br label %for.cond186

for.cond186:                                      ; preds = %for.inc207, %cond.end184
  %111 = load i8*, i8** %p, align 4
  %112 = load i8*, i8** %string.addr, align 4
  %cmp187 = icmp uge i8* %111, %112
  br i1 %cmp187, label %for.body189, label %for.end209

for.body189:                                      ; preds = %for.cond186
  %113 = load i8*, i8** %p, align 4
  %114 = load i8, i8* %113, align 1
  %conv190 = sext i8 %114 to i32
  store i32 %conv190, i32* %c, align 4
  %115 = load i8*, i8** %p, align 4
  store i8 0, i8* %115, align 1
  %116 = load i8*, i8** %pat.addr, align 4
  %117 = load i8*, i8** %string.addr, align 4
  %118 = load i32, i32* @extended_glob, align 4
  %tobool191 = icmp ne i32 %118, 0
  %cond192 = select i1 %tobool191, i32 32, i32 0
  %119 = load i32, i32* @match_ignore_case, align 4
  %tobool193 = icmp ne i32 %119, 0
  %cond194 = select i1 %tobool193, i32 16, i32 0
  %or195 = or i32 %cond192, %cond194
  %call196 = call i32 @strmatch(i8* %116, i8* %117, i32 %or195)
  %cmp197 = icmp eq i32 %call196, 0
  br i1 %cmp197, label %if.then199, label %if.end201

if.then199:                                       ; preds = %for.body189
  %120 = load i32, i32* %c, align 4
  %conv200 = trunc i32 %120 to i8
  %121 = load i8*, i8** %p, align 4
  store i8 %conv200, i8* %121, align 1
  %122 = load i8*, i8** %string.addr, align 4
  %123 = load i8**, i8*** %sp.addr, align 4
  store i8* %122, i8** %123, align 4
  %124 = load i8*, i8** %p, align 4
  %125 = load i8**, i8*** %ep.addr, align 4
  store i8* %124, i8** %125, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end201:                                        ; preds = %for.body189
  %126 = load i32, i32* %c, align 4
  %conv202 = trunc i32 %126 to i8
  %127 = load i8*, i8** %p, align 4
  store i8 %conv202, i8* %127, align 1
  %128 = load i32, i32* %mlen, align 4
  %cmp203 = icmp ne i32 %128, -1
  br i1 %cmp203, label %if.then205, label %if.end206

if.then205:                                       ; preds = %if.end201
  br label %for.end209

if.end206:                                        ; preds = %if.end201
  br label %for.inc207

for.inc207:                                       ; preds = %if.end206
  %129 = load i8*, i8** %p, align 4
  %incdec.ptr208 = getelementptr inbounds i8, i8* %129, i32 -1
  store i8* %incdec.ptr208, i8** %p, align 4
  br label %for.cond186

for.end209:                                       ; preds = %if.then205, %for.cond186
  store i32 0, i32* %retval, align 4
  br label %return

sw.bb210:                                         ; preds = %cond.end123
  %130 = load i8*, i8** %end, align 4
  %131 = load i32, i32* %mlen, align 4
  %cmp211 = icmp eq i32 %131, -1
  br i1 %cmp211, label %cond.true213, label %cond.false214

cond.true213:                                     ; preds = %sw.bb210
  %132 = load i32, i32* %len, align 4
  br label %cond.end215

cond.false214:                                    ; preds = %sw.bb210
  %133 = load i32, i32* %mlen, align 4
  br label %cond.end215

cond.end215:                                      ; preds = %cond.false214, %cond.true213
  %cond216 = phi i32 [ %132, %cond.true213 ], [ %133, %cond.false214 ]
  %idx.neg = sub i32 0, %cond216
  %add.ptr217 = getelementptr inbounds i8, i8* %130, i32 %idx.neg
  store i8* %add.ptr217, i8** %p, align 4
  br label %for.cond218

for.cond218:                                      ; preds = %for.inc236, %cond.end215
  %134 = load i8*, i8** %p, align 4
  %135 = load i8*, i8** %end, align 4
  %cmp219 = icmp ule i8* %134, %135
  br i1 %cmp219, label %for.body221, label %for.end238

for.body221:                                      ; preds = %for.cond218
  %136 = load i8*, i8** %pat.addr, align 4
  %137 = load i8*, i8** %p, align 4
  %138 = load i32, i32* @extended_glob, align 4
  %tobool222 = icmp ne i32 %138, 0
  %cond223 = select i1 %tobool222, i32 32, i32 0
  %139 = load i32, i32* @match_ignore_case, align 4
  %tobool224 = icmp ne i32 %139, 0
  %cond225 = select i1 %tobool224, i32 16, i32 0
  %or226 = or i32 %cond223, %cond225
  %call227 = call i32 @strmatch(i8* %136, i8* %137, i32 %or226)
  %cmp228 = icmp eq i32 %call227, 0
  br i1 %cmp228, label %if.then230, label %if.end231

if.then230:                                       ; preds = %for.body221
  %140 = load i8*, i8** %p, align 4
  %141 = load i8**, i8*** %sp.addr, align 4
  store i8* %140, i8** %141, align 4
  %142 = load i8*, i8** %end, align 4
  %143 = load i8**, i8*** %ep.addr, align 4
  store i8* %142, i8** %143, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end231:                                        ; preds = %for.body221
  %144 = load i32, i32* %mlen, align 4
  %cmp232 = icmp ne i32 %144, -1
  br i1 %cmp232, label %if.then234, label %if.end235

if.then234:                                       ; preds = %if.end231
  br label %for.end238

if.end235:                                        ; preds = %if.end231
  br label %for.inc236

for.inc236:                                       ; preds = %if.end235
  %145 = load i8*, i8** %p, align 4
  %incdec.ptr237 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %incdec.ptr237, i8** %p, align 4
  br label %for.cond218

for.end238:                                       ; preds = %if.then234, %for.cond218
  store i32 0, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %cond.end123
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %for.end238, %if.then230, %for.end209, %if.then199, %if.then177, %for.end170, %if.then158, %if.then99
  %146 = load i32, i32* %retval, align 4
  ret i32 %146
}

declare i32 @xdupmbstowcs(i32**, i8***, i8*) #1

; Function Attrs: noinline nounwind
define internal i32 @match_wpattern(i32* %wstring, i8** %indices, i32 %wstrlen, i32* %wpat, i32 %mtype, i8** %sp, i8** %ep) #0 {
entry:
  %retval = alloca i32, align 4
  %wstring.addr = alloca i32*, align 4
  %indices.addr = alloca i8**, align 4
  %wstrlen.addr = alloca i32, align 4
  %wpat.addr = alloca i32*, align 4
  %mtype.addr = alloca i32, align 4
  %sp.addr = alloca i8**, align 4
  %ep.addr = alloca i8**, align 4
  %wc = alloca i32, align 4
  %wp = alloca i32*, align 4
  %nwpat = alloca i32*, align 4
  %wp1 = alloca i32*, align 4
  %len = alloca i32, align 4
  %mlen = alloca i32, align 4
  %n = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %simple = alloca i32, align 4
  %unescaped_backslash = alloca i32, align 4
  %wpp = alloca i32*, align 4
  store i32* %wstring, i32** %wstring.addr, align 4
  store i8** %indices, i8*** %indices.addr, align 4
  store i32 %wstrlen, i32* %wstrlen.addr, align 4
  store i32* %wpat, i32** %wpat.addr, align 4
  store i32 %mtype, i32* %mtype.addr, align 4
  store i8** %sp, i8*** %sp.addr, align 4
  store i8** %ep, i8*** %ep.addr, align 4
  %0 = load i32*, i32** %wpat.addr, align 4
  %arrayidx = getelementptr inbounds i32, i32* %0, i32 0
  %1 = load i32, i32* %arrayidx, align 4
  %cmp = icmp ne i32 %1, 92
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32*, i32** %wpat.addr, align 4
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i32 0
  %3 = load i32, i32* %arrayidx1, align 4
  %cmp2 = icmp ne i32 %3, 42
  br i1 %cmp2, label %land.lhs.true3, label %land.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i32*, i32** %wpat.addr, align 4
  %arrayidx4 = getelementptr inbounds i32, i32* %4, i32 0
  %5 = load i32, i32* %arrayidx4, align 4
  %cmp5 = icmp ne i32 %5, 63
  br i1 %cmp5, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true3
  %6 = load i32*, i32** %wpat.addr, align 4
  %arrayidx6 = getelementptr inbounds i32, i32* %6, i32 0
  %7 = load i32, i32* %arrayidx6, align 4
  %cmp7 = icmp ne i32 %7, 91
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true3, %land.lhs.true, %entry
  %8 = phi i1 [ false, %land.lhs.true3 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp7, %land.rhs ]
  %land.ext = zext i1 %8 to i32
  store i32 %land.ext, i32* %simple, align 4
  %9 = load i32, i32* @extended_glob, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %10 = load i32*, i32** %wpat.addr, align 4
  %arrayidx8 = getelementptr inbounds i32, i32* %10, i32 1
  %11 = load i32, i32* %arrayidx8, align 4
  %cmp9 = icmp ne i32 %11, 40
  br i1 %cmp9, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %12 = load i32*, i32** %wpat.addr, align 4
  %arrayidx10 = getelementptr inbounds i32, i32* %12, i32 0
  %13 = load i32, i32* %arrayidx10, align 4
  %cmp11 = icmp ne i32 %13, 42
  br i1 %cmp11, label %land.lhs.true12, label %land.end24

land.lhs.true12:                                  ; preds = %lor.rhs
  %14 = load i32*, i32** %wpat.addr, align 4
  %arrayidx13 = getelementptr inbounds i32, i32* %14, i32 0
  %15 = load i32, i32* %arrayidx13, align 4
  %cmp14 = icmp ne i32 %15, 63
  br i1 %cmp14, label %land.lhs.true15, label %land.end24

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %16 = load i32*, i32** %wpat.addr, align 4
  %arrayidx16 = getelementptr inbounds i32, i32* %16, i32 0
  %17 = load i32, i32* %arrayidx16, align 4
  %cmp17 = icmp ne i32 %17, 43
  br i1 %cmp17, label %land.lhs.true18, label %land.end24

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %18 = load i32*, i32** %wpat.addr, align 4
  %arrayidx19 = getelementptr inbounds i32, i32* %18, i32 0
  %19 = load i32, i32* %arrayidx19, align 4
  %cmp20 = icmp ne i32 %19, 33
  br i1 %cmp20, label %land.rhs21, label %land.end24

land.rhs21:                                       ; preds = %land.lhs.true18
  %20 = load i32*, i32** %wpat.addr, align 4
  %arrayidx22 = getelementptr inbounds i32, i32* %20, i32 0
  %21 = load i32, i32* %arrayidx22, align 4
  %cmp23 = icmp ne i32 %21, 64
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %land.lhs.true18, %land.lhs.true15, %land.lhs.true12, %lor.rhs
  %22 = phi i1 [ false, %land.lhs.true18 ], [ false, %land.lhs.true15 ], [ false, %land.lhs.true12 ], [ false, %lor.rhs ], [ %cmp23, %land.rhs21 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end24, %if.then
  %23 = phi i1 [ true, %if.then ], [ %22, %land.end24 ]
  %lor.ext = zext i1 %23 to i32
  %24 = load i32, i32* %simple, align 4
  %and = and i32 %24, %lor.ext
  store i32 %and, i32* %simple, align 4
  br label %if.end

if.end:                                           ; preds = %lor.end, %land.end
  %25 = load i32*, i32** %wpat.addr, align 4
  %call = call i32 @wcslen(i32* %25)
  store i32 %call, i32* %len, align 4
  %26 = load i32*, i32** %wpat.addr, align 4
  %arrayidx26 = getelementptr inbounds i32, i32* %26, i32 0
  %27 = load i32, i32* %arrayidx26, align 4
  %cmp27 = icmp ne i32 %27, 42
  br i1 %cmp27, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %28 = load i32*, i32** %wpat.addr, align 4
  %arrayidx28 = getelementptr inbounds i32, i32* %28, i32 0
  %29 = load i32, i32* %arrayidx28, align 4
  %cmp29 = icmp eq i32 %29, 42
  br i1 %cmp29, label %land.lhs.true30, label %lor.lhs.false35

land.lhs.true30:                                  ; preds = %lor.lhs.false
  %30 = load i32*, i32** %wpat.addr, align 4
  %arrayidx31 = getelementptr inbounds i32, i32* %30, i32 1
  %31 = load i32, i32* %arrayidx31, align 4
  %cmp32 = icmp eq i32 %31, 40
  br i1 %cmp32, label %land.lhs.true33, label %lor.lhs.false35

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %32 = load i32, i32* @extended_glob, align 4
  %tobool34 = icmp ne i32 %32, 0
  br i1 %tobool34, label %if.then38, label %lor.lhs.false35

lor.lhs.false35:                                  ; preds = %land.lhs.true33, %land.lhs.true30, %lor.lhs.false
  %33 = load i32*, i32** %wpat.addr, align 4
  %34 = load i32, i32* %len, align 4
  %sub = sub i32 %34, 1
  %arrayidx36 = getelementptr inbounds i32, i32* %33, i32 %sub
  %35 = load i32, i32* %arrayidx36, align 4
  %cmp37 = icmp ne i32 %35, 42
  br i1 %cmp37, label %if.then38, label %if.else82

if.then38:                                        ; preds = %lor.lhs.false35, %land.lhs.true33, %if.end
  %36 = load i32, i32* %len, align 4
  %add = add i32 %36, 3
  %mul = mul i32 %add, 4
  %call39 = call i8* @sh_xmalloc(i32 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4649)
  %37 = bitcast i8* %call39 to i32*
  store i32* %37, i32** %nwpat, align 4
  store i32* %37, i32** %wp, align 4
  %38 = load i32*, i32** %wpat.addr, align 4
  store i32* %38, i32** %wp1, align 4
  %39 = load i32*, i32** %wp1, align 4
  %40 = load i32, i32* %39, align 4
  %cmp40 = icmp ne i32 %40, 42
  br i1 %cmp40, label %if.then48, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %if.then38
  %41 = load i32*, i32** %wp1, align 4
  %42 = load i32, i32* %41, align 4
  %cmp42 = icmp eq i32 %42, 42
  br i1 %cmp42, label %land.lhs.true43, label %if.end49

land.lhs.true43:                                  ; preds = %lor.lhs.false41
  %43 = load i32*, i32** %wp1, align 4
  %arrayidx44 = getelementptr inbounds i32, i32* %43, i32 1
  %44 = load i32, i32* %arrayidx44, align 4
  %cmp45 = icmp eq i32 %44, 40
  br i1 %cmp45, label %land.lhs.true46, label %if.end49

land.lhs.true46:                                  ; preds = %land.lhs.true43
  %45 = load i32, i32* @extended_glob, align 4
  %tobool47 = icmp ne i32 %45, 0
  br i1 %tobool47, label %if.then48, label %if.end49

if.then48:                                        ; preds = %land.lhs.true46, %if.then38
  %46 = load i32*, i32** %wp, align 4
  %incdec.ptr = getelementptr inbounds i32, i32* %46, i32 1
  store i32* %incdec.ptr, i32** %wp, align 4
  store i32 42, i32* %46, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %land.lhs.true46, %land.lhs.true43, %lor.lhs.false41
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end49
  %47 = load i32*, i32** %wp1, align 4
  %48 = load i32, i32* %47, align 4
  %cmp50 = icmp ne i32 %48, 0
  br i1 %cmp50, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %49 = load i32*, i32** %wp1, align 4
  %incdec.ptr51 = getelementptr inbounds i32, i32* %49, i32 1
  store i32* %incdec.ptr51, i32** %wp1, align 4
  %50 = load i32, i32* %49, align 4
  %51 = load i32*, i32** %wp, align 4
  %incdec.ptr52 = getelementptr inbounds i32, i32* %51, i32 1
  store i32* %incdec.ptr52, i32** %wp, align 4
  store i32 %50, i32* %51, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %52 = load i32*, i32** %wp1, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %52, i32 -1
  %53 = load i32, i32* %arrayidx53, align 4
  %cmp54 = icmp eq i32 %53, 42
  br i1 %cmp54, label %land.lhs.true55, label %if.else

land.lhs.true55:                                  ; preds = %while.end
  %54 = load i32*, i32** %wp1, align 4
  %arrayidx56 = getelementptr inbounds i32, i32* %54, i32 -2
  %55 = load i32, i32* %arrayidx56, align 4
  %cmp57 = icmp eq i32 %55, 92
  %conv = zext i1 %cmp57 to i32
  store i32 %conv, i32* %unescaped_backslash, align 4
  br i1 %cmp57, label %if.then58, label %if.else

if.then58:                                        ; preds = %land.lhs.true55
  %56 = load i32*, i32** %wp1, align 4
  %add.ptr = getelementptr inbounds i32, i32* %56, i32 -3
  store i32* %add.ptr, i32** %wpp, align 4
  br label %while.cond59

while.cond59:                                     ; preds = %while.body68, %if.then58
  %57 = load i32*, i32** %wpp, align 4
  %58 = load i32*, i32** %wpat.addr, align 4
  %cmp60 = icmp uge i32* %57, %58
  br i1 %cmp60, label %land.rhs62, label %land.end66

land.rhs62:                                       ; preds = %while.cond59
  %59 = load i32*, i32** %wpp, align 4
  %incdec.ptr63 = getelementptr inbounds i32, i32* %59, i32 -1
  store i32* %incdec.ptr63, i32** %wpp, align 4
  %60 = load i32, i32* %59, align 4
  %cmp64 = icmp eq i32 %60, 92
  br label %land.end66

land.end66:                                       ; preds = %land.rhs62, %while.cond59
  %61 = phi i1 [ false, %while.cond59 ], [ %cmp64, %land.rhs62 ]
  br i1 %61, label %while.body68, label %while.end70

while.body68:                                     ; preds = %land.end66
  %62 = load i32, i32* %unescaped_backslash, align 4
  %sub69 = sub nsw i32 1, %62
  store i32 %sub69, i32* %unescaped_backslash, align 4
  br label %while.cond59

while.end70:                                      ; preds = %land.end66
  %63 = load i32, i32* %unescaped_backslash, align 4
  %tobool71 = icmp ne i32 %63, 0
  br i1 %tobool71, label %if.then72, label %if.end74

if.then72:                                        ; preds = %while.end70
  %64 = load i32*, i32** %wp, align 4
  %incdec.ptr73 = getelementptr inbounds i32, i32* %64, i32 1
  store i32* %incdec.ptr73, i32** %wp, align 4
  store i32 42, i32* %64, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %while.end70
  br label %if.end81

if.else:                                          ; preds = %land.lhs.true55, %while.end
  %65 = load i32*, i32** %wp1, align 4
  %arrayidx75 = getelementptr inbounds i32, i32* %65, i32 -1
  %66 = load i32, i32* %arrayidx75, align 4
  %cmp76 = icmp ne i32 %66, 42
  br i1 %cmp76, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.else
  %67 = load i32*, i32** %wp, align 4
  %incdec.ptr79 = getelementptr inbounds i32, i32* %67, i32 1
  store i32* %incdec.ptr79, i32** %wp, align 4
  store i32 42, i32* %67, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.else
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end74
  %68 = load i32*, i32** %wp, align 4
  store i32 0, i32* %68, align 4
  br label %if.end83

if.else82:                                        ; preds = %lor.lhs.false35
  %69 = load i32*, i32** %wpat.addr, align 4
  store i32* %69, i32** %nwpat, align 4
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.end81
  %70 = load i32*, i32** %nwpat, align 4
  %71 = load i32*, i32** %wstring.addr, align 4
  %72 = load i32, i32* @extended_glob, align 4
  %tobool84 = icmp ne i32 %72, 0
  %cond = select i1 %tobool84, i32 32, i32 0
  %73 = load i32, i32* @match_ignore_case, align 4
  %tobool85 = icmp ne i32 %73, 0
  %cond86 = select i1 %tobool85, i32 16, i32 0
  %or = or i32 %cond, %cond86
  %call87 = call i32 @wcsmatch(i32* %70, i32* %71, i32 %or)
  store i32 %call87, i32* %len, align 4
  %74 = load i32*, i32** %nwpat, align 4
  %75 = load i32*, i32** %wpat.addr, align 4
  %cmp88 = icmp ne i32* %74, %75
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end83
  %76 = load i32*, i32** %nwpat, align 4
  %77 = bitcast i32* %76 to i8*
  call void @sh_xfree(i8* %77, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4677)
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end83
  %78 = load i32, i32* %len, align 4
  %cmp92 = icmp eq i32 %78, 1
  br i1 %cmp92, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end91
  store i32 0, i32* %retval, align 4
  br label %return

if.end95:                                         ; preds = %if.end91
  %79 = load i32*, i32** %wpat.addr, align 4
  %80 = load i32, i32* %wstrlen.addr, align 4
  %call96 = call i32 @wmatchlen(i32* %79, i32 %80)
  store i32 %call96, i32* %mlen, align 4
  %81 = load i32, i32* %mtype.addr, align 4
  switch i32 %81, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb169
    i32 2, label %sw.bb210
  ]

sw.bb:                                            ; preds = %if.end95
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc167, %sw.bb
  %82 = load i32, i32* %n, align 4
  %83 = load i32, i32* %wstrlen.addr, align 4
  %cmp97 = icmp ule i32 %82, %83
  br i1 %cmp97, label %for.body, label %for.end168

for.body:                                         ; preds = %for.cond
  %84 = load i32, i32* %simple, align 4
  %tobool99 = icmp ne i32 %84, 0
  br i1 %tobool99, label %cond.true, label %cond.false121

cond.true:                                        ; preds = %for.body
  %85 = load i32, i32* @match_ignore_case, align 4
  %tobool100 = icmp ne i32 %85, 0
  br i1 %tobool100, label %land.lhs.true101, label %cond.false

land.lhs.true101:                                 ; preds = %cond.true
  %86 = load i32*, i32** %wpat.addr, align 4
  %87 = load i32, i32* %86, align 4
  %call102 = call i32 @iswupper(i32 %87)
  %tobool103 = icmp ne i32 %call102, 0
  br i1 %tobool103, label %cond.true104, label %cond.false

cond.true104:                                     ; preds = %land.lhs.true101
  %88 = load i32*, i32** %wpat.addr, align 4
  %89 = load i32, i32* %88, align 4
  %call105 = call i32 @towlower(i32 %89)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true101, %cond.true
  %90 = load i32*, i32** %wpat.addr, align 4
  %91 = load i32, i32* %90, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true104
  %cond106 = phi i32 [ %call105, %cond.true104 ], [ %91, %cond.false ]
  %92 = load i32, i32* @match_ignore_case, align 4
  %tobool107 = icmp ne i32 %92, 0
  br i1 %tobool107, label %land.lhs.true108, label %cond.false115

land.lhs.true108:                                 ; preds = %cond.end
  %93 = load i32*, i32** %wstring.addr, align 4
  %94 = load i32, i32* %n, align 4
  %arrayidx109 = getelementptr inbounds i32, i32* %93, i32 %94
  %95 = load i32, i32* %arrayidx109, align 4
  %call110 = call i32 @iswupper(i32 %95)
  %tobool111 = icmp ne i32 %call110, 0
  br i1 %tobool111, label %cond.true112, label %cond.false115

cond.true112:                                     ; preds = %land.lhs.true108
  %96 = load i32*, i32** %wstring.addr, align 4
  %97 = load i32, i32* %n, align 4
  %arrayidx113 = getelementptr inbounds i32, i32* %96, i32 %97
  %98 = load i32, i32* %arrayidx113, align 4
  %call114 = call i32 @towlower(i32 %98)
  br label %cond.end117

cond.false115:                                    ; preds = %land.lhs.true108, %cond.end
  %99 = load i32*, i32** %wstring.addr, align 4
  %100 = load i32, i32* %n, align 4
  %arrayidx116 = getelementptr inbounds i32, i32* %99, i32 %100
  %101 = load i32, i32* %arrayidx116, align 4
  br label %cond.end117

cond.end117:                                      ; preds = %cond.false115, %cond.true112
  %cond118 = phi i32 [ %call114, %cond.true112 ], [ %101, %cond.false115 ]
  %cmp119 = icmp eq i32 %cond106, %cond118
  %conv120 = zext i1 %cmp119 to i32
  br label %cond.end126

cond.false121:                                    ; preds = %for.body
  %102 = load i32*, i32** %wpat.addr, align 4
  %103 = load i32*, i32** %wstring.addr, align 4
  %104 = load i32, i32* %n, align 4
  %add.ptr122 = getelementptr inbounds i32, i32* %103, i32 %104
  %105 = load i32, i32* @match_ignore_case, align 4
  %tobool123 = icmp ne i32 %105, 0
  %cond124 = select i1 %tobool123, i32 16, i32 0
  %call125 = call i32 @match_pattern_wchar(i32* %102, i32* %add.ptr122, i32 %cond124)
  br label %cond.end126

cond.end126:                                      ; preds = %cond.false121, %cond.end117
  %cond127 = phi i32 [ %conv120, %cond.end117 ], [ %call125, %cond.false121 ]
  store i32 %cond127, i32* %n2, align 4
  %106 = load i32, i32* %n2, align 4
  %tobool128 = icmp ne i32 %106, 0
  br i1 %tobool128, label %if.then129, label %if.end166

if.then129:                                       ; preds = %cond.end126
  %107 = load i32, i32* %mlen, align 4
  %cmp130 = icmp eq i32 %107, -1
  br i1 %cmp130, label %cond.true132, label %cond.false133

cond.true132:                                     ; preds = %if.then129
  %108 = load i32, i32* %wstrlen.addr, align 4
  br label %cond.end135

cond.false133:                                    ; preds = %if.then129
  %109 = load i32, i32* %n, align 4
  %110 = load i32, i32* %mlen, align 4
  %add134 = add nsw i32 %109, %110
  br label %cond.end135

cond.end135:                                      ; preds = %cond.false133, %cond.true132
  %cond136 = phi i32 [ %108, %cond.true132 ], [ %add134, %cond.false133 ]
  store i32 %cond136, i32* %n1, align 4
  %111 = load i32, i32* %n1, align 4
  %112 = load i32, i32* %wstrlen.addr, align 4
  %cmp137 = icmp ugt i32 %111, %112
  br i1 %cmp137, label %if.then139, label %if.end140

if.then139:                                       ; preds = %cond.end135
  br label %for.end168

if.end140:                                        ; preds = %cond.end135
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc, %if.end140
  %113 = load i32, i32* %n1, align 4
  %114 = load i32, i32* %n, align 4
  %cmp142 = icmp sge i32 %113, %114
  br i1 %cmp142, label %for.body144, label %for.end

for.body144:                                      ; preds = %for.cond141
  %115 = load i32*, i32** %wstring.addr, align 4
  %116 = load i32, i32* %n1, align 4
  %arrayidx145 = getelementptr inbounds i32, i32* %115, i32 %116
  %117 = load i32, i32* %arrayidx145, align 4
  store i32 %117, i32* %wc, align 4
  %118 = load i32*, i32** %wstring.addr, align 4
  %119 = load i32, i32* %n1, align 4
  %arrayidx146 = getelementptr inbounds i32, i32* %118, i32 %119
  store i32 0, i32* %arrayidx146, align 4
  %120 = load i32*, i32** %wpat.addr, align 4
  %121 = load i32*, i32** %wstring.addr, align 4
  %122 = load i32, i32* %n, align 4
  %add.ptr147 = getelementptr inbounds i32, i32* %121, i32 %122
  %123 = load i32, i32* @extended_glob, align 4
  %tobool148 = icmp ne i32 %123, 0
  %cond149 = select i1 %tobool148, i32 32, i32 0
  %124 = load i32, i32* @match_ignore_case, align 4
  %tobool150 = icmp ne i32 %124, 0
  %cond151 = select i1 %tobool150, i32 16, i32 0
  %or152 = or i32 %cond149, %cond151
  %call153 = call i32 @wcsmatch(i32* %120, i32* %add.ptr147, i32 %or152)
  %cmp154 = icmp eq i32 %call153, 0
  br i1 %cmp154, label %if.then156, label %if.end160

if.then156:                                       ; preds = %for.body144
  %125 = load i32, i32* %wc, align 4
  %126 = load i32*, i32** %wstring.addr, align 4
  %127 = load i32, i32* %n1, align 4
  %arrayidx157 = getelementptr inbounds i32, i32* %126, i32 %127
  store i32 %125, i32* %arrayidx157, align 4
  %128 = load i8**, i8*** %indices.addr, align 4
  %129 = load i32, i32* %n, align 4
  %arrayidx158 = getelementptr inbounds i8*, i8** %128, i32 %129
  %130 = load i8*, i8** %arrayidx158, align 4
  %131 = load i8**, i8*** %sp.addr, align 4
  store i8* %130, i8** %131, align 4
  %132 = load i8**, i8*** %indices.addr, align 4
  %133 = load i32, i32* %n1, align 4
  %arrayidx159 = getelementptr inbounds i8*, i8** %132, i32 %133
  %134 = load i8*, i8** %arrayidx159, align 4
  %135 = load i8**, i8*** %ep.addr, align 4
  store i8* %134, i8** %135, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end160:                                        ; preds = %for.body144
  %136 = load i32, i32* %wc, align 4
  %137 = load i32*, i32** %wstring.addr, align 4
  %138 = load i32, i32* %n1, align 4
  %arrayidx161 = getelementptr inbounds i32, i32* %137, i32 %138
  store i32 %136, i32* %arrayidx161, align 4
  %139 = load i32, i32* %mlen, align 4
  %cmp162 = icmp ne i32 %139, -1
  br i1 %cmp162, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.end160
  br label %for.end

if.end165:                                        ; preds = %if.end160
  br label %for.inc

for.inc:                                          ; preds = %if.end165
  %140 = load i32, i32* %n1, align 4
  %dec = add nsw i32 %140, -1
  store i32 %dec, i32* %n1, align 4
  br label %for.cond141

for.end:                                          ; preds = %if.then164, %for.cond141
  br label %if.end166

if.end166:                                        ; preds = %for.end, %cond.end126
  br label %for.inc167

for.inc167:                                       ; preds = %if.end166
  %141 = load i32, i32* %n, align 4
  %inc = add nsw i32 %141, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond

for.end168:                                       ; preds = %if.then139, %for.cond
  store i32 0, i32* %retval, align 4
  br label %return

sw.bb169:                                         ; preds = %if.end95
  %142 = load i32*, i32** %wpat.addr, align 4
  %143 = load i32*, i32** %wstring.addr, align 4
  %144 = load i32, i32* @match_ignore_case, align 4
  %tobool170 = icmp ne i32 %144, 0
  %cond171 = select i1 %tobool170, i32 16, i32 0
  %call172 = call i32 @match_pattern_wchar(i32* %142, i32* %143, i32 %cond171)
  %cmp173 = icmp eq i32 %call172, 0
  br i1 %cmp173, label %if.then175, label %if.end176

if.then175:                                       ; preds = %sw.bb169
  store i32 0, i32* %retval, align 4
  br label %return

if.end176:                                        ; preds = %sw.bb169
  %145 = load i32, i32* %mlen, align 4
  %cmp177 = icmp eq i32 %145, -1
  br i1 %cmp177, label %cond.true179, label %cond.false180

cond.true179:                                     ; preds = %if.end176
  %146 = load i32, i32* %wstrlen.addr, align 4
  br label %cond.end181

cond.false180:                                    ; preds = %if.end176
  %147 = load i32, i32* %mlen, align 4
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false180, %cond.true179
  %cond182 = phi i32 [ %146, %cond.true179 ], [ %147, %cond.false180 ]
  store i32 %cond182, i32* %n, align 4
  br label %for.cond183

for.cond183:                                      ; preds = %for.inc207, %cond.end181
  %148 = load i32, i32* %n, align 4
  %cmp184 = icmp sge i32 %148, 0
  br i1 %cmp184, label %for.body186, label %for.end209

for.body186:                                      ; preds = %for.cond183
  %149 = load i32*, i32** %wstring.addr, align 4
  %150 = load i32, i32* %n, align 4
  %arrayidx187 = getelementptr inbounds i32, i32* %149, i32 %150
  %151 = load i32, i32* %arrayidx187, align 4
  store i32 %151, i32* %wc, align 4
  %152 = load i32*, i32** %wstring.addr, align 4
  %153 = load i32, i32* %n, align 4
  %arrayidx188 = getelementptr inbounds i32, i32* %152, i32 %153
  store i32 0, i32* %arrayidx188, align 4
  %154 = load i32*, i32** %wpat.addr, align 4
  %155 = load i32*, i32** %wstring.addr, align 4
  %156 = load i32, i32* @extended_glob, align 4
  %tobool189 = icmp ne i32 %156, 0
  %cond190 = select i1 %tobool189, i32 32, i32 0
  %157 = load i32, i32* @match_ignore_case, align 4
  %tobool191 = icmp ne i32 %157, 0
  %cond192 = select i1 %tobool191, i32 16, i32 0
  %or193 = or i32 %cond190, %cond192
  %call194 = call i32 @wcsmatch(i32* %154, i32* %155, i32 %or193)
  %cmp195 = icmp eq i32 %call194, 0
  br i1 %cmp195, label %if.then197, label %if.end201

if.then197:                                       ; preds = %for.body186
  %158 = load i32, i32* %wc, align 4
  %159 = load i32*, i32** %wstring.addr, align 4
  %160 = load i32, i32* %n, align 4
  %arrayidx198 = getelementptr inbounds i32, i32* %159, i32 %160
  store i32 %158, i32* %arrayidx198, align 4
  %161 = load i8**, i8*** %indices.addr, align 4
  %arrayidx199 = getelementptr inbounds i8*, i8** %161, i32 0
  %162 = load i8*, i8** %arrayidx199, align 4
  %163 = load i8**, i8*** %sp.addr, align 4
  store i8* %162, i8** %163, align 4
  %164 = load i8**, i8*** %indices.addr, align 4
  %165 = load i32, i32* %n, align 4
  %arrayidx200 = getelementptr inbounds i8*, i8** %164, i32 %165
  %166 = load i8*, i8** %arrayidx200, align 4
  %167 = load i8**, i8*** %ep.addr, align 4
  store i8* %166, i8** %167, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end201:                                        ; preds = %for.body186
  %168 = load i32, i32* %wc, align 4
  %169 = load i32*, i32** %wstring.addr, align 4
  %170 = load i32, i32* %n, align 4
  %arrayidx202 = getelementptr inbounds i32, i32* %169, i32 %170
  store i32 %168, i32* %arrayidx202, align 4
  %171 = load i32, i32* %mlen, align 4
  %cmp203 = icmp ne i32 %171, -1
  br i1 %cmp203, label %if.then205, label %if.end206

if.then205:                                       ; preds = %if.end201
  br label %for.end209

if.end206:                                        ; preds = %if.end201
  br label %for.inc207

for.inc207:                                       ; preds = %if.end206
  %172 = load i32, i32* %n, align 4
  %dec208 = add nsw i32 %172, -1
  store i32 %dec208, i32* %n, align 4
  br label %for.cond183

for.end209:                                       ; preds = %if.then205, %for.cond183
  store i32 0, i32* %retval, align 4
  br label %return

sw.bb210:                                         ; preds = %if.end95
  %173 = load i32, i32* %wstrlen.addr, align 4
  %174 = load i32, i32* %mlen, align 4
  %cmp211 = icmp eq i32 %174, -1
  br i1 %cmp211, label %cond.true213, label %cond.false214

cond.true213:                                     ; preds = %sw.bb210
  %175 = load i32, i32* %wstrlen.addr, align 4
  br label %cond.end215

cond.false214:                                    ; preds = %sw.bb210
  %176 = load i32, i32* %mlen, align 4
  br label %cond.end215

cond.end215:                                      ; preds = %cond.false214, %cond.true213
  %cond216 = phi i32 [ %175, %cond.true213 ], [ %176, %cond.false214 ]
  %sub217 = sub i32 %173, %cond216
  store i32 %sub217, i32* %n, align 4
  br label %for.cond218

for.cond218:                                      ; preds = %for.inc239, %cond.end215
  %177 = load i32, i32* %n, align 4
  %178 = load i32, i32* %wstrlen.addr, align 4
  %cmp219 = icmp ule i32 %177, %178
  br i1 %cmp219, label %for.body221, label %for.end241

for.body221:                                      ; preds = %for.cond218
  %179 = load i32*, i32** %wpat.addr, align 4
  %180 = load i32*, i32** %wstring.addr, align 4
  %181 = load i32, i32* %n, align 4
  %add.ptr222 = getelementptr inbounds i32, i32* %180, i32 %181
  %182 = load i32, i32* @extended_glob, align 4
  %tobool223 = icmp ne i32 %182, 0
  %cond224 = select i1 %tobool223, i32 32, i32 0
  %183 = load i32, i32* @match_ignore_case, align 4
  %tobool225 = icmp ne i32 %183, 0
  %cond226 = select i1 %tobool225, i32 16, i32 0
  %or227 = or i32 %cond224, %cond226
  %call228 = call i32 @wcsmatch(i32* %179, i32* %add.ptr222, i32 %or227)
  %cmp229 = icmp eq i32 %call228, 0
  br i1 %cmp229, label %if.then231, label %if.end234

if.then231:                                       ; preds = %for.body221
  %184 = load i8**, i8*** %indices.addr, align 4
  %185 = load i32, i32* %n, align 4
  %arrayidx232 = getelementptr inbounds i8*, i8** %184, i32 %185
  %186 = load i8*, i8** %arrayidx232, align 4
  %187 = load i8**, i8*** %sp.addr, align 4
  store i8* %186, i8** %187, align 4
  %188 = load i8**, i8*** %indices.addr, align 4
  %189 = load i32, i32* %wstrlen.addr, align 4
  %arrayidx233 = getelementptr inbounds i8*, i8** %188, i32 %189
  %190 = load i8*, i8** %arrayidx233, align 4
  %191 = load i8**, i8*** %ep.addr, align 4
  store i8* %190, i8** %191, align 4
  store i32 1, i32* %retval, align 4
  br label %return

if.end234:                                        ; preds = %for.body221
  %192 = load i32, i32* %mlen, align 4
  %cmp235 = icmp ne i32 %192, -1
  br i1 %cmp235, label %if.then237, label %if.end238

if.then237:                                       ; preds = %if.end234
  br label %for.end241

if.end238:                                        ; preds = %if.end234
  br label %for.inc239

for.inc239:                                       ; preds = %if.end238
  %193 = load i32, i32* %n, align 4
  %inc240 = add nsw i32 %193, 1
  store i32 %inc240, i32* %n, align 4
  br label %for.cond218

for.end241:                                       ; preds = %if.then237, %for.cond218
  store i32 0, i32* %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %if.end95
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %for.end241, %if.then231, %for.end209, %if.then197, %if.then175, %for.end168, %if.then156, %if.then94
  %194 = load i32, i32* %retval, align 4
  ret i32 %194
}

declare i32 @strmatch(i8*, i8*, i32) #1

declare i32 @umatchlen(i8*, i32) #1

declare i32 @match_pattern_char(i8*, i8*, i32) #1

declare i32 @wcslen(i32*) #1

declare i32 @wcsmatch(i32*, i32*, i32) #1

declare i32 @wmatchlen(i32*, i32) #1

declare i32 @iswupper(i32) #1

declare i32 @towlower(i32) #1

declare i32 @match_pattern_wchar(i32*, i32*, i32) #1

declare i32 @strcmp(i8*, i8*) #1

declare %struct.word_list* @copy_word_list(%struct.word_list*) #1

; Function Attrs: noinline nounwind
define internal i8* @process_substitute(i8* %string, i32 %open_for_read_in_child) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %open_for_read_in_child.addr = alloca i32, align 4
  %pathname = alloca i8*, align 4
  %fd = alloca i32, align 4
  %result = alloca i32, align 4
  %old_pid = alloca i32, align 4
  %pid = alloca i32, align 4
  %parent_pipe_fd = alloca i32, align 4
  %child_pipe_fd = alloca i32, align 4
  %fildes = alloca [2 x i32], align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %open_for_read_in_child, i32* %open_for_read_in_child.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %tobool1 = icmp ne i8 %2, 0
  br i1 %tobool1, label %lor.lhs.false2, label %if.then

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* @wordexp_only, align 4
  %tobool3 = icmp ne i32 %3, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 0
  %call = call i32 @pipe(i32* %arraydecay)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call i8* @libintl_gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i32 0, i32 0))
  call void (i8*, ...) @sys_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* %call5)
  store i8* null, i8** %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end
  %4 = load i32, i32* %open_for_read_in_child.addr, align 4
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 %4
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %parent_pipe_fd, align 4
  %6 = load i32, i32* %open_for_read_in_child.addr, align 4
  %sub = sub nsw i32 1, %6
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %fildes, i32 0, i32 %sub
  %7 = load i32, i32* %arrayidx7, align 4
  store i32 %7, i32* %child_pipe_fd, align 4
  %8 = load i32, i32* %parent_pipe_fd, align 4
  %call8 = call i32 @move_to_high_fd(i32 %8, i32 1, i32 64)
  store i32 %call8, i32* %parent_pipe_fd, align 4
  %9 = load i32, i32* %parent_pipe_fd, align 4
  %call9 = call i8* @make_dev_fd_filename(i32 %9)
  store i8* %call9, i8** %pathname, align 4
  %10 = load i8*, i8** %pathname, align 4
  %cmp10 = icmp eq i8* %10, null
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.end6
  %call12 = call i8* @libintl_gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i32 0, i32 0))
  call void (i8*, ...) @sys_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* %call12)
  store i8* null, i8** %retval, align 4
  br label %return

if.end13:                                         ; preds = %if.end6
  %11 = load volatile i32, i32* @last_made_pid, align 4
  store i32 %11, i32* %old_pid, align 4
  %call14 = call i32 @make_child(i8* null, i32 1)
  store i32 %call14, i32* %pid, align 4
  %12 = load i32, i32* %pid, align 4
  %cmp15 = icmp eq i32 %12, 0
  br i1 %cmp15, label %if.then16, label %if.end26

if.then16:                                        ; preds = %if.end13
  call void @reset_terminating_signals()
  call void @free_pushed_string_input()
  call void @restore_original_signals()
  br label %do.body

do.body:                                          ; preds = %if.then16
  %13 = load volatile i32, i32* @terminating_signal, align 4
  %tobool17 = icmp ne i32 %13, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %do.body
  %14 = load volatile i32, i32* @terminating_signal, align 4
  call void @termsig_handler(i32 %14)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %do.body
  %15 = load volatile i32, i32* @interrupt_state, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end19
  call void @throw_to_top_level()
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end19
  br label %do.end

do.end:                                           ; preds = %if.end22
  call void @setup_async_signals()
  %16 = load i32, i32* @subshell_environment, align 4
  %or = or i32 %16, 36
  store i32 %or, i32* @subshell_environment, align 4
  %17 = load i32, i32* @expanding_redir, align 4
  %tobool23 = icmp ne i32 %17, 0
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %do.end
  call void @flush_temporary_env()
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %do.end
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end13
  call void @stop_making_children()
  %18 = load i32, i32* %pid, align 4
  %cmp27 = icmp slt i32 %18, 0
  br i1 %cmp27, label %if.then28, label %if.end32

if.then28:                                        ; preds = %if.end26
  %call29 = call i8* @libintl_gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i32 0, i32 0))
  call void (i8*, ...) @sys_error(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0), i8* %call29)
  %19 = load i8*, i8** %pathname, align 4
  call void @sh_xfree(i8* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5807)
  %20 = load i32, i32* %parent_pipe_fd, align 4
  %call30 = call i32 @close(i32 %20)
  %21 = load i32, i32* %child_pipe_fd, align 4
  %call31 = call i32 @close(i32 %21)
  store i8* null, i8** %retval, align 4
  br label %return

if.end32:                                         ; preds = %if.end26
  %22 = load i32, i32* %pid, align 4
  %cmp33 = icmp sgt i32 %22, 0
  br i1 %cmp33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end32
  %23 = load i32, i32* %old_pid, align 4
  store volatile i32 %23, i32* @last_made_pid, align 4
  %24 = load i32, i32* %child_pipe_fd, align 4
  %call35 = call i32 @close(i32 %24)
  %25 = load i8*, i8** %pathname, align 4
  store i8* %25, i8** %retval, align 4
  br label %return

if.end36:                                         ; preds = %if.end32
  %call37 = call void (i32)* @set_sigint_handler()
  %26 = load i32, i32* %child_pipe_fd, align 4
  store i32 %26, i32* %fd, align 4
  %27 = load i32, i32* %open_for_read_in_child.addr, align 4
  %cmp38 = icmp eq i32 %27, 0
  br i1 %cmp38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.end36
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 4
  %call40 = call i32 @_bash_fpurge(%struct._IO_FILE* %28)
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end36
  %29 = load i32, i32* %fd, align 4
  %30 = load i32, i32* %open_for_read_in_child.addr, align 4
  %tobool42 = icmp ne i32 %30, 0
  %cond = select i1 %tobool42, i32 0, i32 1
  %call43 = call i32 @dup2(i32 %29, i32 %cond)
  %cmp44 = icmp slt i32 %call43, 0
  br i1 %cmp44, label %if.then45, label %if.end49

if.then45:                                        ; preds = %if.end41
  %call46 = call i8* @libintl_gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28, i32 0, i32 0))
  %31 = load i8*, i8** %pathname, align 4
  %32 = load i32, i32* %open_for_read_in_child.addr, align 4
  %tobool47 = icmp ne i32 %32, 0
  %cond48 = select i1 %tobool47, i32 0, i32 1
  call void (i8*, ...) @sys_error(i8* %call46, i8* %31, i32 %cond48)
  call void @exit(i32 127) #7
  unreachable

if.end49:                                         ; preds = %if.end41
  %33 = load i32, i32* %fd, align 4
  %34 = load i32, i32* %open_for_read_in_child.addr, align 4
  %tobool50 = icmp ne i32 %34, 0
  %cond51 = select i1 %tobool50, i32 0, i32 1
  %cmp52 = icmp ne i32 %33, %cond51
  br i1 %cmp52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end49
  %35 = load i32, i32* %fd, align 4
  %call54 = call i32 @close(i32 %35)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end49
  %36 = load %struct.fd_bitmap*, %struct.fd_bitmap** @current_fds_to_close, align 4
  %tobool56 = icmp ne %struct.fd_bitmap* %36, null
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end55
  %37 = load %struct.fd_bitmap*, %struct.fd_bitmap** @current_fds_to_close, align 4
  call void @close_fd_bitmap(%struct.fd_bitmap* %37)
  store %struct.fd_bitmap* null, %struct.fd_bitmap** @current_fds_to_close, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.end55
  %38 = load i32, i32* %parent_pipe_fd, align 4
  %call59 = call i32 @close(i32 %38)
  %39 = load i8*, i8** @dev_fd_list, align 4
  %40 = load i32, i32* %parent_pipe_fd, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %39, i32 %40
  store i8 0, i8* %arrayidx60, align 1
  store i32 0, i32* @expanding_redir, align 4
  %41 = load i8*, i8** %string.addr, align 4
  %call61 = call i8* @remove_quoted_escapes(i8* %41)
  %42 = load i32, i32* @subshell_level, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* @subshell_level, align 4
  %43 = load i8*, i8** %string.addr, align 4
  %call62 = call i32 @parse_and_execute(i8* %43, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0), i32 5)
  store i32 %call62, i32* %result, align 4
  %44 = load i32, i32* @subshell_level, align 4
  %dec = add nsw i32 %44, -1
  store i32 %dec, i32* @subshell_level, align 4
  %45 = load i32, i32* %result, align 4
  store i32 %45, i32* @last_command_exit_value, align 4
  %call63 = call i32 @run_exit_trap()
  store i32 %call63, i32* %result, align 4
  %46 = load i32, i32* %result, align 4
  call void @exit(i32 %46) #7
  unreachable

return:                                           ; preds = %if.then34, %if.then28, %if.then11, %if.then4, %if.then
  %47 = load i8*, i8** %retval, align 4
  ret i8* %47
}

declare i8* @bash_tilde_find_word(i8*, i32, i32*) #1

declare i8* @bash_tilde_expand(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal %struct.word_desc* @param_expand(i8* %string, i32* %sindex, i32 %quoted, i32* %expanded_something, i32* %contains_dollar_at, i32* %quoted_dollar_at_p, i32* %had_quoted_null_p, i32 %pflags) #0 {
entry:
  %retval = alloca %struct.word_desc*, align 4
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %quoted.addr = alloca i32, align 4
  %expanded_something.addr = alloca i32*, align 4
  %contains_dollar_at.addr = alloca i32*, align 4
  %quoted_dollar_at_p.addr = alloca i32*, align 4
  %had_quoted_null_p.addr = alloca i32*, align 4
  %pflags.addr = alloca i32, align 4
  %temp = alloca i8*, align 4
  %temp1 = alloca i8*, align 4
  %uerror = alloca [3 x i8], align 1
  %savecmd = alloca i8*, align 4
  %zindex = alloca i32, align 4
  %t_index = alloca i32, align 4
  %expok = alloca i32, align 4
  %c = alloca i8, align 1
  %number = alloca i64, align 8
  %var = alloca %struct.variable*, align 4
  %list = alloca %struct.word_list*, align 4
  %tdesc = alloca %struct.word_desc*, align 4
  %ret = alloca %struct.word_desc*, align 4
  %tflag = alloca i32, align 4
  %temp2 = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32* %expanded_something, i32** %expanded_something.addr, align 4
  store i32* %contains_dollar_at, i32** %contains_dollar_at.addr, align 4
  store i32* %quoted_dollar_at_p, i32** %quoted_dollar_at_p.addr, align 4
  store i32* %had_quoted_null_p, i32** %had_quoted_null_p.addr, align 4
  store i32 %pflags, i32* %pflags.addr, align 4
  %0 = load i32*, i32** %sindex.addr, align 4
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %zindex, align 4
  %2 = load i8*, i8** %string.addr, align 4
  %3 = load i32, i32* %zindex, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %zindex, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 %inc
  %4 = load i8, i8* %arrayidx, align 1
  store i8 %4, i8* %c, align 1
  store i8* null, i8** %temp, align 4
  store %struct.word_desc* null, %struct.word_desc** %tdesc, align 4
  store %struct.word_desc* null, %struct.word_desc** %ret, align 4
  store i32 0, i32* %tflag, align 4
  %5 = load i8, i8* %c, align 1
  %conv = zext i8 %5 to i32
  switch i32 %conv, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 36, label %sw.bb17
    i32 35, label %sw.bb20
    i32 63, label %sw.bb24
    i32 45, label %sw.bb27
    i32 33, label %sw.bb29
    i32 42, label %sw.bb49
    i32 64, label %sw.bb129
    i32 123, label %sw.bb149
    i32 40, label %sw.bb190
    i32 91, label %sw.bb253
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %6 = load i8, i8* %c, align 1
  %conv1 = zext i8 %6 to i32
  %sub = sub nsw i32 %conv1, 48
  %arrayidx2 = getelementptr inbounds [0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 %sub
  %7 = load i8*, i8** %arrayidx2, align 4
  store i8* %7, i8** %temp1, align 4
  %8 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %9 = load i8*, i8** %temp1, align 4
  %cmp = icmp eq i8* %9, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %arrayidx4 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 0
  store i8 36, i8* %arrayidx4, align 1
  %10 = load i8, i8* %c, align 1
  %arrayidx5 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 1
  store i8 %10, i8* %arrayidx5, align 1
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 2
  store i8 0, i8* %arrayidx6, align 1
  store i32 1, i32* @last_command_exit_value, align 4
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 0
  call void @err_unboundvar(i8* %arraydecay)
  %11 = load i32, i32* @interactive_shell, align 4
  %tobool7 = icmp ne i32 %11, 0
  %cond = select i1 %tobool7, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond, %struct.word_desc** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %12 = load i8*, i8** %temp1, align 4
  %tobool8 = icmp ne i8* %12, null
  br i1 %tobool8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end
  %13 = load i8*, i8** %temp1, align 4
  %14 = load i8, i8* %13, align 1
  %conv10 = sext i8 %14 to i32
  %tobool11 = icmp ne i32 %conv10, 0
  br i1 %tobool11, label %land.lhs.true12, label %cond.false

land.lhs.true12:                                  ; preds = %if.then9
  %15 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %15, 3
  %tobool13 = icmp ne i32 %and, 0
  br i1 %tobool13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true12
  %16 = load i8*, i8** %temp1, align 4
  %call = call i8* @quote_string(i8* %16)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true12, %if.then9
  %17 = load i8*, i8** %temp1, align 4
  %call14 = call i8* @quote_escapes(i8* %17)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i8* [ %call, %cond.true ], [ %call14, %cond.false ]
  store i8* %cond15, i8** %temp, align 4
  br label %if.end16

if.else:                                          ; preds = %if.end
  store i8* null, i8** %temp, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.else, %cond.end
  br label %sw.epilog

sw.bb17:                                          ; preds = %entry
  %18 = load i32, i32* @dollar_dollar_pid, align 4
  %conv18 = sext i32 %18 to i64
  %call19 = call i8* @itos(i64 %conv18)
  store i8* %call19, i8** %temp, align 4
  br label %sw.epilog

sw.bb20:                                          ; preds = %entry
  %call21 = call i32 @number_of_args()
  %conv22 = sext i32 %call21 to i64
  %call23 = call i8* @itos(i64 %conv22)
  store i8* %call23, i8** %temp, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %entry
  %19 = load i32, i32* @last_command_exit_value, align 4
  %conv25 = sext i32 %19 to i64
  %call26 = call i8* @itos(i64 %conv25)
  store i8* %call26, i8** %temp, align 4
  br label %sw.epilog

sw.bb27:                                          ; preds = %entry
  %call28 = call i8* @which_set_flags()
  store i8* %call28, i8** %temp, align 4
  br label %sw.epilog

sw.bb29:                                          ; preds = %entry
  %20 = load volatile i32, i32* @last_asynchronous_pid, align 4
  %cmp30 = icmp eq i32 %20, -1
  br i1 %cmp30, label %if.then32, label %if.else45

if.then32:                                        ; preds = %sw.bb29
  %21 = load i32*, i32** %expanded_something.addr, align 4
  %tobool33 = icmp ne i32* %21, null
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.then32
  %22 = load i32*, i32** %expanded_something.addr, align 4
  store i32 0, i32* %22, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.then32
  store i8* null, i8** %temp, align 4
  %23 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool36 = icmp ne i32 %23, 0
  br i1 %tobool36, label %if.then37, label %if.end44

if.then37:                                        ; preds = %if.end35
  %arrayidx38 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 0
  store i8 36, i8* %arrayidx38, align 1
  %24 = load i8, i8* %c, align 1
  %arrayidx39 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 1
  store i8 %24, i8* %arrayidx39, align 1
  %arrayidx40 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 2
  store i8 0, i8* %arrayidx40, align 1
  store i32 1, i32* @last_command_exit_value, align 4
  %arraydecay41 = getelementptr inbounds [3 x i8], [3 x i8]* %uerror, i32 0, i32 0
  call void @err_unboundvar(i8* %arraydecay41)
  %25 = load i32, i32* @interactive_shell, align 4
  %tobool42 = icmp ne i32 %25, 0
  %cond43 = select i1 %tobool42, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond43, %struct.word_desc** %retval, align 4
  br label %return

if.end44:                                         ; preds = %if.end35
  br label %if.end48

if.else45:                                        ; preds = %sw.bb29
  %26 = load volatile i32, i32* @last_asynchronous_pid, align 4
  %conv46 = sext i32 %26 to i64
  %call47 = call i8* @itos(i64 %conv46)
  store i8* %call47, i8** %temp, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.else45, %if.end44
  br label %sw.epilog

sw.bb49:                                          ; preds = %entry
  %call50 = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call50, %struct.word_list** %list, align 4
  %27 = load i32, i32* %quoted.addr, align 4
  %and51 = and i32 %27, 3
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else57

land.lhs.true53:                                  ; preds = %sw.bb49
  %28 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp54 = icmp eq %struct.word_list* %28, null
  br i1 %cmp54, label %if.then56, label %if.else57

if.then56:                                        ; preds = %land.lhs.true53
  store i8* null, i8** %temp, align 4
  br label %if.end128

if.else57:                                        ; preds = %land.lhs.true53, %sw.bb49
  %29 = load i32, i32* %quoted.addr, align 4
  %and58 = and i32 %29, 11
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %if.then60, label %if.else88

if.then60:                                        ; preds = %if.else57
  %30 = load i32, i32* %quoted.addr, align 4
  %and61 = and i32 %30, 9
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %cond.true63, label %cond.false65

cond.true63:                                      ; preds = %if.then60
  %31 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call64 = call i8* @string_list_dollar_star(%struct.word_list* %31)
  br label %cond.end67

cond.false65:                                     ; preds = %if.then60
  %32 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call66 = call i8* @string_list(%struct.word_list* %32)
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false65, %cond.true63
  %cond68 = phi i8* [ %call64, %cond.true63 ], [ %call66, %cond.false65 ]
  store i8* %cond68, i8** %temp, align 4
  %33 = load i8*, i8** %temp, align 4
  %tobool69 = icmp ne i8* %33, null
  br i1 %tobool69, label %if.then70, label %if.end87

if.then70:                                        ; preds = %cond.end67
  %34 = load i32, i32* %quoted.addr, align 4
  %and71 = and i32 %34, 1
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %cond.true73, label %cond.false75

cond.true73:                                      ; preds = %if.then70
  %35 = load i8*, i8** %temp, align 4
  %call74 = call i8* @quote_string(i8* %35)
  br label %cond.end76

cond.false75:                                     ; preds = %if.then70
  %36 = load i8*, i8** %temp, align 4
  br label %cond.end76

cond.end76:                                       ; preds = %cond.false75, %cond.true73
  %cond77 = phi i8* [ %call74, %cond.true73 ], [ %36, %cond.false75 ]
  store i8* %cond77, i8** %temp1, align 4
  %37 = load i8*, i8** %temp, align 4
  %38 = load i8, i8* %37, align 1
  %conv78 = sext i8 %38 to i32
  %cmp79 = icmp eq i32 %conv78, 0
  br i1 %cmp79, label %if.then81, label %if.end82

if.then81:                                        ; preds = %cond.end76
  %39 = load i32, i32* %tflag, align 4
  %or = or i32 %39, 262144
  store i32 %or, i32* %tflag, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %cond.end76
  %40 = load i8*, i8** %temp, align 4
  %41 = load i8*, i8** %temp1, align 4
  %cmp83 = icmp ne i8* %40, %41
  br i1 %cmp83, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.end82
  %42 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %42, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8659)
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.end82
  %43 = load i8*, i8** %temp1, align 4
  store i8* %43, i8** %temp, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %cond.end67
  br label %if.end127

if.else88:                                        ; preds = %if.else57
  %44 = load i32, i32* @expand_no_split_dollar_star, align 4
  %tobool89 = icmp ne i32 %44, 0
  br i1 %tobool89, label %land.lhs.true90, label %if.else96

land.lhs.true90:                                  ; preds = %if.else88
  %45 = load i8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ifs_firstc, i32 0, i32 0), align 1
  %conv91 = zext i8 %45 to i32
  %cmp92 = icmp eq i32 %conv91, 0
  br i1 %cmp92, label %if.then94, label %if.else96

if.then94:                                        ; preds = %land.lhs.true90
  %46 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call95 = call i8* @string_list_dollar_star(%struct.word_list* %46)
  store i8* %call95, i8** %temp, align 4
  br label %if.end120

if.else96:                                        ; preds = %land.lhs.true90, %if.else88
  %47 = load %struct.word_list*, %struct.word_list** %list, align 4
  %48 = load i32, i32* %quoted.addr, align 4
  %call97 = call i8* @string_list_dollar_at(%struct.word_list* %47, i32 %48, i32 0)
  store i8* %call97, i8** %temp, align 4
  %49 = load i32, i32* %quoted.addr, align 4
  %cmp98 = icmp eq i32 %49, 0
  br i1 %cmp98, label %land.lhs.true100, label %if.else106

land.lhs.true100:                                 ; preds = %if.else96
  %50 = load i32, i32* @ifs_is_set, align 4
  %cmp101 = icmp eq i32 %50, 0
  br i1 %cmp101, label %if.then104, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true100
  %51 = load i32, i32* @ifs_is_null, align 4
  %tobool103 = icmp ne i32 %51, 0
  br i1 %tobool103, label %if.then104, label %if.else106

if.then104:                                       ; preds = %lor.lhs.false, %land.lhs.true100
  %52 = load i32, i32* %tflag, align 4
  %or105 = or i32 %52, 8
  store i32 %or105, i32* %tflag, align 4
  br label %if.end119

if.else106:                                       ; preds = %lor.lhs.false, %if.else96
  %53 = load i8*, i8** %temp, align 4
  %tobool107 = icmp ne i8* %53, null
  br i1 %tobool107, label %land.lhs.true108, label %if.end118

land.lhs.true108:                                 ; preds = %if.else106
  %54 = load i32, i32* %quoted.addr, align 4
  %cmp109 = icmp eq i32 %54, 0
  br i1 %cmp109, label %land.lhs.true111, label %if.end118

land.lhs.true111:                                 ; preds = %land.lhs.true108
  %55 = load i32, i32* @ifs_is_set, align 4
  %tobool112 = icmp ne i32 %55, 0
  br i1 %tobool112, label %land.lhs.true113, label %if.end118

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %56 = load i32, i32* %pflags.addr, align 4
  %and114 = and i32 %56, 8
  %tobool115 = icmp ne i32 %and114, 0
  br i1 %tobool115, label %if.then116, label %if.end118

if.then116:                                       ; preds = %land.lhs.true113
  %57 = load i8*, i8** %temp, align 4
  %call117 = call i8* @quote_string(i8* %57)
  store i8* %call117, i8** %temp1, align 4
  %58 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8687)
  %59 = load i8*, i8** %temp1, align 4
  store i8* %59, i8** %temp, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %land.lhs.true113, %land.lhs.true111, %land.lhs.true108, %if.else106
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then104
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then94
  %60 = load i32, i32* @expand_no_split_dollar_star, align 4
  %cmp121 = icmp eq i32 %60, 0
  br i1 %cmp121, label %land.lhs.true123, label %if.end126

land.lhs.true123:                                 ; preds = %if.end120
  %61 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool124 = icmp ne i32* %61, null
  br i1 %tobool124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %land.lhs.true123
  %62 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %62, align 4
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %land.lhs.true123, %if.end120
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end87
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then56
  %63 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %63)
  br label %sw.epilog

sw.bb129:                                         ; preds = %entry
  %call130 = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call130, %struct.word_list** %list, align 4
  %64 = load i32*, i32** %quoted_dollar_at_p.addr, align 4
  %tobool131 = icmp ne i32* %64, null
  br i1 %tobool131, label %land.lhs.true132, label %if.end136

land.lhs.true132:                                 ; preds = %sw.bb129
  %65 = load i32, i32* %quoted.addr, align 4
  %and133 = and i32 %65, 3
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.then135, label %if.end136

if.then135:                                       ; preds = %land.lhs.true132
  %66 = load i32*, i32** %quoted_dollar_at_p.addr, align 4
  store i32 1, i32* %66, align 4
  br label %if.end136

if.end136:                                        ; preds = %if.then135, %land.lhs.true132, %sw.bb129
  %67 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool137 = icmp ne i32* %67, null
  br i1 %tobool137, label %if.then138, label %if.end139

if.then138:                                       ; preds = %if.end136
  %68 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %68, align 4
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %if.end136
  %69 = load %struct.word_list*, %struct.word_list** %list, align 4
  %70 = load i32, i32* %pflags.addr, align 4
  %and140 = and i32 %70, 8
  %tobool141 = icmp ne i32 %and140, 0
  br i1 %tobool141, label %cond.true142, label %cond.false144

cond.true142:                                     ; preds = %if.end139
  %71 = load i32, i32* %quoted.addr, align 4
  %or143 = or i32 %71, 1
  br label %cond.end145

cond.false144:                                    ; preds = %if.end139
  %72 = load i32, i32* %quoted.addr, align 4
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false144, %cond.true142
  %cond146 = phi i32 [ %or143, %cond.true142 ], [ %72, %cond.false144 ]
  %73 = load i32, i32* %pflags.addr, align 4
  %call147 = call i8* @string_list_dollar_at(%struct.word_list* %69, i32 %cond146, i32 %73)
  store i8* %call147, i8** %temp, align 4
  %74 = load i32, i32* %tflag, align 4
  %or148 = or i32 %74, 256
  store i32 %or148, i32* %tflag, align 4
  %75 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %75)
  br label %sw.epilog

sw.bb149:                                         ; preds = %entry
  %76 = load i8*, i8** %string.addr, align 4
  %77 = load i32, i32* %quoted.addr, align 4
  %78 = load i32, i32* %pflags.addr, align 4
  %79 = load i32*, i32** %quoted_dollar_at_p.addr, align 4
  %80 = load i32*, i32** %contains_dollar_at.addr, align 4
  %call150 = call %struct.word_desc* @parameter_brace_expand(i8* %76, i32* %zindex, i32 %77, i32 %78, i32* %79, i32* %80)
  store %struct.word_desc* %call150, %struct.word_desc** %tdesc, align 4
  %81 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %cmp151 = icmp eq %struct.word_desc* %81, @expand_wdesc_error
  br i1 %cmp151, label %if.then156, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %sw.bb149
  %82 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %cmp154 = icmp eq %struct.word_desc* %82, @expand_wdesc_fatal
  br i1 %cmp154, label %if.then156, label %if.end157

if.then156:                                       ; preds = %lor.lhs.false153, %sw.bb149
  %83 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  store %struct.word_desc* %83, %struct.word_desc** %retval, align 4
  br label %return

if.end157:                                        ; preds = %lor.lhs.false153
  %84 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %tobool158 = icmp ne %struct.word_desc* %84, null
  br i1 %tobool158, label %cond.true159, label %cond.false160

cond.true159:                                     ; preds = %if.end157
  %85 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %85, i32 0, i32 0
  %86 = load i8*, i8** %word, align 4
  br label %cond.end161

cond.false160:                                    ; preds = %if.end157
  br label %cond.end161

cond.end161:                                      ; preds = %cond.false160, %cond.true159
  %cond162 = phi i8* [ %86, %cond.true159 ], [ null, %cond.false160 ]
  store i8* %cond162, i8** %temp, align 4
  %87 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %tobool163 = icmp ne %struct.word_desc* %87, null
  br i1 %tobool163, label %land.lhs.true164, label %if.end189

land.lhs.true164:                                 ; preds = %cond.end161
  %88 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %word165 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %88, i32 0, i32 0
  %89 = load i8*, i8** %word165, align 4
  %tobool166 = icmp ne i8* %89, null
  br i1 %tobool166, label %land.lhs.true167, label %if.end189

land.lhs.true167:                                 ; preds = %land.lhs.true164
  %90 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %90, i32 0, i32 1
  %91 = load i32, i32* %flags, align 4
  %and168 = and i32 %91, 262144
  %tobool169 = icmp ne i32 %and168, 0
  br i1 %tobool169, label %land.lhs.true170, label %if.end189

land.lhs.true170:                                 ; preds = %land.lhs.true167
  %92 = load i8*, i8** %temp, align 4
  %arrayidx171 = getelementptr inbounds i8, i8* %92, i32 0
  %93 = load i8, i8* %arrayidx171, align 1
  %conv172 = sext i8 %93 to i32
  %cmp173 = icmp eq i32 %conv172, 127
  br i1 %cmp173, label %land.lhs.true175, label %if.end189

land.lhs.true175:                                 ; preds = %land.lhs.true170
  %94 = load i8*, i8** %temp, align 4
  %arrayidx176 = getelementptr inbounds i8, i8* %94, i32 1
  %95 = load i8, i8* %arrayidx176, align 1
  %conv177 = sext i8 %95 to i32
  %cmp178 = icmp eq i32 %conv177, 0
  br i1 %cmp178, label %if.then180, label %if.end189

if.then180:                                       ; preds = %land.lhs.true175
  %96 = load i32*, i32** %had_quoted_null_p.addr, align 4
  %tobool181 = icmp ne i32* %96, null
  br i1 %tobool181, label %if.then182, label %if.end183

if.then182:                                       ; preds = %if.then180
  %97 = load i32*, i32** %had_quoted_null_p.addr, align 4
  store i32 1, i32* %97, align 4
  br label %if.end183

if.end183:                                        ; preds = %if.then182, %if.then180
  %98 = load i32*, i32** %quoted_dollar_at_p.addr, align 4
  %99 = load i32, i32* %98, align 4
  %cmp184 = icmp eq i32 %99, 0
  br i1 %cmp184, label %if.then186, label %if.end188

if.then186:                                       ; preds = %if.end183
  %100 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8776)
  store i8* null, i8** %temp, align 4
  %101 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %word187 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %101, i32 0, i32 0
  store i8* null, i8** %word187, align 4
  br label %if.end188

if.end188:                                        ; preds = %if.then186, %if.end183
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %land.lhs.true175, %land.lhs.true170, %land.lhs.true167, %land.lhs.true164, %cond.end161
  %102 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  store %struct.word_desc* %102, %struct.word_desc** %ret, align 4
  br label %return0

sw.bb190:                                         ; preds = %entry
  %103 = load i32, i32* %zindex, align 4
  %add = add nsw i32 %103, 1
  store i32 %add, i32* %t_index, align 4
  %104 = load i8*, i8** %string.addr, align 4
  %105 = load i32, i32* %pflags.addr, align 4
  %and191 = and i32 %105, 16
  %tobool192 = icmp ne i32 %and191, 0
  %cond193 = select i1 %tobool192, i32 1024, i32 0
  %call194 = call i8* @extract_command_subst(i8* %104, i32* %t_index, i32 %cond193)
  store i8* %call194, i8** %temp, align 4
  %106 = load i32, i32* %t_index, align 4
  store i32 %106, i32* %zindex, align 4
  %107 = load i8*, i8** %temp, align 4
  %tobool195 = icmp ne i8* %107, null
  br i1 %tobool195, label %land.lhs.true196, label %if.end232

land.lhs.true196:                                 ; preds = %sw.bb190
  %108 = load i8*, i8** %temp, align 4
  %109 = load i8, i8* %108, align 1
  %conv197 = sext i8 %109 to i32
  %cmp198 = icmp eq i32 %conv197, 40
  br i1 %cmp198, label %if.then200, label %if.end232

if.then200:                                       ; preds = %land.lhs.true196
  %110 = load i8*, i8** %temp, align 4
  %add.ptr = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %add.ptr, i8** %temp1, align 4
  %111 = load i8*, i8** %temp1, align 4
  %call201 = call i32 @strlen(i8* %111)
  %add202 = add i32 1, %call201
  %call203 = call i8* @sh_xmalloc(i32 %add202, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8800)
  %112 = load i8*, i8** %temp1, align 4
  %call204 = call i8* @strcpy(i8* %call203, i8* %112)
  store i8* %call204, i8** %temp2, align 4
  %113 = load i8*, i8** %temp2, align 4
  %call205 = call i32 @strlen(i8* %113)
  %sub206 = sub i32 %call205, 1
  store i32 %sub206, i32* %t_index, align 4
  %114 = load i8*, i8** %temp2, align 4
  %115 = load i32, i32* %t_index, align 4
  %arrayidx207 = getelementptr inbounds i8, i8* %114, i32 %115
  %116 = load i8, i8* %arrayidx207, align 1
  %conv208 = sext i8 %116 to i32
  %cmp209 = icmp ne i32 %conv208, 41
  br i1 %cmp209, label %if.then211, label %if.end212

if.then211:                                       ; preds = %if.then200
  %117 = load i8*, i8** %temp2, align 4
  call void @sh_xfree(i8* %117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8805)
  br label %comsub

if.end212:                                        ; preds = %if.then200
  %118 = load i8*, i8** %temp2, align 4
  %119 = load i32, i32* %t_index, align 4
  %arrayidx213 = getelementptr inbounds i8, i8* %118, i32 %119
  store i8 0, i8* %arrayidx213, align 1
  %120 = load i8*, i8** %temp2, align 4
  %121 = load i32, i32* %t_index, align 4
  %call214 = call i32 @chk_arithsub(i8* %120, i32 %121)
  %cmp215 = icmp eq i32 %call214, 0
  br i1 %cmp215, label %if.then217, label %if.end218

if.then217:                                       ; preds = %if.end212
  %122 = load i8*, i8** %temp2, align 4
  call void @sh_xfree(i8* %122, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8814)
  br label %comsub

if.end218:                                        ; preds = %if.end212
  %123 = load i8*, i8** %temp2, align 4
  %call219 = call i8* @expand_arith_string(i8* %123, i32 257)
  store i8* %call219, i8** %temp1, align 4
  %124 = load i8*, i8** %temp2, align 4
  call void @sh_xfree(i8* %124, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8823)
  br label %arithsub

arithsub:                                         ; preds = %if.end266, %if.end218
  %125 = load i8*, i8** @this_command_name, align 4
  store i8* %125, i8** %savecmd, align 4
  store i8* null, i8** @this_command_name, align 4
  %126 = load i8*, i8** %temp1, align 4
  %call220 = call i64 @evalexp(i8* %126, i32* %expok)
  store i64 %call220, i64* %number, align 8
  %127 = load i8*, i8** %savecmd, align 4
  store i8* %127, i8** @this_command_name, align 4
  %128 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8831)
  %129 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %129, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8832)
  %130 = load i32, i32* %expok, align 4
  %cmp221 = icmp eq i32 %130, 0
  br i1 %cmp221, label %if.then223, label %if.end230

if.then223:                                       ; preds = %arithsub
  %131 = load i32, i32* @interactive_shell, align 4
  %cmp224 = icmp eq i32 %131, 0
  br i1 %cmp224, label %land.lhs.true226, label %if.else229

land.lhs.true226:                                 ; preds = %if.then223
  %132 = load i32, i32* @posixly_correct, align 4
  %tobool227 = icmp ne i32 %132, 0
  br i1 %tobool227, label %if.then228, label %if.else229

if.then228:                                       ; preds = %land.lhs.true226
  store i32 1, i32* @last_command_exit_value, align 4
  store %struct.word_desc* @expand_wdesc_fatal, %struct.word_desc** %retval, align 4
  br label %return

if.else229:                                       ; preds = %land.lhs.true226, %if.then223
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.end230:                                        ; preds = %arithsub
  %133 = load i64, i64* %number, align 8
  %call231 = call i8* @itos(i64 %133)
  store i8* %call231, i8** %temp, align 4
  br label %sw.epilog

if.end232:                                        ; preds = %land.lhs.true196, %sw.bb190
  br label %comsub

comsub:                                           ; preds = %if.end232, %if.then217, %if.then211
  %134 = load i32, i32* %pflags.addr, align 4
  %and233 = and i32 %134, 1
  %tobool234 = icmp ne i32 %and233, 0
  br i1 %tobool234, label %if.then235, label %if.else238

if.then235:                                       ; preds = %comsub
  %135 = load i8*, i8** %string.addr, align 4
  %136 = load i32*, i32** %sindex.addr, align 4
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %zindex, align 4
  %add236 = add nsw i32 %138, 1
  %call237 = call i8* @substring(i8* %135, i32 %137, i32 %add236)
  store i8* %call237, i8** %temp1, align 4
  br label %if.end249

if.else238:                                       ; preds = %comsub
  %139 = load i8*, i8** %temp, align 4
  %140 = load i32, i32* %quoted.addr, align 4
  %call239 = call %struct.word_desc* @command_substitute(i8* %139, i32 %140)
  store %struct.word_desc* %call239, %struct.word_desc** %tdesc, align 4
  %141 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %tobool240 = icmp ne %struct.word_desc* %141, null
  br i1 %tobool240, label %cond.true241, label %cond.false243

cond.true241:                                     ; preds = %if.else238
  %142 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %word242 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %142, i32 0, i32 0
  %143 = load i8*, i8** %word242, align 4
  br label %cond.end244

cond.false243:                                    ; preds = %if.else238
  br label %cond.end244

cond.end244:                                      ; preds = %cond.false243, %cond.true241
  %cond245 = phi i8* [ %143, %cond.true241 ], [ null, %cond.false243 ]
  store i8* %cond245, i8** %temp1, align 4
  %144 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %tobool246 = icmp ne %struct.word_desc* %144, null
  br i1 %tobool246, label %if.then247, label %if.end248

if.then247:                                       ; preds = %cond.end244
  %145 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  call void @dispose_word_desc(%struct.word_desc* %145)
  br label %if.end248

if.end248:                                        ; preds = %if.then247, %cond.end244
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.then235
  br label %do.body

do.body:                                          ; preds = %if.end249
  %146 = load i8*, i8** %temp, align 4
  %tobool250 = icmp ne i8* %146, null
  br i1 %tobool250, label %if.then251, label %if.end252

if.then251:                                       ; preds = %do.body
  %147 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %147, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8858)
  br label %if.end252

if.end252:                                        ; preds = %if.then251, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end252
  %148 = load i8*, i8** %temp1, align 4
  store i8* %148, i8** %temp, align 4
  br label %sw.epilog

sw.bb253:                                         ; preds = %entry
  %149 = load i32, i32* %zindex, align 4
  %add254 = add nsw i32 %149, 1
  store i32 %add254, i32* %t_index, align 4
  %150 = load i8*, i8** %string.addr, align 4
  %call255 = call i8* @extract_arithmetic_subst(i8* %150, i32* %t_index)
  store i8* %call255, i8** %temp, align 4
  %151 = load i32, i32* %t_index, align 4
  store i32 %151, i32* %zindex, align 4
  %152 = load i8*, i8** %temp, align 4
  %cmp256 = icmp eq i8* %152, null
  br i1 %cmp256, label %if.then258, label %if.end266

if.then258:                                       ; preds = %sw.bb253
  %153 = load i8*, i8** %string.addr, align 4
  %call259 = call i32 @strlen(i8* %153)
  %add260 = add i32 1, %call259
  %call261 = call i8* @sh_xmalloc(i32 %add260, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8871)
  %154 = load i8*, i8** %string.addr, align 4
  %call262 = call i8* @strcpy(i8* %call261, i8* %154)
  store i8* %call262, i8** %temp, align 4
  %155 = load i32*, i32** %expanded_something.addr, align 4
  %tobool263 = icmp ne i32* %155, null
  br i1 %tobool263, label %if.then264, label %if.end265

if.then264:                                       ; preds = %if.then258
  %156 = load i32*, i32** %expanded_something.addr, align 4
  store i32 0, i32* %156, align 4
  br label %if.end265

if.end265:                                        ; preds = %if.then264, %if.then258
  br label %return0

if.end266:                                        ; preds = %sw.bb253
  %157 = load i8*, i8** %temp, align 4
  %call267 = call i8* @expand_arith_string(i8* %157, i32 257)
  store i8* %call267, i8** %temp1, align 4
  br label %arithsub

sw.default:                                       ; preds = %entry
  store i8* null, i8** %temp, align 4
  %158 = load i32, i32* %zindex, align 4
  store i32 %158, i32* %t_index, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.default
  %159 = load i8*, i8** %string.addr, align 4
  %160 = load i32, i32* %zindex, align 4
  %arrayidx268 = getelementptr inbounds i8, i8* %159, i32 %160
  %161 = load i8, i8* %arrayidx268, align 1
  store i8 %161, i8* %c, align 1
  %conv269 = zext i8 %161 to i32
  %tobool270 = icmp ne i32 %conv269, 0
  br i1 %tobool270, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %162 = load i8, i8* %c, align 1
  %conv271 = zext i8 %162 to i32
  %call272 = call i32 @isalnum(i32 %conv271) #9
  %tobool273 = icmp ne i32 %call272, 0
  br i1 %tobool273, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %163 = load i8, i8* %c, align 1
  %conv274 = zext i8 %163 to i32
  %cmp275 = icmp eq i32 %conv274, 95
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %164 = phi i1 [ true, %land.rhs ], [ %cmp275, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %165 = phi i1 [ false, %for.cond ], [ %164, %lor.end ]
  br i1 %165, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %166 = load i32, i32* %zindex, align 4
  %inc277 = add nsw i32 %166, 1
  store i32 %inc277, i32* %zindex, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %167 = load i32, i32* %zindex, align 4
  %168 = load i32, i32* %t_index, align 4
  %cmp278 = icmp sgt i32 %167, %168
  br i1 %cmp278, label %cond.true280, label %cond.false282

cond.true280:                                     ; preds = %for.end
  %169 = load i8*, i8** %string.addr, align 4
  %170 = load i32, i32* %t_index, align 4
  %171 = load i32, i32* %zindex, align 4
  %call281 = call i8* @substring(i8* %169, i32 %170, i32 %171)
  br label %cond.end283

cond.false282:                                    ; preds = %for.end
  br label %cond.end283

cond.end283:                                      ; preds = %cond.false282, %cond.true280
  %cond284 = phi i8* [ %call281, %cond.true280 ], [ null, %cond.false282 ]
  store i8* %cond284, i8** %temp1, align 4
  %172 = load i8*, i8** %temp1, align 4
  %cmp285 = icmp eq i8* %172, null
  br i1 %cmp285, label %if.then291, label %lor.lhs.false287

lor.lhs.false287:                                 ; preds = %cond.end283
  %173 = load i8*, i8** %temp1, align 4
  %174 = load i8, i8* %173, align 1
  %conv288 = sext i8 %174 to i32
  %cmp289 = icmp eq i32 %conv288, 0
  br i1 %cmp289, label %if.then291, label %if.end303

if.then291:                                       ; preds = %lor.lhs.false287, %cond.end283
  br label %do.body292

do.body292:                                       ; preds = %if.then291
  %175 = load i8*, i8** %temp1, align 4
  %tobool293 = icmp ne i8* %175, null
  br i1 %tobool293, label %if.then294, label %if.end295

if.then294:                                       ; preds = %do.body292
  %176 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %176, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8893)
  br label %if.end295

if.end295:                                        ; preds = %if.then294, %do.body292
  br label %do.end296

do.end296:                                        ; preds = %if.end295
  %call297 = call i8* @sh_xmalloc(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8894)
  store i8* %call297, i8** %temp, align 4
  %177 = load i8*, i8** %temp, align 4
  %arrayidx298 = getelementptr inbounds i8, i8* %177, i32 0
  store i8 36, i8* %arrayidx298, align 1
  %178 = load i8*, i8** %temp, align 4
  %arrayidx299 = getelementptr inbounds i8, i8* %178, i32 1
  store i8 0, i8* %arrayidx299, align 1
  %179 = load i32*, i32** %expanded_something.addr, align 4
  %tobool300 = icmp ne i32* %179, null
  br i1 %tobool300, label %if.then301, label %if.end302

if.then301:                                       ; preds = %do.end296
  %180 = load i32*, i32** %expanded_something.addr, align 4
  store i32 0, i32* %180, align 4
  br label %if.end302

if.end302:                                        ; preds = %if.then301, %do.end296
  br label %return0

if.end303:                                        ; preds = %lor.lhs.false287
  %181 = load i8*, i8** %temp1, align 4
  %call304 = call %struct.variable* @find_variable(i8* %181)
  store %struct.variable* %call304, %struct.variable** %var, align 4
  %182 = load %struct.variable*, %struct.variable** %var, align 4
  %tobool305 = icmp ne %struct.variable* %182, null
  br i1 %tobool305, label %land.lhs.true306, label %if.else365

land.lhs.true306:                                 ; preds = %if.end303
  %183 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %183, i32 0, i32 5
  %184 = load i32, i32* %attributes, align 4
  %and307 = and i32 %184, 4096
  %cmp308 = icmp eq i32 %and307, 0
  br i1 %cmp308, label %land.lhs.true310, label %if.else365

land.lhs.true310:                                 ; preds = %land.lhs.true306
  %185 = load %struct.variable*, %struct.variable** %var, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %185, i32 0, i32 1
  %186 = load i8*, i8** %value, align 4
  %cmp311 = icmp ne i8* %186, null
  br i1 %cmp311, label %if.then313, label %if.else365

if.then313:                                       ; preds = %land.lhs.true310
  %187 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes314 = getelementptr inbounds %struct.variable, %struct.variable* %187, i32 0, i32 5
  %188 = load i32, i32* %attributes314, align 4
  %and315 = and i32 %188, 64
  %tobool316 = icmp ne i32 %and315, 0
  br i1 %tobool316, label %if.then321, label %lor.lhs.false317

lor.lhs.false317:                                 ; preds = %if.then313
  %189 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes318 = getelementptr inbounds %struct.variable, %struct.variable* %189, i32 0, i32 5
  %190 = load i32, i32* %attributes318, align 4
  %and319 = and i32 %190, 4
  %tobool320 = icmp ne i32 %and319, 0
  br i1 %tobool320, label %if.then321, label %if.else351

if.then321:                                       ; preds = %lor.lhs.false317, %if.then313
  %191 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes322 = getelementptr inbounds %struct.variable, %struct.variable* %191, i32 0, i32 5
  %192 = load i32, i32* %attributes322, align 4
  %and323 = and i32 %192, 4
  %tobool324 = icmp ne i32 %and323, 0
  br i1 %tobool324, label %cond.true325, label %cond.false328

cond.true325:                                     ; preds = %if.then321
  %193 = load %struct.variable*, %struct.variable** %var, align 4
  %value326 = getelementptr inbounds %struct.variable, %struct.variable* %193, i32 0, i32 1
  %194 = load i8*, i8** %value326, align 4
  %195 = bitcast i8* %194 to %struct.array*
  %call327 = call i8* @array_reference(%struct.array* %195, i64 0)
  br label %cond.end331

cond.false328:                                    ; preds = %if.then321
  %196 = load %struct.variable*, %struct.variable** %var, align 4
  %value329 = getelementptr inbounds %struct.variable, %struct.variable* %196, i32 0, i32 1
  %197 = load i8*, i8** %value329, align 4
  %198 = bitcast i8* %197 to %struct.hash_table*
  %call330 = call i8* @assoc_reference(%struct.hash_table* %198, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0))
  br label %cond.end331

cond.end331:                                      ; preds = %cond.false328, %cond.true325
  %cond332 = phi i8* [ %call327, %cond.true325 ], [ %call330, %cond.false328 ]
  store i8* %cond332, i8** %temp, align 4
  %199 = load i8*, i8** %temp, align 4
  %tobool333 = icmp ne i8* %199, null
  br i1 %tobool333, label %if.then334, label %if.else346

if.then334:                                       ; preds = %cond.end331
  %200 = load i8*, i8** %temp, align 4
  %201 = load i8, i8* %200, align 1
  %conv335 = sext i8 %201 to i32
  %tobool336 = icmp ne i32 %conv335, 0
  br i1 %tobool336, label %land.lhs.true337, label %cond.false342

land.lhs.true337:                                 ; preds = %if.then334
  %202 = load i32, i32* %quoted.addr, align 4
  %and338 = and i32 %202, 3
  %tobool339 = icmp ne i32 %and338, 0
  br i1 %tobool339, label %cond.true340, label %cond.false342

cond.true340:                                     ; preds = %land.lhs.true337
  %203 = load i8*, i8** %temp, align 4
  %call341 = call i8* @quote_string(i8* %203)
  br label %cond.end344

cond.false342:                                    ; preds = %land.lhs.true337, %if.then334
  %204 = load i8*, i8** %temp, align 4
  %call343 = call i8* @quote_escapes(i8* %204)
  br label %cond.end344

cond.end344:                                      ; preds = %cond.false342, %cond.true340
  %cond345 = phi i8* [ %call341, %cond.true340 ], [ %call343, %cond.false342 ]
  store i8* %cond345, i8** %temp, align 4
  br label %if.end350

if.else346:                                       ; preds = %cond.end331
  %205 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool347 = icmp ne i32 %205, 0
  br i1 %tobool347, label %if.then348, label %if.end349

if.then348:                                       ; preds = %if.else346
  br label %unbound_variable

if.end349:                                        ; preds = %if.else346
  br label %if.end350

if.end350:                                        ; preds = %if.end349, %cond.end344
  br label %if.end364

if.else351:                                       ; preds = %lor.lhs.false317
  %206 = load %struct.variable*, %struct.variable** %var, align 4
  %value352 = getelementptr inbounds %struct.variable, %struct.variable* %206, i32 0, i32 1
  %207 = load i8*, i8** %value352, align 4
  store i8* %207, i8** %temp, align 4
  %208 = load i8*, i8** %temp, align 4
  %209 = load i8, i8* %208, align 1
  %conv353 = sext i8 %209 to i32
  %tobool354 = icmp ne i32 %conv353, 0
  br i1 %tobool354, label %land.lhs.true355, label %cond.false360

land.lhs.true355:                                 ; preds = %if.else351
  %210 = load i32, i32* %quoted.addr, align 4
  %and356 = and i32 %210, 3
  %tobool357 = icmp ne i32 %and356, 0
  br i1 %tobool357, label %cond.true358, label %cond.false360

cond.true358:                                     ; preds = %land.lhs.true355
  %211 = load i8*, i8** %temp, align 4
  %call359 = call i8* @quote_string(i8* %211)
  br label %cond.end362

cond.false360:                                    ; preds = %land.lhs.true355, %if.else351
  %212 = load i8*, i8** %temp, align 4
  %call361 = call i8* @quote_escapes(i8* %212)
  br label %cond.end362

cond.end362:                                      ; preds = %cond.false360, %cond.true358
  %cond363 = phi i8* [ %call359, %cond.true358 ], [ %call361, %cond.false360 ]
  store i8* %cond363, i8** %temp, align 4
  br label %if.end364

if.end364:                                        ; preds = %cond.end362, %if.end350
  %213 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %213, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8929)
  br label %return0

if.else365:                                       ; preds = %land.lhs.true310, %land.lhs.true306, %if.end303
  %214 = load %struct.variable*, %struct.variable** %var, align 4
  %tobool366 = icmp ne %struct.variable* %214, null
  br i1 %tobool366, label %land.lhs.true367, label %if.else378

land.lhs.true367:                                 ; preds = %if.else365
  %215 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes368 = getelementptr inbounds %struct.variable, %struct.variable* %215, i32 0, i32 5
  %216 = load i32, i32* %attributes368, align 4
  %and369 = and i32 %216, 4096
  %tobool370 = icmp ne i32 %and369, 0
  br i1 %tobool370, label %if.then377, label %lor.lhs.false371

lor.lhs.false371:                                 ; preds = %land.lhs.true367
  %217 = load %struct.variable*, %struct.variable** %var, align 4
  %value372 = getelementptr inbounds %struct.variable, %struct.variable* %217, i32 0, i32 1
  %218 = load i8*, i8** %value372, align 4
  %cmp373 = icmp ne i8* %218, null
  %conv374 = zext i1 %cmp373 to i32
  %cmp375 = icmp eq i32 %conv374, 0
  br i1 %cmp375, label %if.then377, label %if.else378

if.then377:                                       ; preds = %lor.lhs.false371, %land.lhs.true367
  store i8* null, i8** %temp, align 4
  br label %if.end448

if.else378:                                       ; preds = %lor.lhs.false371, %if.else365
  %219 = load i8*, i8** %temp1, align 4
  %call379 = call %struct.variable* @find_variable_last_nameref(i8* %219, i32 0)
  store %struct.variable* %call379, %struct.variable** %var, align 4
  %tobool380 = icmp ne %struct.variable* %call379, null
  br i1 %tobool380, label %land.lhs.true381, label %if.end447

land.lhs.true381:                                 ; preds = %if.else378
  %220 = load %struct.variable*, %struct.variable** %var, align 4
  %value382 = getelementptr inbounds %struct.variable, %struct.variable* %220, i32 0, i32 1
  %221 = load i8*, i8** %value382, align 4
  %cmp383 = icmp ne i8* %221, null
  br i1 %cmp383, label %land.lhs.true385, label %if.end447

land.lhs.true385:                                 ; preds = %land.lhs.true381
  %222 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes386 = getelementptr inbounds %struct.variable, %struct.variable* %222, i32 0, i32 5
  %223 = load i32, i32* %attributes386, align 4
  %and387 = and i32 %223, 4096
  %cmp388 = icmp eq i32 %and387, 0
  br i1 %cmp388, label %if.then390, label %if.end447

if.then390:                                       ; preds = %land.lhs.true385
  %224 = load %struct.variable*, %struct.variable** %var, align 4
  %value391 = getelementptr inbounds %struct.variable, %struct.variable* %224, i32 0, i32 1
  %225 = load i8*, i8** %value391, align 4
  store i8* %225, i8** %temp, align 4
  %226 = load i8*, i8** %temp, align 4
  %tobool392 = icmp ne i8* %226, null
  br i1 %tobool392, label %land.lhs.true393, label %if.else433

land.lhs.true393:                                 ; preds = %if.then390
  %227 = load i8*, i8** %temp, align 4
  %228 = load i8, i8* %227, align 1
  %conv394 = sext i8 %228 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %land.lhs.true396, label %if.else433

land.lhs.true396:                                 ; preds = %land.lhs.true393
  %229 = load i8*, i8** %temp, align 4
  %call397 = call i32 @valid_array_reference(i8* %229, i32 0)
  %tobool398 = icmp ne i32 %call397, 0
  br i1 %tobool398, label %if.then399, label %if.else433

if.then399:                                       ; preds = %land.lhs.true396
  %230 = load i8*, i8** %temp, align 4
  %231 = load i8*, i8** %temp, align 4
  %232 = load i8, i8* %231, align 1
  %conv400 = sext i8 %232 to i32
  %tobool401 = icmp ne i32 %conv400, 0
  br i1 %tobool401, label %land.rhs402, label %land.end424

land.rhs402:                                      ; preds = %if.then399
  %233 = load i8*, i8** %temp, align 4
  %234 = load i8, i8* %233, align 1
  %conv403 = sext i8 %234 to i32
  %cmp404 = icmp sge i32 %conv403, 48
  br i1 %cmp404, label %land.lhs.true406, label %lor.lhs.false413

land.lhs.true406:                                 ; preds = %land.rhs402
  %235 = load i8*, i8** %temp, align 4
  %236 = load i8, i8* %235, align 1
  %conv407 = sext i8 %236 to i32
  %cmp408 = icmp sle i32 %conv407, 57
  br i1 %cmp408, label %land.lhs.true410, label %lor.lhs.false413

land.lhs.true410:                                 ; preds = %land.lhs.true406
  %237 = load i8*, i8** %temp, align 4
  %call411 = call i32 @all_digits(i8* %237)
  %tobool412 = icmp ne i32 %call411, 0
  br i1 %tobool412, label %lor.end423, label %lor.lhs.false413

lor.lhs.false413:                                 ; preds = %land.lhs.true410, %land.lhs.true406, %land.rhs402
  %238 = load i8*, i8** %temp, align 4
  %arrayidx414 = getelementptr inbounds i8, i8* %238, i32 1
  %239 = load i8, i8* %arrayidx414, align 1
  %conv415 = sext i8 %239 to i32
  %cmp416 = icmp eq i32 %conv415, 0
  br i1 %cmp416, label %land.lhs.true418, label %lor.rhs422

land.lhs.true418:                                 ; preds = %lor.lhs.false413
  %240 = load i8*, i8** %temp, align 4
  %241 = load i8, i8* %240, align 1
  %idxprom = zext i8 %241 to i32
  %arrayidx419 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %242 = load i32, i32* %arrayidx419, align 4
  %and420 = and i32 %242, 2048
  %tobool421 = icmp ne i32 %and420, 0
  br i1 %tobool421, label %lor.end423, label %lor.rhs422

lor.rhs422:                                       ; preds = %land.lhs.true418, %lor.lhs.false413
  br label %lor.end423

lor.end423:                                       ; preds = %lor.rhs422, %land.lhs.true418, %land.lhs.true410
  %243 = phi i1 [ true, %land.lhs.true418 ], [ true, %land.lhs.true410 ], [ false, %lor.rhs422 ]
  br label %land.end424

land.end424:                                      ; preds = %lor.end423, %if.then399
  %244 = phi i1 [ false, %if.then399 ], [ %243, %lor.end423 ]
  %land.ext = zext i1 %244 to i32
  %245 = load i32, i32* %quoted.addr, align 4
  %246 = load i32, i32* %pflags.addr, align 4
  %call425 = call %struct.word_desc* @parameter_brace_expand_word(i8* %230, i32 %land.ext, i32 %245, i32 %246, i64* null)
  store %struct.word_desc* %call425, %struct.word_desc** %tdesc, align 4
  %247 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %cmp426 = icmp eq %struct.word_desc* %247, @expand_wdesc_error
  br i1 %cmp426, label %if.then431, label %lor.lhs.false428

lor.lhs.false428:                                 ; preds = %land.end424
  %248 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %cmp429 = icmp eq %struct.word_desc* %248, @expand_wdesc_fatal
  br i1 %cmp429, label %if.then431, label %if.end432

if.then431:                                       ; preds = %lor.lhs.false428, %land.end424
  %249 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  store %struct.word_desc* %249, %struct.word_desc** %retval, align 4
  br label %return

if.end432:                                        ; preds = %lor.lhs.false428
  %250 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  store %struct.word_desc* %250, %struct.word_desc** %ret, align 4
  br label %return0

if.else433:                                       ; preds = %land.lhs.true396, %land.lhs.true393, %if.then390
  %251 = load i8*, i8** %temp, align 4
  %tobool434 = icmp ne i8* %251, null
  br i1 %tobool434, label %land.lhs.true435, label %if.else444

land.lhs.true435:                                 ; preds = %if.else433
  %252 = load i8*, i8** %temp, align 4
  %253 = load i8, i8* %252, align 1
  %conv436 = sext i8 %253 to i32
  %tobool437 = icmp ne i32 %conv436, 0
  br i1 %tobool437, label %land.lhs.true438, label %if.else444

land.lhs.true438:                                 ; preds = %land.lhs.true435
  %254 = load i8*, i8** %temp, align 4
  %call439 = call i32 @legal_identifier(i8* %254)
  %cmp440 = icmp eq i32 %call439, 0
  br i1 %cmp440, label %if.then442, label %if.else444

if.then442:                                       ; preds = %land.lhs.true438
  store i32 1, i32* @last_command_exit_value, align 4
  %call443 = call i8* @libintl_gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i32 0, i32 0))
  %255 = load i8*, i8** %temp, align 4
  call void (i8*, ...) @report_error(i8* %call443, i8* %255)
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else444:                                       ; preds = %land.lhs.true438, %land.lhs.true435, %if.else433
  store i8* null, i8** %temp, align 4
  br label %if.end445

if.end445:                                        ; preds = %if.else444
  br label %if.end446

if.end446:                                        ; preds = %if.end445
  br label %if.end447

if.end447:                                        ; preds = %if.end446, %land.lhs.true385, %land.lhs.true381, %if.else378
  br label %if.end448

if.end448:                                        ; preds = %if.end447, %if.then377
  br label %if.end449

if.end449:                                        ; preds = %if.end448
  store i8* null, i8** %temp, align 4
  br label %unbound_variable

unbound_variable:                                 ; preds = %if.end449, %if.then348
  %256 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool450 = icmp ne i32 %256, 0
  br i1 %tobool450, label %if.then451, label %if.else452

if.then451:                                       ; preds = %unbound_variable
  store i32 1, i32* @last_command_exit_value, align 4
  %257 = load i8*, i8** %temp1, align 4
  call void @err_unboundvar(i8* %257)
  br label %if.end453

if.else452:                                       ; preds = %unbound_variable
  %258 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %258, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8970)
  br label %return0

if.end453:                                        ; preds = %if.then451
  %259 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %259, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8974)
  store i32 1, i32* @last_command_exit_value, align 4
  %260 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool454 = icmp ne i32 %260, 0
  br i1 %tobool454, label %land.rhs455, label %land.end458

land.rhs455:                                      ; preds = %if.end453
  %261 = load i32, i32* @interactive_shell, align 4
  %cmp456 = icmp eq i32 %261, 0
  br label %land.end458

land.end458:                                      ; preds = %land.rhs455, %if.end453
  %262 = phi i1 [ false, %if.end453 ], [ %cmp456, %land.rhs455 ]
  %cond460 = select i1 %262, %struct.word_desc* @expand_wdesc_fatal, %struct.word_desc* @expand_wdesc_error
  store %struct.word_desc* %cond460, %struct.word_desc** %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %do.end, %if.end230, %cond.end145, %if.end128, %if.end48, %sw.bb27, %sw.bb24, %sw.bb20, %sw.bb17, %if.end16
  %263 = load i8*, i8** %string.addr, align 4
  %264 = load i32, i32* %zindex, align 4
  %arrayidx461 = getelementptr inbounds i8, i8* %263, i32 %264
  %265 = load i8, i8* %arrayidx461, align 1
  %tobool462 = icmp ne i8 %265, 0
  br i1 %tobool462, label %if.then463, label %if.end465

if.then463:                                       ; preds = %sw.epilog
  %266 = load i32, i32* %zindex, align 4
  %inc464 = add nsw i32 %266, 1
  store i32 %inc464, i32* %zindex, align 4
  br label %if.end465

if.end465:                                        ; preds = %if.then463, %sw.epilog
  br label %return0

return0:                                          ; preds = %if.end465, %if.else452, %if.end432, %if.end364, %if.end302, %if.end265, %if.end189
  %267 = load i32, i32* %zindex, align 4
  %268 = load i32*, i32** %sindex.addr, align 4
  store i32 %267, i32* %268, align 4
  %269 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %cmp466 = icmp eq %struct.word_desc* %269, null
  br i1 %cmp466, label %if.then468, label %if.end472

if.then468:                                       ; preds = %return0
  %call469 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call469, %struct.word_desc** %ret, align 4
  %270 = load i32, i32* %tflag, align 4
  %271 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags470 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %271, i32 0, i32 1
  store i32 %270, i32* %flags470, align 4
  %272 = load i8*, i8** %temp, align 4
  %273 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word471 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %273, i32 0, i32 0
  store i8* %272, i8** %word471, align 4
  br label %if.end472

if.end472:                                        ; preds = %if.then468, %return0
  %274 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %274, %struct.word_desc** %retval, align 4
  br label %return

return:                                           ; preds = %if.end472, %land.end458, %if.then442, %if.then431, %if.else229, %if.then228, %if.then156, %if.then37, %if.then
  %275 = load %struct.word_desc*, %struct.word_desc** %retval, align 4
  ret %struct.word_desc* %275
}

declare void @dispose_word_desc(%struct.word_desc*) #1

; Function Attrs: noinline nounwind
define internal i8* @string_extract_double_quoted(i8* %string, i32* %sindex, i32 %flags) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %sindex.addr = alloca i32*, align 4
  %flags.addr = alloca i32, align 4
  %slen = alloca i32, align 4
  %send = alloca i8*, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %c = alloca i8, align 1
  %temp = alloca i8*, align 4
  %ret = alloca i8*, align 4
  %pass_next = alloca i32, align 4
  %backquote = alloca i32, align 4
  %si = alloca i32, align 4
  %dquote = alloca i32, align 4
  %stripdq = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_k = alloca i32, align 4
  %free_ret = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %sindex, i32** %sindex.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i32*, i32** %sindex.addr, align 4
  %3 = load i32, i32* %2, align 4
  %add.ptr = getelementptr inbounds i8, i8* %1, i32 %3
  %call = call i32 @strlen(i8* %add.ptr)
  %4 = load i32*, i32** %sindex.addr, align 4
  %5 = load i32, i32* %4, align 4
  %add = add i32 %call, %5
  store i32 %add, i32* %slen, align 4
  %6 = load i8*, i8** %string.addr, align 4
  %7 = load i32, i32* %slen, align 4
  %add.ptr1 = getelementptr inbounds i8, i8* %6, i32 %7
  store i8* %add.ptr1, i8** %send, align 4
  %8 = load i32, i32* %flags.addr, align 4
  %and = and i32 %8, 2048
  store i32 %and, i32* %stripdq, align 4
  store i32 0, i32* %dquote, align 4
  store i32 0, i32* %backquote, align 4
  store i32 0, i32* %pass_next, align 4
  %9 = load i32, i32* %slen, align 4
  %add2 = add i32 1, %9
  %10 = load i32*, i32** %sindex.addr, align 4
  %11 = load i32, i32* %10, align 4
  %sub = sub i32 %add2, %11
  %call3 = call i8* @sh_xmalloc(i32 %sub, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 861)
  store i8* %call3, i8** %temp, align 4
  store i32 0, i32* %j, align 4
  %12 = load i32*, i32** %sindex.addr, align 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.then152, %if.end144, %if.then75, %if.end67, %if.then57, %do.end, %entry
  %14 = load i8*, i8** %string.addr, align 4
  %15 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %14, i32 %15
  %16 = load i8, i8* %arrayidx, align 1
  store i8 %16, i8* %c, align 1
  %tobool = icmp ne i8 %16, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i32, i32* %pass_next, align 4
  %tobool4 = icmp ne i32 %17, 0
  br i1 %tobool4, label %if.then, label %if.end53

if.then:                                          ; preds = %while.body
  %18 = load i32, i32* %stripdq, align 4
  %cmp = icmp eq i32 %18, 0
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then
  %19 = load i8, i8* %c, align 1
  %conv = zext i8 %19 to i32
  %cmp5 = icmp ne i32 %conv, 34
  br i1 %cmp5, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then
  %20 = load i32, i32* %stripdq, align 4
  %tobool7 = icmp ne i32 %20, 0
  br i1 %tobool7, label %land.lhs.true8, label %if.end

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %21 = load i32, i32* %dquote, align 4
  %tobool9 = icmp ne i32 %21, 0
  br i1 %tobool9, label %land.lhs.true10, label %lor.lhs.false14

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %22 = load i8, i8* %c, align 1
  %idxprom = zext i8 %22 to i32
  %arrayidx11 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %23 = load i32, i32* %arrayidx11, align 4
  %and12 = and i32 %23, 64
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then17, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %land.lhs.true10, %land.lhs.true8
  %24 = load i32, i32* %dquote, align 4
  %cmp15 = icmp eq i32 %24, 0
  br i1 %cmp15, label %if.then17, label %if.end

if.then17:                                        ; preds = %lor.lhs.false14, %land.lhs.true10, %land.lhs.true
  %25 = load i8*, i8** %temp, align 4
  %26 = load i32, i32* %j, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %j, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %25, i32 %26
  store i8 92, i8* %arrayidx18, align 1
  br label %if.end

if.end:                                           ; preds = %if.then17, %lor.lhs.false14, %lor.lhs.false
  store i32 0, i32* %pass_next, align 4
  br label %add_one_character

add_one_character:                                ; preds = %if.then149, %if.end
  br label %do.body

do.body:                                          ; preds = %add_one_character
  %27 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp19 = icmp sgt i32 %27, 1
  br i1 %cmp19, label %if.then21, label %if.else47

if.then21:                                        ; preds = %do.body
  %28 = load i8*, i8** %string.addr, align 4
  %29 = load i32, i32* %i, align 4
  %add.ptr22 = getelementptr inbounds i8, i8* %28, i32 %29
  %30 = load i8, i8* %add.ptr22, align 1
  %call23 = call i32 @is_basic(i8 signext %30)
  store i32 %call23, i32* %_k, align 4
  %31 = load i32, i32* %_k, align 4
  %tobool24 = icmp ne i32 %31, 0
  br i1 %tobool24, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.then21
  store i32 1, i32* %mblength, align 4
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %32 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %33 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %32, i8* %33, i32 8, i32 4, i1 false)
  %34 = load i8*, i8** %string.addr, align 4
  %35 = load i32, i32* %i, align 4
  %add.ptr26 = getelementptr inbounds i8, i8* %34, i32 %35
  %36 = load i8*, i8** %send, align 4
  %37 = load i8*, i8** %string.addr, align 4
  %38 = load i32, i32* %i, align 4
  %add.ptr27 = getelementptr inbounds i8, i8* %37, i32 %38
  %sub.ptr.lhs.cast = ptrtoint i8* %36 to i32
  %sub.ptr.rhs.cast = ptrtoint i8* %add.ptr27 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call28 = call i32 @mbrlen(i8* %add.ptr26, i32 %sub.ptr.sub, %struct.__mbstate_t* %state)
  store i32 %call28, i32* %mblength, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then25
  %39 = load i32, i32* %mblength, align 4
  %cmp30 = icmp eq i32 %39, -2
  br i1 %cmp30, label %if.then35, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.end29
  %40 = load i32, i32* %mblength, align 4
  %cmp33 = icmp eq i32 %40, -1
  br i1 %cmp33, label %if.then35, label %if.else36

if.then35:                                        ; preds = %lor.lhs.false32, %if.end29
  %41 = bitcast %struct.__mbstate_t* %state to i8*
  %42 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %41, i8* %42, i32 8, i32 4, i1 false)
  store i32 1, i32* %mblength, align 4
  br label %if.end39

if.else36:                                        ; preds = %lor.lhs.false32
  %43 = load i32, i32* %mblength, align 4
  %cmp37 = icmp ult i32 %43, 1
  br i1 %cmp37, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else36
  br label %cond.end

cond.false:                                       ; preds = %if.else36
  %44 = load i32, i32* %mblength, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %44, %cond.false ]
  store i32 %cond, i32* %mblength, align 4
  br label %if.end39

if.end39:                                         ; preds = %cond.end, %if.then35
  store i32 0, i32* %_k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end39
  %45 = load i32, i32* %_k, align 4
  %46 = load i32, i32* %mblength, align 4
  %cmp40 = icmp ult i32 %45, %46
  br i1 %cmp40, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %47 = load i8*, i8** %string.addr, align 4
  %48 = load i32, i32* %i, align 4
  %inc42 = add nsw i32 %48, 1
  store i32 %inc42, i32* %i, align 4
  %arrayidx43 = getelementptr inbounds i8, i8* %47, i32 %48
  %49 = load i8, i8* %arrayidx43, align 1
  %50 = load i8*, i8** %temp, align 4
  %51 = load i32, i32* %j, align 4
  %inc44 = add nsw i32 %51, 1
  store i32 %inc44, i32* %j, align 4
  %arrayidx45 = getelementptr inbounds i8, i8* %50, i32 %51
  store i8 %49, i8* %arrayidx45, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %_k, align 4
  %inc46 = add nsw i32 %52, 1
  store i32 %inc46, i32* %_k, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end52

if.else47:                                        ; preds = %do.body
  %53 = load i8*, i8** %string.addr, align 4
  %54 = load i32, i32* %i, align 4
  %inc48 = add nsw i32 %54, 1
  store i32 %inc48, i32* %i, align 4
  %arrayidx49 = getelementptr inbounds i8, i8* %53, i32 %54
  %55 = load i8, i8* %arrayidx49, align 1
  %56 = load i8*, i8** %temp, align 4
  %57 = load i32, i32* %j, align 4
  %inc50 = add nsw i32 %57, 1
  store i32 %inc50, i32* %j, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %56, i32 %57
  store i8 %55, i8* %arrayidx51, align 1
  br label %if.end52

if.end52:                                         ; preds = %if.else47, %for.end
  br label %do.end

do.end:                                           ; preds = %if.end52
  br label %while.cond

if.end53:                                         ; preds = %while.body
  %58 = load i8, i8* %c, align 1
  %conv54 = zext i8 %58 to i32
  %cmp55 = icmp eq i32 %conv54, 92
  br i1 %cmp55, label %if.then57, label %if.end60

if.then57:                                        ; preds = %if.end53
  %59 = load i32, i32* %pass_next, align 4
  %inc58 = add nsw i32 %59, 1
  store i32 %inc58, i32* %pass_next, align 4
  %60 = load i32, i32* %i, align 4
  %inc59 = add nsw i32 %60, 1
  store i32 %inc59, i32* %i, align 4
  br label %while.cond

if.end60:                                         ; preds = %if.end53
  %61 = load i32, i32* %backquote, align 4
  %tobool61 = icmp ne i32 %61, 0
  br i1 %tobool61, label %if.then62, label %if.end71

if.then62:                                        ; preds = %if.end60
  %62 = load i8, i8* %c, align 1
  %conv63 = zext i8 %62 to i32
  %cmp64 = icmp eq i32 %conv63, 96
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.then62
  store i32 0, i32* %backquote, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.then62
  %63 = load i8, i8* %c, align 1
  %64 = load i8*, i8** %temp, align 4
  %65 = load i32, i32* %j, align 4
  %inc68 = add nsw i32 %65, 1
  store i32 %inc68, i32* %j, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %64, i32 %65
  store i8 %63, i8* %arrayidx69, align 1
  %66 = load i32, i32* %i, align 4
  %inc70 = add nsw i32 %66, 1
  store i32 %inc70, i32* %i, align 4
  br label %while.cond

if.end71:                                         ; preds = %if.end60
  %67 = load i8, i8* %c, align 1
  %conv72 = zext i8 %67 to i32
  %cmp73 = icmp eq i32 %conv72, 96
  br i1 %cmp73, label %if.then75, label %if.end80

if.then75:                                        ; preds = %if.end71
  %68 = load i8, i8* %c, align 1
  %69 = load i8*, i8** %temp, align 4
  %70 = load i32, i32* %j, align 4
  %inc76 = add nsw i32 %70, 1
  store i32 %inc76, i32* %j, align 4
  %arrayidx77 = getelementptr inbounds i8, i8* %69, i32 %70
  store i8 %68, i8* %arrayidx77, align 1
  %71 = load i32, i32* %backquote, align 4
  %inc78 = add nsw i32 %71, 1
  store i32 %inc78, i32* %backquote, align 4
  %72 = load i32, i32* %i, align 4
  %inc79 = add nsw i32 %72, 1
  store i32 %inc79, i32* %i, align 4
  br label %while.cond

if.end80:                                         ; preds = %if.end71
  %73 = load i8, i8* %c, align 1
  %conv81 = zext i8 %73 to i32
  %cmp82 = icmp eq i32 %conv81, 36
  br i1 %cmp82, label %land.lhs.true84, label %if.end145

land.lhs.true84:                                  ; preds = %if.end80
  %74 = load i8*, i8** %string.addr, align 4
  %75 = load i32, i32* %i, align 4
  %add85 = add nsw i32 %75, 1
  %arrayidx86 = getelementptr inbounds i8, i8* %74, i32 %add85
  %76 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %76 to i32
  %cmp88 = icmp eq i32 %conv87, 40
  br i1 %cmp88, label %if.then96, label %lor.lhs.false90

lor.lhs.false90:                                  ; preds = %land.lhs.true84
  %77 = load i8*, i8** %string.addr, align 4
  %78 = load i32, i32* %i, align 4
  %add91 = add nsw i32 %78, 1
  %arrayidx92 = getelementptr inbounds i8, i8* %77, i32 %add91
  %79 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %79 to i32
  %cmp94 = icmp eq i32 %conv93, 123
  br i1 %cmp94, label %if.then96, label %if.end145

if.then96:                                        ; preds = %lor.lhs.false90, %land.lhs.true84
  store i32 1, i32* %free_ret, align 4
  %80 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %80, 2
  store i32 %add97, i32* %si, align 4
  %81 = load i8*, i8** %string.addr, align 4
  %82 = load i32, i32* %i, align 4
  %add98 = add nsw i32 %82, 1
  %arrayidx99 = getelementptr inbounds i8, i8* %81, i32 %add98
  %83 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %83 to i32
  %cmp101 = icmp eq i32 %conv100, 40
  br i1 %cmp101, label %if.then103, label %if.else106

if.then103:                                       ; preds = %if.then96
  %84 = load i8*, i8** %string.addr, align 4
  %85 = load i32, i32* %flags.addr, align 4
  %and104 = and i32 %85, 1024
  %call105 = call i8* @extract_command_subst(i8* %84, i32* %si, i32 %and104)
  store i8* %call105, i8** %ret, align 4
  br label %if.end108

if.else106:                                       ; preds = %if.then96
  %86 = load i8*, i8** %string.addr, align 4
  %call107 = call i8* @extract_dollar_brace_string(i8* %86, i32* %si, i32 1, i32 0)
  store i8* %call107, i8** %ret, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.else106, %if.then103
  %87 = load i8*, i8** %temp, align 4
  %88 = load i32, i32* %j, align 4
  %inc109 = add nsw i32 %88, 1
  store i32 %inc109, i32* %j, align 4
  %arrayidx110 = getelementptr inbounds i8, i8* %87, i32 %88
  store i8 36, i8* %arrayidx110, align 1
  %89 = load i8*, i8** %string.addr, align 4
  %90 = load i32, i32* %i, align 4
  %add111 = add nsw i32 %90, 1
  %arrayidx112 = getelementptr inbounds i8, i8* %89, i32 %add111
  %91 = load i8, i8* %arrayidx112, align 1
  %92 = load i8*, i8** %temp, align 4
  %93 = load i32, i32* %j, align 4
  %inc113 = add nsw i32 %93, 1
  store i32 %inc113, i32* %j, align 4
  %arrayidx114 = getelementptr inbounds i8, i8* %92, i32 %93
  store i8 %91, i8* %arrayidx114, align 1
  %94 = load i8*, i8** %ret, align 4
  %cmp115 = icmp eq i8* %94, null
  br i1 %cmp115, label %land.lhs.true117, label %if.end122

land.lhs.true117:                                 ; preds = %if.end108
  %95 = load i32, i32* @no_longjmp_on_fatal_error, align 4
  %tobool118 = icmp ne i32 %95, 0
  br i1 %tobool118, label %if.then119, label %if.end122

if.then119:                                       ; preds = %land.lhs.true117
  store i32 0, i32* %free_ret, align 4
  %96 = load i8*, i8** %string.addr, align 4
  %97 = load i32, i32* %i, align 4
  %add.ptr120 = getelementptr inbounds i8, i8* %96, i32 %97
  %add.ptr121 = getelementptr inbounds i8, i8* %add.ptr120, i32 2
  store i8* %add.ptr121, i8** %ret, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %land.lhs.true117, %if.end108
  store i32 0, i32* %t, align 4
  br label %for.cond123

for.cond123:                                      ; preds = %for.inc129, %if.end122
  %98 = load i8*, i8** %ret, align 4
  %99 = load i32, i32* %t, align 4
  %arrayidx124 = getelementptr inbounds i8, i8* %98, i32 %99
  %100 = load i8, i8* %arrayidx124, align 1
  %tobool125 = icmp ne i8 %100, 0
  br i1 %tobool125, label %for.body126, label %for.end132

for.body126:                                      ; preds = %for.cond123
  %101 = load i8*, i8** %ret, align 4
  %102 = load i32, i32* %t, align 4
  %arrayidx127 = getelementptr inbounds i8, i8* %101, i32 %102
  %103 = load i8, i8* %arrayidx127, align 1
  %104 = load i8*, i8** %temp, align 4
  %105 = load i32, i32* %j, align 4
  %arrayidx128 = getelementptr inbounds i8, i8* %104, i32 %105
  store i8 %103, i8* %arrayidx128, align 1
  br label %for.inc129

for.inc129:                                       ; preds = %for.body126
  %106 = load i32, i32* %t, align 4
  %inc130 = add nsw i32 %106, 1
  store i32 %inc130, i32* %t, align 4
  %107 = load i32, i32* %j, align 4
  %inc131 = add nsw i32 %107, 1
  store i32 %inc131, i32* %j, align 4
  br label %for.cond123

for.end132:                                       ; preds = %for.cond123
  %108 = load i8*, i8** %string.addr, align 4
  %109 = load i32, i32* %si, align 4
  %arrayidx133 = getelementptr inbounds i8, i8* %108, i32 %109
  %110 = load i8, i8* %arrayidx133, align 1
  %111 = load i8*, i8** %temp, align 4
  %112 = load i32, i32* %j, align 4
  %arrayidx134 = getelementptr inbounds i8, i8* %111, i32 %112
  store i8 %110, i8* %arrayidx134, align 1
  %113 = load i8*, i8** %string.addr, align 4
  %114 = load i32, i32* %si, align 4
  %arrayidx135 = getelementptr inbounds i8, i8* %113, i32 %114
  %115 = load i8, i8* %arrayidx135, align 1
  %tobool136 = icmp ne i8 %115, 0
  br i1 %tobool136, label %if.then137, label %if.else140

if.then137:                                       ; preds = %for.end132
  %116 = load i32, i32* %j, align 4
  %inc138 = add nsw i32 %116, 1
  store i32 %inc138, i32* %j, align 4
  %117 = load i32, i32* %si, align 4
  %add139 = add nsw i32 %117, 1
  store i32 %add139, i32* %i, align 4
  br label %if.end141

if.else140:                                       ; preds = %for.end132
  %118 = load i32, i32* %si, align 4
  store i32 %118, i32* %i, align 4
  br label %if.end141

if.end141:                                        ; preds = %if.else140, %if.then137
  %119 = load i32, i32* %free_ret, align 4
  %tobool142 = icmp ne i32 %119, 0
  br i1 %tobool142, label %if.then143, label %if.end144

if.then143:                                       ; preds = %if.end141
  %120 = load i8*, i8** %ret, align 4
  call void @sh_xfree(i8* %120, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 970)
  br label %if.end144

if.end144:                                        ; preds = %if.then143, %if.end141
  br label %while.cond

if.end145:                                        ; preds = %lor.lhs.false90, %if.end80
  %121 = load i8, i8* %c, align 1
  %conv146 = zext i8 %121 to i32
  %cmp147 = icmp ne i32 %conv146, 34
  br i1 %cmp147, label %if.then149, label %if.end150

if.then149:                                       ; preds = %if.end145
  br label %add_one_character

if.end150:                                        ; preds = %if.end145
  %122 = load i32, i32* %stripdq, align 4
  %tobool151 = icmp ne i32 %122, 0
  br i1 %tobool151, label %if.then152, label %if.end154

if.then152:                                       ; preds = %if.end150
  %123 = load i32, i32* %dquote, align 4
  %xor = xor i32 %123, 1
  store i32 %xor, i32* %dquote, align 4
  %124 = load i32, i32* %i, align 4
  %inc153 = add nsw i32 %124, 1
  store i32 %inc153, i32* %i, align 4
  br label %while.cond

if.end154:                                        ; preds = %if.end150
  br label %while.end

while.end:                                        ; preds = %if.end154, %while.cond
  %125 = load i8*, i8** %temp, align 4
  %126 = load i32, i32* %j, align 4
  %arrayidx155 = getelementptr inbounds i8, i8* %125, i32 %126
  store i8 0, i8* %arrayidx155, align 1
  %127 = load i8, i8* %c, align 1
  %tobool156 = icmp ne i8 %127, 0
  br i1 %tobool156, label %if.then157, label %if.end159

if.then157:                                       ; preds = %while.end
  %128 = load i32, i32* %i, align 4
  %inc158 = add nsw i32 %128, 1
  store i32 %inc158, i32* %i, align 4
  br label %if.end159

if.end159:                                        ; preds = %if.then157, %while.end
  %129 = load i32, i32* %i, align 4
  %130 = load i32*, i32** %sindex.addr, align 4
  store i32 %129, i32* %130, align 4
  %131 = load i8*, i8** %temp, align 4
  ret i8* %131
}

declare void @dispose_word(%struct.word_desc*) #1

declare i32 @move_to_high_fd(i32, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @make_dev_fd_filename(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %intbuf = alloca [12 x i8], align 1
  %p = alloca i8*, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %call = call i8* @sh_xmalloc(i32 17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5700)
  store i8* %call, i8** %ret, align 4
  %0 = load i8*, i8** %ret, align 4
  %call1 = call i8* @strcpy(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0))
  %1 = load i32, i32* %fd.addr, align 4
  %conv = sext i32 %1 to i64
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %intbuf, i32 0, i32 0
  %call2 = call i8* @inttostr(i64 %conv, i8* %arraydecay, i32 12)
  store i8* %call2, i8** %p, align 4
  %2 = load i8*, i8** %ret, align 4
  %add.ptr = getelementptr inbounds i8, i8* %2, i32 9
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i32 -1
  %3 = load i8*, i8** %p, align 4
  %call4 = call i8* @strcpy(i8* %add.ptr3, i8* %3)
  %4 = load i32, i32* %fd.addr, align 4
  call void @add_fifo_list(i32 %4)
  %5 = load i8*, i8** %ret, align 4
  ret i8* %5
}

declare void @reset_terminating_signals() #1

declare void @restore_original_signals() #1

declare void @setup_async_signals() #1

declare void @close_fd_bitmap(%struct.fd_bitmap*) #1

declare i8* @inttostr(i64, i8*, i32) #1

; Function Attrs: noinline nounwind
define internal void @add_fifo_list(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %ofds = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  %0 = load i8*, i8** @dev_fd_list, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4
  %2 = load i32, i32* @totfds, align 4
  %cmp1 = icmp sge i32 %1, %2
  br i1 %cmp1, label %if.then, label %if.end10

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32, i32* @totfds, align 4
  store i32 %3, i32* %ofds, align 4
  %call = call i32 @getdtablesize()
  store i32 %call, i32* @totfds, align 4
  %4 = load i32, i32* @totfds, align 4
  %cmp2 = icmp slt i32 %4, 0
  br i1 %cmp2, label %if.then5, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %if.then
  %5 = load i32, i32* @totfds, align 4
  %cmp4 = icmp sgt i32 %5, 256
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %lor.lhs.false3, %if.then
  store i32 256, i32* @totfds, align 4
  br label %if.end

if.end:                                           ; preds = %if.then5, %lor.lhs.false3
  %6 = load i32, i32* %fd.addr, align 4
  %7 = load i32, i32* @totfds, align 4
  %cmp6 = icmp sge i32 %6, %7
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  %8 = load i32, i32* %fd.addr, align 4
  %add = add nsw i32 %8, 2
  store i32 %add, i32* @totfds, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %9 = load i8*, i8** @dev_fd_list, align 4
  %10 = load i32, i32* @totfds, align 4
  %call9 = call i8* @sh_xrealloc(i8* %9, i32 %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5605)
  store i8* %call9, i8** @dev_fd_list, align 4
  %11 = load i8*, i8** @dev_fd_list, align 4
  %12 = load i32, i32* %ofds, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 %12
  %13 = load i32, i32* @totfds, align 4
  %14 = load i32, i32* %ofds, align 4
  %sub = sub nsw i32 %13, %14
  call void @llvm.memset.p0i8.i32(i8* %add.ptr, i8 0, i32 %sub, i32 1, i1 false)
  br label %if.end10

if.end10:                                         ; preds = %if.end8, %lor.lhs.false
  %15 = load i8*, i8** @dev_fd_list, align 4
  %16 = load i32, i32* %fd.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %15, i32 %16
  store i8 1, i8* %arrayidx, align 1
  %17 = load i32, i32* @nfds, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* @nfds, align 4
  ret void
}

declare i32 @getdtablesize() #1

declare void @err_unboundvar(i8*) #1

declare i8* @itos(i64) #1

declare i8* @which_set_flags() #1

; Function Attrs: noinline nounwind
define internal %struct.word_desc* @parameter_brace_expand(i8* %string, i32* %indexp, i32 %quoted, i32 %pflags, i32* %quoted_dollar_atp, i32* %contains_dollar_at) #0 {
entry:
  %retval = alloca %struct.word_desc*, align 4
  %string.addr = alloca i8*, align 4
  %indexp.addr = alloca i32*, align 4
  %quoted.addr = alloca i32, align 4
  %pflags.addr = alloca i32, align 4
  %quoted_dollar_atp.addr = alloca i32*, align 4
  %contains_dollar_at.addr = alloca i32*, align 4
  %check_nullness = alloca i32, align 4
  %var_is_set = alloca i32, align 4
  %var_is_null = alloca i32, align 4
  %var_is_special = alloca i32, align 4
  %want_substring = alloca i32, align 4
  %want_indir = alloca i32, align 4
  %want_patsub = alloca i32, align 4
  %want_casemod = alloca i32, align 4
  %name = alloca i8*, align 4
  %value = alloca i8*, align 4
  %temp = alloca i8*, align 4
  %temp1 = alloca i8*, align 4
  %tdesc = alloca %struct.word_desc*, align 4
  %ret = alloca %struct.word_desc*, align 4
  %t_index = alloca i32, align 4
  %sindex = alloca i32, align 4
  %c = alloca i32, align 4
  %tflag = alloca i32, align 4
  %modspec = alloca i32, align 4
  %all_element_arrayref = alloca i32, align 4
  %number = alloca i64, align 8
  %ind = alloca i64, align 8
  %x = alloca i8**, align 4
  %xlist = alloca %struct.word_list*, align 4
  %x521 = alloca i8*, align 4
  %x1 = alloca i8*, align 4
  %qflags = alloca i32, align 4
  %t = alloca i8*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32* %indexp, i32** %indexp.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %pflags, i32* %pflags.addr, align 4
  store i32* %quoted_dollar_atp, i32** %quoted_dollar_atp.addr, align 4
  store i32* %contains_dollar_at, i32** %contains_dollar_at.addr, align 4
  store i8* null, i8** %value, align 4
  store i8* null, i8** %temp1, align 4
  store i8* null, i8** %temp, align 4
  store i32 0, i32* %check_nullness, align 4
  store i32 0, i32* %var_is_special, align 4
  store i32 0, i32* %var_is_null, align 4
  store i32 0, i32* %var_is_set, align 4
  store i32 0, i32* %want_casemod, align 4
  store i32 0, i32* %want_patsub, align 4
  store i32 0, i32* %want_indir, align 4
  store i32 0, i32* %want_substring, align 4
  store i32 0, i32* %all_element_arrayref, align 4
  %0 = load i32*, i32** %indexp.addr, align 4
  %1 = load i32, i32* %0, align 4
  store i32 %1, i32* %sindex, align 4
  %2 = load i32, i32* %sindex, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %sindex, align 4
  store i32 %inc, i32* %t_index, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %4 = load i32, i32* %t_index, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 %4
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 35
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %6 = load i8*, i8** %string.addr, align 4
  %7 = load i32, i32* %t_index, align 4
  %add = add nsw i32 %7, 1
  %arrayidx2 = getelementptr inbounds i8, i8* %6, i32 %add
  %8 = load i8, i8* %arrayidx2, align 1
  %conv3 = zext i8 %8 to i32
  %call = call i32 @isalpha(i32 %conv3) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load i8*, i8** %string.addr, align 4
  %10 = load i32, i32* %t_index, align 4
  %add4 = add nsw i32 %10, 1
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i32 %add4
  %11 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %11 to i32
  %cmp7 = icmp eq i32 %conv6, 95
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load i8*, i8** %string.addr, align 4
  %call9 = call i8* @string_extract(i8* %12, i32* %t_index, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i32 0, i32 0), i32 2)
  store i8* %call9, i8** %name, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false, %entry
  %13 = load i8*, i8** %string.addr, align 4
  %call10 = call i8* @string_extract(i8* %13, i32* %t_index, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i32 2)
  store i8* %call10, i8** %name, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i8*, i8** %name, align 4
  %15 = load i8, i8* %14, align 1
  %conv11 = sext i8 %15 to i32
  %cmp12 = icmp eq i32 %conv11, 0
  br i1 %cmp12, label %land.lhs.true14, label %if.else27

land.lhs.true14:                                  ; preds = %if.end
  %16 = load i32, i32* %sindex, align 4
  %17 = load i32, i32* %t_index, align 4
  %cmp15 = icmp eq i32 %16, %17
  br i1 %cmp15, label %land.lhs.true17, label %if.else27

land.lhs.true17:                                  ; preds = %land.lhs.true14
  %18 = load i8*, i8** %string.addr, align 4
  %19 = load i32, i32* %sindex, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %18, i32 %19
  %20 = load i8, i8* %arrayidx18, align 1
  %conv19 = sext i8 %20 to i32
  %cmp20 = icmp eq i32 %conv19, 64
  br i1 %cmp20, label %if.then22, label %if.else27

if.then22:                                        ; preds = %land.lhs.true17
  %21 = load i8*, i8** %name, align 4
  %call23 = call i8* @sh_xrealloc(i8* %21, i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7968)
  store i8* %call23, i8** %name, align 4
  %22 = load i8*, i8** %name, align 4
  %arrayidx24 = getelementptr inbounds i8, i8* %22, i32 0
  store i8 64, i8* %arrayidx24, align 1
  %23 = load i8*, i8** %name, align 4
  %arrayidx25 = getelementptr inbounds i8, i8* %23, i32 1
  store i8 0, i8* %arrayidx25, align 1
  %24 = load i32, i32* %t_index, align 4
  %inc26 = add nsw i32 %24, 1
  store i32 %inc26, i32* %t_index, align 4
  br label %if.end55

if.else27:                                        ; preds = %land.lhs.true17, %land.lhs.true14, %if.end
  %25 = load i8*, i8** %name, align 4
  %26 = load i8, i8* %25, align 1
  %conv28 = sext i8 %26 to i32
  %cmp29 = icmp eq i32 %conv28, 33
  br i1 %cmp29, label %land.lhs.true31, label %if.end54

land.lhs.true31:                                  ; preds = %if.else27
  %27 = load i32, i32* %t_index, align 4
  %28 = load i32, i32* %sindex, align 4
  %cmp32 = icmp sgt i32 %27, %28
  br i1 %cmp32, label %land.lhs.true34, label %if.end54

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %29 = load i8*, i8** %string.addr, align 4
  %30 = load i32, i32* %t_index, align 4
  %arrayidx35 = getelementptr inbounds i8, i8* %29, i32 %30
  %31 = load i8, i8* %arrayidx35, align 1
  %conv36 = sext i8 %31 to i32
  %cmp37 = icmp eq i32 %conv36, 64
  br i1 %cmp37, label %land.lhs.true39, label %if.end54

land.lhs.true39:                                  ; preds = %land.lhs.true34
  %32 = load i8*, i8** %string.addr, align 4
  %33 = load i32, i32* %t_index, align 4
  %add40 = add nsw i32 %33, 1
  %arrayidx41 = getelementptr inbounds i8, i8* %32, i32 %add40
  %34 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %34 to i32
  %cmp43 = icmp eq i32 %conv42, 125
  br i1 %cmp43, label %if.then45, label %if.end54

if.then45:                                        ; preds = %land.lhs.true39
  %35 = load i8*, i8** %name, align 4
  %36 = load i32, i32* %t_index, align 4
  %37 = load i32, i32* %sindex, align 4
  %sub = sub nsw i32 %36, %37
  %add46 = add nsw i32 %sub, 2
  %call47 = call i8* @sh_xrealloc(i8* %35, i32 %add46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7975)
  store i8* %call47, i8** %name, align 4
  %38 = load i8*, i8** %name, align 4
  %39 = load i32, i32* %t_index, align 4
  %40 = load i32, i32* %sindex, align 4
  %sub48 = sub nsw i32 %39, %40
  %arrayidx49 = getelementptr inbounds i8, i8* %38, i32 %sub48
  store i8 64, i8* %arrayidx49, align 1
  %41 = load i8*, i8** %name, align 4
  %42 = load i32, i32* %t_index, align 4
  %43 = load i32, i32* %sindex, align 4
  %sub50 = sub nsw i32 %42, %43
  %add51 = add nsw i32 %sub50, 1
  %arrayidx52 = getelementptr inbounds i8, i8* %41, i32 %add51
  store i8 0, i8* %arrayidx52, align 1
  %44 = load i32, i32* %t_index, align 4
  %inc53 = add nsw i32 %44, 1
  store i32 %inc53, i32* %t_index, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then45, %land.lhs.true39, %land.lhs.true34, %land.lhs.true31, %if.else27
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then22
  store %struct.word_desc* null, %struct.word_desc** %ret, align 4
  store i32 0, i32* %tflag, align 4
  store i64 -9223372036854775808, i64* %ind, align 8
  %45 = load i32, i32* %sindex, align 4
  %46 = load i32, i32* %t_index, align 4
  %cmp56 = icmp eq i32 %45, %46
  br i1 %cmp56, label %land.lhs.true58, label %lor.lhs.false78

land.lhs.true58:                                  ; preds = %if.end55
  %47 = load i8*, i8** %string.addr, align 4
  %48 = load i32, i32* %t_index, align 4
  %arrayidx59 = getelementptr inbounds i8, i8* %47, i32 %48
  %49 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %49 to i32
  %cmp61 = icmp eq i32 %conv60, 45
  br i1 %cmp61, label %if.then145, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %land.lhs.true58
  %50 = load i8*, i8** %string.addr, align 4
  %51 = load i32, i32* %t_index, align 4
  %arrayidx64 = getelementptr inbounds i8, i8* %50, i32 %51
  %52 = load i8, i8* %arrayidx64, align 1
  %conv65 = sext i8 %52 to i32
  %cmp66 = icmp eq i32 %conv65, 63
  br i1 %cmp66, label %if.then145, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %lor.lhs.false63
  %53 = load i8*, i8** %string.addr, align 4
  %54 = load i32, i32* %t_index, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %53, i32 %54
  %55 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %55 to i32
  %cmp71 = icmp eq i32 %conv70, 35
  br i1 %cmp71, label %if.then145, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %lor.lhs.false68
  %56 = load i8*, i8** %string.addr, align 4
  %57 = load i32, i32* %t_index, align 4
  %arrayidx74 = getelementptr inbounds i8, i8* %56, i32 %57
  %58 = load i8, i8* %arrayidx74, align 1
  %conv75 = sext i8 %58 to i32
  %cmp76 = icmp eq i32 %conv75, 64
  br i1 %cmp76, label %if.then145, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %lor.lhs.false73, %if.end55
  %59 = load i32, i32* %sindex, align 4
  %60 = load i32, i32* %t_index, align 4
  %cmp79 = icmp eq i32 %59, %60
  br i1 %cmp79, label %land.lhs.true81, label %lor.lhs.false110

land.lhs.true81:                                  ; preds = %lor.lhs.false78
  %61 = load i8*, i8** %string.addr, align 4
  %62 = load i32, i32* %sindex, align 4
  %arrayidx82 = getelementptr inbounds i8, i8* %61, i32 %62
  %63 = load i8, i8* %arrayidx82, align 1
  %conv83 = sext i8 %63 to i32
  %cmp84 = icmp eq i32 %conv83, 35
  br i1 %cmp84, label %land.lhs.true86, label %lor.lhs.false110

land.lhs.true86:                                  ; preds = %land.lhs.true81
  %64 = load i8*, i8** %string.addr, align 4
  %65 = load i32, i32* %sindex, align 4
  %add87 = add nsw i32 %65, 1
  %arrayidx88 = getelementptr inbounds i8, i8* %64, i32 %add87
  %66 = load i8, i8* %arrayidx88, align 1
  %conv89 = sext i8 %66 to i32
  %cmp90 = icmp eq i32 %conv89, 45
  br i1 %cmp90, label %if.then145, label %lor.lhs.false92

lor.lhs.false92:                                  ; preds = %land.lhs.true86
  %67 = load i8*, i8** %string.addr, align 4
  %68 = load i32, i32* %sindex, align 4
  %add93 = add nsw i32 %68, 1
  %arrayidx94 = getelementptr inbounds i8, i8* %67, i32 %add93
  %69 = load i8, i8* %arrayidx94, align 1
  %conv95 = sext i8 %69 to i32
  %cmp96 = icmp eq i32 %conv95, 63
  br i1 %cmp96, label %if.then145, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %lor.lhs.false92
  %70 = load i8*, i8** %string.addr, align 4
  %71 = load i32, i32* %sindex, align 4
  %add99 = add nsw i32 %71, 1
  %arrayidx100 = getelementptr inbounds i8, i8* %70, i32 %add99
  %72 = load i8, i8* %arrayidx100, align 1
  %conv101 = sext i8 %72 to i32
  %cmp102 = icmp eq i32 %conv101, 35
  br i1 %cmp102, label %if.then145, label %lor.lhs.false104

lor.lhs.false104:                                 ; preds = %lor.lhs.false98
  %73 = load i8*, i8** %string.addr, align 4
  %74 = load i32, i32* %sindex, align 4
  %add105 = add nsw i32 %74, 1
  %arrayidx106 = getelementptr inbounds i8, i8* %73, i32 %add105
  %75 = load i8, i8* %arrayidx106, align 1
  %conv107 = sext i8 %75 to i32
  %cmp108 = icmp eq i32 %conv107, 64
  br i1 %cmp108, label %if.then145, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %lor.lhs.false104, %land.lhs.true81, %lor.lhs.false78
  %76 = load i32, i32* %sindex, align 4
  %77 = load i32, i32* %t_index, align 4
  %sub111 = sub nsw i32 %77, 1
  %cmp112 = icmp eq i32 %76, %sub111
  br i1 %cmp112, label %land.lhs.true114, label %if.end165

land.lhs.true114:                                 ; preds = %lor.lhs.false110
  %78 = load i8*, i8** %string.addr, align 4
  %79 = load i32, i32* %sindex, align 4
  %arrayidx115 = getelementptr inbounds i8, i8* %78, i32 %79
  %80 = load i8, i8* %arrayidx115, align 1
  %conv116 = sext i8 %80 to i32
  %cmp117 = icmp eq i32 %conv116, 33
  br i1 %cmp117, label %land.lhs.true119, label %if.end165

land.lhs.true119:                                 ; preds = %land.lhs.true114
  %81 = load i32, i32* @posixly_correct, align 4
  %cmp120 = icmp eq i32 %81, 0
  br i1 %cmp120, label %land.lhs.true122, label %lor.lhs.false127

land.lhs.true122:                                 ; preds = %land.lhs.true119
  %82 = load i8*, i8** %string.addr, align 4
  %83 = load i32, i32* %t_index, align 4
  %arrayidx123 = getelementptr inbounds i8, i8* %82, i32 %83
  %84 = load i8, i8* %arrayidx123, align 1
  %conv124 = sext i8 %84 to i32
  %cmp125 = icmp eq i32 %conv124, 35
  br i1 %cmp125, label %if.then145, label %lor.lhs.false127

lor.lhs.false127:                                 ; preds = %land.lhs.true122, %land.lhs.true119
  %85 = load i32, i32* @posixly_correct, align 4
  %cmp128 = icmp eq i32 %85, 0
  br i1 %cmp128, label %land.lhs.true130, label %lor.lhs.false135

land.lhs.true130:                                 ; preds = %lor.lhs.false127
  %86 = load i8*, i8** %string.addr, align 4
  %87 = load i32, i32* %t_index, align 4
  %arrayidx131 = getelementptr inbounds i8, i8* %86, i32 %87
  %88 = load i8, i8* %arrayidx131, align 1
  %conv132 = sext i8 %88 to i32
  %cmp133 = icmp eq i32 %conv132, 63
  br i1 %cmp133, label %if.then145, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %land.lhs.true130, %lor.lhs.false127
  %89 = load i8*, i8** %string.addr, align 4
  %90 = load i32, i32* %t_index, align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %89, i32 %90
  %91 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %91 to i32
  %cmp138 = icmp eq i32 %conv137, 64
  br i1 %cmp138, label %if.then145, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %lor.lhs.false135
  %92 = load i8*, i8** %string.addr, align 4
  %93 = load i32, i32* %t_index, align 4
  %arrayidx141 = getelementptr inbounds i8, i8* %92, i32 %93
  %94 = load i8, i8* %arrayidx141, align 1
  %conv142 = sext i8 %94 to i32
  %cmp143 = icmp eq i32 %conv142, 42
  br i1 %cmp143, label %if.then145, label %if.end165

if.then145:                                       ; preds = %lor.lhs.false140, %lor.lhs.false135, %land.lhs.true130, %land.lhs.true122, %lor.lhs.false104, %lor.lhs.false98, %lor.lhs.false92, %land.lhs.true86, %lor.lhs.false73, %lor.lhs.false68, %lor.lhs.false63, %land.lhs.true58
  %95 = load i32, i32* %t_index, align 4
  %inc146 = add nsw i32 %95, 1
  store i32 %inc146, i32* %t_index, align 4
  %96 = load i8*, i8** %string.addr, align 4
  %call147 = call i8* @string_extract(i8* %96, i32* %t_index, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i32 0, i32 0), i32 0)
  store i8* %call147, i8** %temp1, align 4
  %97 = load i8*, i8** %name, align 4
  %98 = load i8*, i8** %temp1, align 4
  %call148 = call i32 @strlen(i8* %98)
  %add149 = add i32 3, %call148
  %call150 = call i8* @sh_xrealloc(i8* %97, i32 %add149, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7997)
  store i8* %call150, i8** %name, align 4
  %99 = load i8*, i8** %string.addr, align 4
  %100 = load i32, i32* %sindex, align 4
  %arrayidx151 = getelementptr inbounds i8, i8* %99, i32 %100
  %101 = load i8, i8* %arrayidx151, align 1
  %102 = load i8*, i8** %name, align 4
  store i8 %101, i8* %102, align 1
  %103 = load i8*, i8** %string.addr, align 4
  %104 = load i32, i32* %sindex, align 4
  %arrayidx152 = getelementptr inbounds i8, i8* %103, i32 %104
  %105 = load i8, i8* %arrayidx152, align 1
  %conv153 = sext i8 %105 to i32
  %cmp154 = icmp eq i32 %conv153, 33
  br i1 %cmp154, label %if.then156, label %if.else161

if.then156:                                       ; preds = %if.then145
  %106 = load i8*, i8** %string.addr, align 4
  %107 = load i32, i32* %sindex, align 4
  %add157 = add nsw i32 %107, 1
  %arrayidx158 = getelementptr inbounds i8, i8* %106, i32 %add157
  %108 = load i8, i8* %arrayidx158, align 1
  %109 = load i8*, i8** %name, align 4
  %arrayidx159 = getelementptr inbounds i8, i8* %109, i32 1
  store i8 %108, i8* %arrayidx159, align 1
  %110 = load i8*, i8** %name, align 4
  %add.ptr = getelementptr inbounds i8, i8* %110, i32 2
  %111 = load i8*, i8** %temp1, align 4
  %call160 = call i8* @strcpy(i8* %add.ptr, i8* %111)
  br label %if.end164

if.else161:                                       ; preds = %if.then145
  %112 = load i8*, i8** %name, align 4
  %add.ptr162 = getelementptr inbounds i8, i8* %112, i32 1
  %113 = load i8*, i8** %temp1, align 4
  %call163 = call i8* @strcpy(i8* %add.ptr162, i8* %113)
  br label %if.end164

if.end164:                                        ; preds = %if.else161, %if.then156
  %114 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8007)
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %lor.lhs.false140, %land.lhs.true114, %lor.lhs.false110
  %115 = load i32, i32* %t_index, align 4
  store i32 %115, i32* %sindex, align 4
  %116 = load i8*, i8** %string.addr, align 4
  %117 = load i32, i32* %sindex, align 4
  %arrayidx166 = getelementptr inbounds i8, i8* %116, i32 %117
  %118 = load i8, i8* %arrayidx166, align 1
  %conv167 = sext i8 %118 to i32
  store i32 %conv167, i32* %c, align 4
  %tobool168 = icmp ne i32 %conv167, 0
  br i1 %tobool168, label %if.then169, label %if.end171

if.then169:                                       ; preds = %if.end165
  %119 = load i32, i32* %sindex, align 4
  %inc170 = add nsw i32 %119, 1
  store i32 %inc170, i32* %sindex, align 4
  br label %if.end171

if.end171:                                        ; preds = %if.then169, %if.end165
  %120 = load i32, i32* %c, align 4
  %cmp172 = icmp eq i32 %120, 58
  br i1 %cmp172, label %land.lhs.true174, label %if.else186

land.lhs.true174:                                 ; preds = %if.end171
  %121 = load i8*, i8** %string.addr, align 4
  %122 = load i32, i32* %sindex, align 4
  %arrayidx175 = getelementptr inbounds i8, i8* %121, i32 %122
  %123 = load i8, i8* %arrayidx175, align 1
  %idxprom = zext i8 %123 to i32
  %arrayidx176 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %124 = load i32, i32* %arrayidx176, align 4
  %and = and i32 %124, 4096
  %tobool177 = icmp ne i32 %and, 0
  br i1 %tobool177, label %if.then178, label %if.else186

if.then178:                                       ; preds = %land.lhs.true174
  %125 = load i32, i32* %check_nullness, align 4
  %inc179 = add nsw i32 %125, 1
  store i32 %inc179, i32* %check_nullness, align 4
  %126 = load i8*, i8** %string.addr, align 4
  %127 = load i32, i32* %sindex, align 4
  %arrayidx180 = getelementptr inbounds i8, i8* %126, i32 %127
  %128 = load i8, i8* %arrayidx180, align 1
  %conv181 = sext i8 %128 to i32
  store i32 %conv181, i32* %c, align 4
  %tobool182 = icmp ne i32 %conv181, 0
  br i1 %tobool182, label %if.then183, label %if.end185

if.then183:                                       ; preds = %if.then178
  %129 = load i32, i32* %sindex, align 4
  %inc184 = add nsw i32 %129, 1
  store i32 %inc184, i32* %sindex, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then183, %if.then178
  br label %if.end212

if.else186:                                       ; preds = %land.lhs.true174, %if.end171
  %130 = load i32, i32* %c, align 4
  %cmp187 = icmp eq i32 %130, 58
  br i1 %cmp187, label %land.lhs.true189, label %if.else195

land.lhs.true189:                                 ; preds = %if.else186
  %131 = load i8*, i8** %string.addr, align 4
  %132 = load i32, i32* %sindex, align 4
  %arrayidx190 = getelementptr inbounds i8, i8* %131, i32 %132
  %133 = load i8, i8* %arrayidx190, align 1
  %conv191 = sext i8 %133 to i32
  %cmp192 = icmp ne i32 %conv191, 125
  br i1 %cmp192, label %if.then194, label %if.else195

if.then194:                                       ; preds = %land.lhs.true189
  store i32 1, i32* %want_substring, align 4
  br label %if.end211

if.else195:                                       ; preds = %land.lhs.true189, %if.else186
  %134 = load i32, i32* %c, align 4
  %cmp196 = icmp eq i32 %134, 47
  br i1 %cmp196, label %if.then198, label %if.else199

if.then198:                                       ; preds = %if.else195
  store i32 1, i32* %want_patsub, align 4
  br label %if.end210

if.else199:                                       ; preds = %if.else195
  %135 = load i32, i32* %c, align 4
  %cmp200 = icmp eq i32 %135, 94
  br i1 %cmp200, label %if.then208, label %lor.lhs.false202

lor.lhs.false202:                                 ; preds = %if.else199
  %136 = load i32, i32* %c, align 4
  %cmp203 = icmp eq i32 %136, 44
  br i1 %cmp203, label %if.then208, label %lor.lhs.false205

lor.lhs.false205:                                 ; preds = %lor.lhs.false202
  %137 = load i32, i32* %c, align 4
  %cmp206 = icmp eq i32 %137, 126
  br i1 %cmp206, label %if.then208, label %if.end209

if.then208:                                       ; preds = %lor.lhs.false205, %lor.lhs.false202, %if.else199
  %138 = load i32, i32* %c, align 4
  store i32 %138, i32* %modspec, align 4
  store i32 1, i32* %want_casemod, align 4
  br label %if.end209

if.end209:                                        ; preds = %if.then208, %lor.lhs.false205
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then198
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then194
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.end185
  %139 = load i8*, i8** %name, align 4
  %arrayidx213 = getelementptr inbounds i8, i8* %139, i32 0
  %140 = load i8, i8* %arrayidx213, align 1
  %conv214 = sext i8 %140 to i32
  %cmp215 = icmp eq i32 %conv214, 35
  br i1 %cmp215, label %land.lhs.true217, label %if.end250

land.lhs.true217:                                 ; preds = %if.end212
  %141 = load i8*, i8** %name, align 4
  %arrayidx218 = getelementptr inbounds i8, i8* %141, i32 1
  %142 = load i8, i8* %arrayidx218, align 1
  %conv219 = sext i8 %142 to i32
  %cmp220 = icmp eq i32 %conv219, 0
  br i1 %cmp220, label %land.lhs.true222, label %if.end250

land.lhs.true222:                                 ; preds = %land.lhs.true217
  %143 = load i32, i32* %check_nullness, align 4
  %cmp223 = icmp eq i32 %143, 0
  br i1 %cmp223, label %land.lhs.true225, label %if.end250

land.lhs.true225:                                 ; preds = %land.lhs.true222
  %144 = load i32, i32* %c, align 4
  %cmp226 = icmp eq i32 %144, 45
  br i1 %cmp226, label %land.lhs.true237, label %lor.lhs.false228

lor.lhs.false228:                                 ; preds = %land.lhs.true225
  %145 = load i32, i32* %c, align 4
  %cmp229 = icmp eq i32 %145, 63
  br i1 %cmp229, label %land.lhs.true237, label %lor.lhs.false231

lor.lhs.false231:                                 ; preds = %lor.lhs.false228
  %146 = load i32, i32* %c, align 4
  %cmp232 = icmp eq i32 %146, 35
  br i1 %cmp232, label %land.lhs.true237, label %lor.lhs.false234

lor.lhs.false234:                                 ; preds = %lor.lhs.false231
  %147 = load i32, i32* %c, align 4
  %cmp235 = icmp eq i32 %147, 64
  br i1 %cmp235, label %land.lhs.true237, label %if.end250

land.lhs.true237:                                 ; preds = %lor.lhs.false234, %lor.lhs.false231, %lor.lhs.false228, %land.lhs.true225
  %148 = load i8*, i8** %string.addr, align 4
  %149 = load i32, i32* %sindex, align 4
  %arrayidx238 = getelementptr inbounds i8, i8* %148, i32 %149
  %150 = load i8, i8* %arrayidx238, align 1
  %conv239 = sext i8 %150 to i32
  %cmp240 = icmp eq i32 %conv239, 125
  br i1 %cmp240, label %if.then242, label %if.end250

if.then242:                                       ; preds = %land.lhs.true237
  %151 = load i8*, i8** %name, align 4
  %call243 = call i8* @sh_xrealloc(i8* %151, i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8045)
  store i8* %call243, i8** %name, align 4
  %152 = load i32, i32* %c, align 4
  %conv244 = trunc i32 %152 to i8
  %153 = load i8*, i8** %name, align 4
  %arrayidx245 = getelementptr inbounds i8, i8* %153, i32 1
  store i8 %conv244, i8* %arrayidx245, align 1
  %154 = load i8*, i8** %name, align 4
  %arrayidx246 = getelementptr inbounds i8, i8* %154, i32 2
  store i8 0, i8* %arrayidx246, align 1
  %155 = load i8*, i8** %string.addr, align 4
  %156 = load i32, i32* %sindex, align 4
  %inc247 = add nsw i32 %156, 1
  store i32 %inc247, i32* %sindex, align 4
  %arrayidx248 = getelementptr inbounds i8, i8* %155, i32 %156
  %157 = load i8, i8* %arrayidx248, align 1
  %conv249 = sext i8 %157 to i32
  store i32 %conv249, i32* %c, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then242, %land.lhs.true237, %lor.lhs.false234, %land.lhs.true222, %land.lhs.true217, %if.end212
  %158 = load i8*, i8** %name, align 4
  %arrayidx251 = getelementptr inbounds i8, i8* %158, i32 0
  %159 = load i8, i8* %arrayidx251, align 1
  %conv252 = sext i8 %159 to i32
  %cmp253 = icmp eq i32 %conv252, 35
  br i1 %cmp253, label %land.lhs.true255, label %if.end274

land.lhs.true255:                                 ; preds = %if.end250
  %160 = load i8*, i8** %name, align 4
  %arrayidx256 = getelementptr inbounds i8, i8* %160, i32 1
  %161 = load i8, i8* %arrayidx256, align 1
  %conv257 = sext i8 %161 to i32
  %cmp258 = icmp eq i32 %conv257, 0
  br i1 %cmp258, label %land.lhs.true260, label %if.end274

land.lhs.true260:                                 ; preds = %land.lhs.true255
  %162 = load i32, i32* %check_nullness, align 4
  %cmp261 = icmp eq i32 %162, 0
  br i1 %cmp261, label %land.lhs.true263, label %if.end274

land.lhs.true263:                                 ; preds = %land.lhs.true260
  %163 = load i32, i32* %c, align 4
  %tobool264 = icmp ne i32 %163, 0
  br i1 %tobool264, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true263
  %164 = load i32, i32* %c, align 4
  %call265 = call i8* @mbschr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i32 %164)
  %cmp266 = icmp ne i8* %call265, null
  br i1 %cmp266, label %land.lhs.true268, label %if.end274

cond.false:                                       ; preds = %land.lhs.true263
  br i1 false, label %land.lhs.true268, label %if.end274

land.lhs.true268:                                 ; preds = %cond.false, %cond.true
  %165 = load i8*, i8** %string.addr, align 4
  %166 = load i32, i32* %sindex, align 4
  %arrayidx269 = getelementptr inbounds i8, i8* %165, i32 %166
  %167 = load i8, i8* %arrayidx269, align 1
  %conv270 = sext i8 %167 to i32
  %cmp271 = icmp eq i32 %conv270, 125
  br i1 %cmp271, label %if.then273, label %if.end274

if.then273:                                       ; preds = %land.lhs.true268
  store i8* null, i8** %temp, align 4
  br label %bad_substitution

if.end274:                                        ; preds = %land.lhs.true268, %cond.false, %cond.true, %land.lhs.true260, %land.lhs.true255, %if.end250
  %168 = load i8*, i8** %name, align 4
  %169 = load i8, i8* %168, align 1
  %conv275 = sext i8 %169 to i32
  %cmp276 = icmp eq i32 %conv275, 33
  br i1 %cmp276, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end274
  %170 = load i8*, i8** %name, align 4
  %arrayidx278 = getelementptr inbounds i8, i8* %170, i32 1
  %171 = load i8, i8* %arrayidx278, align 1
  %conv279 = zext i8 %171 to i32
  %call280 = call i32 @isalpha(i32 %conv279) #9
  %tobool281 = icmp ne i32 %call280, 0
  br i1 %tobool281, label %lor.end322, label %lor.lhs.false282

lor.lhs.false282:                                 ; preds = %land.rhs
  %172 = load i8*, i8** %name, align 4
  %arrayidx283 = getelementptr inbounds i8, i8* %172, i32 1
  %173 = load i8, i8* %arrayidx283, align 1
  %conv284 = zext i8 %173 to i32
  %cmp285 = icmp eq i32 %conv284, 95
  br i1 %cmp285, label %lor.end322, label %lor.lhs.false287

lor.lhs.false287:                                 ; preds = %lor.lhs.false282
  %174 = load i8*, i8** %name, align 4
  %arrayidx288 = getelementptr inbounds i8, i8* %174, i32 1
  %175 = load i8, i8* %arrayidx288, align 1
  %conv289 = sext i8 %175 to i32
  %cmp290 = icmp sge i32 %conv289, 48
  br i1 %cmp290, label %land.lhs.true292, label %lor.rhs

land.lhs.true292:                                 ; preds = %lor.lhs.false287
  %176 = load i8*, i8** %name, align 4
  %arrayidx293 = getelementptr inbounds i8, i8* %176, i32 1
  %177 = load i8, i8* %arrayidx293, align 1
  %conv294 = sext i8 %177 to i32
  %cmp295 = icmp sle i32 %conv294, 57
  br i1 %cmp295, label %lor.end322, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true292, %lor.lhs.false287
  %178 = load i32, i32* @posixly_correct, align 4
  %cmp297 = icmp eq i32 %178, 0
  br i1 %cmp297, label %land.lhs.true299, label %lor.lhs.false304

land.lhs.true299:                                 ; preds = %lor.rhs
  %179 = load i8*, i8** %name, align 4
  %arrayidx300 = getelementptr inbounds i8, i8* %179, i32 1
  %180 = load i8, i8* %arrayidx300, align 1
  %conv301 = sext i8 %180 to i32
  %cmp302 = icmp eq i32 %conv301, 35
  br i1 %cmp302, label %lor.end, label %lor.lhs.false304

lor.lhs.false304:                                 ; preds = %land.lhs.true299, %lor.rhs
  %181 = load i32, i32* @posixly_correct, align 4
  %cmp305 = icmp eq i32 %181, 0
  br i1 %cmp305, label %land.lhs.true307, label %lor.lhs.false312

land.lhs.true307:                                 ; preds = %lor.lhs.false304
  %182 = load i8*, i8** %name, align 4
  %arrayidx308 = getelementptr inbounds i8, i8* %182, i32 1
  %183 = load i8, i8* %arrayidx308, align 1
  %conv309 = sext i8 %183 to i32
  %cmp310 = icmp eq i32 %conv309, 63
  br i1 %cmp310, label %lor.end, label %lor.lhs.false312

lor.lhs.false312:                                 ; preds = %land.lhs.true307, %lor.lhs.false304
  %184 = load i8*, i8** %name, align 4
  %arrayidx313 = getelementptr inbounds i8, i8* %184, i32 1
  %185 = load i8, i8* %arrayidx313, align 1
  %conv314 = sext i8 %185 to i32
  %cmp315 = icmp eq i32 %conv314, 64
  br i1 %cmp315, label %lor.end, label %lor.rhs317

lor.rhs317:                                       ; preds = %lor.lhs.false312
  %186 = load i8*, i8** %name, align 4
  %arrayidx318 = getelementptr inbounds i8, i8* %186, i32 1
  %187 = load i8, i8* %arrayidx318, align 1
  %conv319 = sext i8 %187 to i32
  %cmp320 = icmp eq i32 %conv319, 42
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs317, %lor.lhs.false312, %land.lhs.true307, %land.lhs.true299
  %188 = phi i1 [ true, %lor.lhs.false312 ], [ true, %land.lhs.true307 ], [ true, %land.lhs.true299 ], [ %cmp320, %lor.rhs317 ]
  br label %lor.end322

lor.end322:                                       ; preds = %lor.end, %land.lhs.true292, %lor.lhs.false282, %land.rhs
  %189 = phi i1 [ true, %land.lhs.true292 ], [ true, %lor.lhs.false282 ], [ true, %land.rhs ], [ %188, %lor.end ]
  br label %land.end

land.end:                                         ; preds = %lor.end322, %if.end274
  %190 = phi i1 [ false, %if.end274 ], [ %189, %lor.end322 ]
  %land.ext = zext i1 %190 to i32
  store i32 %land.ext, i32* %want_indir, align 4
  %191 = load i8*, i8** %name, align 4
  %192 = load i8, i8* %191, align 1
  %conv323 = sext i8 %192 to i32
  %tobool324 = icmp ne i32 %conv323, 0
  br i1 %tobool324, label %land.lhs.true325, label %if.end381

land.lhs.true325:                                 ; preds = %land.end
  %193 = load i8*, i8** %name, align 4
  %194 = load i8, i8* %193, align 1
  %conv326 = sext i8 %194 to i32
  %cmp327 = icmp sge i32 %conv326, 48
  br i1 %cmp327, label %land.lhs.true329, label %lor.lhs.false336

land.lhs.true329:                                 ; preds = %land.lhs.true325
  %195 = load i8*, i8** %name, align 4
  %196 = load i8, i8* %195, align 1
  %conv330 = sext i8 %196 to i32
  %cmp331 = icmp sle i32 %conv330, 57
  br i1 %cmp331, label %land.lhs.true333, label %lor.lhs.false336

land.lhs.true333:                                 ; preds = %land.lhs.true329
  %197 = load i8*, i8** %name, align 4
  %call334 = call i32 @all_digits(i8* %197)
  %tobool335 = icmp ne i32 %call334, 0
  br i1 %tobool335, label %if.then379, label %lor.lhs.false336

lor.lhs.false336:                                 ; preds = %land.lhs.true333, %land.lhs.true329, %land.lhs.true325
  %198 = load i8*, i8** %name, align 4
  %arrayidx337 = getelementptr inbounds i8, i8* %198, i32 1
  %199 = load i8, i8* %arrayidx337, align 1
  %conv338 = sext i8 %199 to i32
  %cmp339 = icmp eq i32 %conv338, 0
  br i1 %cmp339, label %land.lhs.true341, label %lor.lhs.false346

land.lhs.true341:                                 ; preds = %lor.lhs.false336
  %200 = load i8*, i8** %name, align 4
  %201 = load i8, i8* %200, align 1
  %idxprom342 = zext i8 %201 to i32
  %arrayidx343 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom342
  %202 = load i32, i32* %arrayidx343, align 4
  %and344 = and i32 %202, 2048
  %tobool345 = icmp ne i32 %and344, 0
  br i1 %tobool345, label %if.then379, label %lor.lhs.false346

lor.lhs.false346:                                 ; preds = %land.lhs.true341, %lor.lhs.false336
  %203 = load i32, i32* %want_indir, align 4
  %tobool347 = icmp ne i32 %203, 0
  br i1 %tobool347, label %land.lhs.true348, label %if.end381

land.lhs.true348:                                 ; preds = %lor.lhs.false346
  %204 = load i8*, i8** %name, align 4
  %arrayidx349 = getelementptr inbounds i8, i8* %204, i32 2
  %205 = load i8, i8* %arrayidx349, align 1
  %conv350 = sext i8 %205 to i32
  %cmp351 = icmp eq i32 %conv350, 0
  br i1 %cmp351, label %land.lhs.true353, label %if.end381

land.lhs.true353:                                 ; preds = %land.lhs.true348
  %206 = load i32, i32* @posixly_correct, align 4
  %cmp354 = icmp eq i32 %206, 0
  br i1 %cmp354, label %land.lhs.true356, label %lor.lhs.false361

land.lhs.true356:                                 ; preds = %land.lhs.true353
  %207 = load i8*, i8** %name, align 4
  %arrayidx357 = getelementptr inbounds i8, i8* %207, i32 1
  %208 = load i8, i8* %arrayidx357, align 1
  %conv358 = sext i8 %208 to i32
  %cmp359 = icmp eq i32 %conv358, 35
  br i1 %cmp359, label %if.then379, label %lor.lhs.false361

lor.lhs.false361:                                 ; preds = %land.lhs.true356, %land.lhs.true353
  %209 = load i32, i32* @posixly_correct, align 4
  %cmp362 = icmp eq i32 %209, 0
  br i1 %cmp362, label %land.lhs.true364, label %lor.lhs.false369

land.lhs.true364:                                 ; preds = %lor.lhs.false361
  %210 = load i8*, i8** %name, align 4
  %arrayidx365 = getelementptr inbounds i8, i8* %210, i32 1
  %211 = load i8, i8* %arrayidx365, align 1
  %conv366 = sext i8 %211 to i32
  %cmp367 = icmp eq i32 %conv366, 63
  br i1 %cmp367, label %if.then379, label %lor.lhs.false369

lor.lhs.false369:                                 ; preds = %land.lhs.true364, %lor.lhs.false361
  %212 = load i8*, i8** %name, align 4
  %arrayidx370 = getelementptr inbounds i8, i8* %212, i32 1
  %213 = load i8, i8* %arrayidx370, align 1
  %conv371 = sext i8 %213 to i32
  %cmp372 = icmp eq i32 %conv371, 64
  br i1 %cmp372, label %if.then379, label %lor.lhs.false374

lor.lhs.false374:                                 ; preds = %lor.lhs.false369
  %214 = load i8*, i8** %name, align 4
  %arrayidx375 = getelementptr inbounds i8, i8* %214, i32 1
  %215 = load i8, i8* %arrayidx375, align 1
  %conv376 = sext i8 %215 to i32
  %cmp377 = icmp eq i32 %conv376, 42
  br i1 %cmp377, label %if.then379, label %if.end381

if.then379:                                       ; preds = %lor.lhs.false374, %lor.lhs.false369, %land.lhs.true364, %land.lhs.true356, %land.lhs.true341, %land.lhs.true333
  %216 = load i32, i32* %var_is_special, align 4
  %inc380 = add nsw i32 %216, 1
  store i32 %inc380, i32* %var_is_special, align 4
  br label %if.end381

if.end381:                                        ; preds = %if.then379, %lor.lhs.false374, %land.lhs.true348, %lor.lhs.false346, %land.end
  %217 = load i8*, i8** %name, align 4
  %218 = load i8, i8* %217, align 1
  %conv382 = sext i8 %218 to i32
  %cmp383 = icmp eq i32 %conv382, 35
  br i1 %cmp383, label %land.lhs.true385, label %if.end416

land.lhs.true385:                                 ; preds = %if.end381
  %219 = load i8*, i8** %name, align 4
  %arrayidx386 = getelementptr inbounds i8, i8* %219, i32 1
  %220 = load i8, i8* %arrayidx386, align 1
  %conv387 = sext i8 %220 to i32
  %tobool388 = icmp ne i32 %conv387, 0
  br i1 %tobool388, label %if.then389, label %if.end416

if.then389:                                       ; preds = %land.lhs.true385
  %221 = load i8*, i8** %string.addr, align 4
  %222 = load i32, i32* %sindex, align 4
  %sub390 = sub nsw i32 %222, 1
  %arrayidx391 = getelementptr inbounds i8, i8* %221, i32 %sub390
  %223 = load i8, i8* %arrayidx391, align 1
  %conv392 = sext i8 %223 to i32
  %cmp393 = icmp ne i32 %conv392, 125
  br i1 %cmp393, label %if.then399, label %lor.lhs.false395

lor.lhs.false395:                                 ; preds = %if.then389
  %224 = load i8*, i8** %name, align 4
  %call396 = call i32 @valid_length_expression(i8* %224)
  %cmp397 = icmp eq i32 %call396, 0
  br i1 %cmp397, label %if.then399, label %if.end400

if.then399:                                       ; preds = %lor.lhs.false395, %if.then389
  store i8* null, i8** %temp, align 4
  br label %bad_substitution

if.end400:                                        ; preds = %lor.lhs.false395
  %225 = load i8*, i8** %name, align 4
  %call401 = call i64 @parameter_brace_expand_length(i8* %225)
  store i64 %call401, i64* %number, align 8
  %226 = load i64, i64* %number, align 8
  %cmp402 = icmp eq i64 %226, -9223372036854775808
  br i1 %cmp402, label %land.lhs.true404, label %if.end409

land.lhs.true404:                                 ; preds = %if.end400
  %227 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool405 = icmp ne i32 %227, 0
  br i1 %tobool405, label %if.then406, label %if.end409

if.then406:                                       ; preds = %land.lhs.true404
  store i32 1, i32* @last_command_exit_value, align 4
  %228 = load i8*, i8** %name, align 4
  %add.ptr407 = getelementptr inbounds i8, i8* %228, i32 1
  call void @err_unboundvar(i8* %add.ptr407)
  %229 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %229, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8091)
  %230 = load i32, i32* @interactive_shell, align 4
  %tobool408 = icmp ne i32 %230, 0
  %cond = select i1 %tobool408, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond, %struct.word_desc** %retval, align 4
  br label %return

if.end409:                                        ; preds = %land.lhs.true404, %if.end400
  %231 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %231, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8094)
  %232 = load i32, i32* %sindex, align 4
  %233 = load i32*, i32** %indexp.addr, align 4
  store i32 %232, i32* %233, align 4
  %234 = load i64, i64* %number, align 8
  %cmp410 = icmp slt i64 %234, 0
  br i1 %cmp410, label %if.then412, label %if.else413

if.then412:                                       ; preds = %if.end409
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else413:                                       ; preds = %if.end409
  %call414 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call414, %struct.word_desc** %ret, align 4
  %235 = load i64, i64* %number, align 8
  %call415 = call i8* @itos(i64 %235)
  %236 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %236, i32 0, i32 0
  store i8* %call415, i8** %word, align 4
  %237 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %237, %struct.word_desc** %retval, align 4
  br label %return

if.end416:                                        ; preds = %land.lhs.true385, %if.end381
  %238 = load i8*, i8** %name, align 4
  %arrayidx417 = getelementptr inbounds i8, i8* %238, i32 0
  %239 = load i8, i8* %arrayidx417, align 1
  %conv418 = sext i8 %239 to i32
  %cmp419 = icmp eq i32 %conv418, 64
  br i1 %cmp419, label %land.lhs.true421, label %if.end436

land.lhs.true421:                                 ; preds = %if.end416
  %240 = load i8*, i8** %name, align 4
  %arrayidx422 = getelementptr inbounds i8, i8* %240, i32 1
  %241 = load i8, i8* %arrayidx422, align 1
  %conv423 = sext i8 %241 to i32
  %cmp424 = icmp eq i32 %conv423, 0
  br i1 %cmp424, label %if.then426, label %if.end436

if.then426:                                       ; preds = %land.lhs.true421
  %242 = load i32, i32* %quoted.addr, align 4
  %and427 = and i32 %242, 3
  %tobool428 = icmp ne i32 %and427, 0
  br i1 %tobool428, label %land.lhs.true429, label %if.end432

land.lhs.true429:                                 ; preds = %if.then426
  %243 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool430 = icmp ne i32* %243, null
  br i1 %tobool430, label %if.then431, label %if.end432

if.then431:                                       ; preds = %land.lhs.true429
  %244 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 1, i32* %244, align 4
  br label %if.end432

if.end432:                                        ; preds = %if.then431, %land.lhs.true429, %if.then426
  %245 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool433 = icmp ne i32* %245, null
  br i1 %tobool433, label %if.then434, label %if.end435

if.then434:                                       ; preds = %if.end432
  %246 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %246, align 4
  br label %if.end435

if.end435:                                        ; preds = %if.then434, %if.end432
  %247 = load i32, i32* %tflag, align 4
  %or = or i32 %247, 256
  store i32 %or, i32* %tflag, align 4
  br label %if.end436

if.end436:                                        ; preds = %if.end435, %land.lhs.true421, %if.end416
  %248 = load i32, i32* %want_indir, align 4
  %tobool437 = icmp ne i32 %248, 0
  br i1 %tobool437, label %land.lhs.true438, label %if.end502

land.lhs.true438:                                 ; preds = %if.end436
  %249 = load i8*, i8** %string.addr, align 4
  %250 = load i32, i32* %sindex, align 4
  %sub439 = sub nsw i32 %250, 1
  %arrayidx440 = getelementptr inbounds i8, i8* %249, i32 %sub439
  %251 = load i8, i8* %arrayidx440, align 1
  %conv441 = sext i8 %251 to i32
  %cmp442 = icmp eq i32 %conv441, 125
  br i1 %cmp442, label %land.lhs.true444, label %if.end502

land.lhs.true444:                                 ; preds = %land.lhs.true438
  %252 = load i8*, i8** %string.addr, align 4
  %253 = load i32, i32* %sindex, align 4
  %sub445 = sub nsw i32 %253, 2
  %arrayidx446 = getelementptr inbounds i8, i8* %252, i32 %sub445
  %254 = load i8, i8* %arrayidx446, align 1
  %conv447 = sext i8 %254 to i32
  %cmp448 = icmp eq i32 %conv447, 42
  br i1 %cmp448, label %land.lhs.true456, label %lor.lhs.false450

lor.lhs.false450:                                 ; preds = %land.lhs.true444
  %255 = load i8*, i8** %string.addr, align 4
  %256 = load i32, i32* %sindex, align 4
  %sub451 = sub nsw i32 %256, 2
  %arrayidx452 = getelementptr inbounds i8, i8* %255, i32 %sub451
  %257 = load i8, i8* %arrayidx452, align 1
  %conv453 = sext i8 %257 to i32
  %cmp454 = icmp eq i32 %conv453, 64
  br i1 %cmp454, label %land.lhs.true456, label %if.end502

land.lhs.true456:                                 ; preds = %lor.lhs.false450, %land.lhs.true444
  %258 = load i8*, i8** %name, align 4
  %arrayidx457 = getelementptr inbounds i8, i8* %258, i32 1
  %259 = load i8, i8* %arrayidx457, align 1
  %conv458 = zext i8 %259 to i32
  %call459 = call i32 @isalpha(i32 %conv458) #9
  %tobool460 = icmp ne i32 %call459, 0
  br i1 %tobool460, label %if.then466, label %lor.lhs.false461

lor.lhs.false461:                                 ; preds = %land.lhs.true456
  %260 = load i8*, i8** %name, align 4
  %arrayidx462 = getelementptr inbounds i8, i8* %260, i32 1
  %261 = load i8, i8* %arrayidx462, align 1
  %conv463 = zext i8 %261 to i32
  %cmp464 = icmp eq i32 %conv463, 95
  br i1 %cmp464, label %if.then466, label %if.end502

if.then466:                                       ; preds = %lor.lhs.false461, %land.lhs.true456
  %262 = load i8*, i8** %name, align 4
  %add.ptr467 = getelementptr inbounds i8, i8* %262, i32 1
  %call468 = call i32 @strlen(i8* %add.ptr467)
  %add469 = add i32 1, %call468
  %call470 = call i8* @sh_xmalloc(i32 %add469, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8127)
  %263 = load i8*, i8** %name, align 4
  %add.ptr471 = getelementptr inbounds i8, i8* %263, i32 1
  %call472 = call i8* @strcpy(i8* %call470, i8* %add.ptr471)
  store i8* %call472, i8** %temp1, align 4
  %264 = load i8*, i8** %temp1, align 4
  %call473 = call i32 @strlen(i8* %264)
  %conv474 = zext i32 %call473 to i64
  store i64 %conv474, i64* %number, align 8
  %265 = load i8*, i8** %temp1, align 4
  %266 = load i64, i64* %number, align 8
  %sub475 = sub nsw i64 %266, 1
  %idxprom476 = trunc i64 %sub475 to i32
  %arrayidx477 = getelementptr inbounds i8, i8* %265, i32 %idxprom476
  store i8 0, i8* %arrayidx477, align 1
  %267 = load i8*, i8** %temp1, align 4
  %call478 = call i8** @all_variables_matching_prefix(i8* %267)
  store i8** %call478, i8*** %x, align 4
  %268 = load i8**, i8*** %x, align 4
  %call479 = call %struct.word_list* @strvec_to_word_list(i8** %268, i32 0, i32 0)
  store %struct.word_list* %call479, %struct.word_list** %xlist, align 4
  %269 = load i8*, i8** %string.addr, align 4
  %270 = load i32, i32* %sindex, align 4
  %sub480 = sub nsw i32 %270, 2
  %arrayidx481 = getelementptr inbounds i8, i8* %269, i32 %sub480
  %271 = load i8, i8* %arrayidx481, align 1
  %conv482 = sext i8 %271 to i32
  %cmp483 = icmp eq i32 %conv482, 42
  br i1 %cmp483, label %if.then485, label %if.else487

if.then485:                                       ; preds = %if.then466
  %272 = load %struct.word_list*, %struct.word_list** %xlist, align 4
  %call486 = call i8* @string_list_dollar_star(%struct.word_list* %272)
  store i8* %call486, i8** %temp, align 4
  br label %if.end499

if.else487:                                       ; preds = %if.then466
  %273 = load %struct.word_list*, %struct.word_list** %xlist, align 4
  %274 = load i32, i32* %quoted.addr, align 4
  %call488 = call i8* @string_list_dollar_at(%struct.word_list* %273, i32 %274, i32 0)
  store i8* %call488, i8** %temp, align 4
  %275 = load i32, i32* %quoted.addr, align 4
  %and489 = and i32 %275, 3
  %tobool490 = icmp ne i32 %and489, 0
  br i1 %tobool490, label %land.lhs.true491, label %if.end494

land.lhs.true491:                                 ; preds = %if.else487
  %276 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool492 = icmp ne i32* %276, null
  br i1 %tobool492, label %if.then493, label %if.end494

if.then493:                                       ; preds = %land.lhs.true491
  %277 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 1, i32* %277, align 4
  br label %if.end494

if.end494:                                        ; preds = %if.then493, %land.lhs.true491, %if.else487
  %278 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool495 = icmp ne i32* %278, null
  br i1 %tobool495, label %if.then496, label %if.end497

if.then496:                                       ; preds = %if.end494
  %279 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %279, align 4
  br label %if.end497

if.end497:                                        ; preds = %if.then496, %if.end494
  %280 = load i32, i32* %tflag, align 4
  %or498 = or i32 %280, 256
  store i32 %or498, i32* %tflag, align 4
  br label %if.end499

if.end499:                                        ; preds = %if.end497, %if.then485
  %281 = load i8**, i8*** %x, align 4
  %282 = bitcast i8** %281 to i8*
  call void @sh_xfree(i8* %282, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8144)
  %283 = load %struct.word_list*, %struct.word_list** %xlist, align 4
  call void @dispose_words(%struct.word_list* %283)
  %284 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %284, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8146)
  %285 = load i32, i32* %sindex, align 4
  %286 = load i32*, i32** %indexp.addr, align 4
  store i32 %285, i32* %286, align 4
  %287 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %287, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8149)
  %call500 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call500, %struct.word_desc** %ret, align 4
  %288 = load i8*, i8** %temp, align 4
  %289 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word501 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %289, i32 0, i32 0
  store i8* %288, i8** %word501, align 4
  %290 = load i32, i32* %tflag, align 4
  %291 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %291, i32 0, i32 1
  store i32 %290, i32* %flags, align 4
  %292 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %292, %struct.word_desc** %retval, align 4
  br label %return

if.end502:                                        ; preds = %lor.lhs.false461, %lor.lhs.false450, %land.lhs.true438, %if.end436
  %293 = load i32, i32* %want_indir, align 4
  %tobool503 = icmp ne i32 %293, 0
  br i1 %tobool503, label %land.lhs.true504, label %if.end568

land.lhs.true504:                                 ; preds = %if.end502
  %294 = load i8*, i8** %string.addr, align 4
  %295 = load i32, i32* %sindex, align 4
  %sub505 = sub nsw i32 %295, 1
  %arrayidx506 = getelementptr inbounds i8, i8* %294, i32 %sub505
  %296 = load i8, i8* %arrayidx506, align 1
  %conv507 = sext i8 %296 to i32
  %cmp508 = icmp eq i32 %conv507, 125
  br i1 %cmp508, label %land.lhs.true510, label %if.end568

land.lhs.true510:                                 ; preds = %land.lhs.true504
  %297 = load i8*, i8** %string.addr, align 4
  %298 = load i32, i32* %sindex, align 4
  %sub511 = sub nsw i32 %298, 2
  %arrayidx512 = getelementptr inbounds i8, i8* %297, i32 %sub511
  %299 = load i8, i8* %arrayidx512, align 1
  %conv513 = sext i8 %299 to i32
  %cmp514 = icmp eq i32 %conv513, 93
  br i1 %cmp514, label %land.lhs.true516, label %if.end568

land.lhs.true516:                                 ; preds = %land.lhs.true510
  %300 = load i8*, i8** %name, align 4
  %add.ptr517 = getelementptr inbounds i8, i8* %300, i32 1
  %call518 = call i32 @valid_array_reference(i8* %add.ptr517, i32 0)
  %tobool519 = icmp ne i32 %call518, 0
  br i1 %tobool519, label %if.then520, label %if.end568

if.then520:                                       ; preds = %land.lhs.true516
  %301 = load i8*, i8** %name, align 4
  %add.ptr522 = getelementptr inbounds i8, i8* %301, i32 1
  %call523 = call i32 @strlen(i8* %add.ptr522)
  %add524 = add i32 1, %call523
  %call525 = call i8* @sh_xmalloc(i32 %add524, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8164)
  %302 = load i8*, i8** %name, align 4
  %add.ptr526 = getelementptr inbounds i8, i8* %302, i32 1
  %call527 = call i8* @strcpy(i8* %call525, i8* %add.ptr526)
  store i8* %call527, i8** %temp1, align 4
  %303 = load i8*, i8** %temp1, align 4
  %call528 = call i8* @array_variable_name(i8* %303, i8** %x1, i32* null)
  store i8* %call528, i8** %x521, align 4
  br label %do.body

do.body:                                          ; preds = %if.then520
  %304 = load i8*, i8** %x521, align 4
  %tobool529 = icmp ne i8* %304, null
  br i1 %tobool529, label %if.then530, label %if.end531

if.then530:                                       ; preds = %do.body
  %305 = load i8*, i8** %x521, align 4
  call void @sh_xfree(i8* %305, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8166)
  br label %if.end531

if.end531:                                        ; preds = %if.then530, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end531
  %306 = load i8*, i8** %x1, align 4
  %arrayidx532 = getelementptr inbounds i8, i8* %306, i32 0
  %307 = load i8, i8* %arrayidx532, align 1
  %conv533 = sext i8 %307 to i32
  %cmp534 = icmp eq i32 %conv533, 64
  br i1 %cmp534, label %land.lhs.true541, label %lor.lhs.false536

lor.lhs.false536:                                 ; preds = %do.end
  %308 = load i8*, i8** %x1, align 4
  %arrayidx537 = getelementptr inbounds i8, i8* %308, i32 0
  %309 = load i8, i8* %arrayidx537, align 1
  %conv538 = sext i8 %309 to i32
  %cmp539 = icmp eq i32 %conv538, 42
  br i1 %cmp539, label %land.lhs.true541, label %if.end567

land.lhs.true541:                                 ; preds = %lor.lhs.false536, %do.end
  %310 = load i8*, i8** %x1, align 4
  %arrayidx542 = getelementptr inbounds i8, i8* %310, i32 1
  %311 = load i8, i8* %arrayidx542, align 1
  %conv543 = sext i8 %311 to i32
  %cmp544 = icmp eq i32 %conv543, 93
  br i1 %cmp544, label %if.then546, label %if.end567

if.then546:                                       ; preds = %land.lhs.true541
  %312 = load i8*, i8** %temp1, align 4
  %313 = load i32, i32* %quoted.addr, align 4
  %call547 = call i8* @array_keys(i8* %312, i32 %313)
  store i8* %call547, i8** %temp, align 4
  %314 = load i8*, i8** %x1, align 4
  %arrayidx548 = getelementptr inbounds i8, i8* %314, i32 0
  %315 = load i8, i8* %arrayidx548, align 1
  %conv549 = sext i8 %315 to i32
  %cmp550 = icmp eq i32 %conv549, 64
  br i1 %cmp550, label %if.then552, label %if.end563

if.then552:                                       ; preds = %if.then546
  %316 = load i32, i32* %quoted.addr, align 4
  %and553 = and i32 %316, 3
  %tobool554 = icmp ne i32 %and553, 0
  br i1 %tobool554, label %land.lhs.true555, label %if.end558

land.lhs.true555:                                 ; preds = %if.then552
  %317 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool556 = icmp ne i32* %317, null
  br i1 %tobool556, label %if.then557, label %if.end558

if.then557:                                       ; preds = %land.lhs.true555
  %318 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 1, i32* %318, align 4
  br label %if.end558

if.end558:                                        ; preds = %if.then557, %land.lhs.true555, %if.then552
  %319 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool559 = icmp ne i32* %319, null
  br i1 %tobool559, label %if.then560, label %if.end561

if.then560:                                       ; preds = %if.end558
  %320 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %320, align 4
  br label %if.end561

if.end561:                                        ; preds = %if.then560, %if.end558
  %321 = load i32, i32* %tflag, align 4
  %or562 = or i32 %321, 256
  store i32 %or562, i32* %tflag, align 4
  br label %if.end563

if.end563:                                        ; preds = %if.end561, %if.then546
  %322 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %322, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8180)
  %323 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %323, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8181)
  %324 = load i32, i32* %sindex, align 4
  %325 = load i32*, i32** %indexp.addr, align 4
  store i32 %324, i32* %325, align 4
  %call564 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call564, %struct.word_desc** %ret, align 4
  %326 = load i8*, i8** %temp, align 4
  %327 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word565 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %327, i32 0, i32 0
  store i8* %326, i8** %word565, align 4
  %328 = load i32, i32* %tflag, align 4
  %329 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags566 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %329, i32 0, i32 1
  store i32 %328, i32* %flags566, align 4
  %330 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %330, %struct.word_desc** %retval, align 4
  br label %return

if.end567:                                        ; preds = %land.lhs.true541, %lor.lhs.false536
  %331 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %331, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8190)
  br label %if.end568

if.end568:                                        ; preds = %if.end567, %land.lhs.true516, %land.lhs.true510, %land.lhs.true504, %if.end502
  %332 = load i32, i32* %want_indir, align 4
  %tobool569 = icmp ne i32 %332, 0
  br i1 %tobool569, label %cond.true570, label %cond.false572

cond.true570:                                     ; preds = %if.end568
  %333 = load i8*, i8** %name, align 4
  %add.ptr571 = getelementptr inbounds i8, i8* %333, i32 1
  br label %cond.end

cond.false572:                                    ; preds = %if.end568
  %334 = load i8*, i8** %name, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false572, %cond.true570
  %cond573 = phi i8* [ %add.ptr571, %cond.true570 ], [ %334, %cond.false572 ]
  %335 = load i32, i32* %var_is_special, align 4
  %call574 = call i32 @valid_brace_expansion_word(i8* %cond573, i32 %335)
  %cmp575 = icmp eq i32 %call574, 0
  br i1 %cmp575, label %if.then577, label %if.end578

if.then577:                                       ; preds = %cond.end
  store i8* null, i8** %temp, align 4
  br label %bad_substitution

if.end578:                                        ; preds = %cond.end
  %336 = load i32, i32* %want_indir, align 4
  %tobool579 = icmp ne i32 %336, 0
  br i1 %tobool579, label %if.then580, label %if.else598

if.then580:                                       ; preds = %if.end578
  %337 = load i8*, i8** %name, align 4
  %add.ptr581 = getelementptr inbounds i8, i8* %337, i32 1
  %338 = load i32, i32* %var_is_special, align 4
  %339 = load i32, i32* %quoted.addr, align 4
  %340 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %341 = load i32*, i32** %contains_dollar_at.addr, align 4
  %call582 = call %struct.word_desc* @parameter_brace_expand_indir(i8* %add.ptr581, i32 %338, i32 %339, i32* %340, i32* %341)
  store %struct.word_desc* %call582, %struct.word_desc** %tdesc, align 4
  %342 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %cmp583 = icmp eq %struct.word_desc* %342, @expand_wdesc_error
  br i1 %cmp583, label %if.then588, label %lor.lhs.false585

lor.lhs.false585:                                 ; preds = %if.then580
  %343 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %cmp586 = icmp eq %struct.word_desc* %343, @expand_wdesc_fatal
  br i1 %cmp586, label %if.then588, label %if.end589

if.then588:                                       ; preds = %lor.lhs.false585, %if.then580
  store i8* null, i8** %temp, align 4
  br label %bad_substitution

if.end589:                                        ; preds = %lor.lhs.false585
  %344 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %tobool590 = icmp ne %struct.word_desc* %344, null
  br i1 %tobool590, label %land.lhs.true591, label %if.end597

land.lhs.true591:                                 ; preds = %if.end589
  %345 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %flags592 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %345, i32 0, i32 1
  %346 = load i32, i32* %flags592, align 4
  %tobool593 = icmp ne i32 %346, 0
  br i1 %tobool593, label %if.then594, label %if.end597

if.then594:                                       ; preds = %land.lhs.true591
  %347 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %flags595 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %347, i32 0, i32 1
  %348 = load i32, i32* %flags595, align 4
  %and596 = and i32 %348, -16777217
  store i32 %and596, i32* %flags595, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.then594, %land.lhs.true591, %if.end589
  br label %if.end602

if.else598:                                       ; preds = %if.end578
  %349 = load i8*, i8** %name, align 4
  %350 = load i32, i32* %var_is_special, align 4
  %351 = load i32, i32* %quoted.addr, align 4
  %352 = load i32, i32* %pflags.addr, align 4
  %and599 = and i32 %352, 12
  %or600 = or i32 2, %and599
  %call601 = call %struct.word_desc* @parameter_brace_expand_word(i8* %349, i32 %350, i32 %351, i32 %or600, i64* %ind)
  store %struct.word_desc* %call601, %struct.word_desc** %tdesc, align 4
  br label %if.end602

if.end602:                                        ; preds = %if.else598, %if.end597
  %353 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %tobool603 = icmp ne %struct.word_desc* %353, null
  br i1 %tobool603, label %if.then604, label %if.else607

if.then604:                                       ; preds = %if.end602
  %354 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %word605 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %354, i32 0, i32 0
  %355 = load i8*, i8** %word605, align 4
  store i8* %355, i8** %temp, align 4
  %356 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  %flags606 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %356, i32 0, i32 1
  %357 = load i32, i32* %flags606, align 4
  store i32 %357, i32* %tflag, align 4
  %358 = load %struct.word_desc*, %struct.word_desc** %tdesc, align 4
  call void @dispose_word_desc(%struct.word_desc* %358)
  br label %if.end608

if.else607:                                       ; preds = %if.end602
  store i8* null, i8** %temp, align 4
  br label %if.end608

if.end608:                                        ; preds = %if.else607, %if.then604
  %359 = load i8*, i8** %temp, align 4
  %cmp609 = icmp eq i8* %359, @expand_param_error
  br i1 %cmp609, label %if.then614, label %lor.lhs.false611

lor.lhs.false611:                                 ; preds = %if.end608
  %360 = load i8*, i8** %temp, align 4
  %cmp612 = icmp eq i8* %360, @expand_param_fatal
  br i1 %cmp612, label %if.then614, label %if.end628

if.then614:                                       ; preds = %lor.lhs.false611, %if.end608
  br label %do.body615

do.body615:                                       ; preds = %if.then614
  %361 = load i8*, i8** %name, align 4
  %tobool616 = icmp ne i8* %361, null
  br i1 %tobool616, label %if.then617, label %if.end618

if.then617:                                       ; preds = %do.body615
  %362 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %362, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8229)
  br label %if.end618

if.end618:                                        ; preds = %if.then617, %do.body615
  br label %do.end619

do.end619:                                        ; preds = %if.end618
  br label %do.body620

do.body620:                                       ; preds = %do.end619
  %363 = load i8*, i8** %value, align 4
  %tobool621 = icmp ne i8* %363, null
  br i1 %tobool621, label %if.then622, label %if.end623

if.then622:                                       ; preds = %do.body620
  %364 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %364, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8230)
  br label %if.end623

if.end623:                                        ; preds = %if.then622, %do.body620
  br label %do.end624

do.end624:                                        ; preds = %if.end623
  %365 = load i8*, i8** %temp, align 4
  %cmp625 = icmp eq i8* %365, @expand_param_error
  %cond627 = select i1 %cmp625, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond627, %struct.word_desc** %retval, align 4
  br label %return

if.end628:                                        ; preds = %lor.lhs.false611
  %366 = load i8*, i8** %name, align 4
  %call629 = call i32 @valid_array_reference(i8* %366, i32 0)
  %tobool630 = icmp ne i32 %call629, 0
  br i1 %tobool630, label %if.then631, label %if.end657

if.then631:                                       ; preds = %if.end628
  %367 = load i32, i32* %quoted.addr, align 4
  store i32 %367, i32* %qflags, align 4
  %368 = load i32, i32* %pflags.addr, align 4
  %and632 = and i32 %368, 8
  %tobool633 = icmp ne i32 %and632, 0
  br i1 %tobool633, label %if.then634, label %if.end636

if.then634:                                       ; preds = %if.then631
  %369 = load i32, i32* %qflags, align 4
  %or635 = or i32 %369, 1
  store i32 %or635, i32* %qflags, align 4
  br label %if.end636

if.end636:                                        ; preds = %if.then634, %if.then631
  %370 = load i8*, i8** %name, align 4
  %371 = load i32, i32* %qflags, align 4
  %372 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %373 = load i32*, i32** %contains_dollar_at.addr, align 4
  %call637 = call i32 @chk_atstar(i8* %370, i32 %371, i32* %372, i32* %373)
  %374 = load i8*, i8** %name, align 4
  %call638 = call i8* @mbschr(i8* %374, i32 91)
  store i8* %call638, i8** %t, align 4
  %375 = load i8*, i8** %t, align 4
  %tobool639 = icmp ne i8* %375, null
  br i1 %tobool639, label %land.lhs.true640, label %if.end656

land.lhs.true640:                                 ; preds = %if.end636
  %376 = load i8*, i8** %t, align 4
  %arrayidx641 = getelementptr inbounds i8, i8* %376, i32 1
  %377 = load i8, i8* %arrayidx641, align 1
  %conv642 = sext i8 %377 to i32
  %cmp643 = icmp eq i32 %conv642, 64
  br i1 %cmp643, label %land.lhs.true650, label %lor.lhs.false645

lor.lhs.false645:                                 ; preds = %land.lhs.true640
  %378 = load i8*, i8** %t, align 4
  %arrayidx646 = getelementptr inbounds i8, i8* %378, i32 1
  %379 = load i8, i8* %arrayidx646, align 1
  %conv647 = sext i8 %379 to i32
  %cmp648 = icmp eq i32 %conv647, 42
  br i1 %cmp648, label %land.lhs.true650, label %if.end656

land.lhs.true650:                                 ; preds = %lor.lhs.false645, %land.lhs.true640
  %380 = load i8*, i8** %t, align 4
  %arrayidx651 = getelementptr inbounds i8, i8* %380, i32 2
  %381 = load i8, i8* %arrayidx651, align 1
  %conv652 = sext i8 %381 to i32
  %cmp653 = icmp eq i32 %conv652, 93
  br i1 %cmp653, label %if.then655, label %if.end656

if.then655:                                       ; preds = %land.lhs.true650
  store i32 1, i32* %all_element_arrayref, align 4
  br label %if.end656

if.end656:                                        ; preds = %if.then655, %land.lhs.true650, %lor.lhs.false645, %if.end636
  br label %if.end657

if.end657:                                        ; preds = %if.end656, %if.end628
  %382 = load i8*, i8** %temp, align 4
  %cmp658 = icmp ne i8* %382, null
  %conv659 = zext i1 %cmp658 to i32
  store i32 %conv659, i32* %var_is_set, align 4
  %383 = load i32, i32* %check_nullness, align 4
  %tobool660 = icmp ne i32 %383, 0
  br i1 %tobool660, label %land.rhs661, label %land.end669

land.rhs661:                                      ; preds = %if.end657
  %384 = load i32, i32* %var_is_set, align 4
  %cmp662 = icmp eq i32 %384, 0
  br i1 %cmp662, label %lor.end668, label %lor.rhs664

lor.rhs664:                                       ; preds = %land.rhs661
  %385 = load i8*, i8** %temp, align 4
  %386 = load i8, i8* %385, align 1
  %conv665 = sext i8 %386 to i32
  %cmp666 = icmp eq i32 %conv665, 0
  br label %lor.end668

lor.end668:                                       ; preds = %lor.rhs664, %land.rhs661
  %387 = phi i1 [ true, %land.rhs661 ], [ %cmp666, %lor.rhs664 ]
  br label %land.end669

land.end669:                                      ; preds = %lor.end668, %if.end657
  %388 = phi i1 [ false, %if.end657 ], [ %387, %lor.end668 ]
  %land.ext670 = zext i1 %388 to i32
  store i32 %land.ext670, i32* %var_is_null, align 4
  %389 = load i32, i32* %check_nullness, align 4
  %tobool671 = icmp ne i32 %389, 0
  br i1 %tobool671, label %if.then672, label %if.end694

if.then672:                                       ; preds = %land.end669
  %390 = load i32, i32* %var_is_set, align 4
  %tobool673 = icmp ne i32 %390, 0
  br i1 %tobool673, label %land.lhs.true674, label %land.end691

land.lhs.true674:                                 ; preds = %if.then672
  %391 = load i32, i32* %var_is_special, align 4
  %tobool675 = icmp ne i32 %391, 0
  br i1 %tobool675, label %land.lhs.true676, label %land.end691

land.lhs.true676:                                 ; preds = %land.lhs.true674
  %392 = load i32, i32* %quoted.addr, align 4
  %and677 = and i32 %392, 3
  %tobool678 = icmp ne i32 %and677, 0
  br i1 %tobool678, label %land.rhs679, label %land.end691

land.rhs679:                                      ; preds = %land.lhs.true676
  %393 = load i8*, i8** %temp, align 4
  %arrayidx680 = getelementptr inbounds i8, i8* %393, i32 0
  %394 = load i8, i8* %arrayidx680, align 1
  %conv681 = sext i8 %394 to i32
  %cmp682 = icmp eq i32 %conv681, 127
  br i1 %cmp682, label %land.rhs684, label %land.end689

land.rhs684:                                      ; preds = %land.rhs679
  %395 = load i8*, i8** %temp, align 4
  %arrayidx685 = getelementptr inbounds i8, i8* %395, i32 1
  %396 = load i8, i8* %arrayidx685, align 1
  %conv686 = sext i8 %396 to i32
  %cmp687 = icmp eq i32 %conv686, 0
  br label %land.end689

land.end689:                                      ; preds = %land.rhs684, %land.rhs679
  %397 = phi i1 [ false, %land.rhs679 ], [ %cmp687, %land.rhs684 ]
  br label %land.end691

land.end691:                                      ; preds = %land.end689, %land.lhs.true676, %land.lhs.true674, %if.then672
  %398 = phi i1 [ false, %land.lhs.true676 ], [ false, %land.lhs.true674 ], [ false, %if.then672 ], [ %397, %land.end689 ]
  %land.ext692 = zext i1 %398 to i32
  %399 = load i32, i32* %var_is_null, align 4
  %or693 = or i32 %399, %land.ext692
  store i32 %or693, i32* %var_is_null, align 4
  br label %if.end694

if.end694:                                        ; preds = %land.end691, %land.end669
  %400 = load i32, i32* %c, align 4
  %tobool695 = icmp ne i32 %400, 0
  br i1 %tobool695, label %land.lhs.true696, label %if.else728

land.lhs.true696:                                 ; preds = %if.end694
  %401 = load i32, i32* %c, align 4
  %cmp697 = icmp ne i32 %401, 125
  br i1 %cmp697, label %if.then699, label %if.else728

if.then699:                                       ; preds = %land.lhs.true696
  %402 = load i8*, i8** %string.addr, align 4
  %403 = load i32, i32* %quoted.addr, align 4
  %404 = load i32, i32* %c, align 4
  %cmp700 = icmp eq i32 %404, 37
  br i1 %cmp700, label %lor.end717, label %lor.lhs.false702

lor.lhs.false702:                                 ; preds = %if.then699
  %405 = load i32, i32* %c, align 4
  %cmp703 = icmp eq i32 %405, 35
  br i1 %cmp703, label %lor.end717, label %lor.lhs.false705

lor.lhs.false705:                                 ; preds = %lor.lhs.false702
  %406 = load i32, i32* %c, align 4
  %cmp706 = icmp eq i32 %406, 47
  br i1 %cmp706, label %lor.end717, label %lor.lhs.false708

lor.lhs.false708:                                 ; preds = %lor.lhs.false705
  %407 = load i32, i32* %c, align 4
  %cmp709 = icmp eq i32 %407, 94
  br i1 %cmp709, label %lor.end717, label %lor.lhs.false711

lor.lhs.false711:                                 ; preds = %lor.lhs.false708
  %408 = load i32, i32* %c, align 4
  %cmp712 = icmp eq i32 %408, 44
  br i1 %cmp712, label %lor.end717, label %lor.rhs714

lor.rhs714:                                       ; preds = %lor.lhs.false711
  %409 = load i32, i32* %c, align 4
  %cmp715 = icmp eq i32 %409, 58
  br label %lor.end717

lor.end717:                                       ; preds = %lor.rhs714, %lor.lhs.false711, %lor.lhs.false708, %lor.lhs.false705, %lor.lhs.false702, %if.then699
  %410 = phi i1 [ true, %lor.lhs.false711 ], [ true, %lor.lhs.false708 ], [ true, %lor.lhs.false705 ], [ true, %lor.lhs.false702 ], [ true, %if.then699 ], [ %cmp715, %lor.rhs714 ]
  %cond718 = select i1 %410, i32 768, i32 512
  %call719 = call i8* @extract_dollar_brace_string(i8* %402, i32* %sindex, i32 %403, i32 %cond718)
  store i8* %call719, i8** %value, align 4
  %411 = load i8*, i8** %string.addr, align 4
  %412 = load i32, i32* %sindex, align 4
  %arrayidx720 = getelementptr inbounds i8, i8* %411, i32 %412
  %413 = load i8, i8* %arrayidx720, align 1
  %conv721 = sext i8 %413 to i32
  %cmp722 = icmp eq i32 %conv721, 125
  br i1 %cmp722, label %if.then724, label %if.else726

if.then724:                                       ; preds = %lor.end717
  %414 = load i32, i32* %sindex, align 4
  %inc725 = add nsw i32 %414, 1
  store i32 %inc725, i32* %sindex, align 4
  br label %if.end727

if.else726:                                       ; preds = %lor.end717
  br label %bad_substitution

if.end727:                                        ; preds = %if.then724
  br label %if.end729

if.else728:                                       ; preds = %land.lhs.true696, %if.end694
  store i8* null, i8** %value, align 4
  br label %if.end729

if.end729:                                        ; preds = %if.else728, %if.end727
  %415 = load i32, i32* %sindex, align 4
  %416 = load i32*, i32** %indexp.addr, align 4
  store i32 %415, i32* %416, align 4
  %417 = load i32, i32* %want_substring, align 4
  %tobool730 = icmp ne i32 %417, 0
  br i1 %tobool730, label %if.then744, label %lor.lhs.false731

lor.lhs.false731:                                 ; preds = %if.end729
  %418 = load i32, i32* %want_patsub, align 4
  %tobool732 = icmp ne i32 %418, 0
  br i1 %tobool732, label %if.then744, label %lor.lhs.false733

lor.lhs.false733:                                 ; preds = %lor.lhs.false731
  %419 = load i32, i32* %want_casemod, align 4
  %tobool734 = icmp ne i32 %419, 0
  br i1 %tobool734, label %if.then744, label %lor.lhs.false735

lor.lhs.false735:                                 ; preds = %lor.lhs.false733
  %420 = load i32, i32* %c, align 4
  %cmp736 = icmp eq i32 %420, 35
  br i1 %cmp736, label %if.then744, label %lor.lhs.false738

lor.lhs.false738:                                 ; preds = %lor.lhs.false735
  %421 = load i32, i32* %c, align 4
  %cmp739 = icmp eq i32 %421, 37
  br i1 %cmp739, label %if.then744, label %lor.lhs.false741

lor.lhs.false741:                                 ; preds = %lor.lhs.false738
  %422 = load i32, i32* %c, align 4
  %cmp742 = icmp eq i32 %422, 125
  br i1 %cmp742, label %if.then744, label %if.end780

if.then744:                                       ; preds = %lor.lhs.false741, %lor.lhs.false738, %lor.lhs.false735, %lor.lhs.false733, %lor.lhs.false731, %if.end729
  %423 = load i32, i32* %var_is_set, align 4
  %cmp745 = icmp eq i32 %423, 0
  br i1 %cmp745, label %land.lhs.true747, label %if.end779

land.lhs.true747:                                 ; preds = %if.then744
  %424 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool748 = icmp ne i32 %424, 0
  br i1 %tobool748, label %land.lhs.true749, label %if.end779

land.lhs.true749:                                 ; preds = %land.lhs.true747
  %425 = load i8*, i8** %name, align 4
  %arrayidx750 = getelementptr inbounds i8, i8* %425, i32 0
  %426 = load i8, i8* %arrayidx750, align 1
  %conv751 = sext i8 %426 to i32
  %cmp752 = icmp ne i32 %conv751, 64
  br i1 %cmp752, label %land.lhs.true754, label %lor.lhs.false759

land.lhs.true754:                                 ; preds = %land.lhs.true749
  %427 = load i8*, i8** %name, align 4
  %arrayidx755 = getelementptr inbounds i8, i8* %427, i32 0
  %428 = load i8, i8* %arrayidx755, align 1
  %conv756 = sext i8 %428 to i32
  %cmp757 = icmp ne i32 %conv756, 42
  br i1 %cmp757, label %land.lhs.true763, label %lor.lhs.false759

lor.lhs.false759:                                 ; preds = %land.lhs.true754, %land.lhs.true749
  %429 = load i8*, i8** %name, align 4
  %arrayidx760 = getelementptr inbounds i8, i8* %429, i32 1
  %430 = load i8, i8* %arrayidx760, align 1
  %conv761 = sext i8 %430 to i32
  %tobool762 = icmp ne i32 %conv761, 0
  br i1 %tobool762, label %land.lhs.true763, label %if.end779

land.lhs.true763:                                 ; preds = %lor.lhs.false759, %land.lhs.true754
  %431 = load i32, i32* %all_element_arrayref, align 4
  %cmp764 = icmp eq i32 %431, 0
  br i1 %cmp764, label %if.then766, label %if.end779

if.then766:                                       ; preds = %land.lhs.true763
  store i32 1, i32* @last_command_exit_value, align 4
  %432 = load i8*, i8** %name, align 4
  call void @err_unboundvar(i8* %432)
  br label %do.body767

do.body767:                                       ; preds = %if.then766
  %433 = load i8*, i8** %value, align 4
  %tobool768 = icmp ne i8* %433, null
  br i1 %tobool768, label %if.then769, label %if.end770

if.then769:                                       ; preds = %do.body767
  %434 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %434, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8283)
  br label %if.end770

if.end770:                                        ; preds = %if.then769, %do.body767
  br label %do.end771

do.end771:                                        ; preds = %if.end770
  br label %do.body772

do.body772:                                       ; preds = %do.end771
  %435 = load i8*, i8** %temp, align 4
  %tobool773 = icmp ne i8* %435, null
  br i1 %tobool773, label %if.then774, label %if.end775

if.then774:                                       ; preds = %do.body772
  %436 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %436, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8284)
  br label %if.end775

if.end775:                                        ; preds = %if.then774, %do.body772
  br label %do.end776

do.end776:                                        ; preds = %if.end775
  %437 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %437, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8285)
  %438 = load i32, i32* @interactive_shell, align 4
  %tobool777 = icmp ne i32 %438, 0
  %cond778 = select i1 %tobool777, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond778, %struct.word_desc** %retval, align 4
  br label %return

if.end779:                                        ; preds = %land.lhs.true763, %lor.lhs.false759, %land.lhs.true747, %if.then744
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %lor.lhs.false741
  %439 = load i32, i32* %want_substring, align 4
  %tobool781 = icmp ne i32 %439, 0
  br i1 %tobool781, label %if.then782, label %if.else838

if.then782:                                       ; preds = %if.end780
  %440 = load i8*, i8** %name, align 4
  %441 = load i8*, i8** %temp, align 4
  %442 = load i64, i64* %ind, align 8
  %conv783 = trunc i64 %442 to i32
  %443 = load i8*, i8** %value, align 4
  %444 = load i32, i32* %quoted.addr, align 4
  %445 = load i32, i32* %tflag, align 4
  %and784 = and i32 %445, 16777216
  %tobool785 = icmp ne i32 %and784, 0
  %cond786 = select i1 %tobool785, i32 4, i32 0
  %call787 = call i8* @parameter_brace_substring(i8* %440, i8* %441, i32 %conv783, i8* %443, i32 %444, i32 %cond786)
  store i8* %call787, i8** %temp1, align 4
  br label %do.body788

do.body788:                                       ; preds = %if.then782
  %446 = load i8*, i8** %name, align 4
  %tobool789 = icmp ne i8* %446, null
  br i1 %tobool789, label %if.then790, label %if.end791

if.then790:                                       ; preds = %do.body788
  %447 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %447, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8294)
  br label %if.end791

if.end791:                                        ; preds = %if.then790, %do.body788
  br label %do.end792

do.end792:                                        ; preds = %if.end791
  br label %do.body793

do.body793:                                       ; preds = %do.end792
  %448 = load i8*, i8** %value, align 4
  %tobool794 = icmp ne i8* %448, null
  br i1 %tobool794, label %if.then795, label %if.end796

if.then795:                                       ; preds = %do.body793
  %449 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %449, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8295)
  br label %if.end796

if.end796:                                        ; preds = %if.then795, %do.body793
  br label %do.end797

do.end797:                                        ; preds = %if.end796
  br label %do.body798

do.body798:                                       ; preds = %do.end797
  %450 = load i8*, i8** %temp, align 4
  %tobool799 = icmp ne i8* %450, null
  br i1 %tobool799, label %if.then800, label %if.end801

if.then800:                                       ; preds = %do.body798
  %451 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %451, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8296)
  br label %if.end801

if.end801:                                        ; preds = %if.then800, %do.body798
  br label %do.end802

do.end802:                                        ; preds = %if.end801
  %452 = load i8*, i8** %temp1, align 4
  %cmp803 = icmp eq i8* %452, @expand_param_error
  br i1 %cmp803, label %if.then805, label %if.else806

if.then805:                                       ; preds = %do.end802
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else806:                                       ; preds = %do.end802
  %453 = load i8*, i8** %temp1, align 4
  %cmp807 = icmp eq i8* %453, @expand_param_fatal
  br i1 %cmp807, label %if.then809, label %if.end810

if.then809:                                       ; preds = %if.else806
  store %struct.word_desc* @expand_wdesc_fatal, %struct.word_desc** %retval, align 4
  br label %return

if.end810:                                        ; preds = %if.else806
  br label %if.end811

if.end811:                                        ; preds = %if.end810
  %call812 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call812, %struct.word_desc** %ret, align 4
  %454 = load i8*, i8** %temp1, align 4
  %455 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word813 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %455, i32 0, i32 0
  store i8* %454, i8** %word813, align 4
  %456 = load i8*, i8** %temp1, align 4
  %tobool814 = icmp ne i8* %456, null
  br i1 %tobool814, label %land.lhs.true815, label %if.end837

land.lhs.true815:                                 ; preds = %if.end811
  %457 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %cmp816 = icmp eq i32* %457, null
  br i1 %cmp816, label %land.lhs.true821, label %lor.lhs.false818

lor.lhs.false818:                                 ; preds = %land.lhs.true815
  %458 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %459 = load i32, i32* %458, align 4
  %cmp819 = icmp eq i32 %459, 0
  br i1 %cmp819, label %land.lhs.true821, label %if.end837

land.lhs.true821:                                 ; preds = %lor.lhs.false818, %land.lhs.true815
  %460 = load i8*, i8** %temp1, align 4
  %arrayidx822 = getelementptr inbounds i8, i8* %460, i32 0
  %461 = load i8, i8* %arrayidx822, align 1
  %conv823 = sext i8 %461 to i32
  %cmp824 = icmp eq i32 %conv823, 127
  br i1 %cmp824, label %land.lhs.true826, label %if.end837

land.lhs.true826:                                 ; preds = %land.lhs.true821
  %462 = load i8*, i8** %temp1, align 4
  %arrayidx827 = getelementptr inbounds i8, i8* %462, i32 1
  %463 = load i8, i8* %arrayidx827, align 1
  %conv828 = sext i8 %463 to i32
  %cmp829 = icmp eq i32 %conv828, 0
  br i1 %cmp829, label %land.lhs.true831, label %if.end837

land.lhs.true831:                                 ; preds = %land.lhs.true826
  %464 = load i32, i32* %quoted.addr, align 4
  %and832 = and i32 %464, 3
  %tobool833 = icmp ne i32 %and832, 0
  br i1 %tobool833, label %if.then834, label %if.end837

if.then834:                                       ; preds = %land.lhs.true831
  %465 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags835 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %465, i32 0, i32 1
  %466 = load i32, i32* %flags835, align 4
  %or836 = or i32 %466, 262146
  store i32 %or836, i32* %flags835, align 4
  br label %if.end837

if.end837:                                        ; preds = %if.then834, %land.lhs.true831, %land.lhs.true826, %land.lhs.true821, %lor.lhs.false818, %if.end811
  %467 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %467, %struct.word_desc** %retval, align 4
  br label %return

if.else838:                                       ; preds = %if.end780
  %468 = load i32, i32* %want_patsub, align 4
  %tobool839 = icmp ne i32 %468, 0
  br i1 %tobool839, label %if.then840, label %if.else896

if.then840:                                       ; preds = %if.else838
  %469 = load i8*, i8** %name, align 4
  %470 = load i8*, i8** %temp, align 4
  %471 = load i64, i64* %ind, align 8
  %conv841 = trunc i64 %471 to i32
  %472 = load i8*, i8** %value, align 4
  %473 = load i32, i32* %quoted.addr, align 4
  %474 = load i32, i32* %pflags.addr, align 4
  %475 = load i32, i32* %tflag, align 4
  %and842 = and i32 %475, 16777216
  %tobool843 = icmp ne i32 %and842, 0
  %cond844 = select i1 %tobool843, i32 4, i32 0
  %call845 = call i8* @parameter_brace_patsub(i8* %469, i8* %470, i32 %conv841, i8* %472, i32 %473, i32 %474, i32 %cond844)
  store i8* %call845, i8** %temp1, align 4
  br label %do.body846

do.body846:                                       ; preds = %if.then840
  %476 = load i8*, i8** %name, align 4
  %tobool847 = icmp ne i8* %476, null
  br i1 %tobool847, label %if.then848, label %if.end849

if.then848:                                       ; preds = %do.body846
  %477 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %477, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8318)
  br label %if.end849

if.end849:                                        ; preds = %if.then848, %do.body846
  br label %do.end850

do.end850:                                        ; preds = %if.end849
  br label %do.body851

do.body851:                                       ; preds = %do.end850
  %478 = load i8*, i8** %value, align 4
  %tobool852 = icmp ne i8* %478, null
  br i1 %tobool852, label %if.then853, label %if.end854

if.then853:                                       ; preds = %do.body851
  %479 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %479, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8319)
  br label %if.end854

if.end854:                                        ; preds = %if.then853, %do.body851
  br label %do.end855

do.end855:                                        ; preds = %if.end854
  br label %do.body856

do.body856:                                       ; preds = %do.end855
  %480 = load i8*, i8** %temp, align 4
  %tobool857 = icmp ne i8* %480, null
  br i1 %tobool857, label %if.then858, label %if.end859

if.then858:                                       ; preds = %do.body856
  %481 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %481, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8320)
  br label %if.end859

if.end859:                                        ; preds = %if.then858, %do.body856
  br label %do.end860

do.end860:                                        ; preds = %if.end859
  %482 = load i8*, i8** %temp1, align 4
  %cmp861 = icmp eq i8* %482, @expand_param_error
  br i1 %cmp861, label %if.then863, label %if.else864

if.then863:                                       ; preds = %do.end860
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else864:                                       ; preds = %do.end860
  %483 = load i8*, i8** %temp1, align 4
  %cmp865 = icmp eq i8* %483, @expand_param_fatal
  br i1 %cmp865, label %if.then867, label %if.end868

if.then867:                                       ; preds = %if.else864
  store %struct.word_desc* @expand_wdesc_fatal, %struct.word_desc** %retval, align 4
  br label %return

if.end868:                                        ; preds = %if.else864
  br label %if.end869

if.end869:                                        ; preds = %if.end868
  %call870 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call870, %struct.word_desc** %ret, align 4
  %484 = load i8*, i8** %temp1, align 4
  %485 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word871 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %485, i32 0, i32 0
  store i8* %484, i8** %word871, align 4
  %486 = load i8*, i8** %temp1, align 4
  %tobool872 = icmp ne i8* %486, null
  br i1 %tobool872, label %land.lhs.true873, label %if.end895

land.lhs.true873:                                 ; preds = %if.end869
  %487 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %cmp874 = icmp eq i32* %487, null
  br i1 %cmp874, label %land.lhs.true879, label %lor.lhs.false876

lor.lhs.false876:                                 ; preds = %land.lhs.true873
  %488 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %489 = load i32, i32* %488, align 4
  %cmp877 = icmp eq i32 %489, 0
  br i1 %cmp877, label %land.lhs.true879, label %if.end895

land.lhs.true879:                                 ; preds = %lor.lhs.false876, %land.lhs.true873
  %490 = load i8*, i8** %temp1, align 4
  %arrayidx880 = getelementptr inbounds i8, i8* %490, i32 0
  %491 = load i8, i8* %arrayidx880, align 1
  %conv881 = sext i8 %491 to i32
  %cmp882 = icmp eq i32 %conv881, 127
  br i1 %cmp882, label %land.lhs.true884, label %if.end895

land.lhs.true884:                                 ; preds = %land.lhs.true879
  %492 = load i8*, i8** %temp1, align 4
  %arrayidx885 = getelementptr inbounds i8, i8* %492, i32 1
  %493 = load i8, i8* %arrayidx885, align 1
  %conv886 = sext i8 %493 to i32
  %cmp887 = icmp eq i32 %conv886, 0
  br i1 %cmp887, label %land.lhs.true889, label %if.end895

land.lhs.true889:                                 ; preds = %land.lhs.true884
  %494 = load i32, i32* %quoted.addr, align 4
  %and890 = and i32 %494, 3
  %tobool891 = icmp ne i32 %and890, 0
  br i1 %tobool891, label %if.then892, label %if.end895

if.then892:                                       ; preds = %land.lhs.true889
  %495 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags893 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %495, i32 0, i32 1
  %496 = load i32, i32* %flags893, align 4
  %or894 = or i32 %496, 262146
  store i32 %or894, i32* %flags893, align 4
  br label %if.end895

if.end895:                                        ; preds = %if.then892, %land.lhs.true889, %land.lhs.true884, %land.lhs.true879, %lor.lhs.false876, %if.end869
  %497 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %497, %struct.word_desc** %retval, align 4
  br label %return

if.else896:                                       ; preds = %if.else838
  %498 = load i32, i32* %want_casemod, align 4
  %tobool897 = icmp ne i32 %498, 0
  br i1 %tobool897, label %if.then898, label %if.end954

if.then898:                                       ; preds = %if.else896
  %499 = load i8*, i8** %name, align 4
  %500 = load i8*, i8** %temp, align 4
  %501 = load i64, i64* %ind, align 8
  %conv899 = trunc i64 %501 to i32
  %502 = load i32, i32* %modspec, align 4
  %503 = load i8*, i8** %value, align 4
  %504 = load i32, i32* %quoted.addr, align 4
  %505 = load i32, i32* %tflag, align 4
  %and900 = and i32 %505, 16777216
  %tobool901 = icmp ne i32 %and900, 0
  %cond902 = select i1 %tobool901, i32 4, i32 0
  %call903 = call i8* @parameter_brace_casemod(i8* %499, i8* %500, i32 %conv899, i32 %502, i8* %503, i32 %504, i32 %cond902)
  store i8* %call903, i8** %temp1, align 4
  br label %do.body904

do.body904:                                       ; preds = %if.then898
  %506 = load i8*, i8** %name, align 4
  %tobool905 = icmp ne i8* %506, null
  br i1 %tobool905, label %if.then906, label %if.end907

if.then906:                                       ; preds = %do.body904
  %507 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %507, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8339)
  br label %if.end907

if.end907:                                        ; preds = %if.then906, %do.body904
  br label %do.end908

do.end908:                                        ; preds = %if.end907
  br label %do.body909

do.body909:                                       ; preds = %do.end908
  %508 = load i8*, i8** %value, align 4
  %tobool910 = icmp ne i8* %508, null
  br i1 %tobool910, label %if.then911, label %if.end912

if.then911:                                       ; preds = %do.body909
  %509 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %509, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8340)
  br label %if.end912

if.end912:                                        ; preds = %if.then911, %do.body909
  br label %do.end913

do.end913:                                        ; preds = %if.end912
  br label %do.body914

do.body914:                                       ; preds = %do.end913
  %510 = load i8*, i8** %temp, align 4
  %tobool915 = icmp ne i8* %510, null
  br i1 %tobool915, label %if.then916, label %if.end917

if.then916:                                       ; preds = %do.body914
  %511 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %511, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8341)
  br label %if.end917

if.end917:                                        ; preds = %if.then916, %do.body914
  br label %do.end918

do.end918:                                        ; preds = %if.end917
  %512 = load i8*, i8** %temp1, align 4
  %cmp919 = icmp eq i8* %512, @expand_param_error
  br i1 %cmp919, label %if.then921, label %if.else922

if.then921:                                       ; preds = %do.end918
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else922:                                       ; preds = %do.end918
  %513 = load i8*, i8** %temp1, align 4
  %cmp923 = icmp eq i8* %513, @expand_param_fatal
  br i1 %cmp923, label %if.then925, label %if.end926

if.then925:                                       ; preds = %if.else922
  store %struct.word_desc* @expand_wdesc_fatal, %struct.word_desc** %retval, align 4
  br label %return

if.end926:                                        ; preds = %if.else922
  br label %if.end927

if.end927:                                        ; preds = %if.end926
  %call928 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call928, %struct.word_desc** %ret, align 4
  %514 = load i8*, i8** %temp1, align 4
  %515 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word929 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %515, i32 0, i32 0
  store i8* %514, i8** %word929, align 4
  %516 = load i8*, i8** %temp1, align 4
  %tobool930 = icmp ne i8* %516, null
  br i1 %tobool930, label %land.lhs.true931, label %if.end953

land.lhs.true931:                                 ; preds = %if.end927
  %517 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %cmp932 = icmp eq i32* %517, null
  br i1 %cmp932, label %land.lhs.true937, label %lor.lhs.false934

lor.lhs.false934:                                 ; preds = %land.lhs.true931
  %518 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %519 = load i32, i32* %518, align 4
  %cmp935 = icmp eq i32 %519, 0
  br i1 %cmp935, label %land.lhs.true937, label %if.end953

land.lhs.true937:                                 ; preds = %lor.lhs.false934, %land.lhs.true931
  %520 = load i8*, i8** %temp1, align 4
  %arrayidx938 = getelementptr inbounds i8, i8* %520, i32 0
  %521 = load i8, i8* %arrayidx938, align 1
  %conv939 = sext i8 %521 to i32
  %cmp940 = icmp eq i32 %conv939, 127
  br i1 %cmp940, label %land.lhs.true942, label %if.end953

land.lhs.true942:                                 ; preds = %land.lhs.true937
  %522 = load i8*, i8** %temp1, align 4
  %arrayidx943 = getelementptr inbounds i8, i8* %522, i32 1
  %523 = load i8, i8* %arrayidx943, align 1
  %conv944 = sext i8 %523 to i32
  %cmp945 = icmp eq i32 %conv944, 0
  br i1 %cmp945, label %land.lhs.true947, label %if.end953

land.lhs.true947:                                 ; preds = %land.lhs.true942
  %524 = load i32, i32* %quoted.addr, align 4
  %and948 = and i32 %524, 3
  %tobool949 = icmp ne i32 %and948, 0
  br i1 %tobool949, label %if.then950, label %if.end953

if.then950:                                       ; preds = %land.lhs.true947
  %525 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags951 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %525, i32 0, i32 1
  %526 = load i32, i32* %flags951, align 4
  %or952 = or i32 %526, 262146
  store i32 %or952, i32* %flags951, align 4
  br label %if.end953

if.end953:                                        ; preds = %if.then950, %land.lhs.true947, %land.lhs.true942, %land.lhs.true937, %lor.lhs.false934, %if.end927
  %527 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %527, %struct.word_desc** %retval, align 4
  br label %return

if.end954:                                        ; preds = %if.else896
  br label %if.end955

if.end955:                                        ; preds = %if.end954
  br label %if.end956

if.end956:                                        ; preds = %if.end955
  %528 = load i32, i32* %c, align 4
  switch i32 %528, label %sw.default [
    i32 0, label %sw.bb
    i32 125, label %sw.bb984
    i32 64, label %sw.bb985
    i32 35, label %sw.bb1027
    i32 37, label %sw.bb1027
    i32 45, label %sw.bb1073
    i32 61, label %sw.bb1073
    i32 63, label %sw.bb1073
    i32 43, label %sw.bb1073
  ]

sw.default:                                       ; preds = %if.end956
  br label %sw.bb

sw.bb:                                            ; preds = %if.end956, %sw.default
  br label %bad_substitution

bad_substitution:                                 ; preds = %sw.bb, %if.else726, %if.then588, %if.then577, %if.then399, %if.then273
  store i32 1, i32* @last_command_exit_value, align 4
  %call957 = call i8* @libintl_gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0))
  %529 = load i8*, i8** %string.addr, align 4
  %tobool958 = icmp ne i8* %529, null
  br i1 %tobool958, label %cond.true959, label %cond.false960

cond.true959:                                     ; preds = %bad_substitution
  %530 = load i8*, i8** %string.addr, align 4
  br label %cond.end961

cond.false960:                                    ; preds = %bad_substitution
  br label %cond.end961

cond.end961:                                      ; preds = %cond.false960, %cond.true959
  %cond962 = phi i8* [ %530, %cond.true959 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), %cond.false960 ]
  call void (i8*, ...) @report_error(i8* %call957, i8* %cond962)
  br label %do.body963

do.body963:                                       ; preds = %cond.end961
  %531 = load i8*, i8** %value, align 4
  %tobool964 = icmp ne i8* %531, null
  br i1 %tobool964, label %if.then965, label %if.end966

if.then965:                                       ; preds = %do.body963
  %532 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %532, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8366)
  br label %if.end966

if.end966:                                        ; preds = %if.then965, %do.body963
  br label %do.end967

do.end967:                                        ; preds = %if.end966
  br label %do.body968

do.body968:                                       ; preds = %do.end967
  %533 = load i8*, i8** %temp, align 4
  %tobool969 = icmp ne i8* %533, null
  br i1 %tobool969, label %if.then970, label %if.end971

if.then970:                                       ; preds = %do.body968
  %534 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %534, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8367)
  br label %if.end971

if.end971:                                        ; preds = %if.then970, %do.body968
  br label %do.end972

do.end972:                                        ; preds = %if.end971
  %535 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %535, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8368)
  %536 = load i32, i32* @shell_compatibility_level, align 4
  %cmp973 = icmp sle i32 %536, 43
  br i1 %cmp973, label %if.then975, label %if.else976

if.then975:                                       ; preds = %do.end972
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else976:                                       ; preds = %do.end972
  %537 = load i32, i32* @posixly_correct, align 4
  %tobool977 = icmp ne i32 %537, 0
  br i1 %tobool977, label %land.rhs978, label %land.end981

land.rhs978:                                      ; preds = %if.else976
  %538 = load i32, i32* @interactive_shell, align 4
  %cmp979 = icmp eq i32 %538, 0
  br label %land.end981

land.end981:                                      ; preds = %land.rhs978, %if.else976
  %539 = phi i1 [ false, %if.else976 ], [ %cmp979, %land.rhs978 ]
  %cond983 = select i1 %539, %struct.word_desc* @expand_wdesc_fatal, %struct.word_desc* @expand_wdesc_error
  store %struct.word_desc* %cond983, %struct.word_desc** %retval, align 4
  br label %return

sw.bb984:                                         ; preds = %if.end956
  br label %sw.epilog

sw.bb985:                                         ; preds = %if.end956
  %540 = load i8*, i8** %name, align 4
  %541 = load i8*, i8** %temp, align 4
  %542 = load i64, i64* %ind, align 8
  %conv986 = trunc i64 %542 to i32
  %543 = load i8*, i8** %value, align 4
  %544 = load i32, i32* %c, align 4
  %545 = load i32, i32* %quoted.addr, align 4
  %546 = load i32, i32* %tflag, align 4
  %and987 = and i32 %546, 16777216
  %tobool988 = icmp ne i32 %and987, 0
  %cond989 = select i1 %tobool988, i32 4, i32 0
  %call990 = call i8* @parameter_brace_transform(i8* %540, i8* %541, i32 %conv986, i8* %543, i32 %544, i32 %545, i32 %cond989)
  store i8* %call990, i8** %temp1, align 4
  %547 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %547, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8379)
  %548 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %548, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8380)
  %549 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %549, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8381)
  %550 = load i8*, i8** %temp1, align 4
  %cmp991 = icmp eq i8* %550, @expand_param_error
  br i1 %cmp991, label %if.then996, label %lor.lhs.false993

lor.lhs.false993:                                 ; preds = %sw.bb985
  %551 = load i8*, i8** %temp1, align 4
  %cmp994 = icmp eq i8* %551, @expand_param_fatal
  br i1 %cmp994, label %if.then996, label %if.end1006

if.then996:                                       ; preds = %lor.lhs.false993, %sw.bb985
  store i32 1, i32* @last_command_exit_value, align 4
  %call997 = call i8* @libintl_gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0))
  %552 = load i8*, i8** %string.addr, align 4
  %tobool998 = icmp ne i8* %552, null
  br i1 %tobool998, label %cond.true999, label %cond.false1000

cond.true999:                                     ; preds = %if.then996
  %553 = load i8*, i8** %string.addr, align 4
  br label %cond.end1001

cond.false1000:                                   ; preds = %if.then996
  br label %cond.end1001

cond.end1001:                                     ; preds = %cond.false1000, %cond.true999
  %cond1002 = phi i8* [ %553, %cond.true999 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), %cond.false1000 ]
  call void (i8*, ...) @report_error(i8* %call997, i8* %cond1002)
  %554 = load i8*, i8** %temp1, align 4
  %cmp1003 = icmp eq i8* %554, @expand_param_error
  %cond1005 = select i1 %cmp1003, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond1005, %struct.word_desc** %retval, align 4
  br label %return

if.end1006:                                       ; preds = %lor.lhs.false993
  %call1007 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call1007, %struct.word_desc** %ret, align 4
  %555 = load i8*, i8** %temp1, align 4
  %556 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word1008 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %556, i32 0, i32 0
  store i8* %555, i8** %word1008, align 4
  %557 = load i8*, i8** %temp1, align 4
  %tobool1009 = icmp ne i8* %557, null
  br i1 %tobool1009, label %land.lhs.true1010, label %if.end1026

land.lhs.true1010:                                ; preds = %if.end1006
  %558 = load i8*, i8** %temp1, align 4
  %arrayidx1011 = getelementptr inbounds i8, i8* %558, i32 0
  %559 = load i8, i8* %arrayidx1011, align 1
  %conv1012 = sext i8 %559 to i32
  %cmp1013 = icmp eq i32 %conv1012, 127
  br i1 %cmp1013, label %land.lhs.true1015, label %if.end1026

land.lhs.true1015:                                ; preds = %land.lhs.true1010
  %560 = load i8*, i8** %temp1, align 4
  %arrayidx1016 = getelementptr inbounds i8, i8* %560, i32 1
  %561 = load i8, i8* %arrayidx1016, align 1
  %conv1017 = sext i8 %561 to i32
  %cmp1018 = icmp eq i32 %conv1017, 0
  br i1 %cmp1018, label %land.lhs.true1020, label %if.end1026

land.lhs.true1020:                                ; preds = %land.lhs.true1015
  %562 = load i32, i32* %quoted.addr, align 4
  %and1021 = and i32 %562, 3
  %tobool1022 = icmp ne i32 %and1021, 0
  br i1 %tobool1022, label %if.then1023, label %if.end1026

if.then1023:                                      ; preds = %land.lhs.true1020
  %563 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags1024 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %563, i32 0, i32 1
  %564 = load i32, i32* %flags1024, align 4
  %or1025 = or i32 %564, 262146
  store i32 %or1025, i32* %flags1024, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.then1023, %land.lhs.true1020, %land.lhs.true1015, %land.lhs.true1010, %if.end1006
  %565 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %565, %struct.word_desc** %retval, align 4
  br label %return

sw.bb1027:                                        ; preds = %if.end956, %if.end956
  %566 = load i8*, i8** %value, align 4
  %cmp1028 = icmp eq i8* %566, null
  br i1 %cmp1028, label %if.then1041, label %lor.lhs.false1030

lor.lhs.false1030:                                ; preds = %sw.bb1027
  %567 = load i8*, i8** %value, align 4
  %568 = load i8, i8* %567, align 1
  %conv1031 = sext i8 %568 to i32
  %cmp1032 = icmp eq i32 %conv1031, 0
  br i1 %cmp1032, label %if.then1041, label %lor.lhs.false1034

lor.lhs.false1034:                                ; preds = %lor.lhs.false1030
  %569 = load i8*, i8** %temp, align 4
  %cmp1035 = icmp eq i8* %569, null
  br i1 %cmp1035, label %if.then1041, label %lor.lhs.false1037

lor.lhs.false1037:                                ; preds = %lor.lhs.false1034
  %570 = load i8*, i8** %temp, align 4
  %571 = load i8, i8* %570, align 1
  %conv1038 = sext i8 %571 to i32
  %cmp1039 = icmp eq i32 %conv1038, 0
  br i1 %cmp1039, label %if.then1041, label %if.end1047

if.then1041:                                      ; preds = %lor.lhs.false1037, %lor.lhs.false1034, %lor.lhs.false1030, %sw.bb1027
  br label %do.body1042

do.body1042:                                      ; preds = %if.then1041
  %572 = load i8*, i8** %value, align 4
  %tobool1043 = icmp ne i8* %572, null
  br i1 %tobool1043, label %if.then1044, label %if.end1045

if.then1044:                                      ; preds = %do.body1042
  %573 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %573, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8399)
  br label %if.end1045

if.end1045:                                       ; preds = %if.then1044, %do.body1042
  br label %do.end1046

do.end1046:                                       ; preds = %if.end1045
  br label %sw.epilog

if.end1047:                                       ; preds = %lor.lhs.false1037
  %574 = load i8*, i8** %name, align 4
  %575 = load i8*, i8** %temp, align 4
  %576 = load i64, i64* %ind, align 8
  %conv1048 = trunc i64 %576 to i32
  %577 = load i8*, i8** %value, align 4
  %578 = load i32, i32* %c, align 4
  %579 = load i32, i32* %quoted.addr, align 4
  %580 = load i32, i32* %tflag, align 4
  %and1049 = and i32 %580, 16777216
  %tobool1050 = icmp ne i32 %and1049, 0
  %cond1051 = select i1 %tobool1050, i32 4, i32 0
  %call1052 = call i8* @parameter_brace_remove_pattern(i8* %574, i8* %575, i32 %conv1048, i8* %577, i32 %578, i32 %579, i32 %cond1051)
  store i8* %call1052, i8** %temp1, align 4
  %581 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %581, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8403)
  %582 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %582, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8404)
  %583 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %583, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8405)
  %call1053 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call1053, %struct.word_desc** %ret, align 4
  %584 = load i8*, i8** %temp1, align 4
  %585 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word1054 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %585, i32 0, i32 0
  store i8* %584, i8** %word1054, align 4
  %586 = load i8*, i8** %temp1, align 4
  %tobool1055 = icmp ne i8* %586, null
  br i1 %tobool1055, label %land.lhs.true1056, label %if.end1072

land.lhs.true1056:                                ; preds = %if.end1047
  %587 = load i8*, i8** %temp1, align 4
  %arrayidx1057 = getelementptr inbounds i8, i8* %587, i32 0
  %588 = load i8, i8* %arrayidx1057, align 1
  %conv1058 = sext i8 %588 to i32
  %cmp1059 = icmp eq i32 %conv1058, 127
  br i1 %cmp1059, label %land.lhs.true1061, label %if.end1072

land.lhs.true1061:                                ; preds = %land.lhs.true1056
  %589 = load i8*, i8** %temp1, align 4
  %arrayidx1062 = getelementptr inbounds i8, i8* %589, i32 1
  %590 = load i8, i8* %arrayidx1062, align 1
  %conv1063 = sext i8 %590 to i32
  %cmp1064 = icmp eq i32 %conv1063, 0
  br i1 %cmp1064, label %land.lhs.true1066, label %if.end1072

land.lhs.true1066:                                ; preds = %land.lhs.true1061
  %591 = load i32, i32* %quoted.addr, align 4
  %and1067 = and i32 %591, 3
  %tobool1068 = icmp ne i32 %and1067, 0
  br i1 %tobool1068, label %if.then1069, label %if.end1072

if.then1069:                                      ; preds = %land.lhs.true1066
  %592 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags1070 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %592, i32 0, i32 1
  %593 = load i32, i32* %flags1070, align 4
  %or1071 = or i32 %593, 262146
  store i32 %or1071, i32* %flags1070, align 4
  br label %if.end1072

if.end1072:                                       ; preds = %if.then1069, %land.lhs.true1066, %land.lhs.true1061, %land.lhs.true1056, %if.end1047
  %594 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %594, %struct.word_desc** %retval, align 4
  br label %return

sw.bb1073:                                        ; preds = %if.end956, %if.end956, %if.end956, %if.end956
  %595 = load i32, i32* %var_is_set, align 4
  %tobool1074 = icmp ne i32 %595, 0
  br i1 %tobool1074, label %land.lhs.true1075, label %if.else1113

land.lhs.true1075:                                ; preds = %sw.bb1073
  %596 = load i32, i32* %var_is_null, align 4
  %cmp1076 = icmp eq i32 %596, 0
  br i1 %cmp1076, label %if.then1078, label %if.else1113

if.then1078:                                      ; preds = %land.lhs.true1075
  %597 = load i32, i32* %c, align 4
  %cmp1079 = icmp eq i32 %597, 43
  br i1 %cmp1079, label %if.then1081, label %if.else1106

if.then1081:                                      ; preds = %if.then1078
  %598 = load i32, i32* %quoted.addr, align 4
  %and1082 = and i32 %598, 3
  %tobool1083 = icmp ne i32 %and1082, 0
  br i1 %tobool1083, label %land.lhs.true1084, label %if.end1087

land.lhs.true1084:                                ; preds = %if.then1081
  %599 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool1085 = icmp ne i32* %599, null
  br i1 %tobool1085, label %if.then1086, label %if.end1087

if.then1086:                                      ; preds = %land.lhs.true1084
  %600 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 0, i32* %600, align 4
  br label %if.end1087

if.end1087:                                       ; preds = %if.then1086, %land.lhs.true1084, %if.then1081
  %601 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool1088 = icmp ne i32* %601, null
  br i1 %tobool1088, label %if.then1089, label %if.end1090

if.then1089:                                      ; preds = %if.end1087
  %602 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 0, i32* %602, align 4
  br label %if.end1090

if.end1090:                                       ; preds = %if.then1089, %if.end1087
  br label %do.body1091

do.body1091:                                      ; preds = %if.end1090
  %603 = load i8*, i8** %temp, align 4
  %tobool1092 = icmp ne i8* %603, null
  br i1 %tobool1092, label %if.then1093, label %if.end1094

if.then1093:                                      ; preds = %do.body1091
  %604 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %604, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8431)
  br label %if.end1094

if.end1094:                                       ; preds = %if.then1093, %do.body1091
  br label %do.end1095

do.end1095:                                       ; preds = %if.end1094
  %605 = load i8*, i8** %value, align 4
  %tobool1096 = icmp ne i8* %605, null
  br i1 %tobool1096, label %if.then1097, label %if.else1104

if.then1097:                                      ; preds = %do.end1095
  %606 = load i32, i32* %quoted.addr, align 4
  %and1098 = and i32 %606, 3
  %tobool1099 = icmp ne i32 %and1098, 0
  br i1 %tobool1099, label %if.then1100, label %if.end1102

if.then1100:                                      ; preds = %if.then1097
  %607 = load i32, i32* %quoted.addr, align 4
  %or1101 = or i32 %607, 128
  store i32 %or1101, i32* %quoted.addr, align 4
  br label %if.end1102

if.end1102:                                       ; preds = %if.then1100, %if.then1097
  %608 = load i8*, i8** %name, align 4
  %609 = load i8*, i8** %value, align 4
  %610 = load i32, i32* %c, align 4
  %611 = load i32, i32* %quoted.addr, align 4
  %612 = load i32, i32* %pflags.addr, align 4
  %613 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %614 = load i32*, i32** %contains_dollar_at.addr, align 4
  %call1103 = call %struct.word_desc* @parameter_brace_expand_rhs(i8* %608, i8* %609, i32 %610, i32 %611, i32 %612, i32* %613, i32* %614)
  store %struct.word_desc* %call1103, %struct.word_desc** %ret, align 4
  %615 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %615, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8446)
  br label %if.end1105

if.else1104:                                      ; preds = %do.end1095
  store i8* null, i8** %temp, align 4
  br label %if.end1105

if.end1105:                                       ; preds = %if.else1104, %if.end1102
  br label %if.end1112

if.else1106:                                      ; preds = %if.then1078
  br label %do.body1107

do.body1107:                                      ; preds = %if.else1106
  %616 = load i8*, i8** %value, align 4
  %tobool1108 = icmp ne i8* %616, null
  br i1 %tobool1108, label %if.then1109, label %if.end1110

if.then1109:                                      ; preds = %do.body1107
  %617 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %617, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8453)
  br label %if.end1110

if.end1110:                                       ; preds = %if.then1109, %do.body1107
  br label %do.end1111

do.end1111:                                       ; preds = %if.end1110
  br label %if.end1112

if.end1112:                                       ; preds = %do.end1111, %if.end1105
  br label %if.end1153

if.else1113:                                      ; preds = %land.lhs.true1075, %sw.bb1073
  br label %do.body1114

do.body1114:                                      ; preds = %if.else1113
  %618 = load i8*, i8** %temp, align 4
  %tobool1115 = icmp ne i8* %618, null
  br i1 %tobool1115, label %if.then1116, label %if.end1117

if.then1116:                                      ; preds = %do.body1114
  %619 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %619, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8459)
  br label %if.end1117

if.end1117:                                       ; preds = %if.then1116, %do.body1114
  br label %do.end1118

do.end1118:                                       ; preds = %if.end1117
  store i8* null, i8** %temp, align 4
  %620 = load i32, i32* %c, align 4
  %cmp1119 = icmp eq i32 %620, 61
  br i1 %cmp1119, label %land.lhs.true1121, label %if.else1125

land.lhs.true1121:                                ; preds = %do.end1118
  %621 = load i32, i32* %var_is_special, align 4
  %tobool1122 = icmp ne i32 %621, 0
  br i1 %tobool1122, label %if.then1123, label %if.else1125

if.then1123:                                      ; preds = %land.lhs.true1121
  store i32 1, i32* @last_command_exit_value, align 4
  %call1124 = call i8* @libintl_gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38, i32 0, i32 0))
  %622 = load i8*, i8** %name, align 4
  call void (i8*, ...) @report_error(i8* %call1124, i8* %622)
  %623 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %623, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8465)
  %624 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %624, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8466)
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.else1125:                                      ; preds = %land.lhs.true1121, %do.end1118
  %625 = load i32, i32* %c, align 4
  %cmp1126 = icmp eq i32 %625, 63
  br i1 %cmp1126, label %if.then1128, label %if.else1131

if.then1128:                                      ; preds = %if.else1125
  %626 = load i8*, i8** %name, align 4
  %627 = load i8*, i8** %value, align 4
  call void @parameter_brace_expand_error(i8* %626, i8* %627)
  %628 = load i32, i32* @interactive_shell, align 4
  %tobool1129 = icmp ne i32 %628, 0
  %cond1130 = select i1 %tobool1129, %struct.word_desc* @expand_wdesc_error, %struct.word_desc* @expand_wdesc_fatal
  store %struct.word_desc* %cond1130, %struct.word_desc** %retval, align 4
  br label %return

if.else1131:                                      ; preds = %if.else1125
  %629 = load i32, i32* %c, align 4
  %cmp1132 = icmp ne i32 %629, 43
  br i1 %cmp1132, label %if.then1134, label %if.end1150

if.then1134:                                      ; preds = %if.else1131
  %630 = load i32, i32* %quoted.addr, align 4
  %and1135 = and i32 %630, 3
  %tobool1136 = icmp ne i32 %and1135, 0
  br i1 %tobool1136, label %land.lhs.true1137, label %if.end1140

land.lhs.true1137:                                ; preds = %if.then1134
  %631 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool1138 = icmp ne i32* %631, null
  br i1 %tobool1138, label %if.then1139, label %if.end1140

if.then1139:                                      ; preds = %land.lhs.true1137
  %632 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 0, i32* %632, align 4
  br label %if.end1140

if.end1140:                                       ; preds = %if.then1139, %land.lhs.true1137, %if.then1134
  %633 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool1141 = icmp ne i32* %633, null
  br i1 %tobool1141, label %if.then1142, label %if.end1143

if.then1142:                                      ; preds = %if.end1140
  %634 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 0, i32* %634, align 4
  br label %if.end1143

if.end1143:                                       ; preds = %if.then1142, %if.end1140
  %635 = load i32, i32* %quoted.addr, align 4
  %and1144 = and i32 %635, 3
  %tobool1145 = icmp ne i32 %and1144, 0
  br i1 %tobool1145, label %if.then1146, label %if.end1148

if.then1146:                                      ; preds = %if.end1143
  %636 = load i32, i32* %quoted.addr, align 4
  %or1147 = or i32 %636, 128
  store i32 %or1147, i32* %quoted.addr, align 4
  br label %if.end1148

if.end1148:                                       ; preds = %if.then1146, %if.end1143
  %637 = load i8*, i8** %name, align 4
  %638 = load i8*, i8** %value, align 4
  %639 = load i32, i32* %c, align 4
  %640 = load i32, i32* %quoted.addr, align 4
  %641 = load i32, i32* %pflags.addr, align 4
  %642 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %643 = load i32*, i32** %contains_dollar_at.addr, align 4
  %call1149 = call %struct.word_desc* @parameter_brace_expand_rhs(i8* %637, i8* %638, i32 %639, i32 %640, i32 %641, i32* %642, i32* %643)
  store %struct.word_desc* %call1149, %struct.word_desc** %ret, align 4
  br label %if.end1150

if.end1150:                                       ; preds = %if.end1148, %if.else1131
  br label %if.end1151

if.end1151:                                       ; preds = %if.end1150
  br label %if.end1152

if.end1152:                                       ; preds = %if.end1151
  %644 = load i8*, i8** %value, align 4
  call void @sh_xfree(i8* %644, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8495)
  br label %if.end1153

if.end1153:                                       ; preds = %if.end1152, %if.end1112
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end1153, %do.end1046, %sw.bb984
  %645 = load i8*, i8** %name, align 4
  call void @sh_xfree(i8* %645, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 8500)
  %646 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %cmp1154 = icmp eq %struct.word_desc* %646, null
  br i1 %cmp1154, label %if.then1156, label %if.end1160

if.then1156:                                      ; preds = %sw.epilog
  %call1157 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call1157, %struct.word_desc** %ret, align 4
  %647 = load i32, i32* %tflag, align 4
  %648 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags1158 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %648, i32 0, i32 1
  store i32 %647, i32* %flags1158, align 4
  %649 = load i8*, i8** %temp, align 4
  %650 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word1159 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %650, i32 0, i32 0
  store i8* %649, i8** %word1159, align 4
  br label %if.end1160

if.end1160:                                       ; preds = %if.then1156, %sw.epilog
  %651 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  store %struct.word_desc* %651, %struct.word_desc** %retval, align 4
  br label %return

return:                                           ; preds = %if.end1160, %if.then1128, %if.then1123, %if.end1072, %if.end1026, %cond.end1001, %land.end981, %if.then975, %if.end953, %if.then925, %if.then921, %if.end895, %if.then867, %if.then863, %if.end837, %if.then809, %if.then805, %do.end776, %do.end624, %if.end563, %if.end499, %if.else413, %if.then412, %if.then406
  %652 = load %struct.word_desc*, %struct.word_desc** %retval, align 4
  ret %struct.word_desc* %652
}

; Function Attrs: noinline nounwind
define internal i32 @chk_arithsub(i8* %s, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 4
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak48 = alloca %struct.__mbstate_t, align 4
  %mblength49 = alloca i32, align 4
  %_f50 = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 4
  store i32 %len, i32* %len.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  store i32 0, i32* %count, align 4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %len.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %s.addr, align 4
  %4 = load i32, i32* %i, align 4
  %arrayidx = getelementptr inbounds i8, i8* %3, i32 %4
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp1 = icmp eq i32 %conv, 40
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %count, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %count, align 4
  br label %if.end12

if.else:                                          ; preds = %while.body
  %7 = load i8*, i8** %s.addr, align 4
  %8 = load i32, i32* %i, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i32 %8
  %9 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %9 to i32
  %cmp5 = icmp eq i32 %conv4, 41
  br i1 %cmp5, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.else
  %10 = load i32, i32* %count, align 4
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* %count, align 4
  %11 = load i32, i32* %count, align 4
  %cmp8 = icmp slt i32 %11, 0
  br i1 %cmp8, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then7
  store i32 0, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  %12 = load i8*, i8** %s.addr, align 4
  %13 = load i32, i32* %i, align 4
  %arrayidx13 = getelementptr inbounds i8, i8* %12, i32 %13
  %14 = load i8, i8* %arrayidx13, align 1
  %conv14 = sext i8 %14 to i32
  switch i32 %conv14, label %sw.default [
    i32 92, label %sw.bb
    i32 39, label %sw.bb81
    i32 34, label %sw.bb84
  ]

sw.default:                                       ; preds = %if.end12
  br label %do.body

do.body:                                          ; preds = %sw.default
  %15 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp15 = icmp sgt i32 %15, 1
  br i1 %cmp15, label %if.then17, label %if.else37

if.then17:                                        ; preds = %do.body
  %16 = load i8*, i8** %s.addr, align 4
  %17 = load i32, i32* %i, align 4
  %arrayidx18 = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8, i8* %arrayidx18, align 1
  %call = call i32 @is_basic(i8 signext %18)
  store i32 %call, i32* %_f, align 4
  %19 = load i32, i32* %_f, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.then19, label %if.else20

if.then19:                                        ; preds = %if.then17
  store i32 1, i32* %mblength, align 4
  br label %if.end22

if.else20:                                        ; preds = %if.then17
  %20 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %21 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 8, i32 4, i1 false)
  %22 = load i8*, i8** %s.addr, align 4
  %23 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %22, i32 %23
  %24 = load i32, i32* %len.addr, align 4
  %25 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %24, %25
  %call21 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call21, i32* %mblength, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then19
  %26 = load i32, i32* %mblength, align 4
  %cmp23 = icmp eq i32 %26, -2
  br i1 %cmp23, label %if.then27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end22
  %27 = load i32, i32* %mblength, align 4
  %cmp25 = icmp eq i32 %27, -1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %lor.lhs.false, %if.end22
  %28 = bitcast %struct.__mbstate_t* %state to i8*
  %29 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %28, i8* %29, i32 8, i32 4, i1 false)
  %30 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %30, 1
  store i32 %inc28, i32* %i, align 4
  br label %if.end36

if.else29:                                        ; preds = %lor.lhs.false
  %31 = load i32, i32* %mblength, align 4
  %cmp30 = icmp eq i32 %31, 0
  br i1 %cmp30, label %if.then32, label %if.else34

if.then32:                                        ; preds = %if.else29
  %32 = load i32, i32* %i, align 4
  %inc33 = add nsw i32 %32, 1
  store i32 %inc33, i32* %i, align 4
  br label %if.end35

if.else34:                                        ; preds = %if.else29
  %33 = load i32, i32* %mblength, align 4
  %34 = load i32, i32* %i, align 4
  %add = add i32 %34, %33
  store i32 %add, i32* %i, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then32
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then27
  br label %if.end39

if.else37:                                        ; preds = %do.body
  %35 = load i32, i32* %i, align 4
  %inc38 = add nsw i32 %35, 1
  store i32 %inc38, i32* %i, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.end36
  br label %do.end

do.end:                                           ; preds = %if.end39
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end12
  %36 = load i32, i32* %i, align 4
  %inc40 = add nsw i32 %36, 1
  store i32 %inc40, i32* %i, align 4
  %37 = load i8*, i8** %s.addr, align 4
  %38 = load i32, i32* %i, align 4
  %arrayidx41 = getelementptr inbounds i8, i8* %37, i32 %38
  %39 = load i8, i8* %arrayidx41, align 1
  %tobool42 = icmp ne i8 %39, 0
  br i1 %tobool42, label %if.then43, label %if.end80

if.then43:                                        ; preds = %sw.bb
  br label %do.body44

do.body44:                                        ; preds = %if.then43
  %40 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp45 = icmp sgt i32 %40, 1
  br i1 %cmp45, label %if.then47, label %if.else76

if.then47:                                        ; preds = %do.body44
  %41 = load i8*, i8** %s.addr, align 4
  %42 = load i32, i32* %i, align 4
  %arrayidx51 = getelementptr inbounds i8, i8* %41, i32 %42
  %43 = load i8, i8* %arrayidx51, align 1
  %call52 = call i32 @is_basic(i8 signext %43)
  store i32 %call52, i32* %_f50, align 4
  %44 = load i32, i32* %_f50, align 4
  %tobool53 = icmp ne i32 %44, 0
  br i1 %tobool53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then47
  store i32 1, i32* %mblength49, align 4
  br label %if.end59

if.else55:                                        ; preds = %if.then47
  %45 = bitcast %struct.__mbstate_t* %state_bak48 to i8*
  %46 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %45, i8* %46, i32 8, i32 4, i1 false)
  %47 = load i8*, i8** %s.addr, align 4
  %48 = load i32, i32* %i, align 4
  %add.ptr56 = getelementptr inbounds i8, i8* %47, i32 %48
  %49 = load i32, i32* %len.addr, align 4
  %50 = load i32, i32* %i, align 4
  %sub57 = sub nsw i32 %49, %50
  %call58 = call i32 @mbrlen(i8* %add.ptr56, i32 %sub57, %struct.__mbstate_t* %state)
  store i32 %call58, i32* %mblength49, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.else55, %if.then54
  %51 = load i32, i32* %mblength49, align 4
  %cmp60 = icmp eq i32 %51, -2
  br i1 %cmp60, label %if.then65, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %if.end59
  %52 = load i32, i32* %mblength49, align 4
  %cmp63 = icmp eq i32 %52, -1
  br i1 %cmp63, label %if.then65, label %if.else67

if.then65:                                        ; preds = %lor.lhs.false62, %if.end59
  %53 = bitcast %struct.__mbstate_t* %state to i8*
  %54 = bitcast %struct.__mbstate_t* %state_bak48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %53, i8* %54, i32 8, i32 4, i1 false)
  %55 = load i32, i32* %i, align 4
  %inc66 = add nsw i32 %55, 1
  store i32 %inc66, i32* %i, align 4
  br label %if.end75

if.else67:                                        ; preds = %lor.lhs.false62
  %56 = load i32, i32* %mblength49, align 4
  %cmp68 = icmp eq i32 %56, 0
  br i1 %cmp68, label %if.then70, label %if.else72

if.then70:                                        ; preds = %if.else67
  %57 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %57, 1
  store i32 %inc71, i32* %i, align 4
  br label %if.end74

if.else72:                                        ; preds = %if.else67
  %58 = load i32, i32* %mblength49, align 4
  %59 = load i32, i32* %i, align 4
  %add73 = add i32 %59, %58
  store i32 %add73, i32* %i, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then70
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then65
  br label %if.end78

if.else76:                                        ; preds = %do.body44
  %60 = load i32, i32* %i, align 4
  %inc77 = add nsw i32 %60, 1
  store i32 %inc77, i32* %i, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.end75
  br label %do.end79

do.end79:                                         ; preds = %if.end78
  br label %if.end80

if.end80:                                         ; preds = %do.end79, %sw.bb
  br label %sw.epilog

sw.bb81:                                          ; preds = %if.end12
  %61 = load i8*, i8** %s.addr, align 4
  %62 = load i32, i32* %len.addr, align 4
  %63 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %63, 1
  store i32 %inc82, i32* %i, align 4
  %call83 = call i32 @skip_single_quoted(i8* %61, i32 %62, i32 %inc82, i32 0)
  store i32 %call83, i32* %i, align 4
  br label %sw.epilog

sw.bb84:                                          ; preds = %if.end12
  %64 = load i8*, i8** %s.addr, align 4
  %65 = load i32, i32* %len.addr, align 4
  %66 = load i32, i32* %i, align 4
  %inc85 = add nsw i32 %66, 1
  store i32 %inc85, i32* %i, align 4
  %call86 = call i32 @skip_double_quoted(i8* %64, i32 %65, i32 %inc85, i32 0)
  store i32 %call86, i32* %i, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb84, %sw.bb81, %if.end80, %do.end
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %67 = load i32, i32* %count, align 4
  %cmp87 = icmp eq i32 %67, 0
  %conv88 = zext i1 %cmp87 to i32
  store i32 %conv88, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then10
  %68 = load i32, i32* %retval, align 4
  ret i32 %68
}

declare i64 @evalexp(i8*, i32*) #1

; Function Attrs: nounwind readonly
declare i32 @isalnum(i32) #6

declare i8* @array_reference(%struct.array*, i64) #1

declare i8* @assoc_reference(%struct.hash_table*, i8*) #1

declare %struct.variable* @find_variable_last_nameref(i8*, i32) #1

declare i32 @valid_array_reference(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal %struct.word_desc* @parameter_brace_expand_word(i8* %name, i32 %var_is_special, i32 %quoted, i32 %pflags, i64* %indp) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %var_is_special.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %pflags.addr = alloca i32, align 4
  %indp.addr = alloca i64*, align 4
  %ret = alloca %struct.word_desc*, align 4
  %temp = alloca i8*, align 4
  %tt = alloca i8*, align 4
  %arg_index = alloca i64, align 8
  %var = alloca %struct.variable*, align 4
  %atype = alloca i32, align 4
  %rflags = alloca i32, align 4
  %ind = alloca i64, align 8
  %sindex = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i32 %var_is_special, i32* %var_is_special.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %pflags, i32* %pflags.addr, align 4
  store i64* %indp, i64** %indp.addr, align 4
  store %struct.word_desc* null, %struct.word_desc** %ret, align 4
  store i8* null, i8** %temp, align 4
  store i32 0, i32* %rflags, align 4
  %0 = load i64*, i64** %indp.addr, align 4
  %tobool = icmp ne i64* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64*, i64** %indp.addr, align 4
  store i64 -9223372036854775808, i64* %1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %name.addr, align 4
  %call = call i32 @legal_number(i8* %2, i64* %arg_index)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then2, label %if.else14

if.then2:                                         ; preds = %if.end
  %3 = load i64, i64* %arg_index, align 8
  %call3 = call i8* @get_dollar_var_value(i64 %3)
  store i8* %call3, i8** %tt, align 4
  %4 = load i8*, i8** %tt, align 4
  %tobool4 = icmp ne i8* %4, null
  br i1 %tobool4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then2
  %5 = load i8*, i8** %tt, align 4
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %tobool6 = icmp ne i32 %conv, 0
  br i1 %tobool6, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %if.then5
  %7 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %7, 3
  %tobool7 = icmp ne i32 %and, 0
  br i1 %tobool7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %8 = load i8*, i8** %tt, align 4
  %call8 = call i8* @quote_string(i8* %8)
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %if.then5
  %9 = load i8*, i8** %tt, align 4
  %call9 = call i8* @quote_escapes(i8* %9)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call8, %cond.true ], [ %call9, %cond.false ]
  store i8* %cond, i8** %temp, align 4
  br label %if.end10

if.else:                                          ; preds = %if.then2
  store i8* null, i8** %temp, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.else, %cond.end
  br label %do.body

do.body:                                          ; preds = %if.end10
  %10 = load i8*, i8** %tt, align 4
  %tobool11 = icmp ne i8* %10, null
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %do.body
  %11 = load i8*, i8** %tt, align 4
  call void @sh_xfree(i8* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6508)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end13
  br label %if.end180

if.else14:                                        ; preds = %if.end
  %12 = load i32, i32* %var_is_special.addr, align 4
  %tobool15 = icmp ne i32 %12, 0
  br i1 %tobool15, label %if.then16, label %if.else21

if.then16:                                        ; preds = %if.else14
  %13 = load i8*, i8** %name.addr, align 4
  %call17 = call i32 @strlen(i8* %13)
  %add = add i32 2, %call17
  %call18 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6513)
  store i8* %call18, i8** %tt, align 4
  %14 = load i8*, i8** %tt, align 4
  store i32 0, i32* %sindex, align 4
  %arrayidx = getelementptr inbounds i8, i8* %14, i32 0
  store i8 36, i8* %arrayidx, align 1
  %15 = load i8*, i8** %tt, align 4
  %add.ptr = getelementptr inbounds i8, i8* %15, i32 1
  %16 = load i8*, i8** %name.addr, align 4
  %call19 = call i8* @strcpy(i8* %add.ptr, i8* %16)
  %17 = load i8*, i8** %tt, align 4
  %18 = load i32, i32* %quoted.addr, align 4
  %19 = load i32, i32* %pflags.addr, align 4
  %call20 = call %struct.word_desc* @param_expand(i8* %17, i32* %sindex, i32 %18, i32* null, i32* null, i32* null, i32* null, i32 %19)
  store %struct.word_desc* %call20, %struct.word_desc** %ret, align 4
  %20 = load i8*, i8** %tt, align 4
  call void @sh_xfree(i8* %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6519)
  br label %if.end179

if.else21:                                        ; preds = %if.else14
  %21 = load i8*, i8** %name.addr, align 4
  %call22 = call i32 @valid_array_reference(i8* %21, i32 0)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.then24, label %if.else103

if.then24:                                        ; preds = %if.else21
  br label %expand_arrayref

expand_arrayref:                                  ; preds = %if.then160, %if.then24
  %22 = load i32, i32* %pflags.addr, align 4
  %and25 = and i32 %22, 8
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %if.else58

if.then27:                                        ; preds = %expand_arrayref
  %23 = load i8*, i8** %name.addr, align 4
  %call28 = call %struct.variable* @array_variable_part(i8* %23, i8** %tt, i32* null)
  store %struct.variable* %call28, %struct.variable** %var, align 4
  %24 = load i8*, i8** %tt, align 4
  %arrayidx29 = getelementptr inbounds i8, i8* %24, i32 0
  %25 = load i8, i8* %arrayidx29, align 1
  %conv30 = sext i8 %25 to i32
  %cmp = icmp eq i32 %conv30, 64
  br i1 %cmp, label %land.lhs.true36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then27
  %26 = load i8*, i8** %tt, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %26, i32 0
  %27 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %27 to i32
  %cmp34 = icmp eq i32 %conv33, 42
  br i1 %cmp34, label %land.lhs.true36, label %if.else55

land.lhs.true36:                                  ; preds = %lor.lhs.false, %if.then27
  %28 = load i8*, i8** %tt, align 4
  %arrayidx37 = getelementptr inbounds i8, i8* %28, i32 1
  %29 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %29 to i32
  %cmp39 = icmp eq i32 %conv38, 93
  br i1 %cmp39, label %if.then41, label %if.else55

if.then41:                                        ; preds = %land.lhs.true36
  %30 = load %struct.variable*, %struct.variable** %var, align 4
  %tobool42 = icmp ne %struct.variable* %30, null
  br i1 %tobool42, label %land.lhs.true43, label %if.else52

land.lhs.true43:                                  ; preds = %if.then41
  %31 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %31, i32 0, i32 5
  %32 = load i32, i32* %attributes, align 4
  %and44 = and i32 %32, 4
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %if.then50, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %land.lhs.true43
  %33 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes47 = getelementptr inbounds %struct.variable, %struct.variable* %33, i32 0, i32 5
  %34 = load i32, i32* %attributes47, align 4
  %and48 = and i32 %34, 64
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.then50, label %if.else52

if.then50:                                        ; preds = %lor.lhs.false46, %land.lhs.true43
  %35 = load i8*, i8** %name.addr, align 4
  %36 = load i32, i32* %quoted.addr, align 4
  %or = or i32 %36, 1
  %call51 = call i8* @array_value(i8* %35, i32 %or, i32 16, i32* %atype, i64* %ind)
  store i8* %call51, i8** %temp, align 4
  br label %if.end54

if.else52:                                        ; preds = %lor.lhs.false46, %if.then41
  %37 = load i8*, i8** %name.addr, align 4
  %38 = load i32, i32* %quoted.addr, align 4
  %call53 = call i8* @array_value(i8* %37, i32 %38, i32 0, i32* %atype, i64* %ind)
  store i8* %call53, i8** %temp, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then50
  br label %if.end57

if.else55:                                        ; preds = %land.lhs.true36, %lor.lhs.false
  %39 = load i8*, i8** %name.addr, align 4
  %40 = load i32, i32* %quoted.addr, align 4
  %call56 = call i8* @array_value(i8* %39, i32 %40, i32 0, i32* %atype, i64* %ind)
  store i8* %call56, i8** %temp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.end54
  br label %if.end60

if.else58:                                        ; preds = %expand_arrayref
  %41 = load i8*, i8** %name.addr, align 4
  %42 = load i32, i32* %quoted.addr, align 4
  %call59 = call i8* @array_value(i8* %41, i32 %42, i32 0, i32* %atype, i64* %ind)
  store i8* %call59, i8** %temp, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.end57
  %43 = load i32, i32* %atype, align 4
  %cmp61 = icmp eq i32 %43, 0
  br i1 %cmp61, label %land.lhs.true63, label %if.else81

land.lhs.true63:                                  ; preds = %if.end60
  %44 = load i8*, i8** %temp, align 4
  %tobool64 = icmp ne i8* %44, null
  br i1 %tobool64, label %if.then65, label %if.else81

if.then65:                                        ; preds = %land.lhs.true63
  %45 = load i8*, i8** %temp, align 4
  %46 = load i8, i8* %45, align 1
  %conv66 = sext i8 %46 to i32
  %tobool67 = icmp ne i32 %conv66, 0
  br i1 %tobool67, label %land.lhs.true68, label %cond.false73

land.lhs.true68:                                  ; preds = %if.then65
  %47 = load i32, i32* %quoted.addr, align 4
  %and69 = and i32 %47, 3
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %cond.true71, label %cond.false73

cond.true71:                                      ; preds = %land.lhs.true68
  %48 = load i8*, i8** %temp, align 4
  %call72 = call i8* @quote_string(i8* %48)
  br label %cond.end75

cond.false73:                                     ; preds = %land.lhs.true68, %if.then65
  %49 = load i8*, i8** %temp, align 4
  %call74 = call i8* @quote_escapes(i8* %49)
  br label %cond.end75

cond.end75:                                       ; preds = %cond.false73, %cond.true71
  %cond76 = phi i8* [ %call72, %cond.true71 ], [ %call74, %cond.false73 ]
  store i8* %cond76, i8** %temp, align 4
  %50 = load i32, i32* %rflags, align 4
  %or77 = or i32 %50, 16777216
  store i32 %or77, i32* %rflags, align 4
  %51 = load i64*, i64** %indp.addr, align 4
  %tobool78 = icmp ne i64* %51, null
  br i1 %tobool78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %cond.end75
  %52 = load i64, i64* %ind, align 8
  %53 = load i64*, i64** %indp.addr, align 4
  store i64 %52, i64* %53, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %cond.end75
  br label %if.end102

if.else81:                                        ; preds = %land.lhs.true63, %if.end60
  %54 = load i32, i32* %atype, align 4
  %cmp82 = icmp eq i32 %54, 1
  br i1 %cmp82, label %land.lhs.true84, label %if.end101

land.lhs.true84:                                  ; preds = %if.else81
  %55 = load i8*, i8** %temp, align 4
  %tobool85 = icmp ne i8* %55, null
  br i1 %tobool85, label %land.lhs.true86, label %if.end101

land.lhs.true86:                                  ; preds = %land.lhs.true84
  %56 = load i8*, i8** %temp, align 4
  %arrayidx87 = getelementptr inbounds i8, i8* %56, i32 0
  %57 = load i8, i8* %arrayidx87, align 1
  %conv88 = sext i8 %57 to i32
  %cmp89 = icmp eq i32 %conv88, 127
  br i1 %cmp89, label %land.lhs.true91, label %if.end101

land.lhs.true91:                                  ; preds = %land.lhs.true86
  %58 = load i8*, i8** %temp, align 4
  %arrayidx92 = getelementptr inbounds i8, i8* %58, i32 1
  %59 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %59 to i32
  %cmp94 = icmp eq i32 %conv93, 0
  br i1 %cmp94, label %land.lhs.true96, label %if.end101

land.lhs.true96:                                  ; preds = %land.lhs.true91
  %60 = load i32, i32* %quoted.addr, align 4
  %and97 = and i32 %60, 3
  %tobool98 = icmp ne i32 %and97, 0
  br i1 %tobool98, label %if.then99, label %if.end101

if.then99:                                        ; preds = %land.lhs.true96
  %61 = load i32, i32* %rflags, align 4
  %or100 = or i32 %61, 262144
  store i32 %or100, i32* %rflags, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.then99, %land.lhs.true96, %land.lhs.true91, %land.lhs.true86, %land.lhs.true84, %if.else81
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end80
  br label %if.end178

if.else103:                                       ; preds = %if.else21
  %62 = load i8*, i8** %name.addr, align 4
  %call104 = call %struct.variable* @find_variable(i8* %62)
  store %struct.variable* %call104, %struct.variable** %var, align 4
  %tobool105 = icmp ne %struct.variable* %call104, null
  br i1 %tobool105, label %if.then106, label %if.else148

if.then106:                                       ; preds = %if.else103
  %63 = load %struct.variable*, %struct.variable** %var, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %63, i32 0, i32 1
  %64 = load i8*, i8** %value, align 4
  %cmp107 = icmp ne i8* %64, null
  br i1 %cmp107, label %land.lhs.true109, label %if.else146

land.lhs.true109:                                 ; preds = %if.then106
  %65 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes110 = getelementptr inbounds %struct.variable, %struct.variable* %65, i32 0, i32 5
  %66 = load i32, i32* %attributes110, align 4
  %and111 = and i32 %66, 4096
  %cmp112 = icmp eq i32 %and111, 0
  br i1 %cmp112, label %if.then114, label %if.else146

if.then114:                                       ; preds = %land.lhs.true109
  %67 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes115 = getelementptr inbounds %struct.variable, %struct.variable* %67, i32 0, i32 5
  %68 = load i32, i32* %attributes115, align 4
  %and116 = and i32 %68, 64
  %tobool117 = icmp ne i32 %and116, 0
  br i1 %tobool117, label %if.then118, label %if.else121

if.then118:                                       ; preds = %if.then114
  %69 = load %struct.variable*, %struct.variable** %var, align 4
  %value119 = getelementptr inbounds %struct.variable, %struct.variable* %69, i32 0, i32 1
  %70 = load i8*, i8** %value119, align 4
  %71 = bitcast i8* %70 to %struct.hash_table*
  %call120 = call i8* @assoc_reference(%struct.hash_table* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0))
  store i8* %call120, i8** %temp, align 4
  br label %if.end131

if.else121:                                       ; preds = %if.then114
  %72 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes122 = getelementptr inbounds %struct.variable, %struct.variable* %72, i32 0, i32 5
  %73 = load i32, i32* %attributes122, align 4
  %and123 = and i32 %73, 4
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.then125, label %if.else128

if.then125:                                       ; preds = %if.else121
  %74 = load %struct.variable*, %struct.variable** %var, align 4
  %value126 = getelementptr inbounds %struct.variable, %struct.variable* %74, i32 0, i32 1
  %75 = load i8*, i8** %value126, align 4
  %76 = bitcast i8* %75 to %struct.array*
  %call127 = call i8* @array_reference(%struct.array* %76, i64 0)
  store i8* %call127, i8** %temp, align 4
  br label %if.end130

if.else128:                                       ; preds = %if.else121
  %77 = load %struct.variable*, %struct.variable** %var, align 4
  %value129 = getelementptr inbounds %struct.variable, %struct.variable* %77, i32 0, i32 1
  %78 = load i8*, i8** %value129, align 4
  store i8* %78, i8** %temp, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.else128, %if.then125
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then118
  %79 = load i8*, i8** %temp, align 4
  %tobool132 = icmp ne i8* %79, null
  br i1 %tobool132, label %if.then133, label %if.end145

if.then133:                                       ; preds = %if.end131
  %80 = load i8*, i8** %temp, align 4
  %81 = load i8, i8* %80, align 1
  %conv134 = sext i8 %81 to i32
  %tobool135 = icmp ne i32 %conv134, 0
  br i1 %tobool135, label %land.lhs.true136, label %cond.false141

land.lhs.true136:                                 ; preds = %if.then133
  %82 = load i32, i32* %quoted.addr, align 4
  %and137 = and i32 %82, 3
  %tobool138 = icmp ne i32 %and137, 0
  br i1 %tobool138, label %cond.true139, label %cond.false141

cond.true139:                                     ; preds = %land.lhs.true136
  %83 = load i8*, i8** %temp, align 4
  %call140 = call i8* @quote_string(i8* %83)
  br label %cond.end143

cond.false141:                                    ; preds = %land.lhs.true136, %if.then133
  %84 = load i8*, i8** %temp, align 4
  %call142 = call i8* @quote_escapes(i8* %84)
  br label %cond.end143

cond.end143:                                      ; preds = %cond.false141, %cond.true139
  %cond144 = phi i8* [ %call140, %cond.true139 ], [ %call142, %cond.false141 ]
  store i8* %cond144, i8** %temp, align 4
  br label %if.end145

if.end145:                                        ; preds = %cond.end143, %if.end131
  br label %if.end147

if.else146:                                       ; preds = %land.lhs.true109, %if.then106
  store i8* null, i8** %temp, align 4
  br label %if.end147

if.end147:                                        ; preds = %if.else146, %if.end145
  br label %if.end177

if.else148:                                       ; preds = %if.else103
  %85 = load i8*, i8** %name.addr, align 4
  %call149 = call %struct.variable* @find_variable_last_nameref(i8* %85, i32 0)
  store %struct.variable* %call149, %struct.variable** %var, align 4
  %tobool150 = icmp ne %struct.variable* %call149, null
  br i1 %tobool150, label %if.then151, label %if.else175

if.then151:                                       ; preds = %if.else148
  %86 = load %struct.variable*, %struct.variable** %var, align 4
  %value152 = getelementptr inbounds %struct.variable, %struct.variable* %86, i32 0, i32 1
  %87 = load i8*, i8** %value152, align 4
  store i8* %87, i8** %temp, align 4
  %88 = load i8*, i8** %temp, align 4
  %tobool153 = icmp ne i8* %88, null
  br i1 %tobool153, label %land.lhs.true154, label %if.else161

land.lhs.true154:                                 ; preds = %if.then151
  %89 = load i8*, i8** %temp, align 4
  %90 = load i8, i8* %89, align 1
  %conv155 = sext i8 %90 to i32
  %tobool156 = icmp ne i32 %conv155, 0
  br i1 %tobool156, label %land.lhs.true157, label %if.else161

land.lhs.true157:                                 ; preds = %land.lhs.true154
  %91 = load i8*, i8** %temp, align 4
  %call158 = call i32 @valid_array_reference(i8* %91, i32 0)
  %tobool159 = icmp ne i32 %call158, 0
  br i1 %tobool159, label %if.then160, label %if.else161

if.then160:                                       ; preds = %land.lhs.true157
  %92 = load i8*, i8** %temp, align 4
  store i8* %92, i8** %name.addr, align 4
  br label %expand_arrayref

if.else161:                                       ; preds = %land.lhs.true157, %land.lhs.true154, %if.then151
  %93 = load i8*, i8** %temp, align 4
  %tobool162 = icmp ne i8* %93, null
  br i1 %tobool162, label %land.lhs.true163, label %if.else172

land.lhs.true163:                                 ; preds = %if.else161
  %94 = load i8*, i8** %temp, align 4
  %95 = load i8, i8* %94, align 1
  %conv164 = sext i8 %95 to i32
  %tobool165 = icmp ne i32 %conv164, 0
  br i1 %tobool165, label %land.lhs.true166, label %if.else172

land.lhs.true166:                                 ; preds = %land.lhs.true163
  %96 = load i8*, i8** %temp, align 4
  %call167 = call i32 @legal_identifier(i8* %96)
  %cmp168 = icmp eq i32 %call167, 0
  br i1 %cmp168, label %if.then170, label %if.else172

if.then170:                                       ; preds = %land.lhs.true166
  store i32 1, i32* @last_command_exit_value, align 4
  %call171 = call i8* @libintl_gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i32 0, i32 0))
  %97 = load i8*, i8** %temp, align 4
  call void (i8*, ...) @report_error(i8* %call171, i8* %97)
  store i8* @expand_param_error, i8** %temp, align 4
  br label %if.end173

if.else172:                                       ; preds = %land.lhs.true166, %land.lhs.true163, %if.else161
  store i8* null, i8** %temp, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173
  br label %if.end176

if.else175:                                       ; preds = %if.else148
  store i8* null, i8** %temp, align 4
  br label %if.end176

if.end176:                                        ; preds = %if.else175, %if.end174
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.end147
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.end102
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then16
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %do.end
  %98 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %cmp181 = icmp eq %struct.word_desc* %98, null
  br i1 %cmp181, label %if.then183, label %if.end186

if.then183:                                       ; preds = %if.end180
  %call184 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call184, %struct.word_desc** %ret, align 4
  %99 = load i8*, i8** %temp, align 4
  %100 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %100, i32 0, i32 0
  store i8* %99, i8** %word, align 4
  %101 = load i32, i32* %rflags, align 4
  %102 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %102, i32 0, i32 1
  %103 = load i32, i32* %flags, align 4
  %or185 = or i32 %103, %101
  store i32 %or185, i32* %flags, align 4
  br label %if.end186

if.end186:                                        ; preds = %if.then183, %if.end180
  %104 = load %struct.word_desc*, %struct.word_desc** %ret, align 4
  ret %struct.word_desc* %104
}

declare i32 @all_digits(i8*) #1

declare i32 @legal_identifier(i8*) #1

; Function Attrs: nounwind readonly
declare i32 @isalpha(i32) #6

; Function Attrs: noinline nounwind
define internal i32 @valid_length_expression(i8* %name) #0 {
entry:
  %name.addr = alloca i8*, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load i8*, i8** %name.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 1
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i32 1
  %3 = load i8, i8* %arrayidx2, align 1
  %idxprom = zext i8 %3 to i32
  %arrayidx3 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %4 = load i32, i32* %arrayidx3, align 4
  %and = and i32 %4, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false8

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8*, i8** %name.addr, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %5, i32 2
  %6 = load i8, i8* %arrayidx4, align 1
  %conv5 = sext i8 %6 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %lor.end, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load i8*, i8** %name.addr, align 4
  %arrayidx9 = getelementptr inbounds i8, i8* %7, i32 1
  %8 = load i8, i8* %arrayidx9, align 1
  %conv10 = sext i8 %8 to i32
  %cmp11 = icmp sge i32 %conv10, 48
  br i1 %cmp11, label %land.lhs.true13, label %lor.lhs.false20

land.lhs.true13:                                  ; preds = %lor.lhs.false8
  %9 = load i8*, i8** %name.addr, align 4
  %arrayidx14 = getelementptr inbounds i8, i8* %9, i32 1
  %10 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %10 to i32
  %cmp16 = icmp sle i32 %conv15, 57
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false20

land.lhs.true18:                                  ; preds = %land.lhs.true13
  %11 = load i8*, i8** %name.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %11, i32 1
  %call = call i32 @all_digits(i8* %add.ptr)
  %tobool19 = icmp ne i32 %call, 0
  br i1 %tobool19, label %lor.end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %land.lhs.true18, %land.lhs.true13, %lor.lhs.false8
  %12 = load i8*, i8** %name.addr, align 4
  %add.ptr21 = getelementptr inbounds i8, i8* %12, i32 1
  %call22 = call i32 @valid_array_reference(i8* %add.ptr21, i32 0)
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false20
  %13 = load i8*, i8** %name.addr, align 4
  %add.ptr24 = getelementptr inbounds i8, i8* %13, i32 1
  %call25 = call i32 @legal_identifier(i8* %add.ptr24)
  %tobool26 = icmp ne i32 %call25, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false20, %land.lhs.true18, %land.lhs.true, %entry
  %14 = phi i1 [ true, %lor.lhs.false20 ], [ true, %land.lhs.true18 ], [ true, %land.lhs.true ], [ true, %entry ], [ %tobool26, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32
  ret i32 %lor.ext
}

; Function Attrs: noinline nounwind
define internal i64 @parameter_brace_expand_length(i8* %name) #0 {
entry:
  %retval = alloca i64, align 8
  %name.addr = alloca i8*, align 4
  %t = alloca i8*, align 4
  %newname = alloca i8*, align 4
  %number = alloca i64, align 8
  %arg_index = alloca i64, align 8
  %list = alloca %struct.word_list*, align 4
  %var = alloca %struct.variable*, align 4
  store i8* %name, i8** %name.addr, align 4
  %0 = load i8*, i8** %name.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 1
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i32 @number_of_args()
  %conv2 = sext i32 %call to i64
  store i64 %conv2, i64* %number, align 8
  br label %if.end303

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %2, i32 1
  %3 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %3 to i32
  %cmp5 = icmp eq i32 %conv4, 64
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %4 = load i8*, i8** %name.addr, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %5 to i32
  %cmp9 = icmp eq i32 %conv8, 42
  br i1 %cmp9, label %land.lhs.true, label %if.else18

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else
  %6 = load i8*, i8** %name.addr, align 4
  %arrayidx11 = getelementptr inbounds i8, i8* %6, i32 2
  %7 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %7 to i32
  %cmp13 = icmp eq i32 %conv12, 0
  br i1 %cmp13, label %if.then15, label %if.else18

if.then15:                                        ; preds = %land.lhs.true
  %call16 = call i32 @number_of_args()
  %conv17 = sext i32 %call16 to i64
  store i64 %conv17, i64* %number, align 8
  br label %if.end302

if.else18:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %8 = load i8*, i8** %name.addr, align 4
  %arrayidx19 = getelementptr inbounds i8, i8* %8, i32 1
  %9 = load i8, i8* %arrayidx19, align 1
  %idxprom = zext i8 %9 to i32
  %arrayidx20 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %10 = load i32, i32* %arrayidx20, align 4
  %and = and i32 %10, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true21, label %if.else71

land.lhs.true21:                                  ; preds = %if.else18
  %11 = load i8*, i8** %name.addr, align 4
  %arrayidx22 = getelementptr inbounds i8, i8* %11, i32 2
  %12 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %12 to i32
  %cmp24 = icmp eq i32 %conv23, 0
  br i1 %cmp24, label %if.then26, label %if.else71

if.then26:                                        ; preds = %land.lhs.true21
  %13 = load i8*, i8** %name.addr, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %13, i32 1
  %14 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %14 to i32
  switch i32 %conv28, label %sw.epilog [
    i32 45, label %sw.bb
    i32 63, label %sw.bb30
    i32 36, label %sw.bb33
    i32 33, label %sw.bb36
    i32 35, label %sw.bb43
  ]

sw.bb:                                            ; preds = %if.then26
  %call29 = call i8* @which_set_flags()
  store i8* %call29, i8** %t, align 4
  br label %sw.epilog

sw.bb30:                                          ; preds = %if.then26
  %15 = load i32, i32* @last_command_exit_value, align 4
  %conv31 = sext i32 %15 to i64
  %call32 = call i8* @itos(i64 %conv31)
  store i8* %call32, i8** %t, align 4
  br label %sw.epilog

sw.bb33:                                          ; preds = %if.then26
  %16 = load i32, i32* @dollar_dollar_pid, align 4
  %conv34 = sext i32 %16 to i64
  %call35 = call i8* @itos(i64 %conv34)
  store i8* %call35, i8** %t, align 4
  br label %sw.epilog

sw.bb36:                                          ; preds = %if.then26
  %17 = load volatile i32, i32* @last_asynchronous_pid, align 4
  %cmp37 = icmp eq i32 %17, -1
  br i1 %cmp37, label %if.then39, label %if.else40

if.then39:                                        ; preds = %sw.bb36
  store i8* null, i8** %t, align 4
  br label %if.end

if.else40:                                        ; preds = %sw.bb36
  %18 = load volatile i32, i32* @last_asynchronous_pid, align 4
  %conv41 = sext i32 %18 to i64
  %call42 = call i8* @itos(i64 %conv41)
  store i8* %call42, i8** %t, align 4
  br label %if.end

if.end:                                           ; preds = %if.else40, %if.then39
  br label %sw.epilog

sw.bb43:                                          ; preds = %if.then26
  %call44 = call i32 @number_of_args()
  %conv45 = sext i32 %call44 to i64
  %call46 = call i8* @itos(i64 %conv45)
  store i8* %call46, i8** %t, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then26, %sw.bb43, %if.end, %sw.bb33, %sw.bb30, %sw.bb
  %19 = load i8*, i8** %t, align 4
  %tobool47 = icmp ne i8* %19, null
  br i1 %tobool47, label %land.lhs.true48, label %cond.false64

land.lhs.true48:                                  ; preds = %sw.epilog
  %20 = load i8*, i8** %t, align 4
  %arrayidx49 = getelementptr inbounds i8, i8* %20, i32 0
  %21 = load i8, i8* %arrayidx49, align 1
  %conv50 = sext i8 %21 to i32
  %tobool51 = icmp ne i32 %conv50, 0
  br i1 %tobool51, label %cond.true, label %cond.false64

cond.true:                                        ; preds = %land.lhs.true48
  %22 = load i8*, i8** %t, align 4
  %arrayidx52 = getelementptr inbounds i8, i8* %22, i32 1
  %23 = load i8, i8* %arrayidx52, align 1
  %conv53 = sext i8 %23 to i32
  %tobool54 = icmp ne i32 %conv53, 0
  br i1 %tobool54, label %cond.true55, label %cond.false61

cond.true55:                                      ; preds = %cond.true
  %24 = load i8*, i8** %t, align 4
  %arrayidx56 = getelementptr inbounds i8, i8* %24, i32 2
  %25 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %25 to i32
  %tobool58 = icmp ne i32 %conv57, 0
  br i1 %tobool58, label %cond.true59, label %cond.false

cond.true59:                                      ; preds = %cond.true55
  %26 = load i8*, i8** %t, align 4
  %call60 = call i32 @strlen(i8* %26)
  br label %cond.end

cond.false:                                       ; preds = %cond.true55
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true59
  %cond = phi i32 [ %call60, %cond.true59 ], [ 2, %cond.false ]
  br label %cond.end62

cond.false61:                                     ; preds = %cond.true
  br label %cond.end62

cond.end62:                                       ; preds = %cond.false61, %cond.end
  %cond63 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false61 ]
  br label %cond.end65

cond.false64:                                     ; preds = %land.lhs.true48, %sw.epilog
  br label %cond.end65

cond.end65:                                       ; preds = %cond.false64, %cond.end62
  %cond66 = phi i32 [ %cond63, %cond.end62 ], [ 0, %cond.false64 ]
  %conv67 = zext i32 %cond66 to i64
  store i64 %conv67, i64* %number, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end65
  %27 = load i8*, i8** %t, align 4
  %tobool68 = icmp ne i8* %27, null
  br i1 %tobool68, label %if.then69, label %if.end70

if.then69:                                        ; preds = %do.body
  %28 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6933)
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end70
  br label %if.end301

if.else71:                                        ; preds = %land.lhs.true21, %if.else18
  %29 = load i8*, i8** %name.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %29, i32 1
  %call72 = call i32 @valid_array_reference(i8* %add.ptr, i32 0)
  %tobool73 = icmp ne i32 %call72, 0
  br i1 %tobool73, label %if.then74, label %if.else77

if.then74:                                        ; preds = %if.else71
  %30 = load i8*, i8** %name.addr, align 4
  %add.ptr75 = getelementptr inbounds i8, i8* %30, i32 1
  %call76 = call i64 @array_length_reference(i8* %add.ptr75)
  store i64 %call76, i64* %number, align 8
  br label %if.end300

if.else77:                                        ; preds = %if.else71
  store i64 0, i64* %number, align 8
  %31 = load i8*, i8** %name.addr, align 4
  %add.ptr78 = getelementptr inbounds i8, i8* %31, i32 1
  %call79 = call i32 @legal_number(i8* %add.ptr78, i64* %arg_index)
  %tobool80 = icmp ne i32 %call79, 0
  br i1 %tobool80, label %if.then81, label %if.else143

if.then81:                                        ; preds = %if.else77
  %32 = load i64, i64* %arg_index, align 8
  %call82 = call i8* @get_dollar_var_value(i64 %32)
  store i8* %call82, i8** %t, align 4
  %33 = load i8*, i8** %t, align 4
  %cmp83 = icmp eq i8* %33, null
  br i1 %cmp83, label %land.lhs.true85, label %if.end88

land.lhs.true85:                                  ; preds = %if.then81
  %34 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool86 = icmp ne i32 %34, 0
  br i1 %tobool86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %land.lhs.true85
  store i64 -9223372036854775808, i64* %retval, align 8
  br label %return

if.end88:                                         ; preds = %land.lhs.true85, %if.then81
  %call89 = call i32 @__ctype_get_mb_cur_max()
  %cmp90 = icmp ugt i32 %call89, 1
  br i1 %cmp90, label %cond.true92, label %cond.false110

cond.true92:                                      ; preds = %if.end88
  %35 = load i8*, i8** %t, align 4
  %tobool93 = icmp ne i8* %35, null
  br i1 %tobool93, label %land.lhs.true94, label %cond.false107

land.lhs.true94:                                  ; preds = %cond.true92
  %36 = load i8*, i8** %t, align 4
  %arrayidx95 = getelementptr inbounds i8, i8* %36, i32 0
  %37 = load i8, i8* %arrayidx95, align 1
  %conv96 = sext i8 %37 to i32
  %tobool97 = icmp ne i32 %conv96, 0
  br i1 %tobool97, label %cond.true98, label %cond.false107

cond.true98:                                      ; preds = %land.lhs.true94
  %38 = load i8*, i8** %t, align 4
  %arrayidx99 = getelementptr inbounds i8, i8* %38, i32 1
  %39 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %39 to i32
  %tobool101 = icmp ne i32 %conv100, 0
  br i1 %tobool101, label %cond.true102, label %cond.false104

cond.true102:                                     ; preds = %cond.true98
  %40 = load i8*, i8** %t, align 4
  %call103 = call i32 @mbstrlen(i8* %40)
  br label %cond.end105

cond.false104:                                    ; preds = %cond.true98
  br label %cond.end105

cond.end105:                                      ; preds = %cond.false104, %cond.true102
  %cond106 = phi i32 [ %call103, %cond.true102 ], [ 1, %cond.false104 ]
  br label %cond.end108

cond.false107:                                    ; preds = %land.lhs.true94, %cond.true92
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false107, %cond.end105
  %cond109 = phi i32 [ %cond106, %cond.end105 ], [ 0, %cond.false107 ]
  br label %cond.end135

cond.false110:                                    ; preds = %if.end88
  %41 = load i8*, i8** %t, align 4
  %tobool111 = icmp ne i8* %41, null
  br i1 %tobool111, label %land.lhs.true112, label %cond.false132

land.lhs.true112:                                 ; preds = %cond.false110
  %42 = load i8*, i8** %t, align 4
  %arrayidx113 = getelementptr inbounds i8, i8* %42, i32 0
  %43 = load i8, i8* %arrayidx113, align 1
  %conv114 = sext i8 %43 to i32
  %tobool115 = icmp ne i32 %conv114, 0
  br i1 %tobool115, label %cond.true116, label %cond.false132

cond.true116:                                     ; preds = %land.lhs.true112
  %44 = load i8*, i8** %t, align 4
  %arrayidx117 = getelementptr inbounds i8, i8* %44, i32 1
  %45 = load i8, i8* %arrayidx117, align 1
  %conv118 = sext i8 %45 to i32
  %tobool119 = icmp ne i32 %conv118, 0
  br i1 %tobool119, label %cond.true120, label %cond.false129

cond.true120:                                     ; preds = %cond.true116
  %46 = load i8*, i8** %t, align 4
  %arrayidx121 = getelementptr inbounds i8, i8* %46, i32 2
  %47 = load i8, i8* %arrayidx121, align 1
  %conv122 = sext i8 %47 to i32
  %tobool123 = icmp ne i32 %conv122, 0
  br i1 %tobool123, label %cond.true124, label %cond.false126

cond.true124:                                     ; preds = %cond.true120
  %48 = load i8*, i8** %t, align 4
  %call125 = call i32 @strlen(i8* %48)
  br label %cond.end127

cond.false126:                                    ; preds = %cond.true120
  br label %cond.end127

cond.end127:                                      ; preds = %cond.false126, %cond.true124
  %cond128 = phi i32 [ %call125, %cond.true124 ], [ 2, %cond.false126 ]
  br label %cond.end130

cond.false129:                                    ; preds = %cond.true116
  br label %cond.end130

cond.end130:                                      ; preds = %cond.false129, %cond.end127
  %cond131 = phi i32 [ %cond128, %cond.end127 ], [ 1, %cond.false129 ]
  br label %cond.end133

cond.false132:                                    ; preds = %land.lhs.true112, %cond.false110
  br label %cond.end133

cond.end133:                                      ; preds = %cond.false132, %cond.end130
  %cond134 = phi i32 [ %cond131, %cond.end130 ], [ 0, %cond.false132 ]
  br label %cond.end135

cond.end135:                                      ; preds = %cond.end133, %cond.end108
  %cond136 = phi i32 [ %cond109, %cond.end108 ], [ %cond134, %cond.end133 ]
  %conv137 = zext i32 %cond136 to i64
  store i64 %conv137, i64* %number, align 8
  br label %do.body138

do.body138:                                       ; preds = %cond.end135
  %49 = load i8*, i8** %t, align 4
  %tobool139 = icmp ne i8* %49, null
  br i1 %tobool139, label %if.then140, label %if.end141

if.then140:                                       ; preds = %do.body138
  %50 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6949)
  br label %if.end141

if.end141:                                        ; preds = %if.then140, %do.body138
  br label %do.end142

do.end142:                                        ; preds = %if.end141
  br label %if.end299

if.else143:                                       ; preds = %if.else77
  %51 = load i8*, i8** %name.addr, align 4
  %add.ptr144 = getelementptr inbounds i8, i8* %51, i32 1
  %call145 = call %struct.variable* @find_variable(i8* %add.ptr144)
  store %struct.variable* %call145, %struct.variable** %var, align 4
  %tobool146 = icmp ne %struct.variable* %call145, null
  br i1 %tobool146, label %land.lhs.true147, label %if.else224

land.lhs.true147:                                 ; preds = %if.else143
  %52 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %52, i32 0, i32 5
  %53 = load i32, i32* %attributes, align 4
  %and148 = and i32 %53, 4096
  %cmp149 = icmp eq i32 %and148, 0
  br i1 %cmp149, label %land.lhs.true151, label %if.else224

land.lhs.true151:                                 ; preds = %land.lhs.true147
  %54 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes152 = getelementptr inbounds %struct.variable, %struct.variable* %54, i32 0, i32 5
  %55 = load i32, i32* %attributes152, align 4
  %and153 = and i32 %55, 4
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %if.then159, label %lor.lhs.false155

lor.lhs.false155:                                 ; preds = %land.lhs.true151
  %56 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes156 = getelementptr inbounds %struct.variable, %struct.variable* %56, i32 0, i32 5
  %57 = load i32, i32* %attributes156, align 4
  %and157 = and i32 %57, 64
  %tobool158 = icmp ne i32 %and157, 0
  br i1 %tobool158, label %if.then159, label %if.else224

if.then159:                                       ; preds = %lor.lhs.false155, %land.lhs.true151
  %58 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes160 = getelementptr inbounds %struct.variable, %struct.variable* %58, i32 0, i32 5
  %59 = load i32, i32* %attributes160, align 4
  %and161 = and i32 %59, 64
  %tobool162 = icmp ne i32 %and161, 0
  br i1 %tobool162, label %if.then163, label %if.else165

if.then163:                                       ; preds = %if.then159
  %60 = load %struct.variable*, %struct.variable** %var, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %60, i32 0, i32 1
  %61 = load i8*, i8** %value, align 4
  %62 = bitcast i8* %61 to %struct.hash_table*
  %call164 = call i8* @assoc_reference(%struct.hash_table* %62, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0))
  store i8* %call164, i8** %t, align 4
  br label %if.end168

if.else165:                                       ; preds = %if.then159
  %63 = load %struct.variable*, %struct.variable** %var, align 4
  %value166 = getelementptr inbounds %struct.variable, %struct.variable* %63, i32 0, i32 1
  %64 = load i8*, i8** %value166, align 4
  %65 = bitcast i8* %64 to %struct.array*
  %call167 = call i8* @array_reference(%struct.array* %65, i64 0)
  store i8* %call167, i8** %t, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.else165, %if.then163
  %66 = load i8*, i8** %t, align 4
  %cmp169 = icmp eq i8* %66, null
  br i1 %cmp169, label %land.lhs.true171, label %if.end174

land.lhs.true171:                                 ; preds = %if.end168
  %67 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool172 = icmp ne i32 %67, 0
  br i1 %tobool172, label %if.then173, label %if.end174

if.then173:                                       ; preds = %land.lhs.true171
  store i64 -9223372036854775808, i64* %retval, align 8
  br label %return

if.end174:                                        ; preds = %land.lhs.true171, %if.end168
  %call175 = call i32 @__ctype_get_mb_cur_max()
  %cmp176 = icmp ugt i32 %call175, 1
  br i1 %cmp176, label %cond.true178, label %cond.false196

cond.true178:                                     ; preds = %if.end174
  %68 = load i8*, i8** %t, align 4
  %tobool179 = icmp ne i8* %68, null
  br i1 %tobool179, label %land.lhs.true180, label %cond.false193

land.lhs.true180:                                 ; preds = %cond.true178
  %69 = load i8*, i8** %t, align 4
  %arrayidx181 = getelementptr inbounds i8, i8* %69, i32 0
  %70 = load i8, i8* %arrayidx181, align 1
  %conv182 = sext i8 %70 to i32
  %tobool183 = icmp ne i32 %conv182, 0
  br i1 %tobool183, label %cond.true184, label %cond.false193

cond.true184:                                     ; preds = %land.lhs.true180
  %71 = load i8*, i8** %t, align 4
  %arrayidx185 = getelementptr inbounds i8, i8* %71, i32 1
  %72 = load i8, i8* %arrayidx185, align 1
  %conv186 = sext i8 %72 to i32
  %tobool187 = icmp ne i32 %conv186, 0
  br i1 %tobool187, label %cond.true188, label %cond.false190

cond.true188:                                     ; preds = %cond.true184
  %73 = load i8*, i8** %t, align 4
  %call189 = call i32 @mbstrlen(i8* %73)
  br label %cond.end191

cond.false190:                                    ; preds = %cond.true184
  br label %cond.end191

cond.end191:                                      ; preds = %cond.false190, %cond.true188
  %cond192 = phi i32 [ %call189, %cond.true188 ], [ 1, %cond.false190 ]
  br label %cond.end194

cond.false193:                                    ; preds = %land.lhs.true180, %cond.true178
  br label %cond.end194

cond.end194:                                      ; preds = %cond.false193, %cond.end191
  %cond195 = phi i32 [ %cond192, %cond.end191 ], [ 0, %cond.false193 ]
  br label %cond.end221

cond.false196:                                    ; preds = %if.end174
  %74 = load i8*, i8** %t, align 4
  %tobool197 = icmp ne i8* %74, null
  br i1 %tobool197, label %land.lhs.true198, label %cond.false218

land.lhs.true198:                                 ; preds = %cond.false196
  %75 = load i8*, i8** %t, align 4
  %arrayidx199 = getelementptr inbounds i8, i8* %75, i32 0
  %76 = load i8, i8* %arrayidx199, align 1
  %conv200 = sext i8 %76 to i32
  %tobool201 = icmp ne i32 %conv200, 0
  br i1 %tobool201, label %cond.true202, label %cond.false218

cond.true202:                                     ; preds = %land.lhs.true198
  %77 = load i8*, i8** %t, align 4
  %arrayidx203 = getelementptr inbounds i8, i8* %77, i32 1
  %78 = load i8, i8* %arrayidx203, align 1
  %conv204 = sext i8 %78 to i32
  %tobool205 = icmp ne i32 %conv204, 0
  br i1 %tobool205, label %cond.true206, label %cond.false215

cond.true206:                                     ; preds = %cond.true202
  %79 = load i8*, i8** %t, align 4
  %arrayidx207 = getelementptr inbounds i8, i8* %79, i32 2
  %80 = load i8, i8* %arrayidx207, align 1
  %conv208 = sext i8 %80 to i32
  %tobool209 = icmp ne i32 %conv208, 0
  br i1 %tobool209, label %cond.true210, label %cond.false212

cond.true210:                                     ; preds = %cond.true206
  %81 = load i8*, i8** %t, align 4
  %call211 = call i32 @strlen(i8* %81)
  br label %cond.end213

cond.false212:                                    ; preds = %cond.true206
  br label %cond.end213

cond.end213:                                      ; preds = %cond.false212, %cond.true210
  %cond214 = phi i32 [ %call211, %cond.true210 ], [ 2, %cond.false212 ]
  br label %cond.end216

cond.false215:                                    ; preds = %cond.true202
  br label %cond.end216

cond.end216:                                      ; preds = %cond.false215, %cond.end213
  %cond217 = phi i32 [ %cond214, %cond.end213 ], [ 1, %cond.false215 ]
  br label %cond.end219

cond.false218:                                    ; preds = %land.lhs.true198, %cond.false196
  br label %cond.end219

cond.end219:                                      ; preds = %cond.false218, %cond.end216
  %cond220 = phi i32 [ %cond217, %cond.end216 ], [ 0, %cond.false218 ]
  br label %cond.end221

cond.end221:                                      ; preds = %cond.end219, %cond.end194
  %cond222 = phi i32 [ %cond195, %cond.end194 ], [ %cond220, %cond.end219 ]
  %conv223 = zext i32 %cond222 to i64
  store i64 %conv223, i64* %number, align 8
  br label %if.end298

if.else224:                                       ; preds = %lor.lhs.false155, %land.lhs.true147, %if.else143
  %82 = load i8*, i8** %name.addr, align 4
  %call225 = call i32 @strlen(i8* %82)
  %add = add i32 1, %call225
  %call226 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6965)
  %83 = load i8*, i8** %name.addr, align 4
  %call227 = call i8* @strcpy(i8* %call226, i8* %83)
  store i8* %call227, i8** %newname, align 4
  %84 = load i8*, i8** %newname, align 4
  %arrayidx228 = getelementptr inbounds i8, i8* %84, i32 0
  store i8 36, i8* %arrayidx228, align 1
  %85 = load i8*, i8** %newname, align 4
  %call229 = call %struct.word_list* @expand_string(i8* %85, i32 1)
  store %struct.word_list* %call229, %struct.word_list** %list, align 4
  %86 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool230 = icmp ne %struct.word_list* %86, null
  br i1 %tobool230, label %cond.true231, label %cond.false233

cond.true231:                                     ; preds = %if.else224
  %87 = load %struct.word_list*, %struct.word_list** %list, align 4
  %call232 = call i8* @string_list(%struct.word_list* %87)
  br label %cond.end234

cond.false233:                                    ; preds = %if.else224
  br label %cond.end234

cond.end234:                                      ; preds = %cond.false233, %cond.true231
  %cond235 = phi i8* [ %call232, %cond.true231 ], [ null, %cond.false233 ]
  store i8* %cond235, i8** %t, align 4
  %88 = load i8*, i8** %newname, align 4
  call void @sh_xfree(i8* %88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6969)
  %89 = load %struct.word_list*, %struct.word_list** %list, align 4
  %tobool236 = icmp ne %struct.word_list* %89, null
  br i1 %tobool236, label %if.then237, label %if.end238

if.then237:                                       ; preds = %cond.end234
  %90 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %90)
  br label %if.end238

if.end238:                                        ; preds = %if.then237, %cond.end234
  %91 = load i8*, i8** %t, align 4
  %tobool239 = icmp ne i8* %91, null
  br i1 %tobool239, label %cond.true240, label %cond.false289

cond.true240:                                     ; preds = %if.end238
  %call241 = call i32 @__ctype_get_mb_cur_max()
  %cmp242 = icmp ugt i32 %call241, 1
  br i1 %cmp242, label %cond.true244, label %cond.false262

cond.true244:                                     ; preds = %cond.true240
  %92 = load i8*, i8** %t, align 4
  %tobool245 = icmp ne i8* %92, null
  br i1 %tobool245, label %land.lhs.true246, label %cond.false259

land.lhs.true246:                                 ; preds = %cond.true244
  %93 = load i8*, i8** %t, align 4
  %arrayidx247 = getelementptr inbounds i8, i8* %93, i32 0
  %94 = load i8, i8* %arrayidx247, align 1
  %conv248 = sext i8 %94 to i32
  %tobool249 = icmp ne i32 %conv248, 0
  br i1 %tobool249, label %cond.true250, label %cond.false259

cond.true250:                                     ; preds = %land.lhs.true246
  %95 = load i8*, i8** %t, align 4
  %arrayidx251 = getelementptr inbounds i8, i8* %95, i32 1
  %96 = load i8, i8* %arrayidx251, align 1
  %conv252 = sext i8 %96 to i32
  %tobool253 = icmp ne i32 %conv252, 0
  br i1 %tobool253, label %cond.true254, label %cond.false256

cond.true254:                                     ; preds = %cond.true250
  %97 = load i8*, i8** %t, align 4
  %call255 = call i32 @mbstrlen(i8* %97)
  br label %cond.end257

cond.false256:                                    ; preds = %cond.true250
  br label %cond.end257

cond.end257:                                      ; preds = %cond.false256, %cond.true254
  %cond258 = phi i32 [ %call255, %cond.true254 ], [ 1, %cond.false256 ]
  br label %cond.end260

cond.false259:                                    ; preds = %land.lhs.true246, %cond.true244
  br label %cond.end260

cond.end260:                                      ; preds = %cond.false259, %cond.end257
  %cond261 = phi i32 [ %cond258, %cond.end257 ], [ 0, %cond.false259 ]
  br label %cond.end287

cond.false262:                                    ; preds = %cond.true240
  %98 = load i8*, i8** %t, align 4
  %tobool263 = icmp ne i8* %98, null
  br i1 %tobool263, label %land.lhs.true264, label %cond.false284

land.lhs.true264:                                 ; preds = %cond.false262
  %99 = load i8*, i8** %t, align 4
  %arrayidx265 = getelementptr inbounds i8, i8* %99, i32 0
  %100 = load i8, i8* %arrayidx265, align 1
  %conv266 = sext i8 %100 to i32
  %tobool267 = icmp ne i32 %conv266, 0
  br i1 %tobool267, label %cond.true268, label %cond.false284

cond.true268:                                     ; preds = %land.lhs.true264
  %101 = load i8*, i8** %t, align 4
  %arrayidx269 = getelementptr inbounds i8, i8* %101, i32 1
  %102 = load i8, i8* %arrayidx269, align 1
  %conv270 = sext i8 %102 to i32
  %tobool271 = icmp ne i32 %conv270, 0
  br i1 %tobool271, label %cond.true272, label %cond.false281

cond.true272:                                     ; preds = %cond.true268
  %103 = load i8*, i8** %t, align 4
  %arrayidx273 = getelementptr inbounds i8, i8* %103, i32 2
  %104 = load i8, i8* %arrayidx273, align 1
  %conv274 = sext i8 %104 to i32
  %tobool275 = icmp ne i32 %conv274, 0
  br i1 %tobool275, label %cond.true276, label %cond.false278

cond.true276:                                     ; preds = %cond.true272
  %105 = load i8*, i8** %t, align 4
  %call277 = call i32 @strlen(i8* %105)
  br label %cond.end279

cond.false278:                                    ; preds = %cond.true272
  br label %cond.end279

cond.end279:                                      ; preds = %cond.false278, %cond.true276
  %cond280 = phi i32 [ %call277, %cond.true276 ], [ 2, %cond.false278 ]
  br label %cond.end282

cond.false281:                                    ; preds = %cond.true268
  br label %cond.end282

cond.end282:                                      ; preds = %cond.false281, %cond.end279
  %cond283 = phi i32 [ %cond280, %cond.end279 ], [ 1, %cond.false281 ]
  br label %cond.end285

cond.false284:                                    ; preds = %land.lhs.true264, %cond.false262
  br label %cond.end285

cond.end285:                                      ; preds = %cond.false284, %cond.end282
  %cond286 = phi i32 [ %cond283, %cond.end282 ], [ 0, %cond.false284 ]
  br label %cond.end287

cond.end287:                                      ; preds = %cond.end285, %cond.end260
  %cond288 = phi i32 [ %cond261, %cond.end260 ], [ %cond286, %cond.end285 ]
  br label %cond.end290

cond.false289:                                    ; preds = %if.end238
  br label %cond.end290

cond.end290:                                      ; preds = %cond.false289, %cond.end287
  %cond291 = phi i32 [ %cond288, %cond.end287 ], [ 0, %cond.false289 ]
  %conv292 = zext i32 %cond291 to i64
  store i64 %conv292, i64* %number, align 8
  br label %do.body293

do.body293:                                       ; preds = %cond.end290
  %106 = load i8*, i8** %t, align 4
  %tobool294 = icmp ne i8* %106, null
  br i1 %tobool294, label %if.then295, label %if.end296

if.then295:                                       ; preds = %do.body293
  %107 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %107, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6974)
  br label %if.end296

if.end296:                                        ; preds = %if.then295, %do.body293
  br label %do.end297

do.end297:                                        ; preds = %if.end296
  br label %if.end298

if.end298:                                        ; preds = %do.end297, %cond.end221
  br label %if.end299

if.end299:                                        ; preds = %if.end298, %do.end142
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.then74
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %do.end
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %if.then15
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.then
  %108 = load i64, i64* %number, align 8
  store i64 %108, i64* %retval, align 8
  br label %return

return:                                           ; preds = %if.end303, %if.then173, %if.then87
  %109 = load i64, i64* %retval, align 8
  ret i64 %109
}

declare i8** @all_variables_matching_prefix(i8*) #1

declare %struct.word_list* @strvec_to_word_list(i8**, i32, i32) #1

declare i8* @array_variable_name(i8*, i8**, i32*) #1

declare i8* @array_keys(i8*, i32) #1

; Function Attrs: noinline nounwind
define internal i32 @valid_brace_expansion_word(i8* %name, i32 %var_is_special) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %var_is_special.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i32 %var_is_special, i32* %var_is_special.addr, align 4
  %0 = load i8*, i8** %name.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp sge i32 %conv, 48
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv2 = sext i8 %3 to i32
  %cmp3 = icmp sle i32 %conv2, 57
  br i1 %cmp3, label %land.lhs.true5, label %if.else

land.lhs.true5:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %name.addr, align 4
  %call = call i32 @all_digits(i8* %4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %5 = load i32, i32* %var_is_special.addr, align 4
  %tobool6 = icmp ne i32 %5, 0
  br i1 %tobool6, label %if.then7, label %if.else8

if.then7:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4
  br label %return

if.else8:                                         ; preds = %if.else
  %6 = load i8*, i8** %name.addr, align 4
  %call9 = call i32 @valid_array_reference(i8* %6, i32 0)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else8
  store i32 1, i32* %retval, align 4
  br label %return

if.else12:                                        ; preds = %if.else8
  %7 = load i8*, i8** %name.addr, align 4
  %call13 = call i32 @legal_identifier(i8* %7)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %if.else16

if.then15:                                        ; preds = %if.else12
  store i32 1, i32* %retval, align 4
  br label %return

if.else16:                                        ; preds = %if.else12
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else16, %if.then15, %if.then11, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind
define internal %struct.word_desc* @parameter_brace_expand_indir(i8* %name, i32 %var_is_special, i32 %quoted, i32* %quoted_dollar_atp, i32* %contains_dollar_at) #0 {
entry:
  %retval = alloca %struct.word_desc*, align 4
  %name.addr = alloca i8*, align 4
  %var_is_special.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %quoted_dollar_atp.addr = alloca i32*, align 4
  %contains_dollar_at.addr = alloca i32*, align 4
  %temp = alloca i8*, align 4
  %t = alloca i8*, align 4
  %w = alloca %struct.word_desc*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %name, i8** %name.addr, align 4
  store i32 %var_is_special, i32* %var_is_special.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32* %quoted_dollar_atp, i32** %quoted_dollar_atp.addr, align 4
  store i32* %contains_dollar_at, i32** %contains_dollar_at.addr, align 4
  %0 = load i32, i32* %var_is_special.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 4
  %call = call %struct.variable* @find_variable_last_nameref(i8* %1, i32 0)
  store %struct.variable* %call, %struct.variable** %v, align 4
  %tobool = icmp ne %struct.variable* %call, null
  br i1 %tobool, label %if.then, label %if.end11

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %2, i32 0, i32 5
  %3 = load i32, i32* %attributes, align 4
  %and = and i32 %3, 2048
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %if.then
  %4 = load %struct.variable*, %struct.variable** %v, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %4, i32 0, i32 1
  %5 = load i8*, i8** %value, align 4
  store i8* %5, i8** %t, align 4
  %tobool3 = icmp ne i8* %5, null
  br i1 %tobool3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %6 = load i8*, i8** %t, align 4
  %7 = load i8, i8* %6, align 1
  %conv = sext i8 %7 to i32
  %tobool5 = icmp ne i32 %conv, 0
  br i1 %tobool5, label %if.then6, label %if.end

if.then6:                                         ; preds = %land.lhs.true4
  %call7 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call7, %struct.word_desc** %w, align 4
  %8 = load i8*, i8** %t, align 4
  %call8 = call i32 @strlen(i8* %8)
  %add = add i32 1, %call8
  %call9 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6666)
  %9 = load i8*, i8** %t, align 4
  %call10 = call i8* @strcpy(i8* %call9, i8* %9)
  %10 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  store i8* %call10, i8** %word, align 4
  %11 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %11, i32 0, i32 1
  store i32 0, i32* %flags, align 4
  %12 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  store %struct.word_desc* %12, %struct.word_desc** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true2, %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %land.lhs.true, %entry
  %13 = load i8*, i8** %name.addr, align 4
  %14 = load i32, i32* %var_is_special.addr, align 4
  %15 = load i32, i32* %quoted.addr, align 4
  %call12 = call i8* @parameter_brace_find_indir(i8* %13, i32 %14, i32 %15, i32 0)
  store i8* %call12, i8** %t, align 4
  %16 = load i8*, i8** %t, align 4
  %17 = load i32, i32* %quoted.addr, align 4
  %18 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %19 = load i32*, i32** %contains_dollar_at.addr, align 4
  %call13 = call i32 @chk_atstar(i8* %16, i32 %17, i32* %18, i32* %19)
  %20 = load i8*, i8** %t, align 4
  %cmp14 = icmp eq i8* %20, null
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end11
  store %struct.word_desc* null, %struct.word_desc** %retval, align 4
  br label %return

if.end17:                                         ; preds = %if.end11
  %21 = load i8*, i8** %t, align 4
  %22 = load i8*, i8** %t, align 4
  %23 = load i8, i8* %22, align 1
  %conv18 = sext i8 %23 to i32
  %tobool19 = icmp ne i32 %conv18, 0
  br i1 %tobool19, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end17
  %24 = load i8*, i8** %t, align 4
  %25 = load i8, i8* %24, align 1
  %conv20 = sext i8 %25 to i32
  %cmp21 = icmp sge i32 %conv20, 48
  br i1 %cmp21, label %land.lhs.true23, label %lor.lhs.false

land.lhs.true23:                                  ; preds = %land.rhs
  %26 = load i8*, i8** %t, align 4
  %27 = load i8, i8* %26, align 1
  %conv24 = sext i8 %27 to i32
  %cmp25 = icmp sle i32 %conv24, 57
  br i1 %cmp25, label %land.lhs.true27, label %lor.lhs.false

land.lhs.true27:                                  ; preds = %land.lhs.true23
  %28 = load i8*, i8** %t, align 4
  %call28 = call i32 @all_digits(i8* %28)
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true27, %land.lhs.true23, %land.rhs
  %29 = load i8*, i8** %t, align 4
  %arrayidx = getelementptr inbounds i8, i8* %29, i32 1
  %30 = load i8, i8* %arrayidx, align 1
  %conv30 = sext i8 %30 to i32
  %cmp31 = icmp eq i32 %conv30, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.rhs

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %31 = load i8*, i8** %t, align 4
  %32 = load i8, i8* %31, align 1
  %idxprom = zext i8 %32 to i32
  %arrayidx34 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %33 = load i32, i32* %arrayidx34, align 4
  %and35 = and i32 %33, 2048
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true33, %lor.lhs.false
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true33, %land.lhs.true27
  %34 = phi i1 [ true, %land.lhs.true33 ], [ true, %land.lhs.true27 ], [ false, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.end17
  %35 = phi i1 [ false, %if.end17 ], [ %34, %lor.end ]
  %land.ext = zext i1 %35 to i32
  %call37 = call i32 @valid_brace_expansion_word(i8* %21, i32 %land.ext)
  %cmp38 = icmp eq i32 %call37, 0
  br i1 %cmp38, label %if.then40, label %if.end45

if.then40:                                        ; preds = %land.end
  %call41 = call i8* @libintl_gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0))
  %36 = load i8*, i8** %t, align 4
  call void (i8*, ...) @report_error(i8* %call41, i8* %36)
  %37 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6681)
  %call42 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call42, %struct.word_desc** %w, align 4
  %38 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word43 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %38, i32 0, i32 0
  store i8* @expand_param_error, i8** %word43, align 4
  %39 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %flags44 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %39, i32 0, i32 1
  store i32 0, i32* %flags44, align 4
  %40 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  store %struct.word_desc* %40, %struct.word_desc** %retval, align 4
  br label %return

if.end45:                                         ; preds = %land.end
  %41 = load i8*, i8** %t, align 4
  %42 = load i8*, i8** %t, align 4
  %43 = load i8, i8* %42, align 1
  %conv46 = sext i8 %43 to i32
  %tobool47 = icmp ne i32 %conv46, 0
  br i1 %tobool47, label %land.rhs48, label %land.end71

land.rhs48:                                       ; preds = %if.end45
  %44 = load i8*, i8** %t, align 4
  %45 = load i8, i8* %44, align 1
  %conv49 = sext i8 %45 to i32
  %cmp50 = icmp sge i32 %conv49, 48
  br i1 %cmp50, label %land.lhs.true52, label %lor.lhs.false59

land.lhs.true52:                                  ; preds = %land.rhs48
  %46 = load i8*, i8** %t, align 4
  %47 = load i8, i8* %46, align 1
  %conv53 = sext i8 %47 to i32
  %cmp54 = icmp sle i32 %conv53, 57
  br i1 %cmp54, label %land.lhs.true56, label %lor.lhs.false59

land.lhs.true56:                                  ; preds = %land.lhs.true52
  %48 = load i8*, i8** %t, align 4
  %call57 = call i32 @all_digits(i8* %48)
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %lor.end70, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %land.lhs.true56, %land.lhs.true52, %land.rhs48
  %49 = load i8*, i8** %t, align 4
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i32 1
  %50 = load i8, i8* %arrayidx60, align 1
  %conv61 = sext i8 %50 to i32
  %cmp62 = icmp eq i32 %conv61, 0
  br i1 %cmp62, label %land.lhs.true64, label %lor.rhs69

land.lhs.true64:                                  ; preds = %lor.lhs.false59
  %51 = load i8*, i8** %t, align 4
  %52 = load i8, i8* %51, align 1
  %idxprom65 = zext i8 %52 to i32
  %arrayidx66 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom65
  %53 = load i32, i32* %arrayidx66, align 4
  %and67 = and i32 %53, 2048
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %lor.end70, label %lor.rhs69

lor.rhs69:                                        ; preds = %land.lhs.true64, %lor.lhs.false59
  br label %lor.end70

lor.end70:                                        ; preds = %lor.rhs69, %land.lhs.true64, %land.lhs.true56
  %54 = phi i1 [ true, %land.lhs.true64 ], [ true, %land.lhs.true56 ], [ false, %lor.rhs69 ]
  br label %land.end71

land.end71:                                       ; preds = %lor.end70, %if.end45
  %55 = phi i1 [ false, %if.end45 ], [ %54, %lor.end70 ]
  %land.ext72 = zext i1 %55 to i32
  %56 = load i32, i32* %quoted.addr, align 4
  %call73 = call %struct.word_desc* @parameter_brace_expand_word(i8* %41, i32 %land.ext72, i32 %56, i32 0, i64* null)
  store %struct.word_desc* %call73, %struct.word_desc** %w, align 4
  %57 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6689)
  %58 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  store %struct.word_desc* %58, %struct.word_desc** %retval, align 4
  br label %return

return:                                           ; preds = %land.end71, %if.then40, %if.then16, %if.then6
  %59 = load %struct.word_desc*, %struct.word_desc** %retval, align 4
  ret %struct.word_desc* %59
}

; Function Attrs: noinline nounwind
define internal i32 @chk_atstar(i8* %name, i32 %quoted, i32* %quoted_dollar_atp, i32* %contains_dollar_at) #0 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %quoted_dollar_atp.addr = alloca i32*, align 4
  %contains_dollar_at.addr = alloca i32*, align 4
  %temp1 = alloca i8*, align 4
  store i8* %name, i8** %name.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32* %quoted_dollar_atp, i32** %quoted_dollar_atp.addr, align 4
  store i32* %contains_dollar_at, i32** %contains_dollar_at.addr, align 4
  %0 = load i8*, i8** %name.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool = icmp ne i32* %1, null
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %2 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 0, i32* %2, align 4
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %3 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool2 = icmp ne i32* %3, null
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %4 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 0, i32* %4, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end5:                                          ; preds = %entry
  %5 = load i8*, i8** %name.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %5, i32 0
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %cmp6 = icmp eq i32 %conv, 64
  br i1 %cmp6, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end5
  %7 = load i8*, i8** %name.addr, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 1
  %8 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %8 to i32
  %cmp10 = icmp eq i32 %conv9, 0
  br i1 %cmp10, label %if.then12, label %if.else

if.then12:                                        ; preds = %land.lhs.true
  %9 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %9, 3
  %tobool13 = icmp ne i32 %and, 0
  br i1 %tobool13, label %land.lhs.true14, label %if.end17

land.lhs.true14:                                  ; preds = %if.then12
  %10 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool15 = icmp ne i32* %10, null
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.lhs.true14
  %11 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 1, i32* %11, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %land.lhs.true14, %if.then12
  %12 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool18 = icmp ne i32* %12, null
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  %13 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %13, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end17
  store i32 1, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %land.lhs.true, %if.end5
  %14 = load i8*, i8** %name.addr, align 4
  %arrayidx21 = getelementptr inbounds i8, i8* %14, i32 0
  %15 = load i8, i8* %arrayidx21, align 1
  %conv22 = sext i8 %15 to i32
  %cmp23 = icmp eq i32 %conv22, 42
  br i1 %cmp23, label %land.lhs.true25, label %if.else37

land.lhs.true25:                                  ; preds = %if.else
  %16 = load i8*, i8** %name.addr, align 4
  %arrayidx26 = getelementptr inbounds i8, i8* %16, i32 1
  %17 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %17 to i32
  %cmp28 = icmp eq i32 %conv27, 0
  br i1 %cmp28, label %land.lhs.true30, label %if.else37

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %18 = load i32, i32* %quoted.addr, align 4
  %cmp31 = icmp eq i32 %18, 0
  br i1 %cmp31, label %if.then33, label %if.else37

if.then33:                                        ; preds = %land.lhs.true30
  %19 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool34 = icmp ne i32* %19, null
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.then33
  %20 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %20, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.then33
  store i32 1, i32* %retval, align 4
  br label %return

if.else37:                                        ; preds = %land.lhs.true30, %land.lhs.true25, %if.else
  %21 = load i8*, i8** %name.addr, align 4
  %call = call i32 @valid_array_reference(i8* %21, i32 0)
  %tobool38 = icmp ne i32 %call, 0
  br i1 %tobool38, label %if.then39, label %if.end82

if.then39:                                        ; preds = %if.else37
  %22 = load i8*, i8** %name.addr, align 4
  %call40 = call i8* @mbschr(i8* %22, i32 91)
  store i8* %call40, i8** %temp1, align 4
  %23 = load i8*, i8** %temp1, align 4
  %tobool41 = icmp ne i8* %23, null
  br i1 %tobool41, label %land.lhs.true42, label %if.end62

land.lhs.true42:                                  ; preds = %if.then39
  %24 = load i8*, i8** %temp1, align 4
  %arrayidx43 = getelementptr inbounds i8, i8* %24, i32 1
  %25 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %25 to i32
  %cmp45 = icmp eq i32 %conv44, 64
  br i1 %cmp45, label %land.lhs.true47, label %if.end62

land.lhs.true47:                                  ; preds = %land.lhs.true42
  %26 = load i8*, i8** %temp1, align 4
  %arrayidx48 = getelementptr inbounds i8, i8* %26, i32 2
  %27 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %27 to i32
  %cmp50 = icmp eq i32 %conv49, 93
  br i1 %cmp50, label %if.then52, label %if.end62

if.then52:                                        ; preds = %land.lhs.true47
  %28 = load i32, i32* %quoted.addr, align 4
  %and53 = and i32 %28, 3
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true55, label %if.end58

land.lhs.true55:                                  ; preds = %if.then52
  %29 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  %tobool56 = icmp ne i32* %29, null
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %land.lhs.true55
  %30 = load i32*, i32** %quoted_dollar_atp.addr, align 4
  store i32 1, i32* %30, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %land.lhs.true55, %if.then52
  %31 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool59 = icmp ne i32* %31, null
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end58
  %32 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %32, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.end58
  store i32 1, i32* %retval, align 4
  br label %return

if.end62:                                         ; preds = %land.lhs.true47, %land.lhs.true42, %if.then39
  %33 = load i8*, i8** %temp1, align 4
  %tobool63 = icmp ne i8* %33, null
  br i1 %tobool63, label %land.lhs.true64, label %if.end81

land.lhs.true64:                                  ; preds = %if.end62
  %34 = load i8*, i8** %temp1, align 4
  %arrayidx65 = getelementptr inbounds i8, i8* %34, i32 1
  %35 = load i8, i8* %arrayidx65, align 1
  %conv66 = sext i8 %35 to i32
  %cmp67 = icmp eq i32 %conv66, 42
  br i1 %cmp67, label %land.lhs.true69, label %if.end81

land.lhs.true69:                                  ; preds = %land.lhs.true64
  %36 = load i8*, i8** %temp1, align 4
  %arrayidx70 = getelementptr inbounds i8, i8* %36, i32 2
  %37 = load i8, i8* %arrayidx70, align 1
  %conv71 = sext i8 %37 to i32
  %cmp72 = icmp eq i32 %conv71, 93
  br i1 %cmp72, label %land.lhs.true74, label %if.end81

land.lhs.true74:                                  ; preds = %land.lhs.true69
  %38 = load i32, i32* %quoted.addr, align 4
  %cmp75 = icmp eq i32 %38, 0
  br i1 %cmp75, label %if.then77, label %if.end81

if.then77:                                        ; preds = %land.lhs.true74
  %39 = load i32*, i32** %contains_dollar_at.addr, align 4
  %tobool78 = icmp ne i32* %39, null
  br i1 %tobool78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.then77
  %40 = load i32*, i32** %contains_dollar_at.addr, align 4
  store i32 1, i32* %40, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %if.then77
  store i32 1, i32* %retval, align 4
  br label %return

if.end81:                                         ; preds = %land.lhs.true74, %land.lhs.true69, %land.lhs.true64, %if.end62
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.else37
  br label %if.end83

if.end83:                                         ; preds = %if.end82
  br label %if.end84

if.end84:                                         ; preds = %if.end83
  store i32 0, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end84, %if.end80, %if.end61, %if.end36, %if.end20, %if.end4
  %41 = load i32, i32* %retval, align 4
  ret i32 %41
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_brace_substring(i8* %varname, i8* %value, i32 %ind, i8* %substr, i32 %quoted, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %varname.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %ind.addr = alloca i32, align 4
  %substr.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %e1 = alloca i64, align 8
  %e2 = alloca i64, align 8
  %vtype = alloca i32, align 4
  %r = alloca i32, align 4
  %starsub = alloca i32, align 4
  %temp = alloca i8*, align 4
  %val = alloca i8*, align 4
  %tt = alloca i8*, align 4
  %oname = alloca i8*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %ind, i32* %ind.addr, align 4
  store i8* %substr, i8** %substr.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %value.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %varname.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 0
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp ne i32 %conv, 64
  br i1 %cmp1, label %land.lhs.true3, label %lor.lhs.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load i8*, i8** %varname.addr, align 4
  %arrayidx4 = getelementptr inbounds i8, i8* %3, i32 0
  %4 = load i8, i8* %arrayidx4, align 1
  %conv5 = sext i8 %4 to i32
  %cmp6 = icmp ne i32 %conv5, 42
  br i1 %cmp6, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true3, %land.lhs.true
  %5 = load i8*, i8** %varname.addr, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %5, i32 1
  %6 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %6 to i32
  %tobool = icmp ne i32 %conv9, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true3
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %entry
  %7 = load i8*, i8** @this_command_name, align 4
  store i8* %7, i8** %oname, align 4
  %8 = load i8*, i8** %varname.addr, align 4
  store i8* %8, i8** @this_command_name, align 4
  %9 = load i8*, i8** %varname.addr, align 4
  %10 = load i8*, i8** %value.addr, align 4
  %11 = load i32, i32* %ind.addr, align 4
  %conv10 = sext i32 %11 to i64
  %12 = load i32, i32* %quoted.addr, align 4
  %13 = load i32, i32* %flags.addr, align 4
  %call = call i32 @get_var_and_type(i8* %9, i8* %10, i64 %conv10, i32 %12, i32 %13, %struct.variable** %v, i8** %val)
  store i32 %call, i32* %vtype, align 4
  %14 = load i32, i32* %vtype, align 4
  %cmp11 = icmp eq i32 %14, -1
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  %15 = load i8*, i8** %oname, align 4
  store i8* %15, i8** @this_command_name, align 4
  store i8* null, i8** %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.end
  %16 = load i32, i32* %vtype, align 4
  %and = and i32 %16, 128
  store i32 %and, i32* %starsub, align 4
  %17 = load i32, i32* %vtype, align 4
  %and15 = and i32 %17, -129
  store i32 %and15, i32* %vtype, align 4
  %18 = load %struct.variable*, %struct.variable** %v, align 4
  %19 = load i8*, i8** %val, align 4
  %20 = load i8*, i8** %substr.addr, align 4
  %21 = load i32, i32* %vtype, align 4
  %call16 = call i32 @verify_substring_values(%struct.variable* %18, i8* %19, i8* %20, i32 %21, i64* %e1, i64* %e2)
  store i32 %call16, i32* %r, align 4
  %22 = load i8*, i8** %oname, align 4
  store i8* %22, i8** @this_command_name, align 4
  %23 = load i32, i32* %r, align 4
  %cmp17 = icmp sle i32 %23, 0
  br i1 %cmp17, label %if.then19, label %if.end29

if.then19:                                        ; preds = %if.end14
  %24 = load i32, i32* %vtype, align 4
  %cmp20 = icmp eq i32 %24, 0
  br i1 %cmp20, label %if.then22, label %if.end26

if.then22:                                        ; preds = %if.then19
  br label %do.body

do.body:                                          ; preds = %if.then22
  %25 = load i8*, i8** %val, align 4
  %tobool23 = icmp ne i8* %25, null
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %do.body
  %26 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7328)
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end25
  br label %if.end26

if.end26:                                         ; preds = %do.end, %if.then19
  %27 = load i32, i32* %r, align 4
  %cmp27 = icmp eq i32 %27, 0
  %cond = select i1 %cmp27, i8* @expand_param_error, i8* null
  store i8* %cond, i8** %retval, align 4
  br label %return

if.end29:                                         ; preds = %if.end14
  %28 = load i32, i32* %vtype, align 4
  switch i32 %28, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb
    i32 1, label %sw.bb64
    i32 2, label %sw.bb85
  ]

sw.bb:                                            ; preds = %if.end29, %if.end29
  %call30 = call i32 @__ctype_get_mb_cur_max()
  %cmp31 = icmp ugt i32 %call30, 1
  br i1 %cmp31, label %if.then33, label %if.else

if.then33:                                        ; preds = %sw.bb
  %29 = load i8*, i8** %val, align 4
  %30 = load i64, i64* %e1, align 8
  %conv34 = trunc i64 %30 to i32
  %31 = load i64, i64* %e2, align 8
  %conv35 = trunc i64 %31 to i32
  %call36 = call i8* @mb_substring(i8* %29, i32 %conv34, i32 %conv35)
  store i8* %call36, i8** %tt, align 4
  br label %if.end40

if.else:                                          ; preds = %sw.bb
  %32 = load i8*, i8** %val, align 4
  %33 = load i64, i64* %e1, align 8
  %conv37 = trunc i64 %33 to i32
  %34 = load i64, i64* %e2, align 8
  %conv38 = trunc i64 %34 to i32
  %call39 = call i8* @substring(i8* %32, i32 %conv37, i32 %conv38)
  store i8* %call39, i8** %tt, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then33
  %35 = load i32, i32* %vtype, align 4
  %cmp41 = icmp eq i32 %35, 0
  br i1 %cmp41, label %if.then43, label %if.end49

if.then43:                                        ; preds = %if.end40
  br label %do.body44

do.body44:                                        ; preds = %if.then43
  %36 = load i8*, i8** %val, align 4
  %tobool45 = icmp ne i8* %36, null
  br i1 %tobool45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %do.body44
  %37 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7344)
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %do.body44
  br label %do.end48

do.end48:                                         ; preds = %if.end47
  br label %if.end49

if.end49:                                         ; preds = %do.end48, %if.end40
  %38 = load i32, i32* %quoted.addr, align 4
  %and50 = and i32 %38, 3
  %tobool51 = icmp ne i32 %and50, 0
  br i1 %tobool51, label %if.then52, label %if.else54

if.then52:                                        ; preds = %if.end49
  %39 = load i8*, i8** %tt, align 4
  %call53 = call i8* @quote_string(i8* %39)
  store i8* %call53, i8** %temp, align 4
  br label %if.end58

if.else54:                                        ; preds = %if.end49
  %40 = load i8*, i8** %tt, align 4
  %tobool55 = icmp ne i8* %40, null
  br i1 %tobool55, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else54
  %41 = load i8*, i8** %tt, align 4
  %call56 = call i8* @quote_escapes(i8* %41)
  br label %cond.end

cond.false:                                       ; preds = %if.else54
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond57 = phi i8* [ %call56, %cond.true ], [ null, %cond.false ]
  store i8* %cond57, i8** %temp, align 4
  br label %if.end58

if.end58:                                         ; preds = %cond.end, %if.then52
  br label %do.body59

do.body59:                                        ; preds = %if.end58
  %42 = load i8*, i8** %tt, align 4
  %tobool60 = icmp ne i8* %42, null
  br i1 %tobool60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %do.body59
  %43 = load i8*, i8** %tt, align 4
  call void @sh_xfree(i8* %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7349)
  br label %if.end62

if.end62:                                         ; preds = %if.then61, %do.body59
  br label %do.end63

do.end63:                                         ; preds = %if.end62
  br label %sw.epilog

sw.bb64:                                          ; preds = %if.end29
  %44 = load i8*, i8** %varname.addr, align 4
  %45 = load i64, i64* %e1, align 8
  %conv65 = trunc i64 %45 to i32
  %46 = load i64, i64* %e2, align 8
  %conv66 = trunc i64 %46 to i32
  %47 = load i32, i32* %quoted.addr, align 4
  %call67 = call i8* @pos_params(i8* %44, i32 %conv65, i32 %conv66, i32 %47)
  store i8* %call67, i8** %tt, align 4
  %48 = load i32, i32* %quoted.addr, align 4
  %and68 = and i32 %48, 3
  %cmp69 = icmp eq i32 %and68, 0
  br i1 %cmp69, label %if.then71, label %if.else83

if.then71:                                        ; preds = %sw.bb64
  %49 = load i8*, i8** %tt, align 4
  %tobool72 = icmp ne i8* %49, null
  br i1 %tobool72, label %cond.true73, label %cond.false75

cond.true73:                                      ; preds = %if.then71
  %50 = load i8*, i8** %tt, align 4
  %call74 = call i8* @quote_escapes(i8* %50)
  br label %cond.end76

cond.false75:                                     ; preds = %if.then71
  br label %cond.end76

cond.end76:                                       ; preds = %cond.false75, %cond.true73
  %cond77 = phi i8* [ %call74, %cond.true73 ], [ null, %cond.false75 ]
  store i8* %cond77, i8** %temp, align 4
  br label %do.body78

do.body78:                                        ; preds = %cond.end76
  %51 = load i8*, i8** %tt, align 4
  %tobool79 = icmp ne i8* %51, null
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %do.body78
  %52 = load i8*, i8** %tt, align 4
  call void @sh_xfree(i8* %52, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7356)
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %do.body78
  br label %do.end82

do.end82:                                         ; preds = %if.end81
  br label %if.end84

if.else83:                                        ; preds = %sw.bb64
  %53 = load i8*, i8** %tt, align 4
  store i8* %53, i8** %temp, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %do.end82
  br label %sw.epilog

sw.bb85:                                          ; preds = %if.end29
  %54 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %54, i32 0, i32 5
  %55 = load i32, i32* %attributes, align 4
  %and86 = and i32 %55, 64
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %if.else91

if.then88:                                        ; preds = %sw.bb85
  %56 = load %struct.variable*, %struct.variable** %v, align 4
  %value89 = getelementptr inbounds %struct.variable, %struct.variable* %56, i32 0, i32 1
  %57 = load i8*, i8** %value89, align 4
  %58 = bitcast i8* %57 to %struct.hash_table*
  %59 = load i64, i64* %e1, align 8
  %60 = load i64, i64* %e2, align 8
  %61 = load i32, i32* %starsub, align 4
  %62 = load i32, i32* %quoted.addr, align 4
  %call90 = call i8* @assoc_subrange(%struct.hash_table* %58, i64 %59, i64 %60, i32 %61, i32 %62)
  store i8* %call90, i8** %temp, align 4
  br label %if.end94

if.else91:                                        ; preds = %sw.bb85
  %63 = load %struct.variable*, %struct.variable** %v, align 4
  %value92 = getelementptr inbounds %struct.variable, %struct.variable* %63, i32 0, i32 1
  %64 = load i8*, i8** %value92, align 4
  %65 = bitcast i8* %64 to %struct.array*
  %66 = load i64, i64* %e1, align 8
  %67 = load i64, i64* %e2, align 8
  %68 = load i32, i32* %starsub, align 4
  %69 = load i32, i32* %quoted.addr, align 4
  %call93 = call i8* @array_subrange(%struct.array* %65, i64 %66, i64 %67, i32 %68, i32 %69)
  store i8* %call93, i8** %temp, align 4
  br label %if.end94

if.end94:                                         ; preds = %if.else91, %if.then88
  br label %sw.epilog

sw.default:                                       ; preds = %if.end29
  store i8* null, i8** %temp, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end94, %if.end84, %do.end63
  %70 = load i8*, i8** %temp, align 4
  store i8* %70, i8** %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.end26, %if.then13, %if.then
  %71 = load i8*, i8** %retval, align 4
  ret i8* %71
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_brace_patsub(i8* %varname, i8* %value, i32 %ind, i8* %patsub, i32 %quoted, i32 %pflags, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %varname.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %ind.addr = alloca i32, align 4
  %patsub.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %pflags.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %vtype = alloca i32, align 4
  %mflags = alloca i32, align 4
  %starsub = alloca i32, align 4
  %delim = alloca i32, align 4
  %val = alloca i8*, align 4
  %temp = alloca i8*, align 4
  %pat = alloca i8*, align 4
  %rep = alloca i8*, align 4
  %p = alloca i8*, align 4
  %lpatsub = alloca i8*, align 4
  %tt = alloca i8*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %ind, i32* %ind.addr, align 4
  store i8* %patsub, i8** %patsub.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %pflags, i32* %pflags.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %value.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %varname.addr, align 4
  store i8* %1, i8** @this_command_name, align 4
  %2 = load i8*, i8** %varname.addr, align 4
  %3 = load i8*, i8** %value.addr, align 4
  %4 = load i32, i32* %ind.addr, align 4
  %conv = sext i32 %4 to i64
  %5 = load i32, i32* %quoted.addr, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %call = call i32 @get_var_and_type(i8* %2, i8* %3, i64 %conv, i32 %5, i32 %6, %struct.variable** %v, i8** %val)
  store i32 %call, i32* %vtype, align 4
  %7 = load i32, i32* %vtype, align 4
  %cmp1 = icmp eq i32 %7, -1
  br i1 %cmp1, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %vtype, align 4
  %and = and i32 %8, 128
  store i32 %and, i32* %starsub, align 4
  %9 = load i32, i32* %vtype, align 4
  %and5 = and i32 %9, -129
  store i32 %and5, i32* %vtype, align 4
  store i32 0, i32* %mflags, align 4
  %10 = load i8*, i8** %patsub.addr, align 4
  %11 = load i8, i8* %10, align 1
  %conv6 = sext i8 %11 to i32
  %cmp7 = icmp eq i32 %conv6, 47
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end4
  %12 = load i32, i32* %mflags, align 4
  %or = or i32 %12, 16
  store i32 %or, i32* %mflags, align 4
  %13 = load i8*, i8** %patsub.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %patsub.addr, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end4
  %14 = load i8*, i8** %patsub.addr, align 4
  %call11 = call i32 @strlen(i8* %14)
  %add = add i32 1, %call11
  %call12 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7610)
  %15 = load i8*, i8** %patsub.addr, align 4
  %call13 = call i8* @strcpy(i8* %call12, i8* %15)
  store i8* %call13, i8** %lpatsub, align 4
  %16 = load i32, i32* %quoted.addr, align 4
  %and14 = and i32 %16, 3
  %tobool = icmp ne i32 %and14, 0
  br i1 %tobool, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end10
  %17 = load i32, i32* %mflags, align 4
  %or16 = or i32 %17, 32
  store i32 %or16, i32* %mflags, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end10
  %18 = load i32, i32* %starsub, align 4
  %tobool18 = icmp ne i32 %18, 0
  br i1 %tobool18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end17
  %19 = load i32, i32* %mflags, align 4
  %or20 = or i32 %19, 128
  store i32 %or20, i32* %mflags, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17
  %20 = load i32, i32* %pflags.addr, align 4
  %and22 = and i32 %20, 8
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end21
  %21 = load i32, i32* %mflags, align 4
  %or25 = or i32 %21, 64
  store i32 %or25, i32* %mflags, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end21
  %22 = load i8*, i8** %lpatsub, align 4
  %23 = load i8*, i8** %patsub.addr, align 4
  %24 = load i8, i8* %23, align 1
  %conv27 = sext i8 %24 to i32
  %cmp28 = icmp eq i32 %conv27, 47
  %cond = select i1 %cmp28, i32 1, i32 0
  %call30 = call i32 @skip_to_delim(i8* %22, i32 %cond, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i32 0)
  store i32 %call30, i32* %delim, align 4
  %25 = load i8*, i8** %lpatsub, align 4
  %26 = load i32, i32* %delim, align 4
  %arrayidx = getelementptr inbounds i8, i8* %25, i32 %26
  %27 = load i8, i8* %arrayidx, align 1
  %conv31 = sext i8 %27 to i32
  %cmp32 = icmp eq i32 %conv31, 47
  br i1 %cmp32, label %if.then34, label %if.else

if.then34:                                        ; preds = %if.end26
  %28 = load i8*, i8** %lpatsub, align 4
  %29 = load i32, i32* %delim, align 4
  %arrayidx35 = getelementptr inbounds i8, i8* %28, i32 %29
  store i8 0, i8* %arrayidx35, align 1
  %30 = load i8*, i8** %lpatsub, align 4
  %31 = load i32, i32* %delim, align 4
  %add.ptr = getelementptr inbounds i8, i8* %30, i32 %31
  %add.ptr36 = getelementptr inbounds i8, i8* %add.ptr, i32 1
  store i8* %add.ptr36, i8** %rep, align 4
  br label %if.end37

if.else:                                          ; preds = %if.end26
  store i8* null, i8** %rep, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then34
  %32 = load i8*, i8** %rep, align 4
  %tobool38 = icmp ne i8* %32, null
  br i1 %tobool38, label %land.lhs.true, label %if.end43

land.lhs.true:                                    ; preds = %if.end37
  %33 = load i8*, i8** %rep, align 4
  %34 = load i8, i8* %33, align 1
  %conv39 = sext i8 %34 to i32
  %cmp40 = icmp eq i32 %conv39, 0
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %land.lhs.true
  store i8* null, i8** %rep, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %land.lhs.true, %if.end37
  %35 = load i8*, i8** %lpatsub, align 4
  %36 = load i32, i32* %quoted.addr, align 4
  %call44 = call i8* @getpattern(i8* %35, i32 %36, i32 1)
  store i8* %call44, i8** %pat, align 4
  %37 = load i8*, i8** %rep, align 4
  %tobool45 = icmp ne i8* %37, null
  br i1 %tobool45, label %if.then46, label %if.end62

if.then46:                                        ; preds = %if.end43
  %38 = load i32, i32* @shell_compatibility_level, align 4
  %cmp47 = icmp sgt i32 %38, 42
  br i1 %cmp47, label %if.then49, label %if.else52

if.then49:                                        ; preds = %if.then46
  %39 = load i8*, i8** %rep, align 4
  %40 = load i32, i32* %quoted.addr, align 4
  %and50 = and i32 %40, -4
  %call51 = call i8* @expand_string_if_necessary(i8* %39, i32 %and50, %struct.word_list* (i8*, i32)* @expand_string_unsplit)
  store i8* %call51, i8** %rep, align 4
  br label %if.end61

if.else52:                                        ; preds = %if.then46
  %41 = load i32, i32* %mflags, align 4
  %and53 = and i32 %41, 32
  %cmp54 = icmp eq i32 %and53, 0
  br i1 %cmp54, label %if.then56, label %if.else58

if.then56:                                        ; preds = %if.else52
  %42 = load i8*, i8** %rep, align 4
  %43 = load i32, i32* %quoted.addr, align 4
  %call57 = call i8* @expand_string_if_necessary(i8* %42, i32 %43, %struct.word_list* (i8*, i32)* @expand_string_unsplit)
  store i8* %call57, i8** %rep, align 4
  br label %if.end60

if.else58:                                        ; preds = %if.else52
  %44 = load i8*, i8** %rep, align 4
  %45 = load i32, i32* %quoted.addr, align 4
  %call59 = call i8* @expand_string_to_string_internal(i8* %44, i32 %45, %struct.word_list* (i8*, i32)* @expand_string_unsplit)
  store i8* %call59, i8** %rep, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then56
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then49
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end43
  %46 = load i8*, i8** %pat, align 4
  store i8* %46, i8** %p, align 4
  %47 = load i32, i32* %mflags, align 4
  %and63 = and i32 %47, 16
  %tobool64 = icmp ne i32 %and63, 0
  br i1 %tobool64, label %if.then65, label %if.else66

if.then65:                                        ; preds = %if.end62
  %48 = load i32, i32* %mflags, align 4
  store i32 %48, i32* %mflags, align 4
  br label %if.end89

if.else66:                                        ; preds = %if.end62
  %49 = load i8*, i8** %pat, align 4
  %tobool67 = icmp ne i8* %49, null
  br i1 %tobool67, label %land.lhs.true68, label %if.else76

land.lhs.true68:                                  ; preds = %if.else66
  %50 = load i8*, i8** %pat, align 4
  %arrayidx69 = getelementptr inbounds i8, i8* %50, i32 0
  %51 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %51 to i32
  %cmp71 = icmp eq i32 %conv70, 35
  br i1 %cmp71, label %if.then73, label %if.else76

if.then73:                                        ; preds = %land.lhs.true68
  %52 = load i32, i32* %mflags, align 4
  %or74 = or i32 %52, 1
  store i32 %or74, i32* %mflags, align 4
  %53 = load i8*, i8** %p, align 4
  %incdec.ptr75 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %incdec.ptr75, i8** %p, align 4
  br label %if.end88

if.else76:                                        ; preds = %land.lhs.true68, %if.else66
  %54 = load i8*, i8** %pat, align 4
  %tobool77 = icmp ne i8* %54, null
  br i1 %tobool77, label %land.lhs.true78, label %if.else86

land.lhs.true78:                                  ; preds = %if.else76
  %55 = load i8*, i8** %pat, align 4
  %arrayidx79 = getelementptr inbounds i8, i8* %55, i32 0
  %56 = load i8, i8* %arrayidx79, align 1
  %conv80 = sext i8 %56 to i32
  %cmp81 = icmp eq i32 %conv80, 37
  br i1 %cmp81, label %if.then83, label %if.else86

if.then83:                                        ; preds = %land.lhs.true78
  %57 = load i32, i32* %mflags, align 4
  %or84 = or i32 %57, 2
  store i32 %or84, i32* %mflags, align 4
  %58 = load i8*, i8** %p, align 4
  %incdec.ptr85 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %incdec.ptr85, i8** %p, align 4
  br label %if.end87

if.else86:                                        ; preds = %land.lhs.true78, %if.else76
  %59 = load i32, i32* %mflags, align 4
  store i32 %59, i32* %mflags, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.then83
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then73
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then65
  %60 = load i32, i32* %vtype, align 4
  switch i32 %60, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb
    i32 1, label %sw.bb106
    i32 2, label %sw.bb116
  ]

sw.bb:                                            ; preds = %if.end89, %if.end89
  %61 = load i8*, i8** %val, align 4
  %62 = load i8*, i8** %p, align 4
  %63 = load i8*, i8** %rep, align 4
  %64 = load i32, i32* %mflags, align 4
  %call90 = call i8* @pat_subst(i8* %61, i8* %62, i8* %63, i32 %64)
  store i8* %call90, i8** %temp, align 4
  %65 = load i32, i32* %vtype, align 4
  %cmp91 = icmp eq i32 %65, 0
  br i1 %cmp91, label %if.then93, label %if.end97

if.then93:                                        ; preds = %sw.bb
  br label %do.body

do.body:                                          ; preds = %if.then93
  %66 = load i8*, i8** %val, align 4
  %tobool94 = icmp ne i8* %66, null
  br i1 %tobool94, label %if.then95, label %if.end96

if.then95:                                        ; preds = %do.body
  %67 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7691)
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end96
  br label %if.end97

if.end97:                                         ; preds = %do.end, %sw.bb
  %68 = load i8*, i8** %temp, align 4
  %tobool98 = icmp ne i8* %68, null
  br i1 %tobool98, label %if.then99, label %if.end105

if.then99:                                        ; preds = %if.end97
  %69 = load i32, i32* %mflags, align 4
  %and100 = and i32 %69, 32
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then99
  %70 = load i8*, i8** %temp, align 4
  %call102 = call i8* @quote_string(i8* %70)
  br label %cond.end

cond.false:                                       ; preds = %if.then99
  %71 = load i8*, i8** %temp, align 4
  %call103 = call i8* @quote_escapes(i8* %71)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond104 = phi i8* [ %call102, %cond.true ], [ %call103, %cond.false ]
  store i8* %cond104, i8** %tt, align 4
  %72 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7695)
  %73 = load i8*, i8** %tt, align 4
  store i8* %73, i8** %temp, align 4
  br label %if.end105

if.end105:                                        ; preds = %cond.end, %if.end97
  br label %sw.epilog

sw.bb106:                                         ; preds = %if.end89
  %74 = load i8*, i8** %val, align 4
  %75 = load i8*, i8** %p, align 4
  %76 = load i8*, i8** %rep, align 4
  %77 = load i32, i32* %mflags, align 4
  %call107 = call i8* @pos_params_pat_subst(i8* %74, i8* %75, i8* %76, i32 %77)
  store i8* %call107, i8** %temp, align 4
  %78 = load i8*, i8** %temp, align 4
  %tobool108 = icmp ne i8* %78, null
  br i1 %tobool108, label %land.lhs.true109, label %if.end115

land.lhs.true109:                                 ; preds = %sw.bb106
  %79 = load i32, i32* %mflags, align 4
  %and110 = and i32 %79, 32
  %cmp111 = icmp eq i32 %and110, 0
  br i1 %cmp111, label %if.then113, label %if.end115

if.then113:                                       ; preds = %land.lhs.true109
  %80 = load i8*, i8** %temp, align 4
  %call114 = call i8* @quote_escapes(i8* %80)
  store i8* %call114, i8** %tt, align 4
  %81 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %81, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7704)
  %82 = load i8*, i8** %tt, align 4
  store i8* %82, i8** %temp, align 4
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %land.lhs.true109, %sw.bb106
  br label %sw.epilog

sw.bb116:                                         ; preds = %if.end89
  %83 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %83, i32 0, i32 5
  %84 = load i32, i32* %attributes, align 4
  %and117 = and i32 %84, 64
  %tobool118 = icmp ne i32 %and117, 0
  br i1 %tobool118, label %cond.true119, label %cond.false122

cond.true119:                                     ; preds = %sw.bb116
  %85 = load %struct.variable*, %struct.variable** %v, align 4
  %value120 = getelementptr inbounds %struct.variable, %struct.variable* %85, i32 0, i32 1
  %86 = load i8*, i8** %value120, align 4
  %87 = bitcast i8* %86 to %struct.hash_table*
  %88 = load i8*, i8** %p, align 4
  %89 = load i8*, i8** %rep, align 4
  %90 = load i32, i32* %mflags, align 4
  %call121 = call i8* @assoc_patsub(%struct.hash_table* %87, i8* %88, i8* %89, i32 %90)
  br label %cond.end125

cond.false122:                                    ; preds = %sw.bb116
  %91 = load %struct.variable*, %struct.variable** %v, align 4
  %value123 = getelementptr inbounds %struct.variable, %struct.variable* %91, i32 0, i32 1
  %92 = load i8*, i8** %value123, align 4
  %93 = bitcast i8* %92 to %struct.array*
  %94 = load i8*, i8** %p, align 4
  %95 = load i8*, i8** %rep, align 4
  %96 = load i32, i32* %mflags, align 4
  %call124 = call i8* @array_patsub(%struct.array* %93, i8* %94, i8* %95, i32 %96)
  br label %cond.end125

cond.end125:                                      ; preds = %cond.false122, %cond.true119
  %cond126 = phi i8* [ %call121, %cond.true119 ], [ %call124, %cond.false122 ]
  store i8* %cond126, i8** %temp, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end89, %cond.end125, %if.end115, %if.end105
  br label %do.body127

do.body127:                                       ; preds = %sw.epilog
  %97 = load i8*, i8** %pat, align 4
  %tobool128 = icmp ne i8* %97, null
  br i1 %tobool128, label %if.then129, label %if.end130

if.then129:                                       ; preds = %do.body127
  %98 = load i8*, i8** %pat, align 4
  call void @sh_xfree(i8* %98, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7719)
  br label %if.end130

if.end130:                                        ; preds = %if.then129, %do.body127
  br label %do.end131

do.end131:                                        ; preds = %if.end130
  br label %do.body132

do.body132:                                       ; preds = %do.end131
  %99 = load i8*, i8** %rep, align 4
  %tobool133 = icmp ne i8* %99, null
  br i1 %tobool133, label %if.then134, label %if.end135

if.then134:                                       ; preds = %do.body132
  %100 = load i8*, i8** %rep, align 4
  call void @sh_xfree(i8* %100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7720)
  br label %if.end135

if.end135:                                        ; preds = %if.then134, %do.body132
  br label %do.end136

do.end136:                                        ; preds = %if.end135
  %101 = load i8*, i8** %lpatsub, align 4
  call void @sh_xfree(i8* %101, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7721)
  %102 = load i8*, i8** %temp, align 4
  store i8* %102, i8** %retval, align 4
  br label %return

return:                                           ; preds = %do.end136, %if.then3, %if.then
  %103 = load i8*, i8** %retval, align 4
  ret i8* %103
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_brace_casemod(i8* %varname, i8* %value, i32 %ind, i32 %modspec, i8* %patspec, i32 %quoted, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %varname.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %ind.addr = alloca i32, align 4
  %modspec.addr = alloca i32, align 4
  %patspec.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %vtype = alloca i32, align 4
  %starsub = alloca i32, align 4
  %modop = alloca i32, align 4
  %mflags = alloca i32, align 4
  %x = alloca i32, align 4
  %val = alloca i8*, align 4
  %temp = alloca i8*, align 4
  %pat = alloca i8*, align 4
  %p = alloca i8*, align 4
  %lpat = alloca i8*, align 4
  %tt = alloca i8*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %ind, i32* %ind.addr, align 4
  store i32 %modspec, i32* %modspec.addr, align 4
  store i8* %patspec, i8** %patspec.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %value.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %varname.addr, align 4
  store i8* %1, i8** @this_command_name, align 4
  %2 = load i8*, i8** %varname.addr, align 4
  %3 = load i8*, i8** %value.addr, align 4
  %4 = load i32, i32* %ind.addr, align 4
  %conv = sext i32 %4 to i64
  %5 = load i32, i32* %quoted.addr, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %call = call i32 @get_var_and_type(i8* %2, i8* %3, i64 %conv, i32 %5, i32 %6, %struct.variable** %v, i8** %val)
  store i32 %call, i32* %vtype, align 4
  %7 = load i32, i32* %vtype, align 4
  %cmp1 = icmp eq i32 %7, -1
  br i1 %cmp1, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %vtype, align 4
  %and = and i32 %8, 128
  store i32 %and, i32* %starsub, align 4
  %9 = load i32, i32* %vtype, align 4
  %and5 = and i32 %9, -129
  store i32 %and5, i32* %vtype, align 4
  store i32 0, i32* %modop, align 4
  store i32 0, i32* %mflags, align 4
  %10 = load i32, i32* %quoted.addr, align 4
  %and6 = and i32 %10, 3
  %tobool = icmp ne i32 %and6, 0
  br i1 %tobool, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end4
  %11 = load i32, i32* %mflags, align 4
  %or = or i32 %11, 32
  store i32 %or, i32* %mflags, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end4
  %12 = load i32, i32* %starsub, align 4
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  %13 = load i32, i32* %mflags, align 4
  %or11 = or i32 %13, 128
  store i32 %or11, i32* %mflags, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8
  %14 = load i8*, i8** %patspec.addr, align 4
  store i8* %14, i8** %p, align 4
  %15 = load i32, i32* %modspec.addr, align 4
  %cmp13 = icmp eq i32 %15, 94
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end12
  %16 = load i8*, i8** %p, align 4
  %tobool16 = icmp ne i8* %16, null
  br i1 %tobool16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then15
  %17 = load i8*, i8** %p, align 4
  %arrayidx = getelementptr inbounds i8, i8* %17, i32 0
  %18 = load i8, i8* %arrayidx, align 1
  %conv17 = sext i8 %18 to i32
  %19 = load i32, i32* %modspec.addr, align 4
  %cmp18 = icmp eq i32 %conv17, %19
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then15
  %20 = phi i1 [ false, %if.then15 ], [ %cmp18, %land.rhs ]
  %land.ext = zext i1 %20 to i32
  store i32 %land.ext, i32* %x, align 4
  %21 = load i32, i32* %x, align 4
  %tobool20 = icmp ne i32 %21, 0
  %cond = select i1 %tobool20, i32 2, i32 64
  store i32 %cond, i32* %modop, align 4
  %22 = load i32, i32* %x, align 4
  %23 = load i8*, i8** %p, align 4
  %add.ptr = getelementptr inbounds i8, i8* %23, i32 %22
  store i8* %add.ptr, i8** %p, align 4
  br label %if.end52

if.else:                                          ; preds = %if.end12
  %24 = load i32, i32* %modspec.addr, align 4
  %cmp21 = icmp eq i32 %24, 44
  br i1 %cmp21, label %if.then23, label %if.else35

if.then23:                                        ; preds = %if.else
  %25 = load i8*, i8** %p, align 4
  %tobool24 = icmp ne i8* %25, null
  br i1 %tobool24, label %land.rhs25, label %land.end30

land.rhs25:                                       ; preds = %if.then23
  %26 = load i8*, i8** %p, align 4
  %arrayidx26 = getelementptr inbounds i8, i8* %26, i32 0
  %27 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %27 to i32
  %28 = load i32, i32* %modspec.addr, align 4
  %cmp28 = icmp eq i32 %conv27, %28
  br label %land.end30

land.end30:                                       ; preds = %land.rhs25, %if.then23
  %29 = phi i1 [ false, %if.then23 ], [ %cmp28, %land.rhs25 ]
  %land.ext31 = zext i1 %29 to i32
  store i32 %land.ext31, i32* %x, align 4
  %30 = load i32, i32* %x, align 4
  %tobool32 = icmp ne i32 %30, 0
  %cond33 = select i1 %tobool32, i32 1, i32 128
  store i32 %cond33, i32* %modop, align 4
  %31 = load i32, i32* %x, align 4
  %32 = load i8*, i8** %p, align 4
  %add.ptr34 = getelementptr inbounds i8, i8* %32, i32 %31
  store i8* %add.ptr34, i8** %p, align 4
  br label %if.end51

if.else35:                                        ; preds = %if.else
  %33 = load i32, i32* %modspec.addr, align 4
  %cmp36 = icmp eq i32 %33, 126
  br i1 %cmp36, label %if.then38, label %if.end50

if.then38:                                        ; preds = %if.else35
  %34 = load i8*, i8** %p, align 4
  %tobool39 = icmp ne i8* %34, null
  br i1 %tobool39, label %land.rhs40, label %land.end45

land.rhs40:                                       ; preds = %if.then38
  %35 = load i8*, i8** %p, align 4
  %arrayidx41 = getelementptr inbounds i8, i8* %35, i32 0
  %36 = load i8, i8* %arrayidx41, align 1
  %conv42 = sext i8 %36 to i32
  %37 = load i32, i32* %modspec.addr, align 4
  %cmp43 = icmp eq i32 %conv42, %37
  br label %land.end45

land.end45:                                       ; preds = %land.rhs40, %if.then38
  %38 = phi i1 [ false, %if.then38 ], [ %cmp43, %land.rhs40 ]
  %land.ext46 = zext i1 %38 to i32
  store i32 %land.ext46, i32* %x, align 4
  %39 = load i32, i32* %x, align 4
  %tobool47 = icmp ne i32 %39, 0
  %cond48 = select i1 %tobool47, i32 32, i32 16
  store i32 %cond48, i32* %modop, align 4
  %40 = load i32, i32* %x, align 4
  %41 = load i8*, i8** %p, align 4
  %add.ptr49 = getelementptr inbounds i8, i8* %41, i32 %40
  store i8* %add.ptr49, i8** %p, align 4
  br label %if.end50

if.end50:                                         ; preds = %land.end45, %if.else35
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %land.end30
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %land.end
  %42 = load i8*, i8** %p, align 4
  %tobool53 = icmp ne i8* %42, null
  br i1 %tobool53, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end52
  %43 = load i8*, i8** %p, align 4
  %call54 = call i32 @strlen(i8* %43)
  %add = add i32 1, %call54
  %call55 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7821)
  %44 = load i8*, i8** %p, align 4
  %call56 = call i8* @strcpy(i8* %call55, i8* %44)
  br label %cond.end

cond.false:                                       ; preds = %if.end52
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond57 = phi i8* [ %call56, %cond.true ], [ null, %cond.false ]
  store i8* %cond57, i8** %lpat, align 4
  %45 = load i8*, i8** %lpat, align 4
  %tobool58 = icmp ne i8* %45, null
  br i1 %tobool58, label %cond.true59, label %cond.false61

cond.true59:                                      ; preds = %cond.end
  %46 = load i8*, i8** %lpat, align 4
  %47 = load i32, i32* %quoted.addr, align 4
  %call60 = call i8* @getpattern(i8* %46, i32 %47, i32 1)
  br label %cond.end62

cond.false61:                                     ; preds = %cond.end
  br label %cond.end62

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi i8* [ %call60, %cond.true59 ], [ null, %cond.false61 ]
  store i8* %cond63, i8** %pat, align 4
  %48 = load i32, i32* %vtype, align 4
  switch i32 %48, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb
    i32 1, label %sw.bb83
    i32 2, label %sw.bb92
  ]

sw.bb:                                            ; preds = %cond.end62, %cond.end62
  %49 = load i8*, i8** %val, align 4
  %50 = load i8*, i8** %pat, align 4
  %51 = load i32, i32* %modop, align 4
  %call64 = call i8* @sh_modcase(i8* %49, i8* %50, i32 %51)
  store i8* %call64, i8** %temp, align 4
  %52 = load i32, i32* %vtype, align 4
  %cmp65 = icmp eq i32 %52, 0
  br i1 %cmp65, label %if.then67, label %if.end71

if.then67:                                        ; preds = %sw.bb
  br label %do.body

do.body:                                          ; preds = %if.then67
  %53 = load i8*, i8** %val, align 4
  %tobool68 = icmp ne i8* %53, null
  br i1 %tobool68, label %if.then69, label %if.end70

if.then69:                                        ; preds = %do.body
  %54 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7833)
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end70
  br label %if.end71

if.end71:                                         ; preds = %do.end, %sw.bb
  %55 = load i8*, i8** %temp, align 4
  %tobool72 = icmp ne i8* %55, null
  br i1 %tobool72, label %if.then73, label %if.end82

if.then73:                                        ; preds = %if.end71
  %56 = load i32, i32* %mflags, align 4
  %and74 = and i32 %56, 32
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %cond.true76, label %cond.false78

cond.true76:                                      ; preds = %if.then73
  %57 = load i8*, i8** %temp, align 4
  %call77 = call i8* @quote_string(i8* %57)
  br label %cond.end80

cond.false78:                                     ; preds = %if.then73
  %58 = load i8*, i8** %temp, align 4
  %call79 = call i8* @quote_escapes(i8* %58)
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false78, %cond.true76
  %cond81 = phi i8* [ %call77, %cond.true76 ], [ %call79, %cond.false78 ]
  store i8* %cond81, i8** %tt, align 4
  %59 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7837)
  %60 = load i8*, i8** %tt, align 4
  store i8* %60, i8** %temp, align 4
  br label %if.end82

if.end82:                                         ; preds = %cond.end80, %if.end71
  br label %sw.epilog

sw.bb83:                                          ; preds = %cond.end62
  %61 = load i8*, i8** %val, align 4
  %62 = load i8*, i8** %pat, align 4
  %63 = load i32, i32* %modop, align 4
  %64 = load i32, i32* %mflags, align 4
  %call84 = call i8* @pos_params_modcase(i8* %61, i8* %62, i32 %63, i32 %64)
  store i8* %call84, i8** %temp, align 4
  %65 = load i8*, i8** %temp, align 4
  %tobool85 = icmp ne i8* %65, null
  br i1 %tobool85, label %land.lhs.true, label %if.end91

land.lhs.true:                                    ; preds = %sw.bb83
  %66 = load i32, i32* %mflags, align 4
  %and86 = and i32 %66, 32
  %cmp87 = icmp eq i32 %and86, 0
  br i1 %cmp87, label %if.then89, label %if.end91

if.then89:                                        ; preds = %land.lhs.true
  %67 = load i8*, i8** %temp, align 4
  %call90 = call i8* @quote_escapes(i8* %67)
  store i8* %call90, i8** %tt, align 4
  %68 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7847)
  %69 = load i8*, i8** %tt, align 4
  store i8* %69, i8** %temp, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %land.lhs.true, %sw.bb83
  br label %sw.epilog

sw.bb92:                                          ; preds = %cond.end62
  %70 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %70, i32 0, i32 5
  %71 = load i32, i32* %attributes, align 4
  %and93 = and i32 %71, 64
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %cond.true95, label %cond.false98

cond.true95:                                      ; preds = %sw.bb92
  %72 = load %struct.variable*, %struct.variable** %v, align 4
  %value96 = getelementptr inbounds %struct.variable, %struct.variable* %72, i32 0, i32 1
  %73 = load i8*, i8** %value96, align 4
  %74 = bitcast i8* %73 to %struct.hash_table*
  %75 = load i8*, i8** %pat, align 4
  %76 = load i32, i32* %modop, align 4
  %77 = load i32, i32* %mflags, align 4
  %call97 = call i8* @assoc_modcase(%struct.hash_table* %74, i8* %75, i32 %76, i32 %77)
  br label %cond.end101

cond.false98:                                     ; preds = %sw.bb92
  %78 = load %struct.variable*, %struct.variable** %v, align 4
  %value99 = getelementptr inbounds %struct.variable, %struct.variable* %78, i32 0, i32 1
  %79 = load i8*, i8** %value99, align 4
  %80 = bitcast i8* %79 to %struct.array*
  %81 = load i8*, i8** %pat, align 4
  %82 = load i32, i32* %modop, align 4
  %83 = load i32, i32* %mflags, align 4
  %call100 = call i8* @array_modcase(%struct.array* %80, i8* %81, i32 %82, i32 %83)
  br label %cond.end101

cond.end101:                                      ; preds = %cond.false98, %cond.true95
  %cond102 = phi i8* [ %call97, %cond.true95 ], [ %call100, %cond.false98 ]
  store i8* %cond102, i8** %temp, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end62, %cond.end101, %if.end91, %if.end82
  br label %do.body103

do.body103:                                       ; preds = %sw.epilog
  %84 = load i8*, i8** %pat, align 4
  %tobool104 = icmp ne i8* %84, null
  br i1 %tobool104, label %if.then105, label %if.end106

if.then105:                                       ; preds = %do.body103
  %85 = load i8*, i8** %pat, align 4
  call void @sh_xfree(i8* %85, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7863)
  br label %if.end106

if.end106:                                        ; preds = %if.then105, %do.body103
  br label %do.end107

do.end107:                                        ; preds = %if.end106
  %86 = load i8*, i8** %lpat, align 4
  call void @sh_xfree(i8* %86, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7864)
  %87 = load i8*, i8** %temp, align 4
  store i8* %87, i8** %retval, align 4
  br label %return

return:                                           ; preds = %do.end107, %if.then3, %if.then
  %88 = load i8*, i8** %retval, align 4
  ret i8* %88
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_brace_transform(i8* %varname, i8* %value, i32 %ind, i8* %xform, i32 %rtype, i32 %quoted, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %varname.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %ind.addr = alloca i32, align 4
  %xform.addr = alloca i8*, align 4
  %rtype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %vtype = alloca i32, align 4
  %xc = alloca i32, align 4
  %temp1 = alloca i8*, align 4
  %val = alloca i8*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %ind, i32* %ind.addr, align 4
  store i8* %xform, i8** %xform.addr, align 4
  store i32 %rtype, i32* %rtype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %xform.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %0, i32 0
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  store i32 %conv, i32* %xc, align 4
  %2 = load i8*, i8** %value.addr, align 4
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %xc, align 4
  %cmp2 = icmp ne i32 %3, 65
  br i1 %cmp2, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %xc, align 4
  %cmp5 = icmp ne i32 %4, 97
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %5 = load i8*, i8** %varname.addr, align 4
  store i8* %5, i8** @this_command_name, align 4
  %6 = load i8*, i8** %varname.addr, align 4
  %7 = load i8*, i8** %value.addr, align 4
  %8 = load i32, i32* %ind.addr, align 4
  %conv7 = sext i32 %8 to i64
  %9 = load i32, i32* %quoted.addr, align 4
  %10 = load i32, i32* %flags.addr, align 4
  %call = call i32 @get_var_and_type(i8* %6, i8* %7, i64 %conv7, i32 %9, i32 %10, %struct.variable** %v, i8** %val)
  store i32 %call, i32* %vtype, align 4
  %11 = load i32, i32* %vtype, align 4
  %cmp8 = icmp eq i32 %11, -1
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.end
  %12 = load i32, i32* %xc, align 4
  switch i32 %12, label %sw.default [
    i32 97, label %sw.bb
    i32 65, label %sw.bb
    i32 69, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.end11, %if.end11, %if.end11, %if.end11, %if.end11
  br label %sw.epilog

sw.default:                                       ; preds = %if.end11
  store i8* @expand_param_error, i8** %retval, align 4
  br label %return

sw.epilog:                                        ; preds = %sw.bb
  store i8* null, i8** %temp1, align 4
  %13 = load i32, i32* %vtype, align 4
  %and = and i32 %13, -129
  switch i32 %and, label %sw.epilog49 [
    i32 0, label %sw.bb12
    i32 3, label %sw.bb12
    i32 2, label %sw.bb27
    i32 1, label %sw.bb37
  ]

sw.bb12:                                          ; preds = %sw.epilog, %sw.epilog
  %14 = load i32, i32* %xc, align 4
  %15 = load %struct.variable*, %struct.variable** %v, align 4
  %16 = load i8*, i8** %val, align 4
  %call13 = call i8* @string_transform(i32 %14, %struct.variable* %15, i8* %16)
  store i8* %call13, i8** %temp1, align 4
  %17 = load i32, i32* %vtype, align 4
  %cmp14 = icmp eq i32 %17, 0
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %sw.bb12
  br label %do.body

do.body:                                          ; preds = %if.then16
  %18 = load i8*, i8** %val, align 4
  %tobool = icmp ne i8* %18, null
  br i1 %tobool, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body
  %19 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5273)
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end18
  br label %if.end19

if.end19:                                         ; preds = %do.end, %sw.bb12
  %20 = load i8*, i8** %temp1, align 4
  %tobool20 = icmp ne i8* %20, null
  br i1 %tobool20, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.end19
  %21 = load i32, i32* %quoted.addr, align 4
  %and22 = and i32 %21, 3
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then21
  %22 = load i8*, i8** %temp1, align 4
  %call24 = call i8* @quote_string(i8* %22)
  br label %cond.end

cond.false:                                       ; preds = %if.then21
  %23 = load i8*, i8** %temp1, align 4
  %call25 = call i8* @quote_escapes(i8* %23)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call24, %cond.true ], [ %call25, %cond.false ]
  store i8* %cond, i8** %val, align 4
  %24 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5279)
  %25 = load i8*, i8** %val, align 4
  store i8* %25, i8** %temp1, align 4
  br label %if.end26

if.end26:                                         ; preds = %cond.end, %if.end19
  br label %sw.epilog49

sw.bb27:                                          ; preds = %sw.epilog
  %26 = load i32, i32* %xc, align 4
  %27 = load %struct.variable*, %struct.variable** %v, align 4
  %28 = load i8*, i8** %varname.addr, align 4
  %29 = load i32, i32* %quoted.addr, align 4
  %call28 = call i8* @array_transform(i32 %26, %struct.variable* %27, i8* %28, i32 %29)
  store i8* %call28, i8** %temp1, align 4
  %30 = load i8*, i8** %temp1, align 4
  %tobool29 = icmp ne i8* %30, null
  br i1 %tobool29, label %land.lhs.true30, label %if.end36

land.lhs.true30:                                  ; preds = %sw.bb27
  %31 = load i32, i32* %quoted.addr, align 4
  %and31 = and i32 %31, 3
  %cmp32 = icmp eq i32 %and31, 0
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %land.lhs.true30
  %32 = load i8*, i8** %temp1, align 4
  %call35 = call i8* @quote_escapes(i8* %32)
  store i8* %call35, i8** %val, align 4
  %33 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5289)
  %34 = load i8*, i8** %val, align 4
  store i8* %34, i8** %temp1, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %land.lhs.true30, %sw.bb27
  br label %sw.epilog49

sw.bb37:                                          ; preds = %sw.epilog
  %35 = load i32, i32* %xc, align 4
  %36 = load i8*, i8** %varname.addr, align 4
  %arrayidx38 = getelementptr inbounds i8, i8* %36, i32 0
  %37 = load i8, i8* %arrayidx38, align 1
  %conv39 = sext i8 %37 to i32
  %38 = load i32, i32* %quoted.addr, align 4
  %call40 = call i8* @parameter_list_transform(i32 %35, i32 %conv39, i32 %38)
  store i8* %call40, i8** %temp1, align 4
  %39 = load i8*, i8** %temp1, align 4
  %tobool41 = icmp ne i8* %39, null
  br i1 %tobool41, label %land.lhs.true42, label %if.end48

land.lhs.true42:                                  ; preds = %sw.bb37
  %40 = load i32, i32* %quoted.addr, align 4
  %and43 = and i32 %40, 3
  %cmp44 = icmp eq i32 %and43, 0
  br i1 %cmp44, label %if.then46, label %if.end48

if.then46:                                        ; preds = %land.lhs.true42
  %41 = load i8*, i8** %temp1, align 4
  %call47 = call i8* @quote_escapes(i8* %41)
  store i8* %call47, i8** %val, align 4
  %42 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %42, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5299)
  %43 = load i8*, i8** %val, align 4
  store i8* %43, i8** %temp1, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %land.lhs.true42, %sw.bb37
  br label %sw.epilog49

sw.epilog49:                                      ; preds = %sw.epilog, %if.end48, %if.end36, %if.end26
  %44 = load i8*, i8** %temp1, align 4
  store i8* %44, i8** %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog49, %sw.default, %if.then10, %if.then
  %45 = load i8*, i8** %retval, align 4
  ret i8* %45
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_brace_remove_pattern(i8* %varname, i8* %value, i32 %ind, i8* %patstr, i32 %rtype, i32 %quoted, i32 %flags) #0 {
entry:
  %retval = alloca i8*, align 4
  %varname.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %ind.addr = alloca i32, align 4
  %patstr.addr = alloca i8*, align 4
  %rtype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %vtype = alloca i32, align 4
  %patspec = alloca i32, align 4
  %starsub = alloca i32, align 4
  %temp1 = alloca i8*, align 4
  %val = alloca i8*, align 4
  %pattern = alloca i8*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %ind, i32* %ind.addr, align 4
  store i8* %patstr, i8** %patstr.addr, align 4
  store i32 %rtype, i32* %rtype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load i8*, i8** %value.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %varname.addr, align 4
  store i8* %1, i8** @this_command_name, align 4
  %2 = load i8*, i8** %varname.addr, align 4
  %3 = load i8*, i8** %value.addr, align 4
  %4 = load i32, i32* %ind.addr, align 4
  %conv = sext i32 %4 to i64
  %5 = load i32, i32* %quoted.addr, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %call = call i32 @get_var_and_type(i8* %2, i8* %3, i64 %conv, i32 %5, i32 %6, %struct.variable** %v, i8** %val)
  store i32 %call, i32* %vtype, align 4
  %7 = load i32, i32* %vtype, align 4
  %cmp1 = icmp eq i32 %7, -1
  br i1 %cmp1, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %vtype, align 4
  %and = and i32 %8, 128
  store i32 %and, i32* %starsub, align 4
  %9 = load i32, i32* %vtype, align 4
  %and5 = and i32 %9, -129
  store i32 %and5, i32* %vtype, align 4
  %10 = load i32, i32* %rtype.addr, align 4
  %11 = load i8*, i8** %patstr.addr, align 4
  %call6 = call i32 @getpatspec(i32 %10, i8* %11)
  store i32 %call6, i32* %patspec, align 4
  %12 = load i32, i32* %patspec, align 4
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end4
  %13 = load i32, i32* %patspec, align 4
  %cmp9 = icmp eq i32 %13, 3
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false, %if.end4
  %14 = load i8*, i8** %patstr.addr, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr, i8** %patstr.addr, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %lor.lhs.false
  %15 = load i8*, i8** %patstr.addr, align 4
  %call13 = call i32 @strlen(i8* %15)
  %add = add i32 1, %call13
  %call14 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4991)
  %16 = load i8*, i8** %patstr.addr, align 4
  %call15 = call i8* @strcpy(i8* %call14, i8* %16)
  store i8* %call15, i8** %temp1, align 4
  %17 = load i8*, i8** %temp1, align 4
  %18 = load i32, i32* %quoted.addr, align 4
  %call16 = call i8* @getpattern(i8* %17, i32 %18, i32 1)
  store i8* %call16, i8** %pattern, align 4
  %19 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4993)
  store i8* null, i8** %temp1, align 4
  %20 = load i32, i32* %vtype, align 4
  switch i32 %20, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb31
    i32 1, label %sw.bb40
  ]

sw.bb:                                            ; preds = %if.end12, %if.end12
  %21 = load i8*, i8** %val, align 4
  %22 = load i8*, i8** %pattern, align 4
  %23 = load i32, i32* %patspec, align 4
  %call17 = call i8* @remove_pattern(i8* %21, i8* %22, i32 %23)
  store i8* %call17, i8** %temp1, align 4
  %24 = load i32, i32* %vtype, align 4
  %cmp18 = icmp eq i32 %24, 0
  br i1 %cmp18, label %if.then20, label %if.end23

if.then20:                                        ; preds = %sw.bb
  br label %do.body

do.body:                                          ; preds = %if.then20
  %25 = load i8*, i8** %val, align 4
  %tobool = icmp ne i8* %25, null
  br i1 %tobool, label %if.then21, label %if.end22

if.then21:                                        ; preds = %do.body
  %26 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5002)
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end22
  br label %if.end23

if.end23:                                         ; preds = %do.end, %sw.bb
  %27 = load i8*, i8** %temp1, align 4
  %tobool24 = icmp ne i8* %27, null
  br i1 %tobool24, label %if.then25, label %if.end30

if.then25:                                        ; preds = %if.end23
  %28 = load i32, i32* %quoted.addr, align 4
  %and26 = and i32 %28, 3
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then25
  %29 = load i8*, i8** %temp1, align 4
  %call28 = call i8* @quote_string(i8* %29)
  br label %cond.end

cond.false:                                       ; preds = %if.then25
  %30 = load i8*, i8** %temp1, align 4
  %call29 = call i8* @quote_escapes(i8* %30)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call28, %cond.true ], [ %call29, %cond.false ]
  store i8* %cond, i8** %val, align 4
  %31 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5008)
  %32 = load i8*, i8** %val, align 4
  store i8* %32, i8** %temp1, align 4
  br label %if.end30

if.end30:                                         ; preds = %cond.end, %if.end23
  br label %sw.epilog

sw.bb31:                                          ; preds = %if.end12
  %33 = load %struct.variable*, %struct.variable** %v, align 4
  %34 = load i8*, i8** %pattern, align 4
  %35 = load i32, i32* %patspec, align 4
  %36 = load i8*, i8** %varname.addr, align 4
  %37 = load i32, i32* %quoted.addr, align 4
  %call32 = call i8* @array_remove_pattern(%struct.variable* %33, i8* %34, i32 %35, i8* %36, i32 %37)
  store i8* %call32, i8** %temp1, align 4
  %38 = load i8*, i8** %temp1, align 4
  %tobool33 = icmp ne i8* %38, null
  br i1 %tobool33, label %land.lhs.true, label %if.end39

land.lhs.true:                                    ; preds = %sw.bb31
  %39 = load i32, i32* %quoted.addr, align 4
  %and34 = and i32 %39, 3
  %cmp35 = icmp eq i32 %and34, 0
  br i1 %cmp35, label %if.then37, label %if.end39

if.then37:                                        ; preds = %land.lhs.true
  %40 = load i8*, i8** %temp1, align 4
  %call38 = call i8* @quote_escapes(i8* %40)
  store i8* %call38, i8** %val, align 4
  %41 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5018)
  %42 = load i8*, i8** %val, align 4
  store i8* %42, i8** %temp1, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.then37, %land.lhs.true, %sw.bb31
  br label %sw.epilog

sw.bb40:                                          ; preds = %if.end12
  %43 = load i8*, i8** %varname.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %43, i32 0
  %44 = load i8, i8* %arrayidx, align 1
  %conv41 = sext i8 %44 to i32
  %45 = load i8*, i8** %pattern, align 4
  %46 = load i32, i32* %patspec, align 4
  %47 = load i32, i32* %quoted.addr, align 4
  %call42 = call i8* @parameter_list_remove_pattern(i32 %conv41, i8* %45, i32 %46, i32 %47)
  store i8* %call42, i8** %temp1, align 4
  %48 = load i8*, i8** %temp1, align 4
  %tobool43 = icmp ne i8* %48, null
  br i1 %tobool43, label %land.lhs.true44, label %if.end50

land.lhs.true44:                                  ; preds = %sw.bb40
  %49 = load i32, i32* %quoted.addr, align 4
  %and45 = and i32 %49, 3
  %cmp46 = icmp eq i32 %and45, 0
  br i1 %cmp46, label %if.then48, label %if.end50

if.then48:                                        ; preds = %land.lhs.true44
  %50 = load i8*, i8** %temp1, align 4
  %call49 = call i8* @quote_escapes(i8* %50)
  store i8* %call49, i8** %val, align 4
  %51 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5028)
  %52 = load i8*, i8** %val, align 4
  store i8* %52, i8** %temp1, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %land.lhs.true44, %sw.bb40
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end12, %if.end50, %if.end39, %if.end30
  br label %do.body51

do.body51:                                        ; preds = %sw.epilog
  %53 = load i8*, i8** %pattern, align 4
  %tobool52 = icmp ne i8* %53, null
  br i1 %tobool52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %do.body51
  %54 = load i8*, i8** %pattern, align 4
  call void @sh_xfree(i8* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5034)
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %do.body51
  br label %do.end55

do.end55:                                         ; preds = %if.end54
  %55 = load i8*, i8** %temp1, align 4
  store i8* %55, i8** %retval, align 4
  br label %return

return:                                           ; preds = %do.end55, %if.then3, %if.then
  %56 = load i8*, i8** %retval, align 4
  ret i8* %56
}

; Function Attrs: noinline nounwind
define internal %struct.word_desc* @parameter_brace_expand_rhs(i8* %name, i8* %value, i32 %c, i32 %quoted, i32 %pflags, i32* %qdollaratp, i32* %hasdollarat) #0 {
entry:
  %retval = alloca %struct.word_desc*, align 4
  %name.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %c.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %pflags.addr = alloca i32, align 4
  %qdollaratp.addr = alloca i32*, align 4
  %hasdollarat.addr = alloca i32*, align 4
  %w = alloca %struct.word_desc*, align 4
  %l = alloca %struct.word_list*, align 4
  %t = alloca i8*, align 4
  %t1 = alloca i8*, align 4
  %temp = alloca i8*, align 4
  %vname = alloca i8*, align 4
  %l_hasdollat = alloca i32, align 4
  %sindex = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %pflags, i32* %pflags.addr, align 4
  store i32* %qdollaratp, i32** %qdollaratp.addr, align 4
  store i32* %hasdollarat, i32** %hasdollarat.addr, align 4
  %0 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %0, 3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %value.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %sindex, align 4
  %3 = load i8*, i8** %value.addr, align 4
  %call = call i8* @string_extract_double_quoted(i8* %3, i32* %sindex, i32 2048)
  store i8* %call, i8** %temp, align 4
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %value.addr, align 4
  store i8* %4, i8** %temp, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call2 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call2, %struct.word_desc** %w, align 4
  store i32 0, i32* %l_hasdollat, align 4
  %5 = load i8*, i8** %temp, align 4
  %6 = load i8, i8* %5, align 1
  %conv3 = sext i8 %6 to i32
  %tobool4 = icmp ne i32 %conv3, 0
  br i1 %tobool4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %7 = load i8*, i8** %temp, align 4
  %8 = load i32, i32* %quoted.addr, align 4
  %call5 = call %struct.word_list* @expand_string_for_rhs(i8* %7, i32 %8, i32* %l_hasdollat, i32* null)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %call5, %cond.true ], [ null, %cond.false ]
  store %struct.word_list* %cond, %struct.word_list** %l, align 4
  %9 = load i32*, i32** %hasdollarat.addr, align 4
  %tobool6 = icmp ne i32* %9, null
  br i1 %tobool6, label %if.then7, label %if.end11

if.then7:                                         ; preds = %cond.end
  %10 = load i32, i32* %l_hasdollat, align 4
  %tobool8 = icmp ne i32 %10, 0
  br i1 %tobool8, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then7
  %11 = load %struct.word_list*, %struct.word_list** %l, align 4
  %tobool9 = icmp ne %struct.word_list* %11, null
  br i1 %tobool9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %12 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %12, i32 0, i32 0
  %13 = load %struct.word_list*, %struct.word_list** %next, align 4
  %tobool10 = icmp ne %struct.word_list* %13, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %14 = phi i1 [ false, %lor.rhs ], [ %tobool10, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.then7
  %15 = phi i1 [ true, %if.then7 ], [ %14, %land.end ]
  %lor.ext = zext i1 %15 to i32
  %16 = load i32*, i32** %hasdollarat.addr, align 4
  store i32 %lor.ext, i32* %16, align 4
  br label %if.end11

if.end11:                                         ; preds = %lor.end, %cond.end
  %17 = load i8*, i8** %temp, align 4
  %18 = load i8*, i8** %value.addr, align 4
  %cmp = icmp ne i8* %17, %18
  br i1 %cmp, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  %19 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6728)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11
  %20 = load %struct.word_list*, %struct.word_list** %l, align 4
  %tobool15 = icmp ne %struct.word_list* %20, null
  br i1 %tobool15, label %if.then16, label %if.else86

if.then16:                                        ; preds = %if.end14
  %21 = load i32*, i32** %qdollaratp.addr, align 4
  %tobool17 = icmp ne i32* %21, null
  br i1 %tobool17, label %land.lhs.true18, label %if.end25

land.lhs.true18:                                  ; preds = %if.then16
  %22 = load i32, i32* %l_hasdollat, align 4
  %tobool19 = icmp ne i32 %22, 0
  br i1 %tobool19, label %land.lhs.true20, label %lor.lhs.false

land.lhs.true20:                                  ; preds = %land.lhs.true18
  %23 = load i32, i32* %quoted.addr, align 4
  %tobool21 = icmp ne i32 %23, 0
  br i1 %tobool21, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true20, %land.lhs.true18
  %24 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next22 = getelementptr inbounds %struct.word_list, %struct.word_list* %24, i32 0, i32 0
  %25 = load %struct.word_list*, %struct.word_list** %next22, align 4
  %tobool23 = icmp ne %struct.word_list* %25, null
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %lor.lhs.false, %land.lhs.true20
  %26 = load i32*, i32** %qdollaratp.addr, align 4
  store i32 1, i32* %26, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %lor.lhs.false, %if.then16
  %27 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next26 = getelementptr inbounds %struct.word_list, %struct.word_list* %27, i32 0, i32 0
  %28 = load %struct.word_list*, %struct.word_list** %next26, align 4
  %tobool27 = icmp ne %struct.word_list* %28, null
  br i1 %tobool27, label %land.lhs.true28, label %if.else32

land.lhs.true28:                                  ; preds = %if.end25
  %29 = load i32, i32* @ifs_is_null, align 4
  %tobool29 = icmp ne i32 %29, 0
  br i1 %tobool29, label %if.then30, label %if.else32

if.then30:                                        ; preds = %land.lhs.true28
  %30 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call31 = call i8* @string_list_internal(%struct.word_list* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0))
  store i8* %call31, i8** %temp, align 4
  %31 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %31, i32 0, i32 1
  %32 = load i32, i32* %flags, align 4
  %or = or i32 %32, 8
  store i32 %or, i32* %flags, align 4
  br label %if.end43

if.else32:                                        ; preds = %land.lhs.true28, %if.end25
  %33 = load i32, i32* %l_hasdollat, align 4
  %tobool33 = icmp ne i32 %33, 0
  br i1 %tobool33, label %cond.true37, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %if.else32
  %34 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next35 = getelementptr inbounds %struct.word_list, %struct.word_list* %34, i32 0, i32 0
  %35 = load %struct.word_list*, %struct.word_list** %next35, align 4
  %tobool36 = icmp ne %struct.word_list* %35, null
  br i1 %tobool36, label %cond.true37, label %cond.false39

cond.true37:                                      ; preds = %lor.lhs.false34, %if.else32
  %36 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call38 = call i8* @string_list_dollar_star(%struct.word_list* %36)
  br label %cond.end41

cond.false39:                                     ; preds = %lor.lhs.false34
  %37 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call40 = call i8* @string_list(%struct.word_list* %37)
  br label %cond.end41

cond.end41:                                       ; preds = %cond.false39, %cond.true37
  %cond42 = phi i8* [ %call38, %cond.true37 ], [ %call40, %cond.false39 ]
  store i8* %cond42, i8** %temp, align 4
  br label %if.end43

if.end43:                                         ; preds = %cond.end41, %if.then30
  %38 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next44 = getelementptr inbounds %struct.word_list, %struct.word_list* %38, i32 0, i32 0
  %39 = load %struct.word_list*, %struct.word_list** %next44, align 4
  %cmp45 = icmp eq %struct.word_list* %39, null
  br i1 %cmp45, label %land.lhs.true47, label %if.end85

land.lhs.true47:                                  ; preds = %if.end43
  %40 = load i32, i32* %quoted.addr, align 4
  %and48 = and i32 %40, 3
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %land.lhs.true50, label %if.end85

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %41 = load i8*, i8** %temp, align 4
  %arrayidx = getelementptr inbounds i8, i8* %41, i32 0
  %42 = load i8, i8* %arrayidx, align 1
  %conv51 = sext i8 %42 to i32
  %cmp52 = icmp eq i32 %conv51, 127
  br i1 %cmp52, label %land.lhs.true54, label %if.end85

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %43 = load i8*, i8** %temp, align 4
  %arrayidx55 = getelementptr inbounds i8, i8* %43, i32 1
  %44 = load i8, i8* %arrayidx55, align 1
  %conv56 = sext i8 %44 to i32
  %cmp57 = icmp eq i32 %conv56, 0
  br i1 %cmp57, label %land.lhs.true59, label %if.end85

land.lhs.true59:                                  ; preds = %land.lhs.true54
  %45 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %45, i32 0, i32 1
  %46 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word60 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %46, i32 0, i32 0
  %47 = load i8*, i8** %word60, align 4
  %arrayidx61 = getelementptr inbounds i8, i8* %47, i32 0
  %48 = load i8, i8* %arrayidx61, align 1
  %conv62 = sext i8 %48 to i32
  %cmp63 = icmp eq i32 %conv62, 127
  br i1 %cmp63, label %land.lhs.true65, label %if.end85

land.lhs.true65:                                  ; preds = %land.lhs.true59
  %49 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word66 = getelementptr inbounds %struct.word_list, %struct.word_list* %49, i32 0, i32 1
  %50 = load %struct.word_desc*, %struct.word_desc** %word66, align 4
  %word67 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %50, i32 0, i32 0
  %51 = load i8*, i8** %word67, align 4
  %arrayidx68 = getelementptr inbounds i8, i8* %51, i32 1
  %52 = load i8, i8* %arrayidx68, align 1
  %conv69 = sext i8 %52 to i32
  %cmp70 = icmp eq i32 %conv69, 0
  br i1 %cmp70, label %land.lhs.true72, label %if.end85

land.lhs.true72:                                  ; preds = %land.lhs.true65
  %53 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word73 = getelementptr inbounds %struct.word_list, %struct.word_list* %53, i32 0, i32 1
  %54 = load %struct.word_desc*, %struct.word_desc** %word73, align 4
  %flags74 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %54, i32 0, i32 1
  %55 = load i32, i32* %flags74, align 4
  %and75 = and i32 %55, 262144
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %if.then77, label %if.end85

if.then77:                                        ; preds = %land.lhs.true72
  %56 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %flags78 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %56, i32 0, i32 1
  %57 = load i32, i32* %flags78, align 4
  %or79 = or i32 %57, 262144
  store i32 %or79, i32* %flags78, align 4
  %58 = load i32*, i32** %qdollaratp.addr, align 4
  %tobool80 = icmp ne i32* %58, null
  br i1 %tobool80, label %land.lhs.true81, label %if.end84

land.lhs.true81:                                  ; preds = %if.then77
  %59 = load i32, i32* %l_hasdollat, align 4
  %tobool82 = icmp ne i32 %59, 0
  br i1 %tobool82, label %if.then83, label %if.end84

if.then83:                                        ; preds = %land.lhs.true81
  %60 = load i32*, i32** %qdollaratp.addr, align 4
  store i32 0, i32* %60, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then83, %land.lhs.true81, %if.then77
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %land.lhs.true72, %land.lhs.true65, %land.lhs.true59, %land.lhs.true54, %land.lhs.true50, %land.lhs.true47, %if.end43
  %61 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @dispose_words(%struct.word_list* %61)
  br label %if.end97

if.else86:                                        ; preds = %if.end14
  %62 = load i32, i32* %quoted.addr, align 4
  %and87 = and i32 %62, 3
  %tobool88 = icmp ne i32 %and87, 0
  br i1 %tobool88, label %land.lhs.true89, label %if.else95

land.lhs.true89:                                  ; preds = %if.else86
  %63 = load i32, i32* %l_hasdollat, align 4
  %tobool90 = icmp ne i32 %63, 0
  br i1 %tobool90, label %if.then91, label %if.else95

if.then91:                                        ; preds = %land.lhs.true89
  %call92 = call i8* @make_quoted_char(i32 0)
  store i8* %call92, i8** %temp, align 4
  %64 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %flags93 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %64, i32 0, i32 1
  %65 = load i32, i32* %flags93, align 4
  %or94 = or i32 %65, 262144
  store i32 %or94, i32* %flags93, align 4
  br label %if.end96

if.else95:                                        ; preds = %land.lhs.true89, %if.else86
  store i8* null, i8** %temp, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.else95, %if.then91
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end85
  %66 = load i32, i32* %c.addr, align 4
  %cmp98 = icmp eq i32 %66, 45
  br i1 %cmp98, label %if.then103, label %lor.lhs.false100

lor.lhs.false100:                                 ; preds = %if.end97
  %67 = load i32, i32* %c.addr, align 4
  %cmp101 = icmp eq i32 %67, 43
  br i1 %cmp101, label %if.then103, label %if.end105

if.then103:                                       ; preds = %lor.lhs.false100, %if.end97
  %68 = load i8*, i8** %temp, align 4
  %69 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word104 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %69, i32 0, i32 0
  store i8* %68, i8** %word104, align 4
  %70 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  store %struct.word_desc* %70, %struct.word_desc** %retval, align 4
  br label %return

if.end105:                                        ; preds = %lor.lhs.false100
  %71 = load i8*, i8** %temp, align 4
  %tobool106 = icmp ne i8* %71, null
  br i1 %tobool106, label %cond.true107, label %cond.false111

cond.true107:                                     ; preds = %if.end105
  %72 = load i8*, i8** %temp, align 4
  %call108 = call i32 @strlen(i8* %72)
  %add = add i32 1, %call108
  %call109 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6802)
  %73 = load i8*, i8** %temp, align 4
  %call110 = call i8* @strcpy(i8* %call109, i8* %73)
  br label %cond.end114

cond.false111:                                    ; preds = %if.end105
  %call112 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6802)
  %call113 = call i8* @strcpy(i8* %call112, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  br label %cond.end114

cond.end114:                                      ; preds = %cond.false111, %cond.true107
  %cond115 = phi i8* [ %call110, %cond.true107 ], [ %call113, %cond.false111 ]
  store i8* %cond115, i8** %t, align 4
  %74 = load i8*, i8** %t, align 4
  %call116 = call i8* @dequote_string(i8* %74)
  store i8* %call116, i8** %t1, align 4
  %75 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %75, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6804)
  %76 = load i8*, i8** %name.addr, align 4
  store i8* %76, i8** %vname, align 4
  %77 = load i8*, i8** %name.addr, align 4
  %78 = load i8, i8* %77, align 1
  %conv117 = sext i8 %78 to i32
  %cmp118 = icmp eq i32 %conv117, 33
  br i1 %cmp118, label %land.lhs.true120, label %if.end242

land.lhs.true120:                                 ; preds = %cond.end114
  %79 = load i8*, i8** %name.addr, align 4
  %arrayidx121 = getelementptr inbounds i8, i8* %79, i32 1
  %80 = load i8, i8* %arrayidx121, align 1
  %conv122 = zext i8 %80 to i32
  %call123 = call i32 @isalpha(i32 %conv122) #9
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.then166, label %lor.lhs.false125

lor.lhs.false125:                                 ; preds = %land.lhs.true120
  %81 = load i8*, i8** %name.addr, align 4
  %arrayidx126 = getelementptr inbounds i8, i8* %81, i32 1
  %82 = load i8, i8* %arrayidx126, align 1
  %conv127 = zext i8 %82 to i32
  %cmp128 = icmp eq i32 %conv127, 95
  br i1 %cmp128, label %if.then166, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %lor.lhs.false125
  %83 = load i8*, i8** %name.addr, align 4
  %arrayidx131 = getelementptr inbounds i8, i8* %83, i32 1
  %84 = load i8, i8* %arrayidx131, align 1
  %conv132 = sext i8 %84 to i32
  %cmp133 = icmp sge i32 %conv132, 48
  br i1 %cmp133, label %land.lhs.true135, label %lor.lhs.false140

land.lhs.true135:                                 ; preds = %lor.lhs.false130
  %85 = load i8*, i8** %name.addr, align 4
  %arrayidx136 = getelementptr inbounds i8, i8* %85, i32 1
  %86 = load i8, i8* %arrayidx136, align 1
  %conv137 = sext i8 %86 to i32
  %cmp138 = icmp sle i32 %conv137, 57
  br i1 %cmp138, label %if.then166, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %land.lhs.true135, %lor.lhs.false130
  %87 = load i32, i32* @posixly_correct, align 4
  %cmp141 = icmp eq i32 %87, 0
  br i1 %cmp141, label %land.lhs.true143, label %lor.lhs.false148

land.lhs.true143:                                 ; preds = %lor.lhs.false140
  %88 = load i8*, i8** %name.addr, align 4
  %arrayidx144 = getelementptr inbounds i8, i8* %88, i32 1
  %89 = load i8, i8* %arrayidx144, align 1
  %conv145 = sext i8 %89 to i32
  %cmp146 = icmp eq i32 %conv145, 35
  br i1 %cmp146, label %if.then166, label %lor.lhs.false148

lor.lhs.false148:                                 ; preds = %land.lhs.true143, %lor.lhs.false140
  %90 = load i32, i32* @posixly_correct, align 4
  %cmp149 = icmp eq i32 %90, 0
  br i1 %cmp149, label %land.lhs.true151, label %lor.lhs.false156

land.lhs.true151:                                 ; preds = %lor.lhs.false148
  %91 = load i8*, i8** %name.addr, align 4
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i32 1
  %92 = load i8, i8* %arrayidx152, align 1
  %conv153 = sext i8 %92 to i32
  %cmp154 = icmp eq i32 %conv153, 63
  br i1 %cmp154, label %if.then166, label %lor.lhs.false156

lor.lhs.false156:                                 ; preds = %land.lhs.true151, %lor.lhs.false148
  %93 = load i8*, i8** %name.addr, align 4
  %arrayidx157 = getelementptr inbounds i8, i8* %93, i32 1
  %94 = load i8, i8* %arrayidx157, align 1
  %conv158 = sext i8 %94 to i32
  %cmp159 = icmp eq i32 %conv158, 64
  br i1 %cmp159, label %if.then166, label %lor.lhs.false161

lor.lhs.false161:                                 ; preds = %lor.lhs.false156
  %95 = load i8*, i8** %name.addr, align 4
  %arrayidx162 = getelementptr inbounds i8, i8* %95, i32 1
  %96 = load i8, i8* %arrayidx162, align 1
  %conv163 = sext i8 %96 to i32
  %cmp164 = icmp eq i32 %conv163, 42
  br i1 %cmp164, label %if.then166, label %if.end242

if.then166:                                       ; preds = %lor.lhs.false161, %lor.lhs.false156, %land.lhs.true151, %land.lhs.true143, %land.lhs.true135, %lor.lhs.false125, %land.lhs.true120
  %97 = load i8*, i8** %name.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %97, i32 1
  %98 = load i8*, i8** %name.addr, align 4
  %99 = load i8, i8* %98, align 1
  %conv167 = sext i8 %99 to i32
  %tobool168 = icmp ne i32 %conv167, 0
  br i1 %tobool168, label %land.rhs169, label %land.end225

land.rhs169:                                      ; preds = %if.then166
  %100 = load i8*, i8** %name.addr, align 4
  %101 = load i8, i8* %100, align 1
  %conv170 = sext i8 %101 to i32
  %cmp171 = icmp sge i32 %conv170, 48
  br i1 %cmp171, label %land.lhs.true173, label %lor.lhs.false180

land.lhs.true173:                                 ; preds = %land.rhs169
  %102 = load i8*, i8** %name.addr, align 4
  %103 = load i8, i8* %102, align 1
  %conv174 = sext i8 %103 to i32
  %cmp175 = icmp sle i32 %conv174, 57
  br i1 %cmp175, label %land.lhs.true177, label %lor.lhs.false180

land.lhs.true177:                                 ; preds = %land.lhs.true173
  %104 = load i8*, i8** %name.addr, align 4
  %call178 = call i32 @all_digits(i8* %104)
  %tobool179 = icmp ne i32 %call178, 0
  br i1 %tobool179, label %lor.end223, label %lor.lhs.false180

lor.lhs.false180:                                 ; preds = %land.lhs.true177, %land.lhs.true173, %land.rhs169
  %105 = load i8*, i8** %name.addr, align 4
  %arrayidx181 = getelementptr inbounds i8, i8* %105, i32 1
  %106 = load i8, i8* %arrayidx181, align 1
  %conv182 = sext i8 %106 to i32
  %cmp183 = icmp eq i32 %conv182, 0
  br i1 %cmp183, label %land.lhs.true185, label %lor.rhs189

land.lhs.true185:                                 ; preds = %lor.lhs.false180
  %107 = load i8*, i8** %name.addr, align 4
  %108 = load i8, i8* %107, align 1
  %idxprom = zext i8 %108 to i32
  %arrayidx186 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %109 = load i32, i32* %arrayidx186, align 4
  %and187 = and i32 %109, 2048
  %tobool188 = icmp ne i32 %and187, 0
  br i1 %tobool188, label %lor.end223, label %lor.rhs189

lor.rhs189:                                       ; preds = %land.lhs.true185, %lor.lhs.false180
  %110 = load i8*, i8** %name.addr, align 4
  %arrayidx190 = getelementptr inbounds i8, i8* %110, i32 2
  %111 = load i8, i8* %arrayidx190, align 1
  %conv191 = sext i8 %111 to i32
  %cmp192 = icmp eq i32 %conv191, 0
  br i1 %cmp192, label %land.rhs194, label %land.end222

land.rhs194:                                      ; preds = %lor.rhs189
  %112 = load i32, i32* @posixly_correct, align 4
  %cmp195 = icmp eq i32 %112, 0
  br i1 %cmp195, label %land.lhs.true197, label %lor.lhs.false202

land.lhs.true197:                                 ; preds = %land.rhs194
  %113 = load i8*, i8** %name.addr, align 4
  %arrayidx198 = getelementptr inbounds i8, i8* %113, i32 1
  %114 = load i8, i8* %arrayidx198, align 1
  %conv199 = sext i8 %114 to i32
  %cmp200 = icmp eq i32 %conv199, 35
  br i1 %cmp200, label %lor.end220, label %lor.lhs.false202

lor.lhs.false202:                                 ; preds = %land.lhs.true197, %land.rhs194
  %115 = load i32, i32* @posixly_correct, align 4
  %cmp203 = icmp eq i32 %115, 0
  br i1 %cmp203, label %land.lhs.true205, label %lor.lhs.false210

land.lhs.true205:                                 ; preds = %lor.lhs.false202
  %116 = load i8*, i8** %name.addr, align 4
  %arrayidx206 = getelementptr inbounds i8, i8* %116, i32 1
  %117 = load i8, i8* %arrayidx206, align 1
  %conv207 = sext i8 %117 to i32
  %cmp208 = icmp eq i32 %conv207, 63
  br i1 %cmp208, label %lor.end220, label %lor.lhs.false210

lor.lhs.false210:                                 ; preds = %land.lhs.true205, %lor.lhs.false202
  %118 = load i8*, i8** %name.addr, align 4
  %arrayidx211 = getelementptr inbounds i8, i8* %118, i32 1
  %119 = load i8, i8* %arrayidx211, align 1
  %conv212 = sext i8 %119 to i32
  %cmp213 = icmp eq i32 %conv212, 64
  br i1 %cmp213, label %lor.end220, label %lor.rhs215

lor.rhs215:                                       ; preds = %lor.lhs.false210
  %120 = load i8*, i8** %name.addr, align 4
  %arrayidx216 = getelementptr inbounds i8, i8* %120, i32 1
  %121 = load i8, i8* %arrayidx216, align 1
  %conv217 = sext i8 %121 to i32
  %cmp218 = icmp eq i32 %conv217, 42
  br label %lor.end220

lor.end220:                                       ; preds = %lor.rhs215, %lor.lhs.false210, %land.lhs.true205, %land.lhs.true197
  %122 = phi i1 [ true, %lor.lhs.false210 ], [ true, %land.lhs.true205 ], [ true, %land.lhs.true197 ], [ %cmp218, %lor.rhs215 ]
  br label %land.end222

land.end222:                                      ; preds = %lor.end220, %lor.rhs189
  %123 = phi i1 [ false, %lor.rhs189 ], [ %122, %lor.end220 ]
  br label %lor.end223

lor.end223:                                       ; preds = %land.end222, %land.lhs.true185, %land.lhs.true177
  %124 = phi i1 [ true, %land.lhs.true185 ], [ true, %land.lhs.true177 ], [ %123, %land.end222 ]
  br label %land.end225

land.end225:                                      ; preds = %lor.end223, %if.then166
  %125 = phi i1 [ false, %if.then166 ], [ %124, %lor.end223 ]
  %land.ext = zext i1 %125 to i32
  %126 = load i32, i32* %quoted.addr, align 4
  %call226 = call i8* @parameter_brace_find_indir(i8* %add.ptr, i32 %land.ext, i32 %126, i32 1)
  store i8* %call226, i8** %vname, align 4
  %127 = load i8*, i8** %vname, align 4
  %cmp227 = icmp eq i8* %127, null
  br i1 %cmp227, label %if.then233, label %lor.lhs.false229

lor.lhs.false229:                                 ; preds = %land.end225
  %128 = load i8*, i8** %vname, align 4
  %129 = load i8, i8* %128, align 1
  %conv230 = sext i8 %129 to i32
  %cmp231 = icmp eq i32 %conv230, 0
  br i1 %cmp231, label %if.then233, label %if.end235

if.then233:                                       ; preds = %lor.lhs.false229, %land.end225
  %call234 = call i8* @libintl_gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.44, i32 0, i32 0))
  %130 = load i8*, i8** %name.addr, align 4
  call void (i8*, ...) @report_error(i8* %call234, i8* %130)
  %131 = load i8*, i8** %vname, align 4
  call void @sh_xfree(i8* %131, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6815)
  %132 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  call void @dispose_word(%struct.word_desc* %132)
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.end235:                                        ; preds = %lor.lhs.false229
  %133 = load i8*, i8** %vname, align 4
  %call236 = call i32 @legal_identifier(i8* %133)
  %cmp237 = icmp eq i32 %call236, 0
  br i1 %cmp237, label %if.then239, label %if.end241

if.then239:                                       ; preds = %if.end235
  %call240 = call i8* @libintl_gettext(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.45, i32 0, i32 0))
  %134 = load i8*, i8** %vname, align 4
  call void (i8*, ...) @report_error(i8* %call240, i8* %134)
  %135 = load i8*, i8** %vname, align 4
  call void @sh_xfree(i8* %135, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6822)
  %136 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  call void @dispose_word(%struct.word_desc* %136)
  store %struct.word_desc* @expand_wdesc_error, %struct.word_desc** %retval, align 4
  br label %return

if.end241:                                        ; preds = %if.end235
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %lor.lhs.false161, %cond.end114
  %137 = load i8*, i8** %vname, align 4
  %call243 = call i32 @valid_array_reference(i8* %137, i32 0)
  %tobool244 = icmp ne i32 %call243, 0
  br i1 %tobool244, label %if.then245, label %if.else247

if.then245:                                       ; preds = %if.end242
  %138 = load i8*, i8** %vname, align 4
  %139 = load i8*, i8** %t1, align 4
  %call246 = call %struct.variable* @assign_array_element(i8* %138, i8* %139, i32 0)
  br label %if.end249

if.else247:                                       ; preds = %if.end242
  %140 = load i8*, i8** %vname, align 4
  %141 = load i8*, i8** %t1, align 4
  %call248 = call %struct.variable* @bind_variable(i8* %140, i8* %141, i32 0)
  br label %if.end249

if.end249:                                        ; preds = %if.else247, %if.then245
  %142 = load i8*, i8** %vname, align 4
  call void @stupidly_hack_special_variables(i8* %142)
  %143 = load i8*, i8** %vname, align 4
  %144 = load i8*, i8** %name.addr, align 4
  %cmp250 = icmp ne i8* %143, %144
  br i1 %cmp250, label %if.then252, label %if.end253

if.then252:                                       ; preds = %if.end249
  %145 = load i8*, i8** %vname, align 4
  call void @sh_xfree(i8* %145, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6838)
  br label %if.end253

if.end253:                                        ; preds = %if.then252, %if.end249
  %146 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %146, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6841)
  %147 = load i8*, i8** %t1, align 4
  %148 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word254 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %148, i32 0, i32 0
  store i8* %147, i8** %word254, align 4
  %149 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  store %struct.word_desc* %149, %struct.word_desc** %retval, align 4
  br label %return

return:                                           ; preds = %if.end253, %if.then239, %if.then233, %if.then103
  %150 = load %struct.word_desc*, %struct.word_desc** %retval, align 4
  ret %struct.word_desc* %150
}

; Function Attrs: noinline nounwind
define internal void @parameter_brace_expand_error(i8* %name, i8* %value) #0 {
entry:
  %name.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %l = alloca %struct.word_list*, align 4
  %temp = alloca i8*, align 4
  store i8* %name, i8** %name.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 1, i32* @last_command_exit_value, align 4
  %0 = load i8*, i8** %value.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %value.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %value.addr, align 4
  %call = call %struct.word_list* @expand_string(i8* %3, i32 0)
  store %struct.word_list* %call, %struct.word_list** %l, align 4
  %4 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call2 = call i8* @string_list(%struct.word_list* %4)
  store i8* %call2, i8** %temp, align 4
  %5 = load i8*, i8** %name.addr, align 4
  %6 = load i8*, i8** %temp, align 4
  %tobool3 = icmp ne i8* %6, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %7 = load i8*, i8** %temp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0), %cond.false ]
  call void (i8*, ...) @report_error(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i8* %5, i8* %cond)
  br label %do.body

do.body:                                          ; preds = %cond.end
  %8 = load i8*, i8** %temp, align 4
  %tobool4 = icmp ne i8* %8, null
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %do.body
  %9 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6864)
  br label %if.end

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %10 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @dispose_words(%struct.word_list* %10)
  br label %if.end7

if.else:                                          ; preds = %land.lhs.true, %entry
  %call6 = call i8* @libintl_gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i32 0, i32 0))
  %11 = load i8*, i8** %name.addr, align 4
  call void (i8*, ...) @report_error(i8* %call6, i8* %11)
  br label %if.end7

if.end7:                                          ; preds = %if.else, %do.end
  %12 = load i8*, i8** %name.addr, align 4
  call void @sh_xfree(i8* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6872)
  br label %do.body8

do.body8:                                         ; preds = %if.end7
  %13 = load i8*, i8** %value.addr, align 4
  %tobool9 = icmp ne i8* %13, null
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %do.body8
  %14 = load i8*, i8** %value.addr, align 4
  call void @sh_xfree(i8* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6873)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %do.body8
  br label %do.end12

do.end12:                                         ; preds = %if.end11
  ret void
}

; Function Attrs: noinline nounwind
define internal i64 @array_length_reference(i8* %s) #0 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca i8*, align 4
  %len = alloca i32, align 4
  %ind = alloca i64, align 8
  %akey = alloca i8*, align 4
  %t = alloca i8*, align 4
  %c = alloca i8, align 1
  %array = alloca %struct.array*, align 4
  %h = alloca %struct.hash_table*, align 4
  %var = alloca %struct.variable*, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call %struct.variable* @array_variable_part(i8* %0, i8** %t, i32* %len)
  store %struct.variable* %call, %struct.variable** %var, align 4
  %1 = load %struct.variable*, %struct.variable** %var, align 4
  %cmp = icmp eq %struct.variable* %1, null
  br i1 %cmp, label %land.lhs.true8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %2, i32 0, i32 5
  %3 = load i32, i32* %attributes, align 4
  %and = and i32 %3, 4096
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true8, label %lor.lhs.false1

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %4 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes2 = getelementptr inbounds %struct.variable, %struct.variable* %4, i32 0, i32 5
  %5 = load i32, i32* %attributes2, align 4
  %and3 = and i32 %5, 64
  %cmp4 = icmp eq i32 %and3, 0
  br i1 %cmp4, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false1
  %6 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes5 = getelementptr inbounds %struct.variable, %struct.variable* %6, i32 0, i32 5
  %7 = load i32, i32* %attributes5, align 4
  %and6 = and i32 %7, 4
  %cmp7 = icmp eq i32 %and6, 0
  br i1 %cmp7, label %land.lhs.true8, label %if.else

land.lhs.true8:                                   ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %8 = load i32, i32* @unbound_vars_is_error, align 4
  %tobool9 = icmp ne i32 %8, 0
  br i1 %tobool9, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true8
  %9 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 -1
  store i8* %incdec.ptr, i8** %t, align 4
  %10 = load i8, i8* %incdec.ptr, align 1
  store i8 %10, i8* %c, align 1
  %11 = load i8*, i8** %t, align 4
  store i8 0, i8* %11, align 1
  store i32 1, i32* @last_command_exit_value, align 4
  %12 = load i8*, i8** %s.addr, align 4
  call void @err_unboundvar(i8* %12)
  %13 = load i8, i8* %c, align 1
  %14 = load i8*, i8** %t, align 4
  store i8 %13, i8* %14, align 1
  store i64 -1, i64* %retval, align 8
  br label %return

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true, %lor.lhs.false1
  %15 = load %struct.variable*, %struct.variable** %var, align 4
  %cmp10 = icmp eq %struct.variable* %15, null
  br i1 %cmp10, label %if.then15, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.else
  %16 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes12 = getelementptr inbounds %struct.variable, %struct.variable* %16, i32 0, i32 5
  %17 = load i32, i32* %attributes12, align 4
  %and13 = and i32 %17, 4096
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then15, label %if.end

if.then15:                                        ; preds = %lor.lhs.false11, %if.else
  store i64 0, i64* %retval, align 8
  br label %return

if.end:                                           ; preds = %lor.lhs.false11
  br label %if.end16

if.end16:                                         ; preds = %if.end
  %18 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes17 = getelementptr inbounds %struct.variable, %struct.variable* %18, i32 0, i32 5
  %19 = load i32, i32* %attributes17, align 4
  %and18 = and i32 %19, 4
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end16
  %20 = load %struct.variable*, %struct.variable** %var, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %20, i32 0, i32 1
  %21 = load i8*, i8** %value, align 4
  %22 = bitcast i8* %21 to %struct.array*
  br label %cond.end

cond.false:                                       ; preds = %if.end16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.array* [ %22, %cond.true ], [ null, %cond.false ]
  store %struct.array* %cond, %struct.array** %array, align 4
  %23 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes20 = getelementptr inbounds %struct.variable, %struct.variable* %23, i32 0, i32 5
  %24 = load i32, i32* %attributes20, align 4
  %and21 = and i32 %24, 64
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %cond.true23, label %cond.false25

cond.true23:                                      ; preds = %cond.end
  %25 = load %struct.variable*, %struct.variable** %var, align 4
  %value24 = getelementptr inbounds %struct.variable, %struct.variable* %25, i32 0, i32 1
  %26 = load i8*, i8** %value24, align 4
  %27 = bitcast i8* %26 to %struct.hash_table*
  br label %cond.end26

cond.false25:                                     ; preds = %cond.end
  br label %cond.end26

cond.end26:                                       ; preds = %cond.false25, %cond.true23
  %cond27 = phi %struct.hash_table* [ %27, %cond.true23 ], [ null, %cond.false25 ]
  store %struct.hash_table* %cond27, %struct.hash_table** %h, align 4
  %28 = load i8*, i8** %t, align 4
  %arrayidx = getelementptr inbounds i8, i8* %28, i32 0
  %29 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %29 to i32
  %cmp28 = icmp eq i32 %conv, 64
  br i1 %cmp28, label %land.lhs.true35, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %cond.end26
  %30 = load i8*, i8** %t, align 4
  %arrayidx31 = getelementptr inbounds i8, i8* %30, i32 0
  %31 = load i8, i8* %arrayidx31, align 1
  %conv32 = sext i8 %31 to i32
  %cmp33 = icmp eq i32 %conv32, 42
  br i1 %cmp33, label %land.lhs.true35, label %if.end68

land.lhs.true35:                                  ; preds = %lor.lhs.false30, %cond.end26
  %32 = load i8*, i8** %t, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %32, i32 1
  %33 = load i8, i8* %arrayidx36, align 1
  %conv37 = sext i8 %33 to i32
  %cmp38 = icmp eq i32 %conv37, 93
  br i1 %cmp38, label %if.then40, label %if.end68

if.then40:                                        ; preds = %land.lhs.true35
  %34 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes41 = getelementptr inbounds %struct.variable, %struct.variable* %34, i32 0, i32 5
  %35 = load i32, i32* %attributes41, align 4
  %and42 = and i32 %35, 64
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %if.else51

if.then44:                                        ; preds = %if.then40
  %36 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %tobool45 = icmp ne %struct.hash_table* %36, null
  br i1 %tobool45, label %cond.true46, label %cond.false47

cond.true46:                                      ; preds = %if.then44
  %37 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %nentries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 2
  %38 = load i32, i32* %nentries, align 4
  br label %cond.end48

cond.false47:                                     ; preds = %if.then44
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ %38, %cond.true46 ], [ 0, %cond.false47 ]
  %conv50 = sext i32 %cond49 to i64
  store i64 %conv50, i64* %retval, align 8
  br label %return

if.else51:                                        ; preds = %if.then40
  %39 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes52 = getelementptr inbounds %struct.variable, %struct.variable* %39, i32 0, i32 5
  %40 = load i32, i32* %attributes52, align 4
  %and53 = and i32 %40, 4
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %if.then55, label %if.else62

if.then55:                                        ; preds = %if.else51
  %41 = load %struct.array*, %struct.array** %array, align 4
  %tobool56 = icmp ne %struct.array* %41, null
  br i1 %tobool56, label %cond.true57, label %cond.false58

cond.true57:                                      ; preds = %if.then55
  %42 = load %struct.array*, %struct.array** %array, align 4
  %num_elements = getelementptr inbounds %struct.array, %struct.array* %42, i32 0, i32 2
  %43 = load i32, i32* %num_elements, align 8
  br label %cond.end59

cond.false58:                                     ; preds = %if.then55
  br label %cond.end59

cond.end59:                                       ; preds = %cond.false58, %cond.true57
  %cond60 = phi i32 [ %43, %cond.true57 ], [ 0, %cond.false58 ]
  %conv61 = sext i32 %cond60 to i64
  store i64 %conv61, i64* %retval, align 8
  br label %return

if.else62:                                        ; preds = %if.else51
  %44 = load %struct.variable*, %struct.variable** %var, align 4
  %value63 = getelementptr inbounds %struct.variable, %struct.variable* %44, i32 0, i32 1
  %45 = load i8*, i8** %value63, align 4
  %cmp64 = icmp ne i8* %45, null
  %cond66 = select i1 %cmp64, i32 1, i32 0
  %conv67 = sext i32 %cond66 to i64
  store i64 %conv67, i64* %retval, align 8
  br label %return

if.end68:                                         ; preds = %land.lhs.true35, %lor.lhs.false30
  %46 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes69 = getelementptr inbounds %struct.variable, %struct.variable* %46, i32 0, i32 5
  %47 = load i32, i32* %attributes69, align 4
  %and70 = and i32 %47, 64
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %if.then72, label %if.else90

if.then72:                                        ; preds = %if.end68
  %48 = load i8*, i8** %t, align 4
  %49 = load i32, i32* %len, align 4
  %sub = sub nsw i32 %49, 1
  %arrayidx73 = getelementptr inbounds i8, i8* %48, i32 %sub
  store i8 0, i8* %arrayidx73, align 1
  %50 = load i8*, i8** %t, align 4
  %call74 = call i8* @expand_assignment_string_to_string(i8* %50, i32 0)
  store i8* %call74, i8** %akey, align 4
  %51 = load i8*, i8** %t, align 4
  %52 = load i32, i32* %len, align 4
  %sub75 = sub nsw i32 %52, 1
  %arrayidx76 = getelementptr inbounds i8, i8* %51, i32 %sub75
  store i8 93, i8* %arrayidx76, align 1
  %53 = load i8*, i8** %akey, align 4
  %cmp77 = icmp eq i8* %53, null
  br i1 %cmp77, label %if.then83, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %if.then72
  %54 = load i8*, i8** %akey, align 4
  %55 = load i8, i8* %54, align 1
  %conv80 = sext i8 %55 to i32
  %cmp81 = icmp eq i32 %conv80, 0
  br i1 %cmp81, label %if.then83, label %if.end87

if.then83:                                        ; preds = %lor.lhs.false79, %if.then72
  %56 = load i8*, i8** %t, align 4
  call void @err_badarraysub(i8* %56)
  br label %do.body

do.body:                                          ; preds = %if.then83
  %57 = load i8*, i8** %akey, align 4
  %tobool84 = icmp ne i8* %57, null
  br i1 %tobool84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %do.body
  %58 = load i8*, i8** %akey, align 4
  call void @sh_xfree(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6367)
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end86
  store i64 -1, i64* %retval, align 8
  br label %return

if.end87:                                         ; preds = %lor.lhs.false79
  %59 = load %struct.variable*, %struct.variable** %var, align 4
  %value88 = getelementptr inbounds %struct.variable, %struct.variable* %59, i32 0, i32 1
  %60 = load i8*, i8** %value88, align 4
  %61 = bitcast i8* %60 to %struct.hash_table*
  %62 = load i8*, i8** %akey, align 4
  %call89 = call i8* @assoc_reference(%struct.hash_table* %61, i8* %62)
  store i8* %call89, i8** %t, align 4
  %63 = load i8*, i8** %akey, align 4
  call void @sh_xfree(i8* %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6371)
  br label %if.end122

if.else90:                                        ; preds = %if.end68
  %64 = load %struct.variable*, %struct.variable** %var, align 4
  %65 = load i8*, i8** %t, align 4
  %66 = load i32, i32* %len, align 4
  %call91 = call i64 @array_expand_index(%struct.variable* %64, i8* %65, i32 %66)
  store i64 %call91, i64* %ind, align 8
  %67 = load %struct.variable*, %struct.variable** %var, align 4
  %tobool92 = icmp ne %struct.variable* %67, null
  br i1 %tobool92, label %land.lhs.true93, label %if.end103

land.lhs.true93:                                  ; preds = %if.else90
  %68 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes94 = getelementptr inbounds %struct.variable, %struct.variable* %68, i32 0, i32 5
  %69 = load i32, i32* %attributes94, align 4
  %and95 = and i32 %69, 4
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %land.lhs.true97, label %if.end103

land.lhs.true97:                                  ; preds = %land.lhs.true93
  %70 = load i64, i64* %ind, align 8
  %cmp98 = icmp slt i64 %70, 0
  br i1 %cmp98, label %if.then100, label %if.end103

if.then100:                                       ; preds = %land.lhs.true97
  %71 = load %struct.variable*, %struct.variable** %var, align 4
  %value101 = getelementptr inbounds %struct.variable, %struct.variable* %71, i32 0, i32 1
  %72 = load i8*, i8** %value101, align 4
  %73 = bitcast i8* %72 to %struct.array*
  %max_index = getelementptr inbounds %struct.array, %struct.array* %73, i32 0, i32 1
  %74 = load i64, i64* %max_index, align 8
  %add = add nsw i64 %74, 1
  %75 = load i64, i64* %ind, align 8
  %add102 = add nsw i64 %add, %75
  store i64 %add102, i64* %ind, align 8
  br label %if.end103

if.end103:                                        ; preds = %if.then100, %land.lhs.true97, %land.lhs.true93, %if.else90
  %76 = load i64, i64* %ind, align 8
  %cmp104 = icmp slt i64 %76, 0
  br i1 %cmp104, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.end103
  %77 = load i8*, i8** %t, align 4
  call void @err_badarraysub(i8* %77)
  store i64 -1, i64* %retval, align 8
  br label %return

if.end107:                                        ; preds = %if.end103
  %78 = load %struct.variable*, %struct.variable** %var, align 4
  %attributes108 = getelementptr inbounds %struct.variable, %struct.variable* %78, i32 0, i32 5
  %79 = load i32, i32* %attributes108, align 4
  %and109 = and i32 %79, 4
  %tobool110 = icmp ne i32 %and109, 0
  br i1 %tobool110, label %if.then111, label %if.else113

if.then111:                                       ; preds = %if.end107
  %80 = load %struct.array*, %struct.array** %array, align 4
  %81 = load i64, i64* %ind, align 8
  %call112 = call i8* @array_reference(%struct.array* %80, i64 %81)
  store i8* %call112, i8** %t, align 4
  br label %if.end121

if.else113:                                       ; preds = %if.end107
  %82 = load i64, i64* %ind, align 8
  %cmp114 = icmp eq i64 %82, 0
  br i1 %cmp114, label %cond.true116, label %cond.false118

cond.true116:                                     ; preds = %if.else113
  %83 = load %struct.variable*, %struct.variable** %var, align 4
  %value117 = getelementptr inbounds %struct.variable, %struct.variable* %83, i32 0, i32 1
  %84 = load i8*, i8** %value117, align 4
  br label %cond.end119

cond.false118:                                    ; preds = %if.else113
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false118, %cond.true116
  %cond120 = phi i8* [ %84, %cond.true116 ], [ null, %cond.false118 ]
  store i8* %cond120, i8** %t, align 4
  br label %if.end121

if.end121:                                        ; preds = %cond.end119, %if.then111
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end87
  %call123 = call i32 @__ctype_get_mb_cur_max()
  %cmp124 = icmp ugt i32 %call123, 1
  br i1 %cmp124, label %cond.true126, label %cond.false144

cond.true126:                                     ; preds = %if.end122
  %85 = load i8*, i8** %t, align 4
  %tobool127 = icmp ne i8* %85, null
  br i1 %tobool127, label %land.lhs.true128, label %cond.false141

land.lhs.true128:                                 ; preds = %cond.true126
  %86 = load i8*, i8** %t, align 4
  %arrayidx129 = getelementptr inbounds i8, i8* %86, i32 0
  %87 = load i8, i8* %arrayidx129, align 1
  %conv130 = sext i8 %87 to i32
  %tobool131 = icmp ne i32 %conv130, 0
  br i1 %tobool131, label %cond.true132, label %cond.false141

cond.true132:                                     ; preds = %land.lhs.true128
  %88 = load i8*, i8** %t, align 4
  %arrayidx133 = getelementptr inbounds i8, i8* %88, i32 1
  %89 = load i8, i8* %arrayidx133, align 1
  %conv134 = sext i8 %89 to i32
  %tobool135 = icmp ne i32 %conv134, 0
  br i1 %tobool135, label %cond.true136, label %cond.false138

cond.true136:                                     ; preds = %cond.true132
  %90 = load i8*, i8** %t, align 4
  %call137 = call i32 @mbstrlen(i8* %90)
  br label %cond.end139

cond.false138:                                    ; preds = %cond.true132
  br label %cond.end139

cond.end139:                                      ; preds = %cond.false138, %cond.true136
  %cond140 = phi i32 [ %call137, %cond.true136 ], [ 1, %cond.false138 ]
  br label %cond.end142

cond.false141:                                    ; preds = %land.lhs.true128, %cond.true126
  br label %cond.end142

cond.end142:                                      ; preds = %cond.false141, %cond.end139
  %cond143 = phi i32 [ %cond140, %cond.end139 ], [ 0, %cond.false141 ]
  br label %cond.end169

cond.false144:                                    ; preds = %if.end122
  %91 = load i8*, i8** %t, align 4
  %tobool145 = icmp ne i8* %91, null
  br i1 %tobool145, label %land.lhs.true146, label %cond.false166

land.lhs.true146:                                 ; preds = %cond.false144
  %92 = load i8*, i8** %t, align 4
  %arrayidx147 = getelementptr inbounds i8, i8* %92, i32 0
  %93 = load i8, i8* %arrayidx147, align 1
  %conv148 = sext i8 %93 to i32
  %tobool149 = icmp ne i32 %conv148, 0
  br i1 %tobool149, label %cond.true150, label %cond.false166

cond.true150:                                     ; preds = %land.lhs.true146
  %94 = load i8*, i8** %t, align 4
  %arrayidx151 = getelementptr inbounds i8, i8* %94, i32 1
  %95 = load i8, i8* %arrayidx151, align 1
  %conv152 = sext i8 %95 to i32
  %tobool153 = icmp ne i32 %conv152, 0
  br i1 %tobool153, label %cond.true154, label %cond.false163

cond.true154:                                     ; preds = %cond.true150
  %96 = load i8*, i8** %t, align 4
  %arrayidx155 = getelementptr inbounds i8, i8* %96, i32 2
  %97 = load i8, i8* %arrayidx155, align 1
  %conv156 = sext i8 %97 to i32
  %tobool157 = icmp ne i32 %conv156, 0
  br i1 %tobool157, label %cond.true158, label %cond.false160

cond.true158:                                     ; preds = %cond.true154
  %98 = load i8*, i8** %t, align 4
  %call159 = call i32 @strlen(i8* %98)
  br label %cond.end161

cond.false160:                                    ; preds = %cond.true154
  br label %cond.end161

cond.end161:                                      ; preds = %cond.false160, %cond.true158
  %cond162 = phi i32 [ %call159, %cond.true158 ], [ 2, %cond.false160 ]
  br label %cond.end164

cond.false163:                                    ; preds = %cond.true150
  br label %cond.end164

cond.end164:                                      ; preds = %cond.false163, %cond.end161
  %cond165 = phi i32 [ %cond162, %cond.end161 ], [ 1, %cond.false163 ]
  br label %cond.end167

cond.false166:                                    ; preds = %land.lhs.true146, %cond.false144
  br label %cond.end167

cond.end167:                                      ; preds = %cond.false166, %cond.end164
  %cond168 = phi i32 [ %cond165, %cond.end164 ], [ 0, %cond.false166 ]
  br label %cond.end169

cond.end169:                                      ; preds = %cond.end167, %cond.end142
  %cond170 = phi i32 [ %cond143, %cond.end142 ], [ %cond168, %cond.end167 ]
  store i32 %cond170, i32* %len, align 4
  %99 = load i32, i32* %len, align 4
  %conv171 = sext i32 %99 to i64
  store i64 %conv171, i64* %retval, align 8
  br label %return

return:                                           ; preds = %cond.end169, %if.then106, %do.end, %if.else62, %cond.end59, %cond.end48, %if.then15, %if.then
  %100 = load i64, i64* %retval, align 8
  ret i64 %100
}

declare i32 @legal_number(i8*, i64*) #1

declare i32 @mbstrlen(i8*) #1

declare %struct.variable* @array_variable_part(i8*, i8**, i32*) #1

declare void @err_badarraysub(i8*) #1

declare i64 @array_expand_index(%struct.variable*, i8*, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @parameter_brace_find_indir(i8* %name, i32 %var_is_special, i32 %quoted, i32 %find_nameref) #0 {
entry:
  %retval = alloca i8*, align 4
  %name.addr = alloca i8*, align 4
  %var_is_special.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %find_nameref.addr = alloca i32, align 4
  %temp = alloca i8*, align 4
  %t = alloca i8*, align 4
  %w = alloca %struct.word_desc*, align 4
  %v = alloca %struct.variable*, align 4
  store i8* %name, i8** %name.addr, align 4
  store i32 %var_is_special, i32* %var_is_special.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %find_nameref, i32* %find_nameref.addr, align 4
  %0 = load i32, i32* %find_nameref.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %var_is_special.addr, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %land.lhs.true1, label %if.end

land.lhs.true1:                                   ; preds = %land.lhs.true
  %2 = load i8*, i8** %name.addr, align 4
  %call = call %struct.variable* @find_variable_last_nameref(i8* %2, i32 0)
  store %struct.variable* %call, %struct.variable** %v, align 4
  %tobool2 = icmp ne %struct.variable* %call, null
  br i1 %tobool2, label %land.lhs.true3, label %if.end

land.lhs.true3:                                   ; preds = %land.lhs.true1
  %3 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %3, i32 0, i32 5
  %4 = load i32, i32* %attributes, align 4
  %and = and i32 %4, 2048
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %5 = load %struct.variable*, %struct.variable** %v, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %5, i32 0, i32 1
  %6 = load i8*, i8** %value, align 4
  store i8* %6, i8** %t, align 4
  %tobool6 = icmp ne i8* %6, null
  br i1 %tobool6, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %7 = load i8*, i8** %t, align 4
  %8 = load i8, i8* %7, align 1
  %conv = sext i8 %8 to i32
  %tobool8 = icmp ne i32 %conv, 0
  br i1 %tobool8, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true7
  %9 = load i8*, i8** %t, align 4
  %call9 = call i32 @strlen(i8* %9)
  %add = add i32 1, %call9
  %call10 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6623)
  %10 = load i8*, i8** %t, align 4
  %call11 = call i8* @strcpy(i8* %call10, i8* %10)
  store i8* %call11, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true7, %land.lhs.true5, %land.lhs.true3, %land.lhs.true1, %land.lhs.true, %entry
  %11 = load i8*, i8** %name.addr, align 4
  %12 = load i32, i32* %var_is_special.addr, align 4
  %13 = load i32, i32* %quoted.addr, align 4
  %call12 = call %struct.word_desc* @parameter_brace_expand_word(i8* %11, i32 %12, i32 %13, i32 2, i64* null)
  store %struct.word_desc* %call12, %struct.word_desc** %w, align 4
  %14 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %14, i32 0, i32 0
  %15 = load i8*, i8** %word, align 4
  store i8* %15, i8** %t, align 4
  %16 = load i8*, i8** %t, align 4
  %tobool13 = icmp ne i8* %16, null
  br i1 %tobool13, label %if.then14, label %if.end19

if.then14:                                        ; preds = %if.end
  %17 = load i32, i32* %quoted.addr, align 4
  %and15 = and i32 %17, 3
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then14
  %18 = load i8*, i8** %t, align 4
  %call17 = call i8* @dequote_string(i8* %18)
  br label %cond.end

cond.false:                                       ; preds = %if.then14
  %19 = load i8*, i8** %t, align 4
  %call18 = call i8* @dequote_escapes(i8* %19)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call17, %cond.true ], [ %call18, %cond.false ]
  store i8* %cond, i8** %temp, align 4
  %20 = load i8*, i8** %t, align 4
  call void @sh_xfree(i8* %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 6636)
  %21 = load i8*, i8** %temp, align 4
  store i8* %21, i8** %t, align 4
  br label %if.end19

if.end19:                                         ; preds = %cond.end, %if.end
  %22 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  call void @dispose_word_desc(%struct.word_desc* %22)
  %23 = load i8*, i8** %t, align 4
  store i8* %23, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end19, %if.then
  %24 = load i8*, i8** %retval, align 4
  ret i8* %24
}

; Function Attrs: noinline nounwind
define internal i32 @get_var_and_type(i8* %varname, i8* %value, i64 %ind, i32 %quoted, i32 %flags, %struct.variable** %varp, i8** %valp) #0 {
entry:
  %retval = alloca i32, align 4
  %varname.addr = alloca i8*, align 4
  %value.addr = alloca i8*, align 4
  %ind.addr = alloca i64, align 8
  %quoted.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %varp.addr = alloca %struct.variable**, align 4
  %valp.addr = alloca i8**, align 4
  %vtype = alloca i32, align 4
  %want_indir = alloca i32, align 4
  %temp = alloca i8*, align 4
  %vname = alloca i8*, align 4
  %wd = alloca %struct.word_desc*, align 4
  %v = alloca %struct.variable*, align 4
  %lind = alloca i64, align 8
  store i8* %varname, i8** %varname.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i64 %ind, i64* %ind.addr, align 8
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store %struct.variable** %varp, %struct.variable*** %varp.addr, align 4
  store i8** %valp, i8*** %valp.addr, align 4
  %0 = load i8*, i8** %varname.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 33
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load i8*, i8** %varname.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 1
  %3 = load i8, i8* %arrayidx, align 1
  %conv2 = zext i8 %3 to i32
  %call = call i32 @isalpha(i32 %conv2) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.rhs
  %4 = load i8*, i8** %varname.addr, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx3, align 1
  %conv4 = zext i8 %5 to i32
  %cmp5 = icmp eq i32 %conv4, 95
  br i1 %cmp5, label %lor.end41, label %lor.lhs.false7

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %6 = load i8*, i8** %varname.addr, align 4
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i32 1
  %7 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %7 to i32
  %cmp10 = icmp sge i32 %conv9, 48
  br i1 %cmp10, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %lor.lhs.false7
  %8 = load i8*, i8** %varname.addr, align 4
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i32 1
  %9 = load i8, i8* %arrayidx12, align 1
  %conv13 = sext i8 %9 to i32
  %cmp14 = icmp sle i32 %conv13, 57
  br i1 %cmp14, label %lor.end41, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false7
  %10 = load i32, i32* @posixly_correct, align 4
  %cmp16 = icmp eq i32 %10, 0
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false23

land.lhs.true18:                                  ; preds = %lor.rhs
  %11 = load i8*, i8** %varname.addr, align 4
  %arrayidx19 = getelementptr inbounds i8, i8* %11, i32 1
  %12 = load i8, i8* %arrayidx19, align 1
  %conv20 = sext i8 %12 to i32
  %cmp21 = icmp eq i32 %conv20, 35
  br i1 %cmp21, label %lor.end, label %lor.lhs.false23

lor.lhs.false23:                                  ; preds = %land.lhs.true18, %lor.rhs
  %13 = load i32, i32* @posixly_correct, align 4
  %cmp24 = icmp eq i32 %13, 0
  br i1 %cmp24, label %land.lhs.true26, label %lor.lhs.false31

land.lhs.true26:                                  ; preds = %lor.lhs.false23
  %14 = load i8*, i8** %varname.addr, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %14, i32 1
  %15 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %15 to i32
  %cmp29 = icmp eq i32 %conv28, 63
  br i1 %cmp29, label %lor.end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true26, %lor.lhs.false23
  %16 = load i8*, i8** %varname.addr, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %16, i32 1
  %17 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %17 to i32
  %cmp34 = icmp eq i32 %conv33, 64
  br i1 %cmp34, label %lor.end, label %lor.rhs36

lor.rhs36:                                        ; preds = %lor.lhs.false31
  %18 = load i8*, i8** %varname.addr, align 4
  %arrayidx37 = getelementptr inbounds i8, i8* %18, i32 1
  %19 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %19 to i32
  %cmp39 = icmp eq i32 %conv38, 42
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs36, %lor.lhs.false31, %land.lhs.true26, %land.lhs.true18
  %20 = phi i1 [ true, %lor.lhs.false31 ], [ true, %land.lhs.true26 ], [ true, %land.lhs.true18 ], [ %cmp39, %lor.rhs36 ]
  br label %lor.end41

lor.end41:                                        ; preds = %lor.end, %land.lhs.true, %lor.lhs.false, %land.rhs
  %21 = phi i1 [ true, %land.lhs.true ], [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %20, %lor.end ]
  br label %land.end

land.end:                                         ; preds = %lor.end41, %entry
  %22 = phi i1 [ false, %entry ], [ %21, %lor.end41 ]
  %land.ext = zext i1 %22 to i32
  store i32 %land.ext, i32* %want_indir, align 4
  %23 = load i32, i32* %want_indir, align 4
  %tobool42 = icmp ne i32 %23, 0
  br i1 %tobool42, label %if.then, label %if.else

if.then:                                          ; preds = %land.end
  %24 = load i8*, i8** %varname.addr, align 4
  %add.ptr = getelementptr inbounds i8, i8* %24, i32 1
  %25 = load i8*, i8** %varname.addr, align 4
  %26 = load i8, i8* %25, align 1
  %conv43 = sext i8 %26 to i32
  %tobool44 = icmp ne i32 %conv43, 0
  br i1 %tobool44, label %land.rhs45, label %land.end99

land.rhs45:                                       ; preds = %if.then
  %27 = load i8*, i8** %varname.addr, align 4
  %28 = load i8, i8* %27, align 1
  %conv46 = sext i8 %28 to i32
  %cmp47 = icmp sge i32 %conv46, 48
  br i1 %cmp47, label %land.lhs.true49, label %lor.lhs.false56

land.lhs.true49:                                  ; preds = %land.rhs45
  %29 = load i8*, i8** %varname.addr, align 4
  %30 = load i8, i8* %29, align 1
  %conv50 = sext i8 %30 to i32
  %cmp51 = icmp sle i32 %conv50, 57
  br i1 %cmp51, label %land.lhs.true53, label %lor.lhs.false56

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %31 = load i8*, i8** %varname.addr, align 4
  %call54 = call i32 @all_digits(i8* %31)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %lor.end98, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %land.lhs.true53, %land.lhs.true49, %land.rhs45
  %32 = load i8*, i8** %varname.addr, align 4
  %arrayidx57 = getelementptr inbounds i8, i8* %32, i32 1
  %33 = load i8, i8* %arrayidx57, align 1
  %conv58 = sext i8 %33 to i32
  %cmp59 = icmp eq i32 %conv58, 0
  br i1 %cmp59, label %land.lhs.true61, label %lor.rhs64

land.lhs.true61:                                  ; preds = %lor.lhs.false56
  %34 = load i8*, i8** %varname.addr, align 4
  %35 = load i8, i8* %34, align 1
  %idxprom = zext i8 %35 to i32
  %arrayidx62 = getelementptr inbounds [0 x i32], [0 x i32]* @sh_syntaxtab, i32 0, i32 %idxprom
  %36 = load i32, i32* %arrayidx62, align 4
  %and = and i32 %36, 2048
  %tobool63 = icmp ne i32 %and, 0
  br i1 %tobool63, label %lor.end98, label %lor.rhs64

lor.rhs64:                                        ; preds = %land.lhs.true61, %lor.lhs.false56
  %37 = load i8*, i8** %varname.addr, align 4
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i32 2
  %38 = load i8, i8* %arrayidx65, align 1
  %conv66 = sext i8 %38 to i32
  %cmp67 = icmp eq i32 %conv66, 0
  br i1 %cmp67, label %land.rhs69, label %land.end96

land.rhs69:                                       ; preds = %lor.rhs64
  %39 = load i32, i32* @posixly_correct, align 4
  %cmp70 = icmp eq i32 %39, 0
  br i1 %cmp70, label %land.lhs.true72, label %lor.lhs.false77

land.lhs.true72:                                  ; preds = %land.rhs69
  %40 = load i8*, i8** %varname.addr, align 4
  %arrayidx73 = getelementptr inbounds i8, i8* %40, i32 1
  %41 = load i8, i8* %arrayidx73, align 1
  %conv74 = sext i8 %41 to i32
  %cmp75 = icmp eq i32 %conv74, 35
  br i1 %cmp75, label %lor.end95, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %land.lhs.true72, %land.rhs69
  %42 = load i32, i32* @posixly_correct, align 4
  %cmp78 = icmp eq i32 %42, 0
  br i1 %cmp78, label %land.lhs.true80, label %lor.lhs.false85

land.lhs.true80:                                  ; preds = %lor.lhs.false77
  %43 = load i8*, i8** %varname.addr, align 4
  %arrayidx81 = getelementptr inbounds i8, i8* %43, i32 1
  %44 = load i8, i8* %arrayidx81, align 1
  %conv82 = sext i8 %44 to i32
  %cmp83 = icmp eq i32 %conv82, 63
  br i1 %cmp83, label %lor.end95, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %land.lhs.true80, %lor.lhs.false77
  %45 = load i8*, i8** %varname.addr, align 4
  %arrayidx86 = getelementptr inbounds i8, i8* %45, i32 1
  %46 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %46 to i32
  %cmp88 = icmp eq i32 %conv87, 64
  br i1 %cmp88, label %lor.end95, label %lor.rhs90

lor.rhs90:                                        ; preds = %lor.lhs.false85
  %47 = load i8*, i8** %varname.addr, align 4
  %arrayidx91 = getelementptr inbounds i8, i8* %47, i32 1
  %48 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %48 to i32
  %cmp93 = icmp eq i32 %conv92, 42
  br label %lor.end95

lor.end95:                                        ; preds = %lor.rhs90, %lor.lhs.false85, %land.lhs.true80, %land.lhs.true72
  %49 = phi i1 [ true, %lor.lhs.false85 ], [ true, %land.lhs.true80 ], [ true, %land.lhs.true72 ], [ %cmp93, %lor.rhs90 ]
  br label %land.end96

land.end96:                                       ; preds = %lor.end95, %lor.rhs64
  %50 = phi i1 [ false, %lor.rhs64 ], [ %49, %lor.end95 ]
  br label %lor.end98

lor.end98:                                        ; preds = %land.end96, %land.lhs.true61, %land.lhs.true53
  %51 = phi i1 [ true, %land.lhs.true61 ], [ true, %land.lhs.true53 ], [ %50, %land.end96 ]
  br label %land.end99

land.end99:                                       ; preds = %lor.end98, %if.then
  %52 = phi i1 [ false, %if.then ], [ %51, %lor.end98 ]
  %land.ext100 = zext i1 %52 to i32
  %53 = load i32, i32* %quoted.addr, align 4
  %call101 = call i8* @parameter_brace_find_indir(i8* %add.ptr, i32 %land.ext100, i32 %53, i32 1)
  store i8* %call101, i8** %vname, align 4
  br label %if.end

if.else:                                          ; preds = %land.end
  %54 = load i8*, i8** %varname.addr, align 4
  store i8* %54, i8** %vname, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %land.end99
  %55 = load i8*, i8** %vname, align 4
  %cmp102 = icmp eq i8* %55, null
  br i1 %cmp102, label %if.then104, label %if.end105

if.then104:                                       ; preds = %if.end
  store i32 0, i32* %vtype, align 4
  %56 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* null, %struct.variable** %56, align 4
  %57 = load i8**, i8*** %valp.addr, align 4
  store i8* null, i8** %57, align 4
  %58 = load i32, i32* %vtype, align 4
  store i32 %58, i32* %retval, align 4
  br label %return

if.end105:                                        ; preds = %if.end
  %59 = load i8*, i8** %vname, align 4
  %arrayidx106 = getelementptr inbounds i8, i8* %59, i32 0
  %60 = load i8, i8* %arrayidx106, align 1
  %conv107 = sext i8 %60 to i32
  %cmp108 = icmp eq i32 %conv107, 64
  br i1 %cmp108, label %land.rhs115, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.end105
  %61 = load i8*, i8** %vname, align 4
  %arrayidx111 = getelementptr inbounds i8, i8* %61, i32 0
  %62 = load i8, i8* %arrayidx111, align 1
  %conv112 = sext i8 %62 to i32
  %cmp113 = icmp eq i32 %conv112, 42
  br i1 %cmp113, label %land.rhs115, label %land.end120

land.rhs115:                                      ; preds = %lor.lhs.false110, %if.end105
  %63 = load i8*, i8** %vname, align 4
  %arrayidx116 = getelementptr inbounds i8, i8* %63, i32 1
  %64 = load i8, i8* %arrayidx116, align 1
  %conv117 = sext i8 %64 to i32
  %cmp118 = icmp eq i32 %conv117, 0
  br label %land.end120

land.end120:                                      ; preds = %land.rhs115, %lor.lhs.false110
  %65 = phi i1 [ false, %lor.lhs.false110 ], [ %cmp118, %land.rhs115 ]
  %land.ext121 = zext i1 %65 to i32
  store i32 %land.ext121, i32* %vtype, align 4
  %66 = load i32, i32* %vtype, align 4
  %cmp122 = icmp eq i32 %66, 1
  br i1 %cmp122, label %land.lhs.true124, label %if.end130

land.lhs.true124:                                 ; preds = %land.end120
  %67 = load i8*, i8** %vname, align 4
  %arrayidx125 = getelementptr inbounds i8, i8* %67, i32 0
  %68 = load i8, i8* %arrayidx125, align 1
  %conv126 = sext i8 %68 to i32
  %cmp127 = icmp eq i32 %conv126, 42
  br i1 %cmp127, label %if.then129, label %if.end130

if.then129:                                       ; preds = %land.lhs.true124
  %69 = load i32, i32* %vtype, align 4
  %or = or i32 %69, 128
  store i32 %or, i32* %vtype, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.then129, %land.lhs.true124, %land.end120
  %70 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* null, %struct.variable** %70, align 4
  %71 = load i8*, i8** %vname, align 4
  %call131 = call i32 @valid_array_reference(i8* %71, i32 0)
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.then133, label %if.else219

if.then133:                                       ; preds = %if.end130
  %72 = load i8*, i8** %vname, align 4
  %call134 = call %struct.variable* @array_variable_part(i8* %72, i8** %temp, i32* null)
  store %struct.variable* %call134, %struct.variable** %v, align 4
  %73 = load i64, i64* %ind.addr, align 8
  %cmp135 = icmp ne i64 %73, -9223372036854775808
  br i1 %cmp135, label %land.lhs.true137, label %cond.false

land.lhs.true137:                                 ; preds = %if.then133
  %74 = load i32, i32* %flags.addr, align 4
  %and138 = and i32 %74, 4
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true137
  %75 = load i64, i64* %ind.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true137, %if.then133
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %75, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* %lind, align 8
  %76 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool140 = icmp ne %struct.variable* %76, null
  br i1 %tobool140, label %land.lhs.true141, label %if.end145

land.lhs.true141:                                 ; preds = %cond.end
  %77 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %77, i32 0, i32 5
  %78 = load i32, i32* %attributes, align 4
  %and142 = and i32 %78, 4096
  %tobool143 = icmp ne i32 %and142, 0
  br i1 %tobool143, label %if.then144, label %if.end145

if.then144:                                       ; preds = %land.lhs.true141
  store i32 3, i32* %vtype, align 4
  %79 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* null, %struct.variable** %79, align 4
  %80 = load i8**, i8*** %valp.addr, align 4
  store i8* null, i8** %80, align 4
  br label %if.end145

if.end145:                                        ; preds = %if.then144, %land.lhs.true141, %cond.end
  %81 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool146 = icmp ne %struct.variable* %81, null
  br i1 %tobool146, label %land.lhs.true147, label %if.else190

land.lhs.true147:                                 ; preds = %if.end145
  %82 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes148 = getelementptr inbounds %struct.variable, %struct.variable* %82, i32 0, i32 5
  %83 = load i32, i32* %attributes148, align 4
  %and149 = and i32 %83, 4
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %if.then155, label %lor.lhs.false151

lor.lhs.false151:                                 ; preds = %land.lhs.true147
  %84 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes152 = getelementptr inbounds %struct.variable, %struct.variable* %84, i32 0, i32 5
  %85 = load i32, i32* %attributes152, align 4
  %and153 = and i32 %85, 64
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %if.then155, label %if.else190

if.then155:                                       ; preds = %lor.lhs.false151, %land.lhs.true147
  %86 = load i8*, i8** %temp, align 4
  %arrayidx156 = getelementptr inbounds i8, i8* %86, i32 0
  %87 = load i8, i8* %arrayidx156, align 1
  %conv157 = sext i8 %87 to i32
  %cmp158 = icmp eq i32 %conv157, 64
  br i1 %cmp158, label %land.lhs.true165, label %lor.lhs.false160

lor.lhs.false160:                                 ; preds = %if.then155
  %88 = load i8*, i8** %temp, align 4
  %arrayidx161 = getelementptr inbounds i8, i8* %88, i32 0
  %89 = load i8, i8* %arrayidx161, align 1
  %conv162 = sext i8 %89 to i32
  %cmp163 = icmp eq i32 %conv162, 42
  br i1 %cmp163, label %land.lhs.true165, label %if.else187

land.lhs.true165:                                 ; preds = %lor.lhs.false160, %if.then155
  %90 = load i8*, i8** %temp, align 4
  %arrayidx166 = getelementptr inbounds i8, i8* %90, i32 1
  %91 = load i8, i8* %arrayidx166, align 1
  %conv167 = sext i8 %91 to i32
  %cmp168 = icmp eq i32 %conv167, 93
  br i1 %cmp168, label %if.then170, label %if.else187

if.then170:                                       ; preds = %land.lhs.true165
  store i32 2, i32* %vtype, align 4
  %92 = load i8*, i8** %temp, align 4
  %arrayidx171 = getelementptr inbounds i8, i8* %92, i32 0
  %93 = load i8, i8* %arrayidx171, align 1
  %conv172 = sext i8 %93 to i32
  %cmp173 = icmp eq i32 %conv172, 42
  br i1 %cmp173, label %if.then175, label %if.end177

if.then175:                                       ; preds = %if.then170
  %94 = load i32, i32* %vtype, align 4
  %or176 = or i32 %94, 128
  store i32 %or176, i32* %vtype, align 4
  br label %if.end177

if.end177:                                        ; preds = %if.then175, %if.then170
  %95 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes178 = getelementptr inbounds %struct.variable, %struct.variable* %95, i32 0, i32 5
  %96 = load i32, i32* %attributes178, align 4
  %and179 = and i32 %96, 4
  %tobool180 = icmp ne i32 %and179, 0
  br i1 %tobool180, label %cond.true181, label %cond.false183

cond.true181:                                     ; preds = %if.end177
  %97 = load %struct.variable*, %struct.variable** %v, align 4
  %value182 = getelementptr inbounds %struct.variable, %struct.variable* %97, i32 0, i32 1
  %98 = load i8*, i8** %value182, align 4
  %99 = bitcast i8* %98 to %struct.array*
  %100 = bitcast %struct.array* %99 to i8*
  br label %cond.end185

cond.false183:                                    ; preds = %if.end177
  %101 = load %struct.variable*, %struct.variable** %v, align 4
  %value184 = getelementptr inbounds %struct.variable, %struct.variable* %101, i32 0, i32 1
  %102 = load i8*, i8** %value184, align 4
  %103 = bitcast i8* %102 to %struct.hash_table*
  %104 = bitcast %struct.hash_table* %103 to i8*
  br label %cond.end185

cond.end185:                                      ; preds = %cond.false183, %cond.true181
  %cond186 = phi i8* [ %100, %cond.true181 ], [ %104, %cond.false183 ]
  %105 = load i8**, i8*** %valp.addr, align 4
  store i8* %cond186, i8** %105, align 4
  br label %if.end189

if.else187:                                       ; preds = %land.lhs.true165, %lor.lhs.false160
  store i32 3, i32* %vtype, align 4
  %106 = load i8*, i8** %vname, align 4
  %107 = load i32, i32* %flags.addr, align 4
  %call188 = call i8* @array_value(i8* %106, i32 1, i32 %107, i32* null, i64* %lind)
  %108 = load i8**, i8*** %valp.addr, align 4
  store i8* %call188, i8** %108, align 4
  br label %if.end189

if.end189:                                        ; preds = %if.else187, %cond.end185
  %109 = load %struct.variable*, %struct.variable** %v, align 4
  %110 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* %109, %struct.variable** %110, align 4
  br label %if.end218

if.else190:                                       ; preds = %lor.lhs.false151, %if.end145
  %111 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool191 = icmp ne %struct.variable* %111, null
  br i1 %tobool191, label %land.lhs.true192, label %if.else215

land.lhs.true192:                                 ; preds = %if.else190
  %112 = load i8*, i8** %temp, align 4
  %arrayidx193 = getelementptr inbounds i8, i8* %112, i32 0
  %113 = load i8, i8* %arrayidx193, align 1
  %conv194 = sext i8 %113 to i32
  %cmp195 = icmp eq i32 %conv194, 64
  br i1 %cmp195, label %land.lhs.true202, label %lor.lhs.false197

lor.lhs.false197:                                 ; preds = %land.lhs.true192
  %114 = load i8*, i8** %temp, align 4
  %arrayidx198 = getelementptr inbounds i8, i8* %114, i32 0
  %115 = load i8, i8* %arrayidx198, align 1
  %conv199 = sext i8 %115 to i32
  %cmp200 = icmp eq i32 %conv199, 42
  br i1 %cmp200, label %land.lhs.true202, label %if.else215

land.lhs.true202:                                 ; preds = %lor.lhs.false197, %land.lhs.true192
  %116 = load i8*, i8** %temp, align 4
  %arrayidx203 = getelementptr inbounds i8, i8* %116, i32 1
  %117 = load i8, i8* %arrayidx203, align 1
  %conv204 = sext i8 %117 to i32
  %cmp205 = icmp eq i32 %conv204, 93
  br i1 %cmp205, label %if.then207, label %if.else215

if.then207:                                       ; preds = %land.lhs.true202
  store i32 0, i32* %vtype, align 4
  %118 = load %struct.variable*, %struct.variable** %v, align 4
  %119 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* %118, %struct.variable** %119, align 4
  %120 = load i32, i32* %quoted.addr, align 4
  %and208 = and i32 %120, 3
  %tobool209 = icmp ne i32 %and208, 0
  br i1 %tobool209, label %if.then210, label %if.else212

if.then210:                                       ; preds = %if.then207
  %121 = load i8*, i8** %value.addr, align 4
  %call211 = call i8* @dequote_string(i8* %121)
  %122 = load i8**, i8*** %valp.addr, align 4
  store i8* %call211, i8** %122, align 4
  br label %if.end214

if.else212:                                       ; preds = %if.then207
  %123 = load i8*, i8** %value.addr, align 4
  %call213 = call i8* @dequote_escapes(i8* %123)
  %124 = load i8**, i8*** %valp.addr, align 4
  store i8* %call213, i8** %124, align 4
  br label %if.end214

if.end214:                                        ; preds = %if.else212, %if.then210
  br label %if.end217

if.else215:                                       ; preds = %land.lhs.true202, %lor.lhs.false197, %if.else190
  store i32 3, i32* %vtype, align 4
  %125 = load %struct.variable*, %struct.variable** %v, align 4
  %126 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* %125, %struct.variable** %126, align 4
  %127 = load i8*, i8** %vname, align 4
  %128 = load i32, i32* %flags.addr, align 4
  %call216 = call i8* @array_value(i8* %127, i32 1, i32 %128, i32* null, i64* %lind)
  %129 = load i8**, i8*** %valp.addr, align 4
  store i8* %call216, i8** %129, align 4
  br label %if.end217

if.end217:                                        ; preds = %if.else215, %if.end214
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.end189
  br label %if.end264

if.else219:                                       ; preds = %if.end130
  %130 = load i8*, i8** %vname, align 4
  %call220 = call %struct.variable* @find_variable(i8* %130)
  store %struct.variable* %call220, %struct.variable** %v, align 4
  %tobool221 = icmp ne %struct.variable* %call220, null
  br i1 %tobool221, label %land.lhs.true222, label %if.else247

land.lhs.true222:                                 ; preds = %if.else219
  %131 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes223 = getelementptr inbounds %struct.variable, %struct.variable* %131, i32 0, i32 5
  %132 = load i32, i32* %attributes223, align 4
  %and224 = and i32 %132, 4096
  %cmp225 = icmp eq i32 %and224, 0
  br i1 %cmp225, label %land.lhs.true227, label %if.else247

land.lhs.true227:                                 ; preds = %land.lhs.true222
  %133 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes228 = getelementptr inbounds %struct.variable, %struct.variable* %133, i32 0, i32 5
  %134 = load i32, i32* %attributes228, align 4
  %and229 = and i32 %134, 64
  %tobool230 = icmp ne i32 %and229, 0
  br i1 %tobool230, label %if.then235, label %lor.lhs.false231

lor.lhs.false231:                                 ; preds = %land.lhs.true227
  %135 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes232 = getelementptr inbounds %struct.variable, %struct.variable* %135, i32 0, i32 5
  %136 = load i32, i32* %attributes232, align 4
  %and233 = and i32 %136, 4
  %tobool234 = icmp ne i32 %and233, 0
  br i1 %tobool234, label %if.then235, label %if.else247

if.then235:                                       ; preds = %lor.lhs.false231, %land.lhs.true227
  store i32 3, i32* %vtype, align 4
  %137 = load %struct.variable*, %struct.variable** %v, align 4
  %138 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* %137, %struct.variable** %138, align 4
  %139 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes236 = getelementptr inbounds %struct.variable, %struct.variable* %139, i32 0, i32 5
  %140 = load i32, i32* %attributes236, align 4
  %and237 = and i32 %140, 64
  %tobool238 = icmp ne i32 %and237, 0
  br i1 %tobool238, label %cond.true239, label %cond.false242

cond.true239:                                     ; preds = %if.then235
  %141 = load %struct.variable*, %struct.variable** %v, align 4
  %value240 = getelementptr inbounds %struct.variable, %struct.variable* %141, i32 0, i32 1
  %142 = load i8*, i8** %value240, align 4
  %143 = bitcast i8* %142 to %struct.hash_table*
  %call241 = call i8* @assoc_reference(%struct.hash_table* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0))
  br label %cond.end245

cond.false242:                                    ; preds = %if.then235
  %144 = load %struct.variable*, %struct.variable** %v, align 4
  %value243 = getelementptr inbounds %struct.variable, %struct.variable* %144, i32 0, i32 1
  %145 = load i8*, i8** %value243, align 4
  %146 = bitcast i8* %145 to %struct.array*
  %call244 = call i8* @array_reference(%struct.array* %146, i64 0)
  br label %cond.end245

cond.end245:                                      ; preds = %cond.false242, %cond.true239
  %cond246 = phi i8* [ %call241, %cond.true239 ], [ %call244, %cond.false242 ]
  %147 = load i8**, i8*** %valp.addr, align 4
  store i8* %cond246, i8** %147, align 4
  br label %if.end263

if.else247:                                       ; preds = %lor.lhs.false231, %land.lhs.true222, %if.else219
  %148 = load i8*, i8** %value.addr, align 4
  %tobool248 = icmp ne i8* %148, null
  br i1 %tobool248, label %land.lhs.true249, label %if.else261

land.lhs.true249:                                 ; preds = %if.else247
  %149 = load i32, i32* %vtype, align 4
  %cmp250 = icmp eq i32 %149, 0
  br i1 %cmp250, label %if.then252, label %if.else261

if.then252:                                       ; preds = %land.lhs.true249
  %150 = load i8*, i8** %vname, align 4
  %call253 = call %struct.variable* @find_variable(i8* %150)
  %151 = load %struct.variable**, %struct.variable*** %varp.addr, align 4
  store %struct.variable* %call253, %struct.variable** %151, align 4
  %152 = load i32, i32* %quoted.addr, align 4
  %and254 = and i32 %152, 3
  %tobool255 = icmp ne i32 %and254, 0
  br i1 %tobool255, label %if.then256, label %if.else258

if.then256:                                       ; preds = %if.then252
  %153 = load i8*, i8** %value.addr, align 4
  %call257 = call i8* @dequote_string(i8* %153)
  %154 = load i8**, i8*** %valp.addr, align 4
  store i8* %call257, i8** %154, align 4
  br label %if.end260

if.else258:                                       ; preds = %if.then252
  %155 = load i8*, i8** %value.addr, align 4
  %call259 = call i8* @dequote_escapes(i8* %155)
  %156 = load i8**, i8*** %valp.addr, align 4
  store i8* %call259, i8** %156, align 4
  br label %if.end260

if.end260:                                        ; preds = %if.else258, %if.then256
  br label %if.end262

if.else261:                                       ; preds = %land.lhs.true249, %if.else247
  %157 = load i8*, i8** %value.addr, align 4
  %158 = load i8**, i8*** %valp.addr, align 4
  store i8* %157, i8** %158, align 4
  br label %if.end262

if.end262:                                        ; preds = %if.else261, %if.end260
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %cond.end245
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.end218
  %159 = load i32, i32* %want_indir, align 4
  %tobool265 = icmp ne i32 %159, 0
  br i1 %tobool265, label %if.then266, label %if.end267

if.then266:                                       ; preds = %if.end264
  %160 = load i8*, i8** %vname, align 4
  call void @sh_xfree(i8* %160, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7249)
  br label %if.end267

if.end267:                                        ; preds = %if.then266, %if.end264
  %161 = load i32, i32* %vtype, align 4
  store i32 %161, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end267, %if.then104
  %162 = load i32, i32* %retval, align 4
  ret i32 %162
}

; Function Attrs: noinline nounwind
define internal i32 @verify_substring_values(%struct.variable* %v, i8* %value, i8* %substr, i32 %vtype, i64* %e1p, i64* %e2p) #0 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct.variable*, align 4
  %value.addr = alloca i8*, align 4
  %substr.addr = alloca i8*, align 4
  %vtype.addr = alloca i32, align 4
  %e1p.addr = alloca i64*, align 4
  %e2p.addr = alloca i64*, align 4
  %t = alloca i8*, align 4
  %temp1 = alloca i8*, align 4
  %temp2 = alloca i8*, align 4
  %len = alloca i64, align 8
  %expok = alloca i32, align 4
  %a = alloca %struct.array*, align 4
  %h = alloca %struct.hash_table*, align 4
  store %struct.variable* %v, %struct.variable** %v.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  store i8* %substr, i8** %substr.addr, align 4
  store i32 %vtype, i32* %vtype.addr, align 4
  store i64* %e1p, i64** %e1p.addr, align 4
  store i64* %e2p, i64** %e2p.addr, align 4
  %0 = load i8*, i8** %substr.addr, align 4
  %call = call i8* @skiparith(i8* %0, i32 58)
  store i8* %call, i8** %t, align 4
  %1 = load i8*, i8** %t, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %t, align 4
  %4 = load i8, i8* %3, align 1
  %conv1 = sext i8 %4 to i32
  %cmp = icmp eq i32 %conv1, 58
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %5 = load i8*, i8** %t, align 4
  store i8 0, i8* %5, align 1
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  store i8* null, i8** %t, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8*, i8** %substr.addr, align 4
  %call3 = call i8* @expand_arith_string(i8* %6, i32 1)
  store i8* %call3, i8** %temp1, align 4
  %7 = load i8*, i8** %temp1, align 4
  %call4 = call i64 @evalexp(i8* %7, i32* %expok)
  %8 = load i64*, i64** %e1p.addr, align 4
  store i64 %call4, i64* %8, align 8
  %9 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7034)
  %10 = load i32, i32* %expok, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4
  br label %return

if.end8:                                          ; preds = %if.end
  store i64 -1, i64* %len, align 8
  %11 = load i32, i32* %vtype.addr, align 4
  switch i32 %11, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb
    i32 1, label %sw.bb53
    i32 2, label %sw.bb60
  ]

sw.bb:                                            ; preds = %if.end8, %if.end8
  %call9 = call i32 @__ctype_get_mb_cur_max()
  %cmp10 = icmp ugt i32 %call9, 1
  br i1 %cmp10, label %cond.true, label %cond.false25

cond.true:                                        ; preds = %sw.bb
  %12 = load i8*, i8** %value.addr, align 4
  %tobool12 = icmp ne i8* %12, null
  br i1 %tobool12, label %land.lhs.true13, label %cond.false22

land.lhs.true13:                                  ; preds = %cond.true
  %13 = load i8*, i8** %value.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %13, i32 0
  %14 = load i8, i8* %arrayidx, align 1
  %conv14 = sext i8 %14 to i32
  %tobool15 = icmp ne i32 %conv14, 0
  br i1 %tobool15, label %cond.true16, label %cond.false22

cond.true16:                                      ; preds = %land.lhs.true13
  %15 = load i8*, i8** %value.addr, align 4
  %arrayidx17 = getelementptr inbounds i8, i8* %15, i32 1
  %16 = load i8, i8* %arrayidx17, align 1
  %conv18 = sext i8 %16 to i32
  %tobool19 = icmp ne i32 %conv18, 0
  br i1 %tobool19, label %cond.true20, label %cond.false

cond.true20:                                      ; preds = %cond.true16
  %17 = load i8*, i8** %value.addr, align 4
  %call21 = call i32 @mbstrlen(i8* %17)
  br label %cond.end

cond.false:                                       ; preds = %cond.true16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true20
  %cond = phi i32 [ %call21, %cond.true20 ], [ 1, %cond.false ]
  br label %cond.end23

cond.false22:                                     ; preds = %land.lhs.true13, %cond.true
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false22, %cond.end
  %cond24 = phi i32 [ %cond, %cond.end ], [ 0, %cond.false22 ]
  br label %cond.end50

cond.false25:                                     ; preds = %sw.bb
  %18 = load i8*, i8** %value.addr, align 4
  %tobool26 = icmp ne i8* %18, null
  br i1 %tobool26, label %land.lhs.true27, label %cond.false47

land.lhs.true27:                                  ; preds = %cond.false25
  %19 = load i8*, i8** %value.addr, align 4
  %arrayidx28 = getelementptr inbounds i8, i8* %19, i32 0
  %20 = load i8, i8* %arrayidx28, align 1
  %conv29 = sext i8 %20 to i32
  %tobool30 = icmp ne i32 %conv29, 0
  br i1 %tobool30, label %cond.true31, label %cond.false47

cond.true31:                                      ; preds = %land.lhs.true27
  %21 = load i8*, i8** %value.addr, align 4
  %arrayidx32 = getelementptr inbounds i8, i8* %21, i32 1
  %22 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %22 to i32
  %tobool34 = icmp ne i32 %conv33, 0
  br i1 %tobool34, label %cond.true35, label %cond.false44

cond.true35:                                      ; preds = %cond.true31
  %23 = load i8*, i8** %value.addr, align 4
  %arrayidx36 = getelementptr inbounds i8, i8* %23, i32 2
  %24 = load i8, i8* %arrayidx36, align 1
  %conv37 = sext i8 %24 to i32
  %tobool38 = icmp ne i32 %conv37, 0
  br i1 %tobool38, label %cond.true39, label %cond.false41

cond.true39:                                      ; preds = %cond.true35
  %25 = load i8*, i8** %value.addr, align 4
  %call40 = call i32 @strlen(i8* %25)
  br label %cond.end42

cond.false41:                                     ; preds = %cond.true35
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi i32 [ %call40, %cond.true39 ], [ 2, %cond.false41 ]
  br label %cond.end45

cond.false44:                                     ; preds = %cond.true31
  br label %cond.end45

cond.end45:                                       ; preds = %cond.false44, %cond.end42
  %cond46 = phi i32 [ %cond43, %cond.end42 ], [ 1, %cond.false44 ]
  br label %cond.end48

cond.false47:                                     ; preds = %land.lhs.true27, %cond.false25
  br label %cond.end48

cond.end48:                                       ; preds = %cond.false47, %cond.end45
  %cond49 = phi i32 [ %cond46, %cond.end45 ], [ 0, %cond.false47 ]
  br label %cond.end50

cond.end50:                                       ; preds = %cond.end48, %cond.end23
  %cond51 = phi i32 [ %cond24, %cond.end23 ], [ %cond49, %cond.end48 ]
  %conv52 = zext i32 %cond51 to i64
  store i64 %conv52, i64* %len, align 8
  br label %sw.epilog

sw.bb53:                                          ; preds = %if.end8
  %call54 = call i32 @number_of_args()
  %add = add nsw i32 %call54, 1
  %conv55 = sext i32 %add to i64
  store i64 %conv55, i64* %len, align 8
  %26 = load i64*, i64** %e1p.addr, align 4
  %27 = load i64, i64* %26, align 8
  %cmp56 = icmp eq i64 %27, 0
  br i1 %cmp56, label %if.then58, label %if.end59

if.then58:                                        ; preds = %sw.bb53
  %28 = load i64, i64* %len, align 8
  %inc = add nsw i64 %28, 1
  store i64 %inc, i64* %len, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %sw.bb53
  br label %sw.epilog

sw.bb60:                                          ; preds = %if.end8
  %29 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %29, i32 0, i32 5
  %30 = load i32, i32* %attributes, align 4
  %and = and i32 %30, 64
  %tobool61 = icmp ne i32 %and, 0
  br i1 %tobool61, label %if.then62, label %if.else68

if.then62:                                        ; preds = %sw.bb60
  %31 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %value63 = getelementptr inbounds %struct.variable, %struct.variable* %31, i32 0, i32 1
  %32 = load i8*, i8** %value63, align 4
  %33 = bitcast i8* %32 to %struct.hash_table*
  store %struct.hash_table* %33, %struct.hash_table** %h, align 4
  %34 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %nentries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 2
  %35 = load i32, i32* %nentries, align 4
  %36 = load i64*, i64** %e1p.addr, align 4
  %37 = load i64, i64* %36, align 8
  %cmp64 = icmp slt i64 %37, 0
  %conv65 = zext i1 %cmp64 to i32
  %add66 = add nsw i32 %35, %conv65
  %conv67 = sext i32 %add66 to i64
  store i64 %conv67, i64* %len, align 8
  br label %if.end73

if.else68:                                        ; preds = %sw.bb60
  %38 = load i8*, i8** %value.addr, align 4
  %39 = bitcast i8* %38 to %struct.array*
  store %struct.array* %39, %struct.array** %a, align 4
  %40 = load %struct.array*, %struct.array** %a, align 4
  %max_index = getelementptr inbounds %struct.array, %struct.array* %40, i32 0, i32 1
  %41 = load i64, i64* %max_index, align 8
  %42 = load i64*, i64** %e1p.addr, align 4
  %43 = load i64, i64* %42, align 8
  %cmp69 = icmp slt i64 %43, 0
  %conv70 = zext i1 %cmp69 to i32
  %conv71 = sext i32 %conv70 to i64
  %add72 = add nsw i64 %41, %conv71
  store i64 %add72, i64* %len, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.else68, %if.then62
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end8, %if.end73, %if.end59, %cond.end50
  %44 = load i64, i64* %len, align 8
  %cmp74 = icmp eq i64 %44, -1
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %sw.epilog
  store i32 -1, i32* %retval, align 4
  br label %return

if.end77:                                         ; preds = %sw.epilog
  %45 = load i64*, i64** %e1p.addr, align 4
  %46 = load i64, i64* %45, align 8
  %cmp78 = icmp slt i64 %46, 0
  br i1 %cmp78, label %if.then80, label %if.end82

if.then80:                                        ; preds = %if.end77
  %47 = load i64, i64* %len, align 8
  %48 = load i64*, i64** %e1p.addr, align 4
  %49 = load i64, i64* %48, align 8
  %add81 = add nsw i64 %49, %47
  store i64 %add81, i64* %48, align 8
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %if.end77
  %50 = load i64*, i64** %e1p.addr, align 4
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* %len, align 8
  %cmp83 = icmp sgt i64 %51, %52
  br i1 %cmp83, label %if.then87, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end82
  %53 = load i64*, i64** %e1p.addr, align 4
  %54 = load i64, i64* %53, align 8
  %cmp85 = icmp slt i64 %54, 0
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %lor.lhs.false, %if.end82
  store i32 -1, i32* %retval, align 4
  br label %return

if.end88:                                         ; preds = %lor.lhs.false
  %55 = load i32, i32* %vtype.addr, align 4
  %cmp89 = icmp eq i32 %55, 2
  br i1 %cmp89, label %if.then91, label %if.end101

if.then91:                                        ; preds = %if.end88
  %56 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %attributes92 = getelementptr inbounds %struct.variable, %struct.variable* %56, i32 0, i32 5
  %57 = load i32, i32* %attributes92, align 4
  %and93 = and i32 %57, 64
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %cond.true95, label %cond.false97

cond.true95:                                      ; preds = %if.then91
  %58 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %nentries96 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 2
  %59 = load i32, i32* %nentries96, align 4
  br label %cond.end98

cond.false97:                                     ; preds = %if.then91
  %60 = load %struct.array*, %struct.array** %a, align 4
  %num_elements = getelementptr inbounds %struct.array, %struct.array* %60, i32 0, i32 2
  %61 = load i32, i32* %num_elements, align 8
  br label %cond.end98

cond.end98:                                       ; preds = %cond.false97, %cond.true95
  %cond99 = phi i32 [ %59, %cond.true95 ], [ %61, %cond.false97 ]
  %conv100 = sext i32 %cond99 to i64
  store i64 %conv100, i64* %len, align 8
  br label %if.end101

if.end101:                                        ; preds = %cond.end98, %if.end88
  %62 = load i8*, i8** %t, align 4
  %tobool102 = icmp ne i8* %62, null
  br i1 %tobool102, label %if.then103, label %if.else149

if.then103:                                       ; preds = %if.end101
  %63 = load i8*, i8** %t, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %incdec.ptr, i8** %t, align 4
  %64 = load i8*, i8** %t, align 4
  %call104 = call i32 @strlen(i8* %64)
  %add105 = add i32 1, %call104
  %call106 = call i8* @sh_xmalloc(i32 %add105, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7087)
  %65 = load i8*, i8** %t, align 4
  %call107 = call i8* @strcpy(i8* %call106, i8* %65)
  store i8* %call107, i8** %temp2, align 4
  %66 = load i8*, i8** %temp2, align 4
  %call108 = call i8* @expand_arith_string(i8* %66, i32 1)
  store i8* %call108, i8** %temp1, align 4
  %67 = load i8*, i8** %temp2, align 4
  call void @sh_xfree(i8* %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7089)
  %68 = load i8*, i8** %t, align 4
  %arrayidx109 = getelementptr inbounds i8, i8* %68, i32 -1
  store i8 58, i8* %arrayidx109, align 1
  %69 = load i8*, i8** %temp1, align 4
  %call110 = call i64 @evalexp(i8* %69, i32* %expok)
  %70 = load i64*, i64** %e2p.addr, align 4
  store i64 %call110, i64* %70, align 8
  %71 = load i8*, i8** %temp1, align 4
  call void @sh_xfree(i8* %71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7092)
  %72 = load i32, i32* %expok, align 4
  %cmp111 = icmp eq i32 %72, 0
  br i1 %cmp111, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.then103
  store i32 0, i32* %retval, align 4
  br label %return

if.end114:                                        ; preds = %if.then103
  %73 = load i32, i32* %vtype.addr, align 4
  %cmp115 = icmp eq i32 %73, 2
  br i1 %cmp115, label %land.lhs.true120, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.end114
  %74 = load i32, i32* %vtype.addr, align 4
  %cmp118 = icmp eq i32 %74, 1
  br i1 %cmp118, label %land.lhs.true120, label %if.end125

land.lhs.true120:                                 ; preds = %lor.lhs.false117, %if.end114
  %75 = load i64*, i64** %e2p.addr, align 4
  %76 = load i64, i64* %75, align 8
  %cmp121 = icmp slt i64 %76, 0
  br i1 %cmp121, label %if.then123, label %if.end125

if.then123:                                       ; preds = %land.lhs.true120
  %call124 = call i8* @libintl_gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0))
  %77 = load i8*, i8** %t, align 4
  call void (i8*, ...) @internal_error(i8* %call124, i8* %77)
  store i32 0, i32* %retval, align 4
  br label %return

if.end125:                                        ; preds = %land.lhs.true120, %lor.lhs.false117
  %78 = load i32, i32* %vtype.addr, align 4
  %cmp126 = icmp ne i32 %78, 2
  br i1 %cmp126, label %if.then128, label %if.end148

if.then128:                                       ; preds = %if.end125
  %79 = load i64*, i64** %e2p.addr, align 4
  %80 = load i64, i64* %79, align 8
  %cmp129 = icmp slt i64 %80, 0
  br i1 %cmp129, label %if.then131, label %if.else141

if.then131:                                       ; preds = %if.then128
  %81 = load i64, i64* %len, align 8
  %82 = load i64*, i64** %e2p.addr, align 4
  %83 = load i64, i64* %82, align 8
  %add132 = add nsw i64 %83, %81
  store i64 %add132, i64* %82, align 8
  %84 = load i64*, i64** %e2p.addr, align 4
  %85 = load i64, i64* %84, align 8
  %cmp133 = icmp slt i64 %85, 0
  br i1 %cmp133, label %if.then138, label %lor.lhs.false135

lor.lhs.false135:                                 ; preds = %if.then131
  %86 = load i64*, i64** %e2p.addr, align 4
  %87 = load i64, i64* %86, align 8
  %88 = load i64*, i64** %e1p.addr, align 4
  %89 = load i64, i64* %88, align 8
  %cmp136 = icmp slt i64 %87, %89
  br i1 %cmp136, label %if.then138, label %if.end140

if.then138:                                       ; preds = %lor.lhs.false135, %if.then131
  %call139 = call i8* @libintl_gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0))
  %90 = load i8*, i8** %t, align 4
  call void (i8*, ...) @internal_error(i8* %call139, i8* %90)
  store i32 0, i32* %retval, align 4
  br label %return

if.end140:                                        ; preds = %lor.lhs.false135
  br label %if.end143

if.else141:                                       ; preds = %if.then128
  %91 = load i64*, i64** %e1p.addr, align 4
  %92 = load i64, i64* %91, align 8
  %93 = load i64*, i64** %e2p.addr, align 4
  %94 = load i64, i64* %93, align 8
  %add142 = add nsw i64 %94, %92
  store i64 %add142, i64* %93, align 8
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.end140
  %95 = load i64*, i64** %e2p.addr, align 4
  %96 = load i64, i64* %95, align 8
  %97 = load i64, i64* %len, align 8
  %cmp144 = icmp sgt i64 %96, %97
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %if.end143
  %98 = load i64, i64* %len, align 8
  %99 = load i64*, i64** %e2p.addr, align 4
  store i64 %98, i64* %99, align 8
  br label %if.end147

if.end147:                                        ; preds = %if.then146, %if.end143
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end125
  br label %if.end150

if.else149:                                       ; preds = %if.end101
  %100 = load i64, i64* %len, align 8
  %101 = load i64*, i64** %e2p.addr, align 4
  store i64 %100, i64* %101, align 8
  br label %if.end150

if.end150:                                        ; preds = %if.else149, %if.end148
  store i32 1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end150, %if.then138, %if.then123, %if.then113, %if.then87, %if.then76, %if.then7
  %102 = load i32, i32* %retval, align 4
  ret i32 %102
}

; Function Attrs: noinline nounwind
define internal i8* @mb_substring(i8* %string, i32 %s, i32 %e) #0 {
entry:
  %string.addr = alloca i8*, align 4
  %s.addr = alloca i32, align 4
  %e.addr = alloca i32, align 4
  %tt = alloca i8*, align 4
  %start = alloca i32, align 4
  %stop = alloca i32, align 4
  %i = alloca i32, align 4
  %slen = alloca i32, align 4
  %state = alloca %struct.__mbstate_t, align 4
  %state_bak = alloca %struct.__mbstate_t, align 4
  %mblength = alloca i32, align 4
  %_f = alloca i32, align 4
  %state_bak62 = alloca %struct.__mbstate_t, align 4
  %mblength63 = alloca i32, align 4
  %_f64 = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %s, i32* %s.addr, align 4
  store i32 %e, i32* %e.addr, align 4
  %0 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memset.p0i8.i32(i8* %0, i8 0, i32 8, i32 4, i1 false)
  store i32 0, i32* %start, align 4
  %call = call i32 @__ctype_get_mb_cur_max()
  %cmp = icmp ugt i32 %call, 1
  br i1 %cmp, label %cond.true, label %cond.false18

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %land.lhs.true, label %cond.false15

land.lhs.true:                                    ; preds = %cond.true
  %2 = load i8*, i8** %string.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %2, i32 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %cond.true2, label %cond.false15

cond.true2:                                       ; preds = %land.lhs.true
  %4 = load i8*, i8** %string.addr, align 4
  %arrayidx3 = getelementptr inbounds i8, i8* %4, i32 1
  %5 = load i8, i8* %arrayidx3, align 1
  %conv4 = sext i8 %5 to i32
  %tobool5 = icmp ne i32 %conv4, 0
  br i1 %tobool5, label %cond.true6, label %cond.false12

cond.true6:                                       ; preds = %cond.true2
  %6 = load i8*, i8** %string.addr, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i32 2
  %7 = load i8, i8* %arrayidx7, align 1
  %conv8 = sext i8 %7 to i32
  %tobool9 = icmp ne i32 %conv8, 0
  br i1 %tobool9, label %cond.true10, label %cond.false

cond.true10:                                      ; preds = %cond.true6
  %8 = load i8*, i8** %string.addr, align 4
  %call11 = call i32 @strlen(i8* %8)
  br label %cond.end

cond.false:                                       ; preds = %cond.true6
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true10
  %cond = phi i32 [ %call11, %cond.true10 ], [ 2, %cond.false ]
  br label %cond.end13

cond.false12:                                     ; preds = %cond.true2
  br label %cond.end13

cond.end13:                                       ; preds = %cond.false12, %cond.end
  %cond14 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false12 ]
  br label %cond.end16

cond.false15:                                     ; preds = %land.lhs.true, %cond.true
  br label %cond.end16

cond.end16:                                       ; preds = %cond.false15, %cond.end13
  %cond17 = phi i32 [ %cond14, %cond.end13 ], [ 0, %cond.false15 ]
  br label %cond.end19

cond.false18:                                     ; preds = %entry
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false18, %cond.end16
  %cond20 = phi i32 [ %cond17, %cond.end16 ], [ 0, %cond.false18 ]
  store i32 %cond20, i32* %slen, align 4
  %9 = load i32, i32* %s.addr, align 4
  store i32 %9, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %do.end, %cond.end19
  %10 = load i8*, i8** %string.addr, align 4
  %11 = load i32, i32* %start, align 4
  %arrayidx21 = getelementptr inbounds i8, i8* %10, i32 %11
  %12 = load i8, i8* %arrayidx21, align 1
  %conv22 = sext i8 %12 to i32
  %tobool23 = icmp ne i32 %conv22, 0
  br i1 %tobool23, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %13 = load i32, i32* %i, align 4
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %i, align 4
  %tobool24 = icmp ne i32 %13, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool24, %land.rhs ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %do.body

do.body:                                          ; preds = %while.body
  %15 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp25 = icmp sgt i32 %15, 1
  br i1 %cmp25, label %if.then, label %if.else45

if.then:                                          ; preds = %do.body
  %16 = load i8*, i8** %string.addr, align 4
  %17 = load i32, i32* %start, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %16, i32 %17
  %18 = load i8, i8* %arrayidx27, align 1
  %call28 = call i32 @is_basic(i8 signext %18)
  store i32 %call28, i32* %_f, align 4
  %19 = load i32, i32* %_f, align 4
  %tobool29 = icmp ne i32 %19, 0
  br i1 %tobool29, label %if.then30, label %if.else

if.then30:                                        ; preds = %if.then
  store i32 1, i32* %mblength, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %20 = bitcast %struct.__mbstate_t* %state_bak to i8*
  %21 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 8, i32 4, i1 false)
  %22 = load i8*, i8** %string.addr, align 4
  %23 = load i32, i32* %start, align 4
  %add.ptr = getelementptr inbounds i8, i8* %22, i32 %23
  %24 = load i32, i32* %slen, align 4
  %25 = load i32, i32* %start, align 4
  %sub = sub i32 %24, %25
  %call31 = call i32 @mbrlen(i8* %add.ptr, i32 %sub, %struct.__mbstate_t* %state)
  store i32 %call31, i32* %mblength, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then30
  %26 = load i32, i32* %mblength, align 4
  %cmp32 = icmp eq i32 %26, -2
  br i1 %cmp32, label %if.then36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %27 = load i32, i32* %mblength, align 4
  %cmp34 = icmp eq i32 %27, -1
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %lor.lhs.false, %if.end
  %28 = bitcast %struct.__mbstate_t* %state to i8*
  %29 = bitcast %struct.__mbstate_t* %state_bak to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %28, i8* %29, i32 8, i32 4, i1 false)
  %30 = load i32, i32* %start, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %start, align 4
  br label %if.end44

if.else37:                                        ; preds = %lor.lhs.false
  %31 = load i32, i32* %mblength, align 4
  %cmp38 = icmp eq i32 %31, 0
  br i1 %cmp38, label %if.then40, label %if.else42

if.then40:                                        ; preds = %if.else37
  %32 = load i32, i32* %start, align 4
  %inc41 = add nsw i32 %32, 1
  store i32 %inc41, i32* %start, align 4
  br label %if.end43

if.else42:                                        ; preds = %if.else37
  %33 = load i32, i32* %mblength, align 4
  %34 = load i32, i32* %start, align 4
  %add = add i32 %34, %33
  store i32 %add, i32* %start, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  br label %if.end47

if.else45:                                        ; preds = %do.body
  %35 = load i32, i32* %start, align 4
  %inc46 = add nsw i32 %35, 1
  store i32 %inc46, i32* %start, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %if.end44
  br label %do.end

do.end:                                           ; preds = %if.end47
  br label %while.cond

while.end:                                        ; preds = %land.end
  %36 = load i32, i32* %start, align 4
  store i32 %36, i32* %stop, align 4
  %37 = load i32, i32* %e.addr, align 4
  %38 = load i32, i32* %s.addr, align 4
  %sub48 = sub nsw i32 %37, %38
  store i32 %sub48, i32* %i, align 4
  br label %while.cond49

while.cond49:                                     ; preds = %do.end93, %while.end
  %39 = load i8*, i8** %string.addr, align 4
  %40 = load i32, i32* %stop, align 4
  %arrayidx50 = getelementptr inbounds i8, i8* %39, i32 %40
  %41 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %41 to i32
  %tobool52 = icmp ne i32 %conv51, 0
  br i1 %tobool52, label %land.rhs53, label %land.end56

land.rhs53:                                       ; preds = %while.cond49
  %42 = load i32, i32* %i, align 4
  %dec54 = add nsw i32 %42, -1
  store i32 %dec54, i32* %i, align 4
  %tobool55 = icmp ne i32 %42, 0
  br label %land.end56

land.end56:                                       ; preds = %land.rhs53, %while.cond49
  %43 = phi i1 [ false, %while.cond49 ], [ %tobool55, %land.rhs53 ]
  br i1 %43, label %while.body57, label %while.end94

while.body57:                                     ; preds = %land.end56
  br label %do.body58

do.body58:                                        ; preds = %while.body57
  %44 = load i32, i32* @locale_mb_cur_max, align 4
  %cmp59 = icmp sgt i32 %44, 1
  br i1 %cmp59, label %if.then61, label %if.else90

if.then61:                                        ; preds = %do.body58
  %45 = load i8*, i8** %string.addr, align 4
  %46 = load i32, i32* %stop, align 4
  %arrayidx65 = getelementptr inbounds i8, i8* %45, i32 %46
  %47 = load i8, i8* %arrayidx65, align 1
  %call66 = call i32 @is_basic(i8 signext %47)
  store i32 %call66, i32* %_f64, align 4
  %48 = load i32, i32* %_f64, align 4
  %tobool67 = icmp ne i32 %48, 0
  br i1 %tobool67, label %if.then68, label %if.else69

if.then68:                                        ; preds = %if.then61
  store i32 1, i32* %mblength63, align 4
  br label %if.end73

if.else69:                                        ; preds = %if.then61
  %49 = bitcast %struct.__mbstate_t* %state_bak62 to i8*
  %50 = bitcast %struct.__mbstate_t* %state to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %49, i8* %50, i32 8, i32 4, i1 false)
  %51 = load i8*, i8** %string.addr, align 4
  %52 = load i32, i32* %stop, align 4
  %add.ptr70 = getelementptr inbounds i8, i8* %51, i32 %52
  %53 = load i32, i32* %slen, align 4
  %54 = load i32, i32* %stop, align 4
  %sub71 = sub i32 %53, %54
  %call72 = call i32 @mbrlen(i8* %add.ptr70, i32 %sub71, %struct.__mbstate_t* %state)
  store i32 %call72, i32* %mblength63, align 4
  br label %if.end73

if.end73:                                         ; preds = %if.else69, %if.then68
  %55 = load i32, i32* %mblength63, align 4
  %cmp74 = icmp eq i32 %55, -2
  br i1 %cmp74, label %if.then79, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %if.end73
  %56 = load i32, i32* %mblength63, align 4
  %cmp77 = icmp eq i32 %56, -1
  br i1 %cmp77, label %if.then79, label %if.else81

if.then79:                                        ; preds = %lor.lhs.false76, %if.end73
  %57 = bitcast %struct.__mbstate_t* %state to i8*
  %58 = bitcast %struct.__mbstate_t* %state_bak62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %57, i8* %58, i32 8, i32 4, i1 false)
  %59 = load i32, i32* %stop, align 4
  %inc80 = add nsw i32 %59, 1
  store i32 %inc80, i32* %stop, align 4
  br label %if.end89

if.else81:                                        ; preds = %lor.lhs.false76
  %60 = load i32, i32* %mblength63, align 4
  %cmp82 = icmp eq i32 %60, 0
  br i1 %cmp82, label %if.then84, label %if.else86

if.then84:                                        ; preds = %if.else81
  %61 = load i32, i32* %stop, align 4
  %inc85 = add nsw i32 %61, 1
  store i32 %inc85, i32* %stop, align 4
  br label %if.end88

if.else86:                                        ; preds = %if.else81
  %62 = load i32, i32* %mblength63, align 4
  %63 = load i32, i32* %stop, align 4
  %add87 = add i32 %63, %62
  store i32 %add87, i32* %stop, align 4
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.then84
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then79
  br label %if.end92

if.else90:                                        ; preds = %do.body58
  %64 = load i32, i32* %stop, align 4
  %inc91 = add nsw i32 %64, 1
  store i32 %inc91, i32* %stop, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %if.end89
  br label %do.end93

do.end93:                                         ; preds = %if.end92
  br label %while.cond49

while.end94:                                      ; preds = %land.end56
  %65 = load i8*, i8** %string.addr, align 4
  %66 = load i32, i32* %start, align 4
  %67 = load i32, i32* %stop, align 4
  %call95 = call i8* @substring(i8* %65, i32 %66, i32 %67)
  store i8* %call95, i8** %tt, align 4
  %68 = load i8*, i8** %tt, align 4
  ret i8* %68
}

; Function Attrs: noinline nounwind
define internal i8* @pos_params(i8* %string, i32 %start, i32 %end, i32 %quoted) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %save = alloca %struct.word_list*, align 4
  %params = alloca %struct.word_list*, align 4
  %h = alloca %struct.word_list*, align 4
  %t = alloca %struct.word_list*, align 4
  %ret = alloca i8*, align 4
  %i = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i32 %end, i32* %end.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i32, i32* %start.addr, align 4
  %1 = load i32, i32* %end.addr, align 4
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call, %struct.word_list** %params, align 4
  store %struct.word_list* %call, %struct.word_list** %save, align 4
  %2 = load %struct.word_list*, %struct.word_list** %save, align 4
  %cmp1 = icmp eq %struct.word_list* %2, null
  br i1 %cmp1, label %land.lhs.true, label %if.end4

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* %start.addr, align 4
  %cmp2 = icmp sgt i32 %3, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %4 = load i32, i32* %start.addr, align 4
  %cmp5 = icmp eq i32 %4, 0
  br i1 %cmp5, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.end4
  %5 = load i8*, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @dollar_vars, i32 0, i32 0), align 4
  %call7 = call %struct.word_desc* @make_word(i8* %5)
  %6 = load %struct.word_list*, %struct.word_list** %params, align 4
  %call8 = call %struct.word_list* @make_word_list(%struct.word_desc* %call7, %struct.word_list* %6)
  store %struct.word_list* %call8, %struct.word_list** %t, align 4
  %7 = load %struct.word_list*, %struct.word_list** %t, align 4
  store %struct.word_list* %7, %struct.word_list** %params, align 4
  store %struct.word_list* %7, %struct.word_list** %save, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end4
  %8 = load i32, i32* %start.addr, align 4
  %tobool = icmp ne i32 %8, 0
  %cond = select i1 %tobool, i32 1, i32 0
  store i32 %cond, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end9
  %9 = load %struct.word_list*, %struct.word_list** %params, align 4
  %tobool10 = icmp ne %struct.word_list* %9, null
  br i1 %tobool10, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %start.addr, align 4
  %cmp11 = icmp slt i32 %10, %11
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %12 = phi i1 [ false, %for.cond ], [ %cmp11, %land.rhs ]
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %13 = load %struct.word_list*, %struct.word_list** %params, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %13, i32 0, i32 0
  %14 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %14, %struct.word_list** %params, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %16 = load %struct.word_list*, %struct.word_list** %params, align 4
  %cmp12 = icmp eq %struct.word_list* %16, null
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %for.end
  %17 = load %struct.word_list*, %struct.word_list** %save, align 4
  call void @dispose_words(%struct.word_list* %17)
  store i8* null, i8** %retval, align 4
  br label %return

if.end14:                                         ; preds = %for.end
  %18 = load %struct.word_list*, %struct.word_list** %params, align 4
  store %struct.word_list* %18, %struct.word_list** %t, align 4
  store %struct.word_list* %18, %struct.word_list** %h, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc22, %if.end14
  %19 = load %struct.word_list*, %struct.word_list** %params, align 4
  %tobool16 = icmp ne %struct.word_list* %19, null
  br i1 %tobool16, label %land.rhs17, label %land.end19

land.rhs17:                                       ; preds = %for.cond15
  %20 = load i32, i32* %i, align 4
  %21 = load i32, i32* %end.addr, align 4
  %cmp18 = icmp slt i32 %20, %21
  br label %land.end19

land.end19:                                       ; preds = %land.rhs17, %for.cond15
  %22 = phi i1 [ false, %for.cond15 ], [ %cmp18, %land.rhs17 ]
  br i1 %22, label %for.body20, label %for.end24

for.body20:                                       ; preds = %land.end19
  %23 = load %struct.word_list*, %struct.word_list** %params, align 4
  store %struct.word_list* %23, %struct.word_list** %t, align 4
  %24 = load %struct.word_list*, %struct.word_list** %params, align 4
  %next21 = getelementptr inbounds %struct.word_list, %struct.word_list* %24, i32 0, i32 0
  %25 = load %struct.word_list*, %struct.word_list** %next21, align 4
  store %struct.word_list* %25, %struct.word_list** %params, align 4
  br label %for.inc22

for.inc22:                                        ; preds = %for.body20
  %26 = load i32, i32* %i, align 4
  %inc23 = add nsw i32 %26, 1
  store i32 %inc23, i32* %i, align 4
  br label %for.cond15

for.end24:                                        ; preds = %land.end19
  %27 = load %struct.word_list*, %struct.word_list** %t, align 4
  %next25 = getelementptr inbounds %struct.word_list, %struct.word_list* %27, i32 0, i32 0
  store %struct.word_list* null, %struct.word_list** %next25, align 4
  %28 = load i8*, i8** %string.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %28, i32 0
  %29 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %29 to i32
  %30 = load %struct.word_list*, %struct.word_list** %h, align 4
  %31 = load i32, i32* %quoted.addr, align 4
  %call26 = call i8* @string_list_pos_params(i32 %conv, %struct.word_list* %30, i32 %31)
  store i8* %call26, i8** %ret, align 4
  %32 = load %struct.word_list*, %struct.word_list** %t, align 4
  %33 = load %struct.word_list*, %struct.word_list** %params, align 4
  %cmp27 = icmp ne %struct.word_list* %32, %33
  br i1 %cmp27, label %if.then29, label %if.end31

if.then29:                                        ; preds = %for.end24
  %34 = load %struct.word_list*, %struct.word_list** %params, align 4
  %35 = load %struct.word_list*, %struct.word_list** %t, align 4
  %next30 = getelementptr inbounds %struct.word_list, %struct.word_list* %35, i32 0, i32 0
  store %struct.word_list* %34, %struct.word_list** %next30, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %for.end24
  %36 = load %struct.word_list*, %struct.word_list** %save, align 4
  call void @dispose_words(%struct.word_list* %36)
  %37 = load i8*, i8** %ret, align 4
  store i8* %37, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end31, %if.then13, %if.then3, %if.then
  %38 = load i8*, i8** %retval, align 4
  ret i8* %38
}

declare i8* @assoc_subrange(%struct.hash_table*, i64, i64, i32, i32) #1

declare i8* @array_subrange(%struct.array*, i64, i64, i32, i32) #1

declare i8* @array_value(i8*, i32, i32, i32*, i64*) #1

; Function Attrs: noinline nounwind
define internal i8* @skiparith(i8* %substr, i32 %delim) #0 {
entry:
  %substr.addr = alloca i8*, align 4
  %delim.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %delims = alloca [2 x i8], align 1
  store i8* %substr, i8** %substr.addr, align 4
  store i32 %delim, i32* %delim.addr, align 4
  %0 = load i32, i32* %delim.addr, align 4
  %conv = trunc i32 %0 to i8
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %delims, i32 0, i32 0
  store i8 %conv, i8* %arrayidx, align 1
  %arrayidx1 = getelementptr inbounds [2 x i8], [2 x i8]* %delims, i32 0, i32 1
  store i8 0, i8* %arrayidx1, align 1
  %1 = load i8*, i8** %substr.addr, align 4
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %delims, i32 0, i32 0
  %call = call i32 @skip_to_delim(i8* %1, i32 0, i8* %arraydecay, i32 1024)
  store i32 %call, i32* %i, align 4
  %2 = load i8*, i8** %substr.addr, align 4
  %3 = load i32, i32* %i, align 4
  %add.ptr = getelementptr inbounds i8, i8* %2, i32 %3
  ret i8* %add.ptr
}

declare void @internal_error(i8*, ...) #1

; Function Attrs: noinline nounwind
define internal i8* @getpattern(i8* %value, i32 %quoted, i32 %expandpat) #0 {
entry:
  %value.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %expandpat.addr = alloca i32, align 4
  %pat = alloca i8*, align 4
  %tword = alloca i8*, align 4
  %l = alloca %struct.word_list*, align 4
  store i8* %value, i8** %value.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32 %expandpat, i32* %expandpat.addr, align 4
  %0 = load i8*, i8** %value.addr, align 4
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %cond.true, label %cond.false3

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %value.addr, align 4
  %3 = load i32, i32* %quoted.addr, align 4
  %and = and i32 %3, 3
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %cond.true2, label %cond.false

cond.true2:                                       ; preds = %cond.true
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %4 = load i32, i32* %quoted.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true2
  %cond = phi i32 [ 8, %cond.true2 ], [ %4, %cond.false ]
  %call = call %struct.word_list* @expand_string_for_rhs(i8* %2, i32 %cond, i32* null, i32* null)
  br label %cond.end4

cond.false3:                                      ; preds = %entry
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false3, %cond.end
  %cond5 = phi %struct.word_list* [ %call, %cond.end ], [ null, %cond.false3 ]
  store %struct.word_list* %cond5, %struct.word_list** %l, align 4
  %5 = load %struct.word_list*, %struct.word_list** %l, align 4
  %call6 = call i8* @string_list(%struct.word_list* %5)
  store i8* %call6, i8** %pat, align 4
  %6 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @dispose_words(%struct.word_list* %6)
  %7 = load i8*, i8** %pat, align 4
  %tobool7 = icmp ne i8* %7, null
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end4
  %8 = load i8*, i8** %pat, align 4
  %call8 = call i8* @quote_string_for_globbing(i8* %8, i32 1)
  store i8* %call8, i8** %tword, align 4
  %9 = load i8*, i8** %pat, align 4
  call void @sh_xfree(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4860)
  %10 = load i8*, i8** %tword, align 4
  store i8* %10, i8** %pat, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end4
  %11 = load i8*, i8** %pat, align 4
  ret i8* %11
}

; Function Attrs: noinline nounwind
define internal i8* @pos_params_pat_subst(i8* %string, i8* %pat, i8* %rep, i32 %mflags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %pat.addr = alloca i8*, align 4
  %rep.addr = alloca i8*, align 4
  %mflags.addr = alloca i32, align 4
  %save = alloca %struct.word_list*, align 4
  %params = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_desc*, align 4
  %ret = alloca i8*, align 4
  %pchar = alloca i32, align 4
  %qflags = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %pat, i8** %pat.addr, align 4
  store i8* %rep, i8** %rep.addr, align 4
  store i32 %mflags, i32* %mflags.addr, align 4
  %call = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call, %struct.word_list** %params, align 4
  store %struct.word_list* %call, %struct.word_list** %save, align 4
  %0 = load %struct.word_list*, %struct.word_list** %save, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.word_list*, %struct.word_list** %params, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %params, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  %5 = load i8*, i8** %pat.addr, align 4
  %6 = load i8*, i8** %rep.addr, align 4
  %7 = load i32, i32* %mflags.addr, align 4
  %call2 = call i8* @pat_subst(i8* %4, i8* %5, i8* %6, i32 %7)
  store i8* %call2, i8** %ret, align 4
  %call3 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call3, %struct.word_desc** %w, align 4
  %8 = load i8*, i8** %ret, align 4
  %tobool4 = icmp ne i8* %8, null
  br i1 %tobool4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %9 = load i8*, i8** %ret, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %call5 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7558)
  %call6 = call i8* @strcpy(i8* %call5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ %call6, %cond.false ]
  %10 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word7 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  store i8* %cond, i8** %word7, align 4
  %11 = load %struct.word_list*, %struct.word_list** %params, align 4
  %word8 = getelementptr inbounds %struct.word_list, %struct.word_list* %11, i32 0, i32 1
  %12 = load %struct.word_desc*, %struct.word_desc** %word8, align 4
  call void @dispose_word(%struct.word_desc* %12)
  %13 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %14 = load %struct.word_list*, %struct.word_list** %params, align 4
  %word9 = getelementptr inbounds %struct.word_list, %struct.word_list* %14, i32 0, i32 1
  store %struct.word_desc* %13, %struct.word_desc** %word9, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %15 = load %struct.word_list*, %struct.word_list** %params, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 0
  %16 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %16, %struct.word_list** %params, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %mflags.addr, align 4
  %and = and i32 %17, 128
  %cmp10 = icmp eq i32 %and, 128
  %cond11 = select i1 %cmp10, i32 42, i32 64
  store i32 %cond11, i32* %pchar, align 4
  %18 = load i32, i32* %mflags.addr, align 4
  %and12 = and i32 %18, 32
  %cmp13 = icmp eq i32 %and12, 32
  %cond14 = select i1 %cmp13, i32 1, i32 0
  store i32 %cond14, i32* %qflags, align 4
  %19 = load i32, i32* %pchar, align 4
  %20 = load %struct.word_list*, %struct.word_list** %save, align 4
  %21 = load i32, i32* %qflags, align 4
  %call15 = call i8* @string_list_pos_params(i32 %19, %struct.word_list* %20, i32 %21)
  store i8* %call15, i8** %ret, align 4
  %22 = load %struct.word_list*, %struct.word_list** %save, align 4
  call void @dispose_words(%struct.word_list* %22)
  %23 = load i8*, i8** %ret, align 4
  store i8* %23, i8** %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %24 = load i8*, i8** %retval, align 4
  ret i8* %24
}

declare i8* @assoc_patsub(%struct.hash_table*, i8*, i8*, i32) #1

declare i8* @array_patsub(%struct.array*, i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define internal %struct.word_list* @expand_string_for_rhs(i8* %string, i32 %quoted, i32* %dollar_at_p, i32* %expanded_p) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %string.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %dollar_at_p.addr = alloca i32*, align 4
  %expanded_p.addr = alloca i32*, align 4
  %td = alloca %struct.word_desc, align 4
  %tresult = alloca %struct.word_list*, align 4
  store i8* %string, i8** %string.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store i32* %dollar_at_p, i32** %dollar_at_p.addr, align 4
  store i32* %expanded_p, i32** %expanded_p.addr, align 4
  %0 = load i8*, i8** %string.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %string.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  store i32 1, i32* @expand_no_split_dollar_star, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 1
  store i32 64, i32* %flags, align 4
  %3 = load i8*, i8** %string.addr, align 4
  %word = getelementptr inbounds %struct.word_desc, %struct.word_desc* %td, i32 0, i32 0
  store i8* %3, i8** %word, align 4
  %4 = load i32, i32* %quoted.addr, align 4
  %5 = load i32*, i32** %dollar_at_p.addr, align 4
  %6 = load i32*, i32** %expanded_p.addr, align 4
  %call = call %struct.word_list* @call_expand_word_internal(%struct.word_desc* %td, i32 %4, i32 1, i32* %5, i32* %6)
  store %struct.word_list* %call, %struct.word_list** %tresult, align 4
  store i32 0, i32* @expand_no_split_dollar_star, align 4
  %7 = load %struct.word_list*, %struct.word_list** %tresult, align 4
  store %struct.word_list* %7, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %8
}

declare i8* @sh_modcase(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @pos_params_modcase(i8* %string, i8* %pat, i32 %modop, i32 %mflags) #0 {
entry:
  %retval = alloca i8*, align 4
  %string.addr = alloca i8*, align 4
  %pat.addr = alloca i8*, align 4
  %modop.addr = alloca i32, align 4
  %mflags.addr = alloca i32, align 4
  %save = alloca %struct.word_list*, align 4
  %params = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_desc*, align 4
  %ret = alloca i8*, align 4
  %pchar = alloca i32, align 4
  %qflags = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 4
  store i8* %pat, i8** %pat.addr, align 4
  store i32 %modop, i32* %modop.addr, align 4
  store i32 %mflags, i32* %mflags.addr, align 4
  %call = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call, %struct.word_list** %params, align 4
  store %struct.word_list* %call, %struct.word_list** %save, align 4
  %0 = load %struct.word_list*, %struct.word_list** %save, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.word_list*, %struct.word_list** %params, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %params, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  %5 = load i8*, i8** %pat.addr, align 4
  %6 = load i32, i32* %modop.addr, align 4
  %call2 = call i8* @sh_modcase(i8* %4, i8* %5, i32 %6)
  store i8* %call2, i8** %ret, align 4
  %call3 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call3, %struct.word_desc** %w, align 4
  %7 = load i8*, i8** %ret, align 4
  %tobool4 = icmp ne i8* %7, null
  br i1 %tobool4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %8 = load i8*, i8** %ret, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %call5 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 7753)
  %call6 = call i8* @strcpy(i8* %call5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %call6, %cond.false ]
  %9 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word7 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %9, i32 0, i32 0
  store i8* %cond, i8** %word7, align 4
  %10 = load %struct.word_list*, %struct.word_list** %params, align 4
  %word8 = getelementptr inbounds %struct.word_list, %struct.word_list* %10, i32 0, i32 1
  %11 = load %struct.word_desc*, %struct.word_desc** %word8, align 4
  call void @dispose_word(%struct.word_desc* %11)
  %12 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %13 = load %struct.word_list*, %struct.word_list** %params, align 4
  %word9 = getelementptr inbounds %struct.word_list, %struct.word_list* %13, i32 0, i32 1
  store %struct.word_desc* %12, %struct.word_desc** %word9, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %14 = load %struct.word_list*, %struct.word_list** %params, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %14, i32 0, i32 0
  %15 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %15, %struct.word_list** %params, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %mflags.addr, align 4
  %and = and i32 %16, 128
  %cmp10 = icmp eq i32 %and, 128
  %cond11 = select i1 %cmp10, i32 42, i32 64
  store i32 %cond11, i32* %pchar, align 4
  %17 = load i32, i32* %mflags.addr, align 4
  %and12 = and i32 %17, 32
  %cmp13 = icmp eq i32 %and12, 32
  %cond14 = select i1 %cmp13, i32 1, i32 0
  store i32 %cond14, i32* %qflags, align 4
  %18 = load i32, i32* %pchar, align 4
  %19 = load %struct.word_list*, %struct.word_list** %save, align 4
  %20 = load i32, i32* %qflags, align 4
  %call15 = call i8* @string_list_pos_params(i32 %18, %struct.word_list* %19, i32 %20)
  store i8* %call15, i8** %ret, align 4
  %21 = load %struct.word_list*, %struct.word_list** %save, align 4
  call void @dispose_words(%struct.word_list* %21)
  %22 = load i8*, i8** %ret, align 4
  store i8* %22, i8** %retval, align 4
  br label %return

return:                                           ; preds = %for.end, %if.then
  %23 = load i8*, i8** %retval, align 4
  ret i8* %23
}

declare i8* @assoc_modcase(%struct.hash_table*, i8*, i32, i32) #1

declare i8* @array_modcase(%struct.array*, i8*, i32, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @string_transform(i32 %xc, %struct.variable* %v, i8* %s) #0 {
entry:
  %retval = alloca i8*, align 4
  %xc.addr = alloca i32, align 4
  %v.addr = alloca %struct.variable*, align 4
  %s.addr = alloca i8*, align 4
  %ret = alloca i8*, align 4
  %flags = alloca [16 x i8], align 1
  %i = alloca i32, align 4
  store i32 %xc, i32* %xc.addr, align 4
  store %struct.variable* %v, %struct.variable** %v.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i32, i32* %xc.addr, align 4
  %cmp = icmp eq i32 %0, 65
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %xc.addr, align 4
  %cmp1 = icmp eq i32 %1, 97
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false3

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %cmp2 = icmp eq %struct.variable* %2, null
  br i1 %cmp2, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load i32, i32* %xc.addr, align 4
  %cmp4 = icmp ne i32 %3, 97
  br i1 %cmp4, label %land.lhs.true5, label %if.end

land.lhs.true5:                                   ; preds = %lor.lhs.false3
  %4 = load i8*, i8** %s.addr, align 4
  %cmp6 = icmp eq i8* %4, null
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true5, %land.lhs.true
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true5, %lor.lhs.false3
  %5 = load i32, i32* %xc.addr, align 4
  switch i32 %5, label %sw.default [
    i32 97, label %sw.bb
    i32 65, label %sw.bb13
    i32 69, label %sw.bb15
    i32 80, label %sw.bb18
    i32 81, label %sw.bb20
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %call = call i32 @var_attribute_string(%struct.variable* %6, i32 0, i8* %arraydecay)
  store i32 %call, i32* %i, align 4
  %7 = load i32, i32* %i, align 4
  %cmp7 = icmp sgt i32 %7, 0
  br i1 %cmp7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %call9 = call i32 @strlen(i8* %arraydecay8)
  %add = add i32 1, %call9
  %call10 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5125)
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %call12 = call i8* @strcpy(i8* %call10, i8* %arraydecay11)
  br label %cond.end

cond.false:                                       ; preds = %sw.bb
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call12, %cond.true ], [ null, %cond.false ]
  store i8* %cond, i8** %ret, align 4
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end
  %8 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %9 = load i8*, i8** %s.addr, align 4
  %call14 = call i8* @string_var_assignment(%struct.variable* %8, i8* %9)
  store i8* %call14, i8** %ret, align 4
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end
  %10 = load i8*, i8** %s.addr, align 4
  %11 = load i8*, i8** %s.addr, align 4
  %call16 = call i32 @strlen(i8* %11)
  %call17 = call i8* @ansiexpand(i8* %10, i32 0, i32 %call16, i32* null)
  store i8* %call17, i8** %ret, align 4
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end
  %12 = load i8*, i8** %s.addr, align 4
  %call19 = call i8* @decode_prompt_string(i8* %12)
  store i8* %call19, i8** %ret, align 4
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.end
  %13 = load i8*, i8** %s.addr, align 4
  %call21 = call i8* @sh_quote_reusable(i8* %13, i32 0)
  store i8* %call21, i8** %ret, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  store i8* null, i8** %ret, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb18, %sw.bb15, %sw.bb13, %cond.end
  %14 = load i8*, i8** %ret, align 4
  store i8* %14, i8** %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then
  %15 = load i8*, i8** %retval, align 4
  ret i8* %15
}

; Function Attrs: noinline nounwind
define internal i8* @array_transform(i32 %xc, %struct.variable* %var, i8* %varname, i32 %quoted) #0 {
entry:
  %retval = alloca i8*, align 4
  %xc.addr = alloca i32, align 4
  %var.addr = alloca %struct.variable*, align 4
  %varname.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %a = alloca %struct.array*, align 4
  %h = alloca %struct.hash_table*, align 4
  %itype = alloca i32, align 4
  %ret = alloca i8*, align 4
  %list = alloca %struct.word_list*, align 4
  %v = alloca %struct.variable*, align 4
  store i32 %xc, i32* %xc.addr, align 4
  store %struct.variable* %var, %struct.variable** %var.addr, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %varname.addr, align 4
  %call = call %struct.variable* @array_variable_part(i8* %0, i8** %ret, i32* null)
  store %struct.variable* %call, %struct.variable** %v, align 4
  %1 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool = icmp ne %struct.variable* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %2, i32 0, i32 5
  %3 = load i32, i32* %attributes, align 4
  %and = and i32 %3, 4096
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %ret, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  store i32 %conv, i32* %itype, align 4
  %6 = load i32, i32* %xc.addr, align 4
  %cmp = icmp eq i32 %6, 65
  br i1 %cmp, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %7 = load %struct.variable*, %struct.variable** %v, align 4
  %8 = load i32, i32* %itype, align 4
  %9 = load i32, i32* %quoted.addr, align 4
  %call4 = call i8* @array_var_assignment(%struct.variable* %7, i32 %8, i32 %9)
  store i8* %call4, i8** %retval, align 4
  br label %return

if.end5:                                          ; preds = %if.end
  %10 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool6 = icmp ne %struct.variable* %10, null
  br i1 %tobool6, label %land.lhs.true7, label %cond.false

land.lhs.true7:                                   ; preds = %if.end5
  %11 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes8 = getelementptr inbounds %struct.variable, %struct.variable* %11, i32 0, i32 5
  %12 = load i32, i32* %attributes8, align 4
  %and9 = and i32 %12, 4
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true7
  %13 = load %struct.variable*, %struct.variable** %v, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %13, i32 0, i32 1
  %14 = load i8*, i8** %value, align 4
  %15 = bitcast i8* %14 to %struct.array*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true7, %if.end5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.array* [ %15, %cond.true ], [ null, %cond.false ]
  store %struct.array* %cond, %struct.array** %a, align 4
  %16 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool11 = icmp ne %struct.variable* %16, null
  br i1 %tobool11, label %land.lhs.true12, label %cond.false18

land.lhs.true12:                                  ; preds = %cond.end
  %17 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes13 = getelementptr inbounds %struct.variable, %struct.variable* %17, i32 0, i32 5
  %18 = load i32, i32* %attributes13, align 4
  %and14 = and i32 %18, 64
  %tobool15 = icmp ne i32 %and14, 0
  br i1 %tobool15, label %cond.true16, label %cond.false18

cond.true16:                                      ; preds = %land.lhs.true12
  %19 = load %struct.variable*, %struct.variable** %v, align 4
  %value17 = getelementptr inbounds %struct.variable, %struct.variable* %19, i32 0, i32 1
  %20 = load i8*, i8** %value17, align 4
  %21 = bitcast i8* %20 to %struct.hash_table*
  br label %cond.end19

cond.false18:                                     ; preds = %land.lhs.true12, %cond.end
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi %struct.hash_table* [ %21, %cond.true16 ], [ null, %cond.false18 ]
  store %struct.hash_table* %cond20, %struct.hash_table** %h, align 4
  %22 = load %struct.array*, %struct.array** %a, align 4
  %tobool21 = icmp ne %struct.array* %22, null
  br i1 %tobool21, label %cond.true22, label %cond.false24

cond.true22:                                      ; preds = %cond.end19
  %23 = load %struct.array*, %struct.array** %a, align 4
  %call23 = call %struct.word_list* @array_to_word_list(%struct.array* %23)
  br label %cond.end31

cond.false24:                                     ; preds = %cond.end19
  %24 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %tobool25 = icmp ne %struct.hash_table* %24, null
  br i1 %tobool25, label %cond.true26, label %cond.false28

cond.true26:                                      ; preds = %cond.false24
  %25 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %call27 = call %struct.word_list* @assoc_to_word_list(%struct.hash_table* %25)
  br label %cond.end29

cond.false28:                                     ; preds = %cond.false24
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi %struct.word_list* [ %call27, %cond.true26 ], [ null, %cond.false28 ]
  br label %cond.end31

cond.end31:                                       ; preds = %cond.end29, %cond.true22
  %cond32 = phi %struct.word_list* [ %call23, %cond.true22 ], [ %cond30, %cond.end29 ]
  store %struct.word_list* %cond32, %struct.word_list** %list, align 4
  %26 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp33 = icmp eq %struct.word_list* %26, null
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %cond.end31
  store i8* null, i8** %retval, align 4
  br label %return

if.end36:                                         ; preds = %cond.end31
  %27 = load i32, i32* %xc.addr, align 4
  %28 = load %struct.variable*, %struct.variable** %v, align 4
  %29 = load %struct.word_list*, %struct.word_list** %list, align 4
  %30 = load i32, i32* %itype, align 4
  %31 = load i32, i32* %quoted.addr, align 4
  %call37 = call i8* @list_transform(i32 %27, %struct.variable* %28, %struct.word_list* %29, i32 %30, i32 %31)
  store i8* %call37, i8** %ret, align 4
  %32 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %32)
  %33 = load i8*, i8** %ret, align 4
  store i8* %33, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end36, %if.then35, %if.then3, %if.then
  %34 = load i8*, i8** %retval, align 4
  ret i8* %34
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_list_transform(i32 %xc, i32 %itype, i32 %quoted) #0 {
entry:
  %retval = alloca i8*, align 4
  %xc.addr = alloca i32, align 4
  %itype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %list = alloca %struct.word_list*, align 4
  store i32 %xc, i32* %xc.addr, align 4
  store i32 %itype, i32* %itype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call, %struct.word_list** %list, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %xc.addr, align 4
  %cmp1 = icmp eq i32 %1, 65
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct.word_list*, %struct.word_list** %list, align 4
  %3 = load i32, i32* %itype.addr, align 4
  %4 = load i32, i32* %quoted.addr, align 4
  %call3 = call i8* @pos_params_assignment(%struct.word_list* %2, i32 %3, i32 %4)
  store i8* %call3, i8** %retval, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %5 = load i32, i32* %xc.addr, align 4
  %6 = load %struct.word_list*, %struct.word_list** %list, align 4
  %7 = load i32, i32* %itype.addr, align 4
  %8 = load i32, i32* %quoted.addr, align 4
  %call5 = call i8* @list_transform(i32 %5, %struct.variable* null, %struct.word_list* %6, i32 %7, i32 %8)
  store i8* %call5, i8** %ret, align 4
  %9 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %9)
  %10 = load i8*, i8** %ret, align 4
  store i8* %10, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %11 = load i8*, i8** %retval, align 4
  ret i8* %11
}

declare i32 @var_attribute_string(%struct.variable*, i32, i8*) #1

; Function Attrs: noinline nounwind
define internal i8* @string_var_assignment(%struct.variable* %v, i8* %s) #0 {
entry:
  %v.addr = alloca %struct.variable*, align 4
  %s.addr = alloca i8*, align 4
  %flags = alloca [16 x i8], align 1
  %ret = alloca i8*, align 4
  %val = alloca i8*, align 4
  %i = alloca i32, align 4
  store %struct.variable* %v, %struct.variable** %v.addr, align 4
  store i8* %s, i8** %s.addr, align 4
  %0 = load i8*, i8** %s.addr, align 4
  %call = call i8* @sh_quote_reusable(i8* %0, i32 0)
  store i8* %call, i8** %val, align 4
  %1 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %call1 = call i32 @var_attribute_string(%struct.variable* %1, i32 0, i8* %arraydecay)
  store i32 %call1, i32* %i, align 4
  %2 = load i32, i32* %i, align 4
  %3 = load i8*, i8** %val, align 4
  %call2 = call i32 @strlen(i8* %3)
  %add = add i32 %2, %call2
  %4 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %name = getelementptr inbounds %struct.variable, %struct.variable* %4, i32 0, i32 0
  %5 = load i8*, i8** %name, align 4
  %call3 = call i32 @strlen(i8* %5)
  %add4 = add i32 %add, %call3
  %add5 = add i32 %add4, 16
  %add6 = add i32 %add5, 16
  %call7 = call i8* @sh_xmalloc(i32 %add6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5048)
  store i8* %call7, i8** %ret, align 4
  %6 = load i32, i32* %i, align 4
  %cmp = icmp sgt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %ret, align 4
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %8 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %name9 = getelementptr inbounds %struct.variable, %struct.variable* %8, i32 0, i32 0
  %9 = load i8*, i8** %name9, align 4
  %10 = load i8*, i8** %val, align 4
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i8* %arraydecay8, i8* %9, i8* %10)
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load i8*, i8** %ret, align 4
  %12 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %name11 = getelementptr inbounds %struct.variable, %struct.variable* %12, i32 0, i32 0
  %13 = load i8*, i8** %name11, align 4
  %14 = load i8*, i8** %val, align 4
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i8* %13, i8* %14)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5053)
  %16 = load i8*, i8** %ret, align 4
  ret i8* %16
}

declare i8* @ansiexpand(i8*, i32, i32, i32*) #1

declare i8* @decode_prompt_string(i8*) #1

declare i8* @sh_quote_reusable(i8*, i32) #1

declare i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline nounwind
define internal i8* @array_var_assignment(%struct.variable* %v, i32 %itype, i32 %quoted) #0 {
entry:
  %retval = alloca i8*, align 4
  %v.addr = alloca %struct.variable*, align 4
  %itype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %val = alloca i8*, align 4
  %flags = alloca [16 x i8], align 1
  %i = alloca i32, align 4
  store %struct.variable* %v, %struct.variable** %v.addr, align 4
  store i32 %itype, i32* %itype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %cmp = icmp eq %struct.variable* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %1, i32 0, i32 5
  %2 = load i32, i32* %attributes, align 4
  %and = and i32 %2, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %3 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %3, i32 0, i32 1
  %4 = load i8*, i8** %value, align 4
  %5 = bitcast i8* %4 to %struct.array*
  %call = call i8* @array_to_assign(%struct.array* %5, i32 0)
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %6 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %value1 = getelementptr inbounds %struct.variable, %struct.variable* %6, i32 0, i32 1
  %7 = load i8*, i8** %value1, align 4
  %8 = bitcast i8* %7 to %struct.hash_table*
  %call2 = call i8* @assoc_to_assign(%struct.hash_table* %8, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call2, %cond.false ]
  store i8* %cond, i8** %val, align 4
  %9 = load i8*, i8** %val, align 4
  %cmp3 = icmp eq i8* %9, null
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %cond.end
  %call5 = call i8* @sh_xmalloc(i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5072)
  store i8* %call5, i8** %val, align 4
  %10 = load i8*, i8** %val, align 4
  %arrayidx = getelementptr inbounds i8, i8* %10, i32 0
  store i8 40, i8* %arrayidx, align 1
  %11 = load i8*, i8** %val, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i32 1
  store i8 41, i8* %arrayidx6, align 1
  %12 = load i8*, i8** %val, align 4
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i32 2
  store i8 0, i8* %arrayidx7, align 1
  br label %if.end16

if.else:                                          ; preds = %cond.end
  %13 = load i32, i32* %quoted.addr, align 4
  %and8 = and i32 %13, 3
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %cond.true10, label %cond.false12

cond.true10:                                      ; preds = %if.else
  %14 = load i8*, i8** %val, align 4
  %call11 = call i8* @quote_string(i8* %14)
  br label %cond.end14

cond.false12:                                     ; preds = %if.else
  %15 = load i8*, i8** %val, align 4
  %call13 = call i8* @quote_escapes(i8* %15)
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false12, %cond.true10
  %cond15 = phi i8* [ %call11, %cond.true10 ], [ %call13, %cond.false12 ]
  store i8* %cond15, i8** %ret, align 4
  %16 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5080)
  %17 = load i8*, i8** %ret, align 4
  store i8* %17, i8** %val, align 4
  br label %if.end16

if.end16:                                         ; preds = %cond.end14, %if.then4
  %18 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %call17 = call i32 @var_attribute_string(%struct.variable* %18, i32 0, i8* %arraydecay)
  store i32 %call17, i32* %i, align 4
  %19 = load i32, i32* %i, align 4
  %20 = load i8*, i8** %val, align 4
  %call18 = call i32 @strlen(i8* %20)
  %add = add i32 %19, %call18
  %21 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %name = getelementptr inbounds %struct.variable, %struct.variable* %21, i32 0, i32 0
  %22 = load i8*, i8** %name, align 4
  %call19 = call i32 @strlen(i8* %22)
  %add20 = add i32 %add, %call19
  %add21 = add i32 %add20, 16
  %call22 = call i8* @sh_xmalloc(i32 %add21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5084)
  store i8* %call22, i8** %ret, align 4
  %23 = load i8*, i8** %ret, align 4
  %arraydecay23 = getelementptr inbounds [16 x i8], [16 x i8]* %flags, i32 0, i32 0
  %24 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %name24 = getelementptr inbounds %struct.variable, %struct.variable* %24, i32 0, i32 0
  %25 = load i8*, i8** %name24, align 4
  %26 = load i8*, i8** %val, align 4
  %call25 = call i32 (i8*, i8*, ...) @sprintf(i8* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i32 0, i32 0), i8* %arraydecay23, i8* %25, i8* %26)
  %27 = load i8*, i8** %val, align 4
  call void @sh_xfree(i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5086)
  %28 = load i8*, i8** %ret, align 4
  store i8* %28, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end16, %if.then
  %29 = load i8*, i8** %retval, align 4
  ret i8* %29
}

declare %struct.word_list* @array_to_word_list(%struct.array*) #1

declare %struct.word_list* @assoc_to_word_list(%struct.hash_table*) #1

; Function Attrs: noinline nounwind
define internal i8* @list_transform(i32 %xc, %struct.variable* %v, %struct.word_list* %list, i32 %itype, i32 %quoted) #0 {
entry:
  %xc.addr = alloca i32, align 4
  %v.addr = alloca %struct.variable*, align 4
  %list.addr = alloca %struct.word_list*, align 4
  %itype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %new = alloca %struct.word_list*, align 4
  %l = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_desc*, align 4
  %tword = alloca i8*, align 4
  store i32 %xc, i32* %xc.addr, align 4
  store %struct.variable* %v, %struct.variable** %v.addr, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i32 %itype, i32* %itype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store %struct.word_list* null, %struct.word_list** %new, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %l, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %xc.addr, align 4
  %3 = load %struct.variable*, %struct.variable** %v.addr, align 4
  %4 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %4, i32 0, i32 1
  %5 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %5, i32 0, i32 0
  %6 = load i8*, i8** %word1, align 4
  %call = call i8* @string_transform(i32 %2, %struct.variable* %3, i8* %6)
  store i8* %call, i8** %tword, align 4
  %call2 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call2, %struct.word_desc** %w, align 4
  %7 = load i8*, i8** %tword, align 4
  %tobool3 = icmp ne i8* %7, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %8 = load i8*, i8** %tword, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %call4 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5162)
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %call5, %cond.false ]
  %9 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %9, i32 0, i32 0
  store i8* %cond, i8** %word6, align 4
  %10 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %11 = load %struct.word_list*, %struct.word_list** %new, align 4
  %call7 = call %struct.word_list* @make_word_list(%struct.word_desc* %10, %struct.word_list* %11)
  store %struct.word_list* %call7, %struct.word_list** %new, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %12 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %12, i32 0, i32 0
  %13 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %13, %struct.word_list** %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = load %struct.word_list*, %struct.word_list** %new, align 4
  %tobool8 = icmp ne %struct.word_list* %14, null
  br i1 %tobool8, label %land.lhs.true, label %cond.false13

land.lhs.true:                                    ; preds = %for.end
  %15 = load %struct.word_list*, %struct.word_list** %new, align 4
  %next9 = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 0
  %16 = load %struct.word_list*, %struct.word_list** %next9, align 4
  %tobool10 = icmp ne %struct.word_list* %16, null
  br i1 %tobool10, label %cond.true11, label %cond.false13

cond.true11:                                      ; preds = %land.lhs.true
  %17 = load %struct.word_list*, %struct.word_list** %new, align 4
  %18 = bitcast %struct.word_list* %17 to %struct.g_list*
  %call12 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %18)
  %19 = bitcast %struct.g_list* %call12 to %struct.word_list*
  br label %cond.end14

cond.false13:                                     ; preds = %land.lhs.true, %for.end
  %20 = load %struct.word_list*, %struct.word_list** %new, align 4
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.word_list* [ %19, %cond.true11 ], [ %20, %cond.false13 ]
  store %struct.word_list* %cond15, %struct.word_list** %l, align 4
  %21 = load i32, i32* %itype.addr, align 4
  %22 = load %struct.word_list*, %struct.word_list** %l, align 4
  %23 = load i32, i32* %quoted.addr, align 4
  %call16 = call i8* @string_list_pos_params(i32 %21, %struct.word_list* %22, i32 %23)
  store i8* %call16, i8** %tword, align 4
  %24 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @dispose_words(%struct.word_list* %24)
  %25 = load i8*, i8** %tword, align 4
  ret i8* %25
}

declare i8* @array_to_assign(%struct.array*, i32) #1

declare i8* @assoc_to_assign(%struct.hash_table*, i32) #1

; Function Attrs: noinline nounwind
define internal i8* @pos_params_assignment(%struct.word_list* %list, i32 %itype, i32 %quoted) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %itype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %temp = alloca i8*, align 4
  %ret = alloca i8*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i32 %itype, i32* %itype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  %1 = load i32, i32* %itype.addr, align 4
  %2 = load i32, i32* %quoted.addr, align 4
  %call = call i8* @list_transform(i32 81, %struct.variable* null, %struct.word_list* %0, i32 %1, i32 %2)
  store i8* %call, i8** %temp, align 4
  %3 = load i8*, i8** %temp, align 4
  %call1 = call i32 @strlen(i8* %3)
  %add = add i32 %call1, 8
  %call2 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5101)
  store i8* %call2, i8** %ret, align 4
  %4 = load i8*, i8** %ret, align 4
  %call3 = call i8* @strcpy(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0))
  %5 = load i8*, i8** %ret, align 4
  %add.ptr = getelementptr inbounds i8, i8* %5, i32 7
  %6 = load i8*, i8** %temp, align 4
  %call4 = call i8* @strcpy(i8* %add.ptr, i8* %6)
  %7 = load i8*, i8** %temp, align 4
  call void @sh_xfree(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 5104)
  %8 = load i8*, i8** %ret, align 4
  ret i8* %8
}

; Function Attrs: noinline nounwind
define internal i32 @getpatspec(i32 %c, i8* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %value.addr = alloca i8*, align 4
  store i32 %c, i32* %c.addr, align 4
  store i8* %value, i8** %value.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %cmp = icmp eq i32 %0, 35
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %value.addr, align 4
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 35
  %cond = select i1 %cmp1, i32 1, i32 2
  store i32 %cond, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %value.addr, align 4
  %4 = load i8, i8* %3, align 1
  %conv3 = sext i8 %4 to i32
  %cmp4 = icmp eq i32 %conv3, 37
  %cond6 = select i1 %cmp4, i32 3, i32 4
  store i32 %cond6, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4
  ret i32 %5
}

; Function Attrs: noinline nounwind
define internal i8* @remove_pattern(i8* %param, i8* %pattern, i32 %op) #0 {
entry:
  %retval = alloca i8*, align 4
  %param.addr = alloca i8*, align 4
  %pattern.addr = alloca i8*, align 4
  %op.addr = alloca i32, align 4
  %xret = alloca i8*, align 4
  %ret = alloca i32*, align 4
  %oret = alloca i32*, align 4
  %n = alloca i32, align 4
  %wparam = alloca i32*, align 4
  %wpattern = alloca i32*, align 4
  %ps = alloca %struct.__mbstate_t, align 4
  store i8* %param, i8** %param.addr, align 4
  store i8* %pattern, i8** %pattern.addr, align 4
  store i32 %op, i32* %op.addr, align 4
  %0 = load i8*, i8** %param.addr, align 4
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %param.addr, align 4
  store i8* %1, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %param.addr, align 4
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i8*, i8** %pattern.addr, align 4
  %cmp3 = icmp eq i8* %4, null
  br i1 %cmp3, label %if.then9, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i8*, i8** %pattern.addr, align 4
  %6 = load i8, i8* %5, align 1
  %conv6 = sext i8 %6 to i32
  %cmp7 = icmp eq i32 %conv6, 0
  br i1 %cmp7, label %if.then9, label %if.end12

if.then9:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  %7 = load i8*, i8** %param.addr, align 4
  %call = call i32 @strlen(i8* %7)
  %add = add i32 1, %call
  %call10 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4401)
  %8 = load i8*, i8** %param.addr, align 4
  %call11 = call i8* @strcpy(i8* %call10, i8* %8)
  store i8* %call11, i8** %retval, align 4
  br label %return

if.end12:                                         ; preds = %lor.lhs.false5
  %call13 = call i32 @__ctype_get_mb_cur_max()
  %cmp14 = icmp ugt i32 %call13, 1
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end12
  %9 = load i8*, i8** %pattern.addr, align 4
  %call17 = call i32 @xdupmbstowcs(i32** %wpattern, i8*** null, i8* %9)
  store i32 %call17, i32* %n, align 4
  %10 = load i32, i32* %n, align 4
  %cmp18 = icmp eq i32 %10, -1
  br i1 %cmp18, label %if.then20, label %if.end28

if.then20:                                        ; preds = %if.then16
  %11 = load i8*, i8** %param.addr, align 4
  %12 = load i8*, i8** %pattern.addr, align 4
  %13 = load i32, i32* %op.addr, align 4
  %call21 = call i8* @remove_upattern(i8* %11, i8* %12, i32 %13)
  store i8* %call21, i8** %xret, align 4
  %14 = load i8*, i8** %xret, align 4
  %15 = load i8*, i8** %param.addr, align 4
  %cmp22 = icmp eq i8* %14, %15
  br i1 %cmp22, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then20
  %16 = load i8*, i8** %param.addr, align 4
  %call24 = call i32 @strlen(i8* %16)
  %add25 = add i32 1, %call24
  %call26 = call i8* @sh_xmalloc(i32 %add25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4415)
  %17 = load i8*, i8** %param.addr, align 4
  %call27 = call i8* @strcpy(i8* %call26, i8* %17)
  br label %cond.end

cond.false:                                       ; preds = %if.then20
  %18 = load i8*, i8** %xret, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call27, %cond.true ], [ %18, %cond.false ]
  store i8* %cond, i8** %retval, align 4
  br label %return

if.end28:                                         ; preds = %if.then16
  %19 = load i8*, i8** %param.addr, align 4
  %call29 = call i32 @xdupmbstowcs(i32** %wparam, i8*** null, i8* %19)
  store i32 %call29, i32* %n, align 4
  %20 = load i32, i32* %n, align 4
  %cmp30 = icmp eq i32 %20, -1
  br i1 %cmp30, label %if.then32, label %if.end44

if.then32:                                        ; preds = %if.end28
  %21 = load i32*, i32** %wpattern, align 4
  %22 = bitcast i32* %21 to i8*
  call void @sh_xfree(i8* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4421)
  %23 = load i8*, i8** %param.addr, align 4
  %24 = load i8*, i8** %pattern.addr, align 4
  %25 = load i32, i32* %op.addr, align 4
  %call33 = call i8* @remove_upattern(i8* %23, i8* %24, i32 %25)
  store i8* %call33, i8** %xret, align 4
  %26 = load i8*, i8** %xret, align 4
  %27 = load i8*, i8** %param.addr, align 4
  %cmp34 = icmp eq i8* %26, %27
  br i1 %cmp34, label %cond.true36, label %cond.false41

cond.true36:                                      ; preds = %if.then32
  %28 = load i8*, i8** %param.addr, align 4
  %call37 = call i32 @strlen(i8* %28)
  %add38 = add i32 1, %call37
  %call39 = call i8* @sh_xmalloc(i32 %add38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4423)
  %29 = load i8*, i8** %param.addr, align 4
  %call40 = call i8* @strcpy(i8* %call39, i8* %29)
  br label %cond.end42

cond.false41:                                     ; preds = %if.then32
  %30 = load i8*, i8** %xret, align 4
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false41, %cond.true36
  %cond43 = phi i8* [ %call40, %cond.true36 ], [ %30, %cond.false41 ]
  store i8* %cond43, i8** %retval, align 4
  br label %return

if.end44:                                         ; preds = %if.end28
  %31 = load i32*, i32** %wparam, align 4
  %32 = load i32, i32* %n, align 4
  %33 = load i32*, i32** %wpattern, align 4
  %34 = load i32, i32* %op.addr, align 4
  %call45 = call i32* @remove_wpattern(i32* %31, i32 %32, i32* %33, i32 %34)
  store i32* %call45, i32** %ret, align 4
  store i32* %call45, i32** %oret, align 4
  %35 = load i32*, i32** %ret, align 4
  %36 = load i32*, i32** %wparam, align 4
  %cmp46 = icmp eq i32* %35, %36
  br i1 %cmp46, label %if.then48, label %if.end53

if.then48:                                        ; preds = %if.end44
  %37 = load i32*, i32** %wparam, align 4
  %38 = bitcast i32* %37 to i8*
  call void @sh_xfree(i8* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4430)
  %39 = load i32*, i32** %wpattern, align 4
  %40 = bitcast i32* %39 to i8*
  call void @sh_xfree(i8* %40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4431)
  %41 = load i8*, i8** %param.addr, align 4
  %call49 = call i32 @strlen(i8* %41)
  %add50 = add i32 1, %call49
  %call51 = call i8* @sh_xmalloc(i32 %add50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4432)
  %42 = load i8*, i8** %param.addr, align 4
  %call52 = call i8* @strcpy(i8* %call51, i8* %42)
  store i8* %call52, i8** %retval, align 4
  br label %return

if.end53:                                         ; preds = %if.end44
  %43 = load i32*, i32** %wparam, align 4
  %44 = bitcast i32* %43 to i8*
  call void @sh_xfree(i8* %44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4435)
  %45 = load i32*, i32** %wpattern, align 4
  %46 = bitcast i32* %45 to i8*
  call void @sh_xfree(i8* %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4436)
  %47 = load i8*, i8** %param.addr, align 4
  %call54 = call i32 @strlen(i8* %47)
  store i32 %call54, i32* %n, align 4
  %48 = load i32, i32* %n, align 4
  %add55 = add i32 %48, 1
  %call56 = call i8* @sh_xmalloc(i32 %add55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4439)
  store i8* %call56, i8** %xret, align 4
  %49 = bitcast %struct.__mbstate_t* %ps to i8*
  call void @llvm.memset.p0i8.i32(i8* %49, i8 0, i32 8, i32 4, i1 false)
  %50 = load i8*, i8** %xret, align 4
  %51 = load i32, i32* %n, align 4
  %call57 = call i32 @wcsrtombs(i8* %50, i32** %ret, i32 %51, %struct.__mbstate_t* %ps)
  store i32 %call57, i32* %n, align 4
  %52 = load i8*, i8** %xret, align 4
  %53 = load i32, i32* %n, align 4
  %arrayidx = getelementptr inbounds i8, i8* %52, i32 %53
  store i8 0, i8* %arrayidx, align 1
  %54 = load i32*, i32** %oret, align 4
  %55 = bitcast i32* %54 to i8*
  call void @sh_xfree(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4443)
  %56 = load i8*, i8** %xret, align 4
  store i8* %56, i8** %retval, align 4
  br label %return

if.else:                                          ; preds = %if.end12
  %57 = load i8*, i8** %param.addr, align 4
  %58 = load i8*, i8** %pattern.addr, align 4
  %59 = load i32, i32* %op.addr, align 4
  %call58 = call i8* @remove_upattern(i8* %57, i8* %58, i32 %59)
  store i8* %call58, i8** %xret, align 4
  %60 = load i8*, i8** %xret, align 4
  %61 = load i8*, i8** %param.addr, align 4
  %cmp59 = icmp eq i8* %60, %61
  br i1 %cmp59, label %cond.true61, label %cond.false66

cond.true61:                                      ; preds = %if.else
  %62 = load i8*, i8** %param.addr, align 4
  %call62 = call i32 @strlen(i8* %62)
  %add63 = add i32 1, %call62
  %call64 = call i8* @sh_xmalloc(i32 %add63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4450)
  %63 = load i8*, i8** %param.addr, align 4
  %call65 = call i8* @strcpy(i8* %call64, i8* %63)
  br label %cond.end67

cond.false66:                                     ; preds = %if.else
  %64 = load i8*, i8** %xret, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true61
  %cond68 = phi i8* [ %call65, %cond.true61 ], [ %64, %cond.false66 ]
  store i8* %cond68, i8** %retval, align 4
  br label %return

return:                                           ; preds = %cond.end67, %if.end53, %if.then48, %cond.end42, %cond.end, %if.then9, %if.then
  %65 = load i8*, i8** %retval, align 4
  ret i8* %65
}

; Function Attrs: noinline nounwind
define internal i8* @array_remove_pattern(%struct.variable* %var, i8* %pattern, i32 %patspec, i8* %varname, i32 %quoted) #0 {
entry:
  %retval = alloca i8*, align 4
  %var.addr = alloca %struct.variable*, align 4
  %pattern.addr = alloca i8*, align 4
  %patspec.addr = alloca i32, align 4
  %varname.addr = alloca i8*, align 4
  %quoted.addr = alloca i32, align 4
  %a = alloca %struct.array*, align 4
  %h = alloca %struct.hash_table*, align 4
  %itype = alloca i32, align 4
  %ret = alloca i8*, align 4
  %list = alloca %struct.word_list*, align 4
  %v = alloca %struct.variable*, align 4
  store %struct.variable* %var, %struct.variable** %var.addr, align 4
  store i8* %pattern, i8** %pattern.addr, align 4
  store i32 %patspec, i32* %patspec.addr, align 4
  store i8* %varname, i8** %varname.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %0 = load i8*, i8** %varname.addr, align 4
  %call = call %struct.variable* @array_variable_part(i8* %0, i8** %ret, i32* null)
  store %struct.variable* %call, %struct.variable** %v, align 4
  %1 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool = icmp ne %struct.variable* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes = getelementptr inbounds %struct.variable, %struct.variable* %2, i32 0, i32 5
  %3 = load i32, i32* %attributes, align 4
  %and = and i32 %3, 4096
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %ret, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 0
  %5 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  store i32 %conv, i32* %itype, align 4
  %6 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool2 = icmp ne %struct.variable* %6, null
  br i1 %tobool2, label %land.lhs.true3, label %cond.false

land.lhs.true3:                                   ; preds = %if.end
  %7 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes4 = getelementptr inbounds %struct.variable, %struct.variable* %7, i32 0, i32 5
  %8 = load i32, i32* %attributes4, align 4
  %and5 = and i32 %8, 4
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true3
  %9 = load %struct.variable*, %struct.variable** %v, align 4
  %value = getelementptr inbounds %struct.variable, %struct.variable* %9, i32 0, i32 1
  %10 = load i8*, i8** %value, align 4
  %11 = bitcast i8* %10 to %struct.array*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true3, %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.array* [ %11, %cond.true ], [ null, %cond.false ]
  store %struct.array* %cond, %struct.array** %a, align 4
  %12 = load %struct.variable*, %struct.variable** %v, align 4
  %tobool7 = icmp ne %struct.variable* %12, null
  br i1 %tobool7, label %land.lhs.true8, label %cond.false14

land.lhs.true8:                                   ; preds = %cond.end
  %13 = load %struct.variable*, %struct.variable** %v, align 4
  %attributes9 = getelementptr inbounds %struct.variable, %struct.variable* %13, i32 0, i32 5
  %14 = load i32, i32* %attributes9, align 4
  %and10 = and i32 %14, 64
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %land.lhs.true8
  %15 = load %struct.variable*, %struct.variable** %v, align 4
  %value13 = getelementptr inbounds %struct.variable, %struct.variable* %15, i32 0, i32 1
  %16 = load i8*, i8** %value13, align 4
  %17 = bitcast i8* %16 to %struct.hash_table*
  br label %cond.end15

cond.false14:                                     ; preds = %land.lhs.true8, %cond.end
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi %struct.hash_table* [ %17, %cond.true12 ], [ null, %cond.false14 ]
  store %struct.hash_table* %cond16, %struct.hash_table** %h, align 4
  %18 = load %struct.array*, %struct.array** %a, align 4
  %tobool17 = icmp ne %struct.array* %18, null
  br i1 %tobool17, label %cond.true18, label %cond.false20

cond.true18:                                      ; preds = %cond.end15
  %19 = load %struct.array*, %struct.array** %a, align 4
  %call19 = call %struct.word_list* @array_to_word_list(%struct.array* %19)
  br label %cond.end27

cond.false20:                                     ; preds = %cond.end15
  %20 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %tobool21 = icmp ne %struct.hash_table* %20, null
  br i1 %tobool21, label %cond.true22, label %cond.false24

cond.true22:                                      ; preds = %cond.false20
  %21 = load %struct.hash_table*, %struct.hash_table** %h, align 4
  %call23 = call %struct.word_list* @assoc_to_word_list(%struct.hash_table* %21)
  br label %cond.end25

cond.false24:                                     ; preds = %cond.false20
  br label %cond.end25

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.word_list* [ %call23, %cond.true22 ], [ null, %cond.false24 ]
  br label %cond.end27

cond.end27:                                       ; preds = %cond.end25, %cond.true18
  %cond28 = phi %struct.word_list* [ %call19, %cond.true18 ], [ %cond26, %cond.end25 ]
  store %struct.word_list* %cond28, %struct.word_list** %list, align 4
  %22 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp = icmp eq %struct.word_list* %22, null
  br i1 %cmp, label %if.then30, label %if.end31

if.then30:                                        ; preds = %cond.end27
  store i8* null, i8** %retval, align 4
  br label %return

if.end31:                                         ; preds = %cond.end27
  %23 = load %struct.word_list*, %struct.word_list** %list, align 4
  %24 = load i8*, i8** %pattern.addr, align 4
  %25 = load i32, i32* %patspec.addr, align 4
  %26 = load i32, i32* %itype, align 4
  %27 = load i32, i32* %quoted.addr, align 4
  %call32 = call i8* @list_remove_pattern(%struct.word_list* %23, i8* %24, i32 %25, i32 %26, i32 %27)
  store i8* %call32, i8** %ret, align 4
  %28 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %28)
  %29 = load i8*, i8** %ret, align 4
  store i8* %29, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end31, %if.then30, %if.then
  %30 = load i8*, i8** %retval, align 4
  ret i8* %30
}

; Function Attrs: noinline nounwind
define internal i8* @parameter_list_remove_pattern(i32 %itype, i8* %pattern, i32 %patspec, i32 %quoted) #0 {
entry:
  %retval = alloca i8*, align 4
  %itype.addr = alloca i32, align 4
  %pattern.addr = alloca i8*, align 4
  %patspec.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %ret = alloca i8*, align 4
  %list = alloca %struct.word_list*, align 4
  store i32 %itype, i32* %itype.addr, align 4
  store i8* %pattern, i8** %pattern.addr, align 4
  store i32 %patspec, i32* %patspec.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  %call = call %struct.word_list* @list_rest_of_args()
  store %struct.word_list* %call, %struct.word_list** %list, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.word_list*, %struct.word_list** %list, align 4
  %2 = load i8*, i8** %pattern.addr, align 4
  %3 = load i32, i32* %patspec.addr, align 4
  %4 = load i32, i32* %itype.addr, align 4
  %5 = load i32, i32* %quoted.addr, align 4
  %call1 = call i8* @list_remove_pattern(%struct.word_list* %1, i8* %2, i32 %3, i32 %4, i32 %5)
  store i8* %call1, i8** %ret, align 4
  %6 = load %struct.word_list*, %struct.word_list** %list, align 4
  call void @dispose_words(%struct.word_list* %6)
  %7 = load i8*, i8** %ret, align 4
  store i8* %7, i8** %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i8*, i8** %retval, align 4
  ret i8* %8
}

; Function Attrs: noinline nounwind
define internal i8* @remove_upattern(i8* %param, i8* %pattern, i32 %op) #0 {
entry:
  %retval = alloca i8*, align 4
  %param.addr = alloca i8*, align 4
  %pattern.addr = alloca i8*, align 4
  %op.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %end = alloca i8*, align 4
  %p = alloca i8*, align 4
  %ret = alloca i8*, align 4
  %c = alloca i8, align 1
  store i8* %param, i8** %param.addr, align 4
  store i8* %pattern, i8** %pattern.addr, align 4
  store i32 %op, i32* %op.addr, align 4
  %0 = load i8*, i8** %param.addr, align 4
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %land.lhs.true, label %cond.false13

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %param.addr, align 4
  %arrayidx = getelementptr inbounds i8, i8* %1, i32 0
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %cond.true, label %cond.false13

cond.true:                                        ; preds = %land.lhs.true
  %3 = load i8*, i8** %param.addr, align 4
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i32 1
  %4 = load i8, i8* %arrayidx2, align 1
  %conv3 = sext i8 %4 to i32
  %tobool4 = icmp ne i32 %conv3, 0
  br i1 %tobool4, label %cond.true5, label %cond.false10

cond.true5:                                       ; preds = %cond.true
  %5 = load i8*, i8** %param.addr, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i32 2
  %6 = load i8, i8* %arrayidx6, align 1
  %conv7 = sext i8 %6 to i32
  %tobool8 = icmp ne i32 %conv7, 0
  br i1 %tobool8, label %cond.true9, label %cond.false

cond.true9:                                       ; preds = %cond.true5
  %7 = load i8*, i8** %param.addr, align 4
  %call = call i32 @strlen(i8* %7)
  br label %cond.end

cond.false:                                       ; preds = %cond.true5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true9
  %cond = phi i32 [ %call, %cond.true9 ], [ 2, %cond.false ]
  br label %cond.end11

cond.false10:                                     ; preds = %cond.true
  br label %cond.end11

cond.end11:                                       ; preds = %cond.false10, %cond.end
  %cond12 = phi i32 [ %cond, %cond.end ], [ 1, %cond.false10 ]
  br label %cond.end14

cond.false13:                                     ; preds = %land.lhs.true, %entry
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.end11
  %cond15 = phi i32 [ %cond12, %cond.end11 ], [ 0, %cond.false13 ]
  store i32 %cond15, i32* %len, align 4
  %8 = load i8*, i8** %param.addr, align 4
  %9 = load i32, i32* %len, align 4
  %add.ptr = getelementptr inbounds i8, i8* %8, i32 %9
  store i8* %add.ptr, i8** %end, align 4
  %10 = load i32, i32* %op.addr, align 4
  switch i32 %10, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb25
    i32 3, label %sw.bb44
    i32 4, label %sw.bb63
  ]

sw.bb:                                            ; preds = %cond.end14
  %11 = load i8*, i8** %end, align 4
  store i8* %11, i8** %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %12 = load i8*, i8** %p, align 4
  %13 = load i8*, i8** %param.addr, align 4
  %cmp = icmp uge i8* %12, %13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load i8*, i8** %p, align 4
  %15 = load i8, i8* %14, align 1
  store i8 %15, i8* %c, align 1
  %16 = load i8*, i8** %p, align 4
  store i8 0, i8* %16, align 1
  %17 = load i8*, i8** %pattern.addr, align 4
  %18 = load i8*, i8** %param.addr, align 4
  %19 = load i32, i32* @extended_glob, align 4
  %tobool17 = icmp ne i32 %19, 0
  %cond18 = select i1 %tobool17, i32 32, i32 0
  %call19 = call i32 @strmatch(i8* %17, i8* %18, i32 %cond18)
  %cmp20 = icmp ne i32 %call19, 1
  br i1 %cmp20, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %20 = load i8, i8* %c, align 1
  %21 = load i8*, i8** %p, align 4
  store i8 %20, i8* %21, align 1
  %22 = load i8*, i8** %p, align 4
  %call22 = call i32 @strlen(i8* %22)
  %add = add i32 1, %call22
  %call23 = call i8* @sh_xmalloc(i32 %add, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4270)
  %23 = load i8*, i8** %p, align 4
  %call24 = call i8* @strcpy(i8* %call23, i8* %23)
  store i8* %call24, i8** %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  %24 = load i8, i8* %c, align 1
  %25 = load i8*, i8** %p, align 4
  store i8 %24, i8* %25, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %26 = load i8*, i8** %p, align 4
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 -1
  store i8* %incdec.ptr, i8** %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb25:                                          ; preds = %cond.end14
  %27 = load i8*, i8** %param.addr, align 4
  store i8* %27, i8** %p, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc41, %sw.bb25
  %28 = load i8*, i8** %p, align 4
  %29 = load i8*, i8** %end, align 4
  %cmp27 = icmp ule i8* %28, %29
  br i1 %cmp27, label %for.body29, label %for.end43

for.body29:                                       ; preds = %for.cond26
  %30 = load i8*, i8** %p, align 4
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %c, align 1
  %32 = load i8*, i8** %p, align 4
  store i8 0, i8* %32, align 1
  %33 = load i8*, i8** %pattern.addr, align 4
  %34 = load i8*, i8** %param.addr, align 4
  %35 = load i32, i32* @extended_glob, align 4
  %tobool30 = icmp ne i32 %35, 0
  %cond31 = select i1 %tobool30, i32 32, i32 0
  %call32 = call i32 @strmatch(i8* %33, i8* %34, i32 %cond31)
  %cmp33 = icmp ne i32 %call32, 1
  br i1 %cmp33, label %if.then35, label %if.end40

if.then35:                                        ; preds = %for.body29
  %36 = load i8, i8* %c, align 1
  %37 = load i8*, i8** %p, align 4
  store i8 %36, i8* %37, align 1
  %38 = load i8*, i8** %p, align 4
  %call36 = call i32 @strlen(i8* %38)
  %add37 = add i32 1, %call36
  %call38 = call i8* @sh_xmalloc(i32 %add37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4284)
  %39 = load i8*, i8** %p, align 4
  %call39 = call i8* @strcpy(i8* %call38, i8* %39)
  store i8* %call39, i8** %retval, align 4
  br label %return

if.end40:                                         ; preds = %for.body29
  %40 = load i8, i8* %c, align 1
  %41 = load i8*, i8** %p, align 4
  store i8 %40, i8* %41, align 1
  br label %for.inc41

for.inc41:                                        ; preds = %if.end40
  %42 = load i8*, i8** %p, align 4
  %incdec.ptr42 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %incdec.ptr42, i8** %p, align 4
  br label %for.cond26

for.end43:                                        ; preds = %for.cond26
  br label %sw.epilog

sw.bb44:                                          ; preds = %cond.end14
  %43 = load i8*, i8** %param.addr, align 4
  store i8* %43, i8** %p, align 4
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc60, %sw.bb44
  %44 = load i8*, i8** %p, align 4
  %45 = load i8*, i8** %end, align 4
  %cmp46 = icmp ule i8* %44, %45
  br i1 %cmp46, label %for.body48, label %for.end62

for.body48:                                       ; preds = %for.cond45
  %46 = load i8*, i8** %pattern.addr, align 4
  %47 = load i8*, i8** %p, align 4
  %48 = load i32, i32* @extended_glob, align 4
  %tobool49 = icmp ne i32 %48, 0
  %cond50 = select i1 %tobool49, i32 32, i32 0
  %call51 = call i32 @strmatch(i8* %46, i8* %47, i32 %cond50)
  %cmp52 = icmp ne i32 %call51, 1
  br i1 %cmp52, label %if.then54, label %if.end59

if.then54:                                        ; preds = %for.body48
  %49 = load i8*, i8** %p, align 4
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %c, align 1
  %51 = load i8*, i8** %p, align 4
  store i8 0, i8* %51, align 1
  %52 = load i8*, i8** %param.addr, align 4
  %call55 = call i32 @strlen(i8* %52)
  %add56 = add i32 1, %call55
  %call57 = call i8* @sh_xmalloc(i32 %add56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4296)
  %53 = load i8*, i8** %param.addr, align 4
  %call58 = call i8* @strcpy(i8* %call57, i8* %53)
  store i8* %call58, i8** %ret, align 4
  %54 = load i8, i8* %c, align 1
  %55 = load i8*, i8** %p, align 4
  store i8 %54, i8* %55, align 1
  %56 = load i8*, i8** %ret, align 4
  store i8* %56, i8** %retval, align 4
  br label %return

if.end59:                                         ; preds = %for.body48
  br label %for.inc60

for.inc60:                                        ; preds = %if.end59
  %57 = load i8*, i8** %p, align 4
  %incdec.ptr61 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %incdec.ptr61, i8** %p, align 4
  br label %for.cond45

for.end62:                                        ; preds = %for.cond45
  br label %sw.epilog

sw.bb63:                                          ; preds = %cond.end14
  %58 = load i8*, i8** %end, align 4
  store i8* %58, i8** %p, align 4
  br label %for.cond64

for.cond64:                                       ; preds = %for.inc79, %sw.bb63
  %59 = load i8*, i8** %p, align 4
  %60 = load i8*, i8** %param.addr, align 4
  %cmp65 = icmp uge i8* %59, %60
  br i1 %cmp65, label %for.body67, label %for.end81

for.body67:                                       ; preds = %for.cond64
  %61 = load i8*, i8** %pattern.addr, align 4
  %62 = load i8*, i8** %p, align 4
  %63 = load i32, i32* @extended_glob, align 4
  %tobool68 = icmp ne i32 %63, 0
  %cond69 = select i1 %tobool68, i32 32, i32 0
  %call70 = call i32 @strmatch(i8* %61, i8* %62, i32 %cond69)
  %cmp71 = icmp ne i32 %call70, 1
  br i1 %cmp71, label %if.then73, label %if.end78

if.then73:                                        ; preds = %for.body67
  %64 = load i8*, i8** %p, align 4
  %65 = load i8, i8* %64, align 1
  store i8 %65, i8* %c, align 1
  %66 = load i8*, i8** %p, align 4
  store i8 0, i8* %66, align 1
  %67 = load i8*, i8** %param.addr, align 4
  %call74 = call i32 @strlen(i8* %67)
  %add75 = add i32 1, %call74
  %call76 = call i8* @sh_xmalloc(i32 %add75, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4309)
  %68 = load i8*, i8** %param.addr, align 4
  %call77 = call i8* @strcpy(i8* %call76, i8* %68)
  store i8* %call77, i8** %ret, align 4
  %69 = load i8, i8* %c, align 1
  %70 = load i8*, i8** %p, align 4
  store i8 %69, i8* %70, align 1
  %71 = load i8*, i8** %ret, align 4
  store i8* %71, i8** %retval, align 4
  br label %return

if.end78:                                         ; preds = %for.body67
  br label %for.inc79

for.inc79:                                        ; preds = %if.end78
  %72 = load i8*, i8** %p, align 4
  %incdec.ptr80 = getelementptr inbounds i8, i8* %72, i32 -1
  store i8* %incdec.ptr80, i8** %p, align 4
  br label %for.cond64

for.end81:                                        ; preds = %for.cond64
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.end14, %for.end81, %for.end62, %for.end43, %for.end
  %73 = load i8*, i8** %param.addr, align 4
  store i8* %73, i8** %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then73, %if.then54, %if.then35, %if.then
  %74 = load i8*, i8** %retval, align 4
  ret i8* %74
}

; Function Attrs: noinline nounwind
define internal i32* @remove_wpattern(i32* %wparam, i32 %wstrlen, i32* %wpattern, i32 %op) #0 {
entry:
  %retval = alloca i32*, align 4
  %wparam.addr = alloca i32*, align 4
  %wstrlen.addr = alloca i32, align 4
  %wpattern.addr = alloca i32*, align 4
  %op.addr = alloca i32, align 4
  %wc = alloca i32, align 4
  %ret = alloca i32*, align 4
  %n = alloca i32, align 4
  store i32* %wparam, i32** %wparam.addr, align 4
  store i32 %wstrlen, i32* %wstrlen.addr, align 4
  store i32* %wpattern, i32** %wpattern.addr, align 4
  store i32 %op, i32* %op.addr, align 4
  %0 = load i32, i32* %op.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb24
    i32 4, label %sw.bb42
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %wstrlen.addr, align 4
  store i32 %1, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i32, i32* %n, align 4
  %cmp = icmp sge i32 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %wparam.addr, align 4
  %4 = load i32, i32* %n, align 4
  %arrayidx = getelementptr inbounds i32, i32* %3, i32 %4
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %wc, align 4
  %6 = load i32*, i32** %wparam.addr, align 4
  %7 = load i32, i32* %n, align 4
  %arrayidx1 = getelementptr inbounds i32, i32* %6, i32 %7
  store i32 0, i32* %arrayidx1, align 4
  %8 = load i32*, i32** %wpattern.addr, align 4
  %9 = load i32*, i32** %wparam.addr, align 4
  %10 = load i32, i32* @extended_glob, align 4
  %tobool = icmp ne i32 %10, 0
  %cond = select i1 %tobool, i32 32, i32 0
  %call = call i32 @wcsmatch(i32* %8, i32* %9, i32 %cond)
  %cmp2 = icmp ne i32 %call, 1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %wc, align 4
  %12 = load i32*, i32** %wparam.addr, align 4
  %13 = load i32, i32* %n, align 4
  %arrayidx3 = getelementptr inbounds i32, i32* %12, i32 %13
  store i32 %11, i32* %arrayidx3, align 4
  %14 = load i32*, i32** %wparam.addr, align 4
  %15 = load i32, i32* %n, align 4
  %add.ptr = getelementptr inbounds i32, i32* %14, i32 %15
  %call4 = call i32* @wcsdup(i32* %add.ptr)
  store i32* %call4, i32** %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body
  %16 = load i32, i32* %wc, align 4
  %17 = load i32*, i32** %wparam.addr, align 4
  %18 = load i32, i32* %n, align 4
  %arrayidx5 = getelementptr inbounds i32, i32* %17, i32 %18
  store i32 %16, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %n, align 4
  %dec = add nsw i32 %19, -1
  store i32 %dec, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  store i32 0, i32* %n, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc22, %sw.bb6
  %20 = load i32, i32* %n, align 4
  %21 = load i32, i32* %wstrlen.addr, align 4
  %cmp8 = icmp ule i32 %20, %21
  br i1 %cmp8, label %for.body9, label %for.end23

for.body9:                                        ; preds = %for.cond7
  %22 = load i32*, i32** %wparam.addr, align 4
  %23 = load i32, i32* %n, align 4
  %arrayidx10 = getelementptr inbounds i32, i32* %22, i32 %23
  %24 = load i32, i32* %arrayidx10, align 4
  store i32 %24, i32* %wc, align 4
  %25 = load i32*, i32** %wparam.addr, align 4
  %26 = load i32, i32* %n, align 4
  %arrayidx11 = getelementptr inbounds i32, i32* %25, i32 %26
  store i32 0, i32* %arrayidx11, align 4
  %27 = load i32*, i32** %wpattern.addr, align 4
  %28 = load i32*, i32** %wparam.addr, align 4
  %29 = load i32, i32* @extended_glob, align 4
  %tobool12 = icmp ne i32 %29, 0
  %cond13 = select i1 %tobool12, i32 32, i32 0
  %call14 = call i32 @wcsmatch(i32* %27, i32* %28, i32 %cond13)
  %cmp15 = icmp ne i32 %call14, 1
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %for.body9
  %30 = load i32, i32* %wc, align 4
  %31 = load i32*, i32** %wparam.addr, align 4
  %32 = load i32, i32* %n, align 4
  %arrayidx17 = getelementptr inbounds i32, i32* %31, i32 %32
  store i32 %30, i32* %arrayidx17, align 4
  %33 = load i32*, i32** %wparam.addr, align 4
  %34 = load i32, i32* %n, align 4
  %add.ptr18 = getelementptr inbounds i32, i32* %33, i32 %34
  %call19 = call i32* @wcsdup(i32* %add.ptr18)
  store i32* %call19, i32** %retval, align 4
  br label %return

if.end20:                                         ; preds = %for.body9
  %35 = load i32, i32* %wc, align 4
  %36 = load i32*, i32** %wparam.addr, align 4
  %37 = load i32, i32* %n, align 4
  %arrayidx21 = getelementptr inbounds i32, i32* %36, i32 %37
  store i32 %35, i32* %arrayidx21, align 4
  br label %for.inc22

for.inc22:                                        ; preds = %if.end20
  %38 = load i32, i32* %n, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond7

for.end23:                                        ; preds = %for.cond7
  br label %sw.epilog

sw.bb24:                                          ; preds = %entry
  store i32 0, i32* %n, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc39, %sw.bb24
  %39 = load i32, i32* %n, align 4
  %40 = load i32, i32* %wstrlen.addr, align 4
  %cmp26 = icmp ule i32 %39, %40
  br i1 %cmp26, label %for.body27, label %for.end41

for.body27:                                       ; preds = %for.cond25
  %41 = load i32*, i32** %wpattern.addr, align 4
  %42 = load i32*, i32** %wparam.addr, align 4
  %43 = load i32, i32* %n, align 4
  %add.ptr28 = getelementptr inbounds i32, i32* %42, i32 %43
  %44 = load i32, i32* @extended_glob, align 4
  %tobool29 = icmp ne i32 %44, 0
  %cond30 = select i1 %tobool29, i32 32, i32 0
  %call31 = call i32 @wcsmatch(i32* %41, i32* %add.ptr28, i32 %cond30)
  %cmp32 = icmp ne i32 %call31, 1
  br i1 %cmp32, label %if.then33, label %if.end38

if.then33:                                        ; preds = %for.body27
  %45 = load i32*, i32** %wparam.addr, align 4
  %46 = load i32, i32* %n, align 4
  %arrayidx34 = getelementptr inbounds i32, i32* %45, i32 %46
  %47 = load i32, i32* %arrayidx34, align 4
  store i32 %47, i32* %wc, align 4
  %48 = load i32*, i32** %wparam.addr, align 4
  %49 = load i32, i32* %n, align 4
  %arrayidx35 = getelementptr inbounds i32, i32* %48, i32 %49
  store i32 0, i32* %arrayidx35, align 4
  %50 = load i32*, i32** %wparam.addr, align 4
  %call36 = call i32* @wcsdup(i32* %50)
  store i32* %call36, i32** %ret, align 4
  %51 = load i32, i32* %wc, align 4
  %52 = load i32*, i32** %wparam.addr, align 4
  %53 = load i32, i32* %n, align 4
  %arrayidx37 = getelementptr inbounds i32, i32* %52, i32 %53
  store i32 %51, i32* %arrayidx37, align 4
  %54 = load i32*, i32** %ret, align 4
  store i32* %54, i32** %retval, align 4
  br label %return

if.end38:                                         ; preds = %for.body27
  br label %for.inc39

for.inc39:                                        ; preds = %if.end38
  %55 = load i32, i32* %n, align 4
  %inc40 = add nsw i32 %55, 1
  store i32 %inc40, i32* %n, align 4
  br label %for.cond25

for.end41:                                        ; preds = %for.cond25
  br label %sw.epilog

sw.bb42:                                          ; preds = %entry
  %56 = load i32, i32* %wstrlen.addr, align 4
  store i32 %56, i32* %n, align 4
  br label %for.cond43

for.cond43:                                       ; preds = %for.inc57, %sw.bb42
  %57 = load i32, i32* %n, align 4
  %cmp44 = icmp sge i32 %57, 0
  br i1 %cmp44, label %for.body45, label %for.end59

for.body45:                                       ; preds = %for.cond43
  %58 = load i32*, i32** %wpattern.addr, align 4
  %59 = load i32*, i32** %wparam.addr, align 4
  %60 = load i32, i32* %n, align 4
  %add.ptr46 = getelementptr inbounds i32, i32* %59, i32 %60
  %61 = load i32, i32* @extended_glob, align 4
  %tobool47 = icmp ne i32 %61, 0
  %cond48 = select i1 %tobool47, i32 32, i32 0
  %call49 = call i32 @wcsmatch(i32* %58, i32* %add.ptr46, i32 %cond48)
  %cmp50 = icmp ne i32 %call49, 1
  br i1 %cmp50, label %if.then51, label %if.end56

if.then51:                                        ; preds = %for.body45
  %62 = load i32*, i32** %wparam.addr, align 4
  %63 = load i32, i32* %n, align 4
  %arrayidx52 = getelementptr inbounds i32, i32* %62, i32 %63
  %64 = load i32, i32* %arrayidx52, align 4
  store i32 %64, i32* %wc, align 4
  %65 = load i32*, i32** %wparam.addr, align 4
  %66 = load i32, i32* %n, align 4
  %arrayidx53 = getelementptr inbounds i32, i32* %65, i32 %66
  store i32 0, i32* %arrayidx53, align 4
  %67 = load i32*, i32** %wparam.addr, align 4
  %call54 = call i32* @wcsdup(i32* %67)
  store i32* %call54, i32** %ret, align 4
  %68 = load i32, i32* %wc, align 4
  %69 = load i32*, i32** %wparam.addr, align 4
  %70 = load i32, i32* %n, align 4
  %arrayidx55 = getelementptr inbounds i32, i32* %69, i32 %70
  store i32 %68, i32* %arrayidx55, align 4
  %71 = load i32*, i32** %ret, align 4
  store i32* %71, i32** %retval, align 4
  br label %return

if.end56:                                         ; preds = %for.body45
  br label %for.inc57

for.inc57:                                        ; preds = %if.end56
  %72 = load i32, i32* %n, align 4
  %dec58 = add nsw i32 %72, -1
  store i32 %dec58, i32* %n, align 4
  br label %for.cond43

for.end59:                                        ; preds = %for.cond43
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %for.end59, %for.end41, %for.end23, %for.end
  %73 = load i32*, i32** %wparam.addr, align 4
  store i32* %73, i32** %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then51, %if.then33, %if.then16, %if.then
  %74 = load i32*, i32** %retval, align 4
  ret i32* %74
}

declare i32 @wcsrtombs(i8*, i32**, i32, %struct.__mbstate_t*) #1

declare i32* @wcsdup(i32*) #1

; Function Attrs: noinline nounwind
define internal i8* @list_remove_pattern(%struct.word_list* %list, i8* %pattern, i32 %patspec, i32 %itype, i32 %quoted) #0 {
entry:
  %list.addr = alloca %struct.word_list*, align 4
  %pattern.addr = alloca i8*, align 4
  %patspec.addr = alloca i32, align 4
  %itype.addr = alloca i32, align 4
  %quoted.addr = alloca i32, align 4
  %new = alloca %struct.word_list*, align 4
  %l = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_desc*, align 4
  %tword = alloca i8*, align 4
  store %struct.word_list* %list, %struct.word_list** %list.addr, align 4
  store i8* %pattern, i8** %pattern.addr, align 4
  store i32 %patspec, i32* %patspec.addr, align 4
  store i32 %itype, i32* %itype.addr, align 4
  store i32 %quoted, i32* %quoted.addr, align 4
  store %struct.word_list* null, %struct.word_list** %new, align 4
  %0 = load %struct.word_list*, %struct.word_list** %list.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %l, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word1, align 4
  %5 = load i8*, i8** %pattern.addr, align 4
  %6 = load i32, i32* %patspec.addr, align 4
  %call = call i8* @remove_pattern(i8* %4, i8* %5, i32 %6)
  store i8* %call, i8** %tword, align 4
  %call2 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call2, %struct.word_desc** %w, align 4
  %7 = load i8*, i8** %tword, align 4
  %tobool3 = icmp ne i8* %7, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %8 = load i8*, i8** %tword, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %call4 = call i8* @sh_xmalloc(i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 4896)
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i32 0, i32 0))
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %call5, %cond.false ]
  %9 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %9, i32 0, i32 0
  store i8* %cond, i8** %word6, align 4
  %10 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %11 = load %struct.word_list*, %struct.word_list** %new, align 4
  %call7 = call %struct.word_list* @make_word_list(%struct.word_desc* %10, %struct.word_list* %11)
  store %struct.word_list* %call7, %struct.word_list** %new, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %12 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %12, i32 0, i32 0
  %13 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %13, %struct.word_list** %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = load %struct.word_list*, %struct.word_list** %new, align 4
  %tobool8 = icmp ne %struct.word_list* %14, null
  br i1 %tobool8, label %land.lhs.true, label %cond.false13

land.lhs.true:                                    ; preds = %for.end
  %15 = load %struct.word_list*, %struct.word_list** %new, align 4
  %next9 = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 0
  %16 = load %struct.word_list*, %struct.word_list** %next9, align 4
  %tobool10 = icmp ne %struct.word_list* %16, null
  br i1 %tobool10, label %cond.true11, label %cond.false13

cond.true11:                                      ; preds = %land.lhs.true
  %17 = load %struct.word_list*, %struct.word_list** %new, align 4
  %18 = bitcast %struct.word_list* %17 to %struct.g_list*
  %call12 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %18)
  %19 = bitcast %struct.g_list* %call12 to %struct.word_list*
  br label %cond.end14

cond.false13:                                     ; preds = %land.lhs.true, %for.end
  %20 = load %struct.word_list*, %struct.word_list** %new, align 4
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi %struct.word_list* [ %19, %cond.true11 ], [ %20, %cond.false13 ]
  store %struct.word_list* %cond15, %struct.word_list** %l, align 4
  %21 = load i32, i32* %itype.addr, align 4
  %22 = load %struct.word_list*, %struct.word_list** %l, align 4
  %23 = load i32, i32* %quoted.addr, align 4
  %call16 = call i8* @string_list_pos_params(i32 %21, %struct.word_list* %22, i32 %23)
  store i8* %call16, i8** %tword, align 4
  %24 = load %struct.word_list*, %struct.word_list** %l, align 4
  call void @dispose_words(%struct.word_list* %24)
  %25 = load i8*, i8** %tword, align 4
  ret i8* %25
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @separate_out_assignments(%struct.word_list* %tlist) #0 {
entry:
  %retval = alloca %struct.word_list*, align 4
  %tlist.addr = alloca %struct.word_list*, align 4
  %vp = alloca %struct.word_list*, align 4
  %lp = alloca %struct.word_list*, align 4
  %tp = alloca %struct.word_list*, align 4
  store %struct.word_list* %tlist, %struct.word_list** %tlist.addr, align 4
  %0 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %cmp = icmp eq %struct.word_list* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  %2 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  call void @dispose_words(%struct.word_list* %2)
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  store %struct.word_list* null, %struct.word_list** @subst_assign_varlist, align 4
  %3 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %3, %struct.word_list** %lp, align 4
  store %struct.word_list* %3, %struct.word_list** %vp, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end2
  %4 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %tobool3 = icmp ne %struct.word_list* %4, null
  br i1 %tobool3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %5 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %5, i32 0, i32 1
  %6 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %6, i32 0, i32 1
  %7 = load i32, i32* %flags, align 4
  %and = and i32 %7, 4
  %tobool4 = icmp ne i32 %and, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %8 = phi i1 [ false, %while.cond ], [ %tobool4, %land.rhs ]
  br i1 %8, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %9 = load %struct.word_list*, %struct.word_list** %lp, align 4
  store %struct.word_list* %9, %struct.word_list** %vp, align 4
  %10 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %next = getelementptr inbounds %struct.word_list, %struct.word_list* %10, i32 0, i32 0
  %11 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %11, %struct.word_list** %lp, align 4
  br label %while.cond

while.end:                                        ; preds = %land.end
  %12 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %13 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %cmp5 = icmp ne %struct.word_list* %12, %13
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %while.end
  %14 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %14, %struct.word_list** @subst_assign_varlist, align 4
  %15 = load %struct.word_list*, %struct.word_list** %vp, align 4
  %next7 = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 0
  store %struct.word_list* null, %struct.word_list** %next7, align 4
  %16 = load %struct.word_list*, %struct.word_list** %lp, align 4
  store %struct.word_list* %16, %struct.word_list** %tlist.addr, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %while.end
  %17 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %tobool9 = icmp ne %struct.word_list* %17, null
  br i1 %tobool9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end8
  store %struct.word_list* null, %struct.word_list** %retval, align 4
  br label %return

if.end11:                                         ; preds = %if.end8
  %18 = load i32, i32* @place_keywords_in_env, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end35

if.then13:                                        ; preds = %if.end11
  %19 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %19, %struct.word_list** %tp, align 4
  %20 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next14 = getelementptr inbounds %struct.word_list, %struct.word_list* %20, i32 0, i32 0
  %21 = load %struct.word_list*, %struct.word_list** %next14, align 4
  store %struct.word_list* %21, %struct.word_list** %lp, align 4
  br label %while.cond15

while.cond15:                                     ; preds = %if.end33, %if.then13
  %22 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %tobool16 = icmp ne %struct.word_list* %22, null
  br i1 %tobool16, label %while.body17, label %while.end34

while.body17:                                     ; preds = %while.cond15
  %23 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %word18 = getelementptr inbounds %struct.word_list, %struct.word_list* %23, i32 0, i32 1
  %24 = load %struct.word_desc*, %struct.word_desc** %word18, align 4
  %flags19 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %24, i32 0, i32 1
  %25 = load i32, i32* %flags19, align 4
  %and20 = and i32 %25, 4
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %if.else31

if.then22:                                        ; preds = %while.body17
  %26 = load %struct.word_list*, %struct.word_list** @subst_assign_varlist, align 4
  %tobool23 = icmp ne %struct.word_list* %26, null
  br i1 %tobool23, label %if.else, label %if.then24

if.then24:                                        ; preds = %if.then22
  %27 = load %struct.word_list*, %struct.word_list** %lp, align 4
  store %struct.word_list* %27, %struct.word_list** %vp, align 4
  store %struct.word_list* %27, %struct.word_list** @subst_assign_varlist, align 4
  br label %if.end26

if.else:                                          ; preds = %if.then22
  %28 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %29 = load %struct.word_list*, %struct.word_list** %vp, align 4
  %next25 = getelementptr inbounds %struct.word_list, %struct.word_list* %29, i32 0, i32 0
  store %struct.word_list* %28, %struct.word_list** %next25, align 4
  %30 = load %struct.word_list*, %struct.word_list** %lp, align 4
  store %struct.word_list* %30, %struct.word_list** %vp, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then24
  %31 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %next27 = getelementptr inbounds %struct.word_list, %struct.word_list* %31, i32 0, i32 0
  %32 = load %struct.word_list*, %struct.word_list** %next27, align 4
  %33 = load %struct.word_list*, %struct.word_list** %tp, align 4
  %next28 = getelementptr inbounds %struct.word_list, %struct.word_list* %33, i32 0, i32 0
  store %struct.word_list* %32, %struct.word_list** %next28, align 4
  %34 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %next29 = getelementptr inbounds %struct.word_list, %struct.word_list* %34, i32 0, i32 0
  store %struct.word_list* null, %struct.word_list** %next29, align 4
  %35 = load %struct.word_list*, %struct.word_list** %tp, align 4
  %next30 = getelementptr inbounds %struct.word_list, %struct.word_list* %35, i32 0, i32 0
  %36 = load %struct.word_list*, %struct.word_list** %next30, align 4
  store %struct.word_list* %36, %struct.word_list** %lp, align 4
  br label %if.end33

if.else31:                                        ; preds = %while.body17
  %37 = load %struct.word_list*, %struct.word_list** %lp, align 4
  store %struct.word_list* %37, %struct.word_list** %tp, align 4
  %38 = load %struct.word_list*, %struct.word_list** %lp, align 4
  %next32 = getelementptr inbounds %struct.word_list, %struct.word_list* %38, i32 0, i32 0
  %39 = load %struct.word_list*, %struct.word_list** %next32, align 4
  store %struct.word_list* %39, %struct.word_list** %lp, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.end26
  br label %while.cond15

while.end34:                                      ; preds = %while.cond15
  br label %if.end35

if.end35:                                         ; preds = %while.end34, %if.end11
  %40 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %40, %struct.word_list** %retval, align 4
  br label %return

return:                                           ; preds = %if.end35, %if.then10, %if.then
  %41 = load %struct.word_list*, %struct.word_list** %retval, align 4
  ret %struct.word_list* %41
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @brace_expand_word_list(%struct.word_list* %tlist, i32 %eflags) #0 {
entry:
  %tlist.addr = alloca %struct.word_list*, align 4
  %eflags.addr = alloca i32, align 4
  %expansions = alloca i8**, align 4
  %temp_string = alloca i8*, align 4
  %disposables = alloca %struct.word_list*, align 4
  %output_list = alloca %struct.word_list*, align 4
  %next = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_desc*, align 4
  %eindex = alloca i32, align 4
  store %struct.word_list* %tlist, %struct.word_list** %tlist.addr, align 4
  store i32 %eflags, i32* %eflags.addr, align 4
  store %struct.word_list* null, %struct.word_list** %output_list, align 4
  store %struct.word_list* null, %struct.word_list** %disposables, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc51, %entry
  %0 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %tobool = icmp ne %struct.word_list* %0, null
  br i1 %tobool, label %for.body, label %for.end52

for.body:                                         ; preds = %for.cond
  %1 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next1 = getelementptr inbounds %struct.word_list, %struct.word_list* %1, i32 0, i32 0
  %2 = load %struct.word_list*, %struct.word_list** %next1, align 4
  store %struct.word_list* %2, %struct.word_list** %next, align 4
  %3 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %3, i32 0, i32 1
  %4 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %4, i32 0, i32 1
  %5 = load i32, i32* %flags, align 4
  %and = and i32 %5, 67108864
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.then
  %6 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %7 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next3 = getelementptr inbounds %struct.word_list, %struct.word_list* %7, i32 0, i32 0
  store %struct.word_list* %6, %struct.word_list** %next3, align 4
  %8 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %8, %struct.word_list** %output_list, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %for.inc51

if.end:                                           ; preds = %for.body
  %9 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word4 = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 1
  %10 = load %struct.word_desc*, %struct.word_desc** %word4, align 4
  %flags5 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 1
  %11 = load i32, i32* %flags5, align 4
  %and6 = and i32 %11, 163840
  %cmp = icmp eq i32 %and6, 163840
  br i1 %cmp, label %if.then7, label %if.end11

if.then7:                                         ; preds = %if.end
  br label %do.body8

do.body8:                                         ; preds = %if.then7
  %12 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %13 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next9 = getelementptr inbounds %struct.word_list, %struct.word_list* %13, i32 0, i32 0
  store %struct.word_list* %12, %struct.word_list** %next9, align 4
  %14 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %14, %struct.word_list** %output_list, align 4
  br label %do.end10

do.end10:                                         ; preds = %do.body8
  br label %for.inc51

if.end11:                                         ; preds = %if.end
  %15 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word12 = getelementptr inbounds %struct.word_list, %struct.word_list* %15, i32 0, i32 1
  %16 = load %struct.word_desc*, %struct.word_desc** %word12, align 4
  %word13 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %16, i32 0, i32 0
  %17 = load i8*, i8** %word13, align 4
  %call = call i8* @mbschr(i8* %17, i32 123)
  %tobool14 = icmp ne i8* %call, null
  br i1 %tobool14, label %if.then15, label %if.else46

if.then15:                                        ; preds = %if.end11
  %18 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word16 = getelementptr inbounds %struct.word_list, %struct.word_list* %18, i32 0, i32 1
  %19 = load %struct.word_desc*, %struct.word_desc** %word16, align 4
  %word17 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %19, i32 0, i32 0
  %20 = load i8*, i8** %word17, align 4
  %call18 = call i8** @brace_expand(i8* %20)
  store i8** %call18, i8*** %expansions, align 4
  store i32 0, i32* %eindex, align 4
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc, %if.then15
  %21 = load i8**, i8*** %expansions, align 4
  %22 = load i32, i32* %eindex, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %21, i32 %22
  %23 = load i8*, i8** %arrayidx, align 4
  store i8* %23, i8** %temp_string, align 4
  %tobool20 = icmp ne i8* %23, null
  br i1 %tobool20, label %for.body21, label %for.end

for.body21:                                       ; preds = %for.cond19
  %call22 = call %struct.word_desc* @alloc_word_desc()
  store %struct.word_desc* %call22, %struct.word_desc** %w, align 4
  %24 = load i8*, i8** %temp_string, align 4
  %25 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word23 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %25, i32 0, i32 0
  store i8* %24, i8** %word23, align 4
  %26 = load i8*, i8** %temp_string, align 4
  %arrayidx24 = getelementptr inbounds i8, i8* %26, i32 0
  %27 = load i8, i8* %arrayidx24, align 1
  %conv = sext i8 %27 to i32
  %28 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word25 = getelementptr inbounds %struct.word_list, %struct.word_list* %28, i32 0, i32 1
  %29 = load %struct.word_desc*, %struct.word_desc** %word25, align 4
  %word26 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %29, i32 0, i32 0
  %30 = load i8*, i8** %word26, align 4
  %arrayidx27 = getelementptr inbounds i8, i8* %30, i32 0
  %31 = load i8, i8* %arrayidx27, align 1
  %conv28 = sext i8 %31 to i32
  %cmp29 = icmp eq i32 %conv, %conv28
  br i1 %cmp29, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body21
  %32 = load i8*, i8** %temp_string, align 4
  %33 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word31 = getelementptr inbounds %struct.word_list, %struct.word_list* %33, i32 0, i32 1
  %34 = load %struct.word_desc*, %struct.word_desc** %word31, align 4
  %word32 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %34, i32 0, i32 0
  %35 = load i8*, i8** %word32, align 4
  %call33 = call i32 @strcmp(i8* %32, i8* %35)
  %cmp34 = icmp eq i32 %call33, 0
  br i1 %cmp34, label %if.then36, label %if.else

if.then36:                                        ; preds = %land.lhs.true
  %36 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word37 = getelementptr inbounds %struct.word_list, %struct.word_list* %36, i32 0, i32 1
  %37 = load %struct.word_desc*, %struct.word_desc** %word37, align 4
  %flags38 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %37, i32 0, i32 1
  %38 = load i32, i32* %flags38, align 4
  %39 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %flags39 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %39, i32 0, i32 1
  store i32 %38, i32* %flags39, align 4
  br label %if.end41

if.else:                                          ; preds = %land.lhs.true, %for.body21
  %40 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %41 = load i8*, i8** %temp_string, align 4
  %call40 = call %struct.word_desc* @make_word_flags(%struct.word_desc* %40, i8* %41)
  store %struct.word_desc* %call40, %struct.word_desc** %w, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then36
  %42 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %43 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %call42 = call %struct.word_list* @make_word_list(%struct.word_desc* %42, %struct.word_list* %43)
  store %struct.word_list* %call42, %struct.word_list** %output_list, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end41
  %44 = load i32, i32* %eindex, align 4
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %eindex, align 4
  br label %for.cond19

for.end:                                          ; preds = %for.cond19
  %45 = load i8**, i8*** %expansions, align 4
  %46 = bitcast i8** %45 to i8*
  call void @sh_xfree(i8* %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 10410)
  br label %do.body43

do.body43:                                        ; preds = %for.end
  %47 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  %48 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next44 = getelementptr inbounds %struct.word_list, %struct.word_list* %48, i32 0, i32 0
  store %struct.word_list* %47, %struct.word_list** %next44, align 4
  %49 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %49, %struct.word_list** %disposables, align 4
  br label %do.end45

do.end45:                                         ; preds = %do.body43
  br label %if.end50

if.else46:                                        ; preds = %if.end11
  br label %do.body47

do.body47:                                        ; preds = %if.else46
  %50 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %51 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next48 = getelementptr inbounds %struct.word_list, %struct.word_list* %51, i32 0, i32 0
  store %struct.word_list* %50, %struct.word_list** %next48, align 4
  %52 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %52, %struct.word_list** %output_list, align 4
  br label %do.end49

do.end49:                                         ; preds = %do.body47
  br label %if.end50

if.end50:                                         ; preds = %do.end49, %do.end45
  br label %for.inc51

for.inc51:                                        ; preds = %if.end50, %do.end10, %do.end
  %53 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %53, %struct.word_list** %tlist.addr, align 4
  br label %for.cond

for.end52:                                        ; preds = %for.cond
  %54 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  %tobool53 = icmp ne %struct.word_list* %54, null
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %for.end52
  %55 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  call void @dispose_words(%struct.word_list* %55)
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %for.end52
  %56 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %tobool56 = icmp ne %struct.word_list* %56, null
  br i1 %tobool56, label %if.then57, label %if.end63

if.then57:                                        ; preds = %if.end55
  %57 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %tobool58 = icmp ne %struct.word_list* %57, null
  br i1 %tobool58, label %land.lhs.true59, label %cond.false

land.lhs.true59:                                  ; preds = %if.then57
  %58 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %next60 = getelementptr inbounds %struct.word_list, %struct.word_list* %58, i32 0, i32 0
  %59 = load %struct.word_list*, %struct.word_list** %next60, align 4
  %tobool61 = icmp ne %struct.word_list* %59, null
  br i1 %tobool61, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true59
  %60 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %61 = bitcast %struct.word_list* %60 to %struct.g_list*
  %call62 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %61)
  %62 = bitcast %struct.g_list* %call62 to %struct.word_list*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true59, %if.then57
  %63 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %62, %cond.true ], [ %63, %cond.false ]
  store %struct.word_list* %cond, %struct.word_list** %output_list, align 4
  br label %if.end63

if.end63:                                         ; preds = %cond.end, %if.end55
  %64 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  ret %struct.word_list* %64
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @shell_expand_word_list(%struct.word_list* %tlist, i32 %eflags) #0 {
entry:
  %tlist.addr = alloca %struct.word_list*, align 4
  %eflags.addr = alloca i32, align 4
  %expanded = alloca %struct.word_list*, align 4
  %orig_list = alloca %struct.word_list*, align 4
  %new_list = alloca %struct.word_list*, align 4
  %next = alloca %struct.word_list*, align 4
  %temp_list = alloca %struct.word_list*, align 4
  %wcmd = alloca %struct.word_list*, align 4
  %expanded_something = alloca i32, align 4
  %has_dollar_at = alloca i32, align 4
  %temp_string = alloca i8*, align 4
  %t = alloca i32, align 4
  %opts = alloca [16 x i8], align 1
  %opti = alloca i8, align 1
  %omap = alloca [128 x i8], align 1
  %oind = alloca i32, align 4
  %l = alloca %struct.word_list*, align 4
  store %struct.word_list* %tlist, %struct.word_list** %tlist.addr, align 4
  store i32 %eflags, i32* %eflags.addr, align 4
  store %struct.word_list* null, %struct.word_list** %new_list, align 4
  %0 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %0, %struct.word_list** %wcmd, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.word_list*, %struct.word_list** %wcmd, align 4
  %tobool = icmp ne %struct.word_list* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.word_list*, %struct.word_list** %wcmd, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %2, i32 0, i32 1
  %3 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 1
  %4 = load i32, i32* %flags, align 4
  %and = and i32 %4, 65536
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %5 = load %struct.word_list*, %struct.word_list** %wcmd, align 4
  %next2 = getelementptr inbounds %struct.word_list, %struct.word_list* %5, i32 0, i32 0
  %6 = load %struct.word_list*, %struct.word_list** %next2, align 4
  store %struct.word_list* %6, %struct.word_list** %wcmd, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %7, %struct.word_list** %orig_list, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc230, %for.end
  %8 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %tobool4 = icmp ne %struct.word_list* %8, null
  br i1 %tobool4, label %for.body5, label %for.end231

for.body5:                                        ; preds = %for.cond3
  %9 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word6 = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 1
  %10 = load %struct.word_desc*, %struct.word_desc** %word6, align 4
  %word7 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  %11 = load i8*, i8** %word7, align 4
  store i8* %11, i8** %temp_string, align 4
  %12 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next8 = getelementptr inbounds %struct.word_list, %struct.word_list* %12, i32 0, i32 0
  %13 = load %struct.word_list*, %struct.word_list** %next8, align 4
  store %struct.word_list* %13, %struct.word_list** %next, align 4
  %14 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word9 = getelementptr inbounds %struct.word_list, %struct.word_list* %14, i32 0, i32 1
  %15 = load %struct.word_desc*, %struct.word_desc** %word9, align 4
  %flags10 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %15, i32 0, i32 1
  %16 = load i32, i32* %flags10, align 4
  %and11 = and i32 %16, 163840
  %cmp = icmp eq i32 %and11, 163840
  br i1 %cmp, label %if.then12, label %if.end193

if.then12:                                        ; preds = %for.body5
  store i8 0, i8* %opti, align 1
  %17 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word13 = getelementptr inbounds %struct.word_list, %struct.word_list* %17, i32 0, i32 1
  %18 = load %struct.word_desc*, %struct.word_desc** %word13, align 4
  %flags14 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %18, i32 0, i32 1
  %19 = load i32, i32* %flags14, align 4
  %and15 = and i32 %19, 46137344
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.then12
  %20 = load i8, i8* %opti, align 1
  %inc = add i8 %20, 1
  store i8 %inc, i8* %opti, align 1
  %idxprom = sext i8 %20 to i32
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom
  store i8 45, i8* %arrayidx, align 1
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.then12
  %21 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word19 = getelementptr inbounds %struct.word_list, %struct.word_list* %21, i32 0, i32 1
  %22 = load %struct.word_desc*, %struct.word_desc** %word19, align 4
  %flags20 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %22, i32 0, i32 1
  %23 = load i32, i32* %flags20, align 4
  %and21 = and i32 %23, 37748736
  %cmp22 = icmp eq i32 %and21, 37748736
  br i1 %cmp22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end18
  %24 = load i8, i8* %opti, align 1
  %inc24 = add i8 %24, 1
  store i8 %inc24, i8* %opti, align 1
  %idxprom25 = sext i8 %24 to i32
  %arrayidx26 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom25
  store i8 103, i8* %arrayidx26, align 1
  %25 = load i8, i8* %opti, align 1
  %inc27 = add i8 %25, 1
  store i8 %inc27, i8* %opti, align 1
  %idxprom28 = sext i8 %25 to i32
  %arrayidx29 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom28
  store i8 65, i8* %arrayidx29, align 1
  br label %if.end72

if.else:                                          ; preds = %if.end18
  %26 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word30 = getelementptr inbounds %struct.word_list, %struct.word_list* %26, i32 0, i32 1
  %27 = load %struct.word_desc*, %struct.word_desc** %word30, align 4
  %flags31 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %27, i32 0, i32 1
  %28 = load i32, i32* %flags31, align 4
  %and32 = and i32 %28, 4194304
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %if.else38

if.then34:                                        ; preds = %if.else
  %29 = load i8, i8* %opti, align 1
  %inc35 = add i8 %29, 1
  store i8 %inc35, i8* %opti, align 1
  %idxprom36 = sext i8 %29 to i32
  %arrayidx37 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom36
  store i8 65, i8* %arrayidx37, align 1
  br label %if.end71

if.else38:                                        ; preds = %if.else
  %30 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word39 = getelementptr inbounds %struct.word_list, %struct.word_list* %30, i32 0, i32 1
  %31 = load %struct.word_desc*, %struct.word_desc** %word39, align 4
  %flags40 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %31, i32 0, i32 1
  %32 = load i32, i32* %flags40, align 4
  %and41 = and i32 %32, 41943040
  %cmp42 = icmp eq i32 %and41, 41943040
  br i1 %cmp42, label %if.then43, label %if.else50

if.then43:                                        ; preds = %if.else38
  %33 = load i8, i8* %opti, align 1
  %inc44 = add i8 %33, 1
  store i8 %inc44, i8* %opti, align 1
  %idxprom45 = sext i8 %33 to i32
  %arrayidx46 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom45
  store i8 103, i8* %arrayidx46, align 1
  %34 = load i8, i8* %opti, align 1
  %inc47 = add i8 %34, 1
  store i8 %inc47, i8* %opti, align 1
  %idxprom48 = sext i8 %34 to i32
  %arrayidx49 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom48
  store i8 97, i8* %arrayidx49, align 1
  br label %if.end70

if.else50:                                        ; preds = %if.else38
  %35 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word51 = getelementptr inbounds %struct.word_list, %struct.word_list* %35, i32 0, i32 1
  %36 = load %struct.word_desc*, %struct.word_desc** %word51, align 4
  %flags52 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %36, i32 0, i32 1
  %37 = load i32, i32* %flags52, align 4
  %and53 = and i32 %37, 8388608
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %if.then55, label %if.else59

if.then55:                                        ; preds = %if.else50
  %38 = load i8, i8* %opti, align 1
  %inc56 = add i8 %38, 1
  store i8 %inc56, i8* %opti, align 1
  %idxprom57 = sext i8 %38 to i32
  %arrayidx58 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom57
  store i8 97, i8* %arrayidx58, align 1
  br label %if.end69

if.else59:                                        ; preds = %if.else50
  %39 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word60 = getelementptr inbounds %struct.word_list, %struct.word_list* %39, i32 0, i32 1
  %40 = load %struct.word_desc*, %struct.word_desc** %word60, align 4
  %flags61 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %40, i32 0, i32 1
  %41 = load i32, i32* %flags61, align 4
  %and62 = and i32 %41, 33554432
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %if.end68

if.then64:                                        ; preds = %if.else59
  %42 = load i8, i8* %opti, align 1
  %inc65 = add i8 %42, 1
  store i8 %inc65, i8* %opti, align 1
  %idxprom66 = sext i8 %42 to i32
  %arrayidx67 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom66
  store i8 103, i8* %arrayidx67, align 1
  br label %if.end68

if.end68:                                         ; preds = %if.then64, %if.else59
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then55
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then43
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then34
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then23
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %omap, i32 0, i32 0
  call void @llvm.memset.p0i8.i32(i8* %arraydecay, i8 0, i32 128, i32 1, i1 false)
  %43 = load %struct.word_list*, %struct.word_list** %orig_list, align 4
  %next73 = getelementptr inbounds %struct.word_list, %struct.word_list* %43, i32 0, i32 0
  %44 = load %struct.word_list*, %struct.word_list** %next73, align 4
  store %struct.word_list* %44, %struct.word_list** %l, align 4
  br label %for.cond74

for.cond74:                                       ; preds = %for.inc131, %if.end72
  %45 = load %struct.word_list*, %struct.word_list** %l, align 4
  %46 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %cmp75 = icmp ne %struct.word_list* %45, %46
  br i1 %cmp75, label %for.body76, label %for.end133

for.body76:                                       ; preds = %for.cond74
  %47 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word77 = getelementptr inbounds %struct.word_list, %struct.word_list* %47, i32 0, i32 1
  %48 = load %struct.word_desc*, %struct.word_desc** %word77, align 4
  %word78 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %48, i32 0, i32 0
  %49 = load i8*, i8** %word78, align 4
  %arrayidx79 = getelementptr inbounds i8, i8* %49, i32 0
  %50 = load i8, i8* %arrayidx79, align 1
  %conv = sext i8 %50 to i32
  %cmp80 = icmp ne i32 %conv, 45
  br i1 %cmp80, label %if.then82, label %if.end83

if.then82:                                        ; preds = %for.body76
  br label %for.end133

if.end83:                                         ; preds = %for.body76
  %51 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word84 = getelementptr inbounds %struct.word_list, %struct.word_list* %51, i32 0, i32 1
  %52 = load %struct.word_desc*, %struct.word_desc** %word84, align 4
  %word85 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %52, i32 0, i32 0
  %53 = load i8*, i8** %word85, align 4
  %arrayidx86 = getelementptr inbounds i8, i8* %53, i32 0
  %54 = load i8, i8* %arrayidx86, align 1
  %conv87 = sext i8 %54 to i32
  %cmp88 = icmp eq i32 %conv87, 45
  br i1 %cmp88, label %land.lhs.true, label %if.end104

land.lhs.true:                                    ; preds = %if.end83
  %55 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word90 = getelementptr inbounds %struct.word_list, %struct.word_list* %55, i32 0, i32 1
  %56 = load %struct.word_desc*, %struct.word_desc** %word90, align 4
  %word91 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %56, i32 0, i32 0
  %57 = load i8*, i8** %word91, align 4
  %arrayidx92 = getelementptr inbounds i8, i8* %57, i32 1
  %58 = load i8, i8* %arrayidx92, align 1
  %conv93 = sext i8 %58 to i32
  %cmp94 = icmp eq i32 %conv93, 45
  br i1 %cmp94, label %land.lhs.true96, label %if.end104

land.lhs.true96:                                  ; preds = %land.lhs.true
  %59 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word97 = getelementptr inbounds %struct.word_list, %struct.word_list* %59, i32 0, i32 1
  %60 = load %struct.word_desc*, %struct.word_desc** %word97, align 4
  %word98 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %60, i32 0, i32 0
  %61 = load i8*, i8** %word98, align 4
  %arrayidx99 = getelementptr inbounds i8, i8* %61, i32 2
  %62 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %62 to i32
  %cmp101 = icmp eq i32 %conv100, 0
  br i1 %cmp101, label %if.then103, label %if.end104

if.then103:                                       ; preds = %land.lhs.true96
  br label %for.end133

if.end104:                                        ; preds = %land.lhs.true96, %land.lhs.true, %if.end83
  store i32 1, i32* %oind, align 4
  br label %for.cond105

for.cond105:                                      ; preds = %for.inc128, %if.end104
  %63 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word106 = getelementptr inbounds %struct.word_list, %struct.word_list* %63, i32 0, i32 1
  %64 = load %struct.word_desc*, %struct.word_desc** %word106, align 4
  %word107 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %64, i32 0, i32 0
  %65 = load i8*, i8** %word107, align 4
  %66 = load i32, i32* %oind, align 4
  %arrayidx108 = getelementptr inbounds i8, i8* %65, i32 %66
  %67 = load i8, i8* %arrayidx108, align 1
  %tobool109 = icmp ne i8 %67, 0
  br i1 %tobool109, label %for.body110, label %for.end130

for.body110:                                      ; preds = %for.cond105
  %68 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word111 = getelementptr inbounds %struct.word_list, %struct.word_list* %68, i32 0, i32 1
  %69 = load %struct.word_desc*, %struct.word_desc** %word111, align 4
  %word112 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %69, i32 0, i32 0
  %70 = load i8*, i8** %word112, align 4
  %71 = load i32, i32* %oind, align 4
  %arrayidx113 = getelementptr inbounds i8, i8* %70, i32 %71
  %72 = load i8, i8* %arrayidx113, align 1
  %conv114 = sext i8 %72 to i32
  switch i32 %conv114, label %sw.default [
    i32 105, label %sw.bb
    i32 108, label %sw.bb
    i32 117, label %sw.bb
    i32 99, label %sw.bb
  ]

sw.bb:                                            ; preds = %for.body110, %for.body110, %for.body110, %for.body110
  %73 = load %struct.word_list*, %struct.word_list** %l, align 4
  %word115 = getelementptr inbounds %struct.word_list, %struct.word_list* %73, i32 0, i32 1
  %74 = load %struct.word_desc*, %struct.word_desc** %word115, align 4
  %word116 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %74, i32 0, i32 0
  %75 = load i8*, i8** %word116, align 4
  %76 = load i32, i32* %oind, align 4
  %arrayidx117 = getelementptr inbounds i8, i8* %75, i32 %76
  %77 = load i8, i8* %arrayidx117, align 1
  %idxprom118 = sext i8 %77 to i32
  %arrayidx119 = getelementptr inbounds [128 x i8], [128 x i8]* %omap, i32 0, i32 %idxprom118
  store i8 1, i8* %arrayidx119, align 1
  %78 = load i8, i8* %opti, align 1
  %conv120 = sext i8 %78 to i32
  %cmp121 = icmp eq i32 %conv120, 0
  br i1 %cmp121, label %if.then123, label %if.end127

if.then123:                                       ; preds = %sw.bb
  %79 = load i8, i8* %opti, align 1
  %inc124 = add i8 %79, 1
  store i8 %inc124, i8* %opti, align 1
  %idxprom125 = sext i8 %79 to i32
  %arrayidx126 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom125
  store i8 45, i8* %arrayidx126, align 1
  br label %if.end127

if.end127:                                        ; preds = %if.then123, %sw.bb
  br label %sw.epilog

sw.default:                                       ; preds = %for.body110
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end127
  br label %for.inc128

for.inc128:                                       ; preds = %sw.epilog
  %80 = load i32, i32* %oind, align 4
  %inc129 = add nsw i32 %80, 1
  store i32 %inc129, i32* %oind, align 4
  br label %for.cond105

for.end130:                                       ; preds = %for.cond105
  br label %for.inc131

for.inc131:                                       ; preds = %for.end130
  %81 = load %struct.word_list*, %struct.word_list** %l, align 4
  %next132 = getelementptr inbounds %struct.word_list, %struct.word_list* %81, i32 0, i32 0
  %82 = load %struct.word_list*, %struct.word_list** %next132, align 4
  store %struct.word_list* %82, %struct.word_list** %l, align 4
  br label %for.cond74

for.end133:                                       ; preds = %if.then103, %if.then82, %for.cond74
  store i32 0, i32* %oind, align 4
  br label %for.cond134

for.cond134:                                      ; preds = %for.inc146, %for.end133
  %83 = load i32, i32* %oind, align 4
  %cmp135 = icmp ult i32 %83, 128
  br i1 %cmp135, label %for.body137, label %for.end148

for.body137:                                      ; preds = %for.cond134
  %84 = load i32, i32* %oind, align 4
  %arrayidx138 = getelementptr inbounds [128 x i8], [128 x i8]* %omap, i32 0, i32 %84
  %85 = load i8, i8* %arrayidx138, align 1
  %tobool139 = icmp ne i8 %85, 0
  br i1 %tobool139, label %if.then140, label %if.end145

if.then140:                                       ; preds = %for.body137
  %86 = load i32, i32* %oind, align 4
  %conv141 = trunc i32 %86 to i8
  %87 = load i8, i8* %opti, align 1
  %inc142 = add i8 %87, 1
  store i8 %inc142, i8* %opti, align 1
  %idxprom143 = sext i8 %87 to i32
  %arrayidx144 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom143
  store i8 %conv141, i8* %arrayidx144, align 1
  br label %if.end145

if.end145:                                        ; preds = %if.then140, %for.body137
  br label %for.inc146

for.inc146:                                       ; preds = %if.end145
  %88 = load i32, i32* %oind, align 4
  %inc147 = add nsw i32 %88, 1
  store i32 %inc147, i32* %oind, align 4
  br label %for.cond134

for.end148:                                       ; preds = %for.cond134
  %89 = load i8, i8* %opti, align 1
  %idxprom149 = sext i8 %89 to i32
  %arrayidx150 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 %idxprom149
  store i8 0, i8* %arrayidx150, align 1
  %90 = load i8, i8* %opti, align 1
  %conv151 = sext i8 %90 to i32
  %cmp152 = icmp sgt i32 %conv151, 0
  br i1 %cmp152, label %if.then154, label %if.end165

if.then154:                                       ; preds = %for.end148
  %91 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word155 = getelementptr inbounds %struct.word_list, %struct.word_list* %91, i32 0, i32 1
  %92 = load %struct.word_desc*, %struct.word_desc** %word155, align 4
  %word156 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %92, i32 0, i32 0
  %93 = load i8*, i8** %word156, align 4
  %arraydecay157 = getelementptr inbounds [16 x i8], [16 x i8]* %opts, i32 0, i32 0
  %94 = load %struct.word_list*, %struct.word_list** %wcmd, align 4
  %tobool158 = icmp ne %struct.word_list* %94, null
  br i1 %tobool158, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then154
  %95 = load %struct.word_list*, %struct.word_list** %wcmd, align 4
  %word159 = getelementptr inbounds %struct.word_list, %struct.word_list* %95, i32 0, i32 1
  %96 = load %struct.word_desc*, %struct.word_desc** %word159, align 4
  %word160 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %96, i32 0, i32 0
  %97 = load i8*, i8** %word160, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then154
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %97, %cond.true ], [ null, %cond.false ]
  %call = call i32 @make_internal_declare(i8* %93, i8* %arraydecay157, i8* %cond)
  store i32 %call, i32* %t, align 4
  %98 = load i32, i32* %t, align 4
  %cmp161 = icmp ne i32 %98, 0
  br i1 %cmp161, label %if.then163, label %if.end164

if.then163:                                       ; preds = %cond.end
  %99 = load i32, i32* %t, align 4
  store i32 %99, i32* @last_command_exit_value, align 4
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end164

if.end164:                                        ; preds = %if.then163, %cond.end
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %for.end148
  %100 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word166 = getelementptr inbounds %struct.word_list, %struct.word_list* %100, i32 0, i32 1
  %101 = load %struct.word_desc*, %struct.word_desc** %word166, align 4
  %call167 = call i32 @do_word_assignment(%struct.word_desc* %101, i32 0)
  store i32 %call167, i32* %t, align 4
  %102 = load i32, i32* %t, align 4
  %cmp168 = icmp eq i32 %102, 0
  br i1 %cmp168, label %if.then170, label %if.end171

if.then170:                                       ; preds = %if.end165
  store i32 1, i32* @last_command_exit_value, align 4
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end171

if.end171:                                        ; preds = %if.then170, %if.end165
  %103 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word172 = getelementptr inbounds %struct.word_list, %struct.word_list* %103, i32 0, i32 1
  %104 = load %struct.word_desc*, %struct.word_desc** %word172, align 4
  %word173 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %104, i32 0, i32 0
  %105 = load i8*, i8** %word173, align 4
  %call174 = call i32 @assignment(i8* %105, i32 0)
  store i32 %call174, i32* %t, align 4
  %106 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word175 = getelementptr inbounds %struct.word_list, %struct.word_list* %106, i32 0, i32 1
  %107 = load %struct.word_desc*, %struct.word_desc** %word175, align 4
  %word176 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %107, i32 0, i32 0
  %108 = load i8*, i8** %word176, align 4
  %109 = load i32, i32* %t, align 4
  %arrayidx177 = getelementptr inbounds i8, i8* %108, i32 %109
  store i8 0, i8* %arrayidx177, align 1
  %110 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word178 = getelementptr inbounds %struct.word_list, %struct.word_list* %110, i32 0, i32 1
  %111 = load %struct.word_desc*, %struct.word_desc** %word178, align 4
  %word179 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %111, i32 0, i32 0
  %112 = load i8*, i8** %word179, align 4
  %113 = load i32, i32* %t, align 4
  %sub = sub nsw i32 %113, 1
  %arrayidx180 = getelementptr inbounds i8, i8* %112, i32 %sub
  %114 = load i8, i8* %arrayidx180, align 1
  %conv181 = sext i8 %114 to i32
  %cmp182 = icmp eq i32 %conv181, 43
  br i1 %cmp182, label %if.then184, label %if.end189

if.then184:                                       ; preds = %if.end171
  %115 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word185 = getelementptr inbounds %struct.word_list, %struct.word_list* %115, i32 0, i32 1
  %116 = load %struct.word_desc*, %struct.word_desc** %word185, align 4
  %word186 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %116, i32 0, i32 0
  %117 = load i8*, i8** %word186, align 4
  %118 = load i32, i32* %t, align 4
  %sub187 = sub nsw i32 %118, 1
  %arrayidx188 = getelementptr inbounds i8, i8* %117, i32 %sub187
  store i8 0, i8* %arrayidx188, align 1
  br label %if.end189

if.end189:                                        ; preds = %if.then184, %if.end171
  %119 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word190 = getelementptr inbounds %struct.word_list, %struct.word_list* %119, i32 0, i32 1
  %120 = load %struct.word_desc*, %struct.word_desc** %word190, align 4
  %flags191 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %120, i32 0, i32 1
  %121 = load i32, i32* %flags191, align 4
  %and192 = and i32 %121, -12746773
  store i32 %and192, i32* %flags191, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.end189, %for.body5
  store i32 0, i32* %expanded_something, align 4
  %122 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word194 = getelementptr inbounds %struct.word_list, %struct.word_list* %122, i32 0, i32 1
  %123 = load %struct.word_desc*, %struct.word_desc** %word194, align 4
  %call195 = call %struct.word_list* @expand_word_internal(%struct.word_desc* %123, i32 0, i32 0, i32* %has_dollar_at, i32* %expanded_something)
  store %struct.word_list* %call195, %struct.word_list** %expanded, align 4
  %124 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  %cmp196 = icmp eq %struct.word_list* %124, @expand_word_error
  br i1 %cmp196, label %if.then200, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end193
  %125 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  %cmp198 = icmp eq %struct.word_list* %125, @expand_word_fatal
  br i1 %cmp198, label %if.then200, label %if.end208

if.then200:                                       ; preds = %lor.lhs.false, %if.end193
  %126 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word201 = getelementptr inbounds %struct.word_list, %struct.word_list* %126, i32 0, i32 1
  %127 = load %struct.word_desc*, %struct.word_desc** %word201, align 4
  %word202 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %127, i32 0, i32 0
  store i8* null, i8** %word202, align 4
  %128 = load %struct.word_list*, %struct.word_list** %orig_list, align 4
  call void @dispose_words(%struct.word_list* %128)
  %129 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  call void @dispose_words(%struct.word_list* %129)
  store i32 1, i32* @last_command_exit_value, align 4
  %130 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  %cmp203 = icmp eq %struct.word_list* %130, @expand_word_error
  br i1 %cmp203, label %if.then205, label %if.else206

if.then205:                                       ; preds = %if.then200
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end207

if.else206:                                       ; preds = %if.then200
  call void @exp_jump_to_top_level(i32 1)
  br label %if.end207

if.end207:                                        ; preds = %if.else206, %if.then205
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %lor.lhs.false
  %131 = load i32, i32* %expanded_something, align 4
  %tobool209 = icmp ne i32 %131, 0
  br i1 %tobool209, label %land.lhs.true210, label %if.else218

land.lhs.true210:                                 ; preds = %if.end208
  %132 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word211 = getelementptr inbounds %struct.word_list, %struct.word_list* %132, i32 0, i32 1
  %133 = load %struct.word_desc*, %struct.word_desc** %word211, align 4
  %flags212 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %133, i32 0, i32 1
  %134 = load i32, i32* %flags212, align 4
  %and213 = and i32 %134, 16
  %cmp214 = icmp eq i32 %and213, 0
  br i1 %cmp214, label %if.then216, label %if.else218

if.then216:                                       ; preds = %land.lhs.true210
  %135 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  %call217 = call %struct.word_list* @word_list_split(%struct.word_list* %135)
  store %struct.word_list* %call217, %struct.word_list** %temp_list, align 4
  %136 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  call void @dispose_words(%struct.word_list* %136)
  br label %if.end219

if.else218:                                       ; preds = %land.lhs.true210, %if.end208
  %137 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  call void @word_list_remove_quoted_nulls(%struct.word_list* %137)
  %138 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  store %struct.word_list* %138, %struct.word_list** %temp_list, align 4
  br label %if.end219

if.end219:                                        ; preds = %if.else218, %if.then216
  %139 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %tobool220 = icmp ne %struct.word_list* %139, null
  br i1 %tobool220, label %land.lhs.true221, label %cond.false226

land.lhs.true221:                                 ; preds = %if.end219
  %140 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %next222 = getelementptr inbounds %struct.word_list, %struct.word_list* %140, i32 0, i32 0
  %141 = load %struct.word_list*, %struct.word_list** %next222, align 4
  %tobool223 = icmp ne %struct.word_list* %141, null
  br i1 %tobool223, label %cond.true224, label %cond.false226

cond.true224:                                     ; preds = %land.lhs.true221
  %142 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  %143 = bitcast %struct.word_list* %142 to %struct.g_list*
  %call225 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %143)
  %144 = bitcast %struct.g_list* %call225 to %struct.word_list*
  br label %cond.end227

cond.false226:                                    ; preds = %land.lhs.true221, %if.end219
  %145 = load %struct.word_list*, %struct.word_list** %temp_list, align 4
  br label %cond.end227

cond.end227:                                      ; preds = %cond.false226, %cond.true224
  %cond228 = phi %struct.word_list* [ %144, %cond.true224 ], [ %145, %cond.false226 ]
  store %struct.word_list* %cond228, %struct.word_list** %expanded, align 4
  %146 = load %struct.word_list*, %struct.word_list** %expanded, align 4
  %147 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %call229 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_append to %struct.g_list* (%struct.word_list*, %struct.word_list*)*)(%struct.word_list* %146, %struct.word_list* %147)
  %148 = bitcast %struct.g_list* %call229 to %struct.word_list*
  store %struct.word_list* %148, %struct.word_list** %new_list, align 4
  br label %for.inc230

for.inc230:                                       ; preds = %cond.end227
  %149 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %149, %struct.word_list** %tlist.addr, align 4
  br label %for.cond3

for.end231:                                       ; preds = %for.cond3
  %150 = load %struct.word_list*, %struct.word_list** %orig_list, align 4
  %tobool232 = icmp ne %struct.word_list* %150, null
  br i1 %tobool232, label %if.then233, label %if.end234

if.then233:                                       ; preds = %for.end231
  %151 = load %struct.word_list*, %struct.word_list** %orig_list, align 4
  call void @dispose_words(%struct.word_list* %151)
  br label %if.end234

if.end234:                                        ; preds = %if.then233, %for.end231
  %152 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool235 = icmp ne %struct.word_list* %152, null
  br i1 %tobool235, label %if.then236, label %if.end246

if.then236:                                       ; preds = %if.end234
  %153 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %tobool237 = icmp ne %struct.word_list* %153, null
  br i1 %tobool237, label %land.lhs.true238, label %cond.false243

land.lhs.true238:                                 ; preds = %if.then236
  %154 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %next239 = getelementptr inbounds %struct.word_list, %struct.word_list* %154, i32 0, i32 0
  %155 = load %struct.word_list*, %struct.word_list** %next239, align 4
  %tobool240 = icmp ne %struct.word_list* %155, null
  br i1 %tobool240, label %cond.true241, label %cond.false243

cond.true241:                                     ; preds = %land.lhs.true238
  %156 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  %157 = bitcast %struct.word_list* %156 to %struct.g_list*
  %call242 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %157)
  %158 = bitcast %struct.g_list* %call242 to %struct.word_list*
  br label %cond.end244

cond.false243:                                    ; preds = %land.lhs.true238, %if.then236
  %159 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  br label %cond.end244

cond.end244:                                      ; preds = %cond.false243, %cond.true241
  %cond245 = phi %struct.word_list* [ %158, %cond.true241 ], [ %159, %cond.false243 ]
  store %struct.word_list* %cond245, %struct.word_list** %new_list, align 4
  br label %if.end246

if.end246:                                        ; preds = %cond.end244, %if.end234
  %160 = load %struct.word_list*, %struct.word_list** %new_list, align 4
  ret %struct.word_list* %160
}

; Function Attrs: noinline nounwind
define internal %struct.word_list* @glob_expand_word_list(%struct.word_list* %tlist, i32 %eflags) #0 {
entry:
  %tlist.addr = alloca %struct.word_list*, align 4
  %eflags.addr = alloca i32, align 4
  %glob_array = alloca i8**, align 4
  %temp_string = alloca i8*, align 4
  %glob_index = alloca i32, align 4
  %glob_list = alloca %struct.word_list*, align 4
  %output_list = alloca %struct.word_list*, align 4
  %disposables = alloca %struct.word_list*, align 4
  %next = alloca %struct.word_list*, align 4
  %tword = alloca %struct.word_desc*, align 4
  store %struct.word_list* %tlist, %struct.word_list** %tlist.addr, align 4
  store i32 %eflags, i32* %eflags.addr, align 4
  store %struct.word_list* null, %struct.word_list** %disposables, align 4
  store %struct.word_list* null, %struct.word_list** %output_list, align 4
  store i8** null, i8*** %glob_array, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end61, %entry
  %0 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %tobool = icmp ne %struct.word_list* %0, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next1 = getelementptr inbounds %struct.word_list, %struct.word_list* %1, i32 0, i32 0
  %2 = load %struct.word_list*, %struct.word_list** %next1, align 4
  store %struct.word_list* %2, %struct.word_list** %next, align 4
  %3 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word = getelementptr inbounds %struct.word_list, %struct.word_list* %3, i32 0, i32 1
  %4 = load %struct.word_desc*, %struct.word_desc** %word, align 4
  %flags = getelementptr inbounds %struct.word_desc, %struct.word_desc* %4, i32 0, i32 1
  %5 = load i32, i32* %flags, align 4
  %and = and i32 %5, 32
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %land.lhs.true, label %if.else50

land.lhs.true:                                    ; preds = %while.body
  %6 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word2 = getelementptr inbounds %struct.word_list, %struct.word_list* %6, i32 0, i32 1
  %7 = load %struct.word_desc*, %struct.word_desc** %word2, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 0
  %8 = load i8*, i8** %word3, align 4
  %call = call i32 @unquoted_glob_pattern_p(i8* %8)
  %tobool4 = icmp ne i32 %call, 0
  br i1 %tobool4, label %if.then, label %if.else50

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word5 = getelementptr inbounds %struct.word_list, %struct.word_list* %9, i32 0, i32 1
  %10 = load %struct.word_desc*, %struct.word_desc** %word5, align 4
  %word6 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  %11 = load i8*, i8** %word6, align 4
  %call7 = call i8** @shell_glob_filename(i8* %11)
  store i8** %call7, i8*** %glob_array, align 4
  %12 = load i8**, i8*** %glob_array, align 4
  %cmp8 = icmp eq i8** %12, null
  br i1 %cmp8, label %if.then10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8**, i8*** %glob_array, align 4
  %cmp9 = icmp eq i8** %13, @glob_error_return
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %lor.lhs.false, %if.then
  %call11 = call i8* @sh_xmalloc(i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 10288)
  %14 = bitcast i8* %call11 to i8**
  store i8** %14, i8*** %glob_array, align 4
  %15 = load i8**, i8*** %glob_array, align 4
  %arrayidx = getelementptr inbounds i8*, i8** %15, i32 0
  store i8* null, i8** %arrayidx, align 4
  br label %if.end

if.end:                                           ; preds = %if.then10, %lor.lhs.false
  %16 = load i8**, i8*** %glob_array, align 4
  %arrayidx12 = getelementptr inbounds i8*, i8** %16, i32 0
  %17 = load i8*, i8** %arrayidx12, align 4
  %cmp13 = icmp eq i8* %17, null
  br i1 %cmp13, label %if.then14, label %if.end22

if.then14:                                        ; preds = %if.end
  %18 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word15 = getelementptr inbounds %struct.word_list, %struct.word_list* %18, i32 0, i32 1
  %19 = load %struct.word_desc*, %struct.word_desc** %word15, align 4
  %word16 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %19, i32 0, i32 0
  %20 = load i8*, i8** %word16, align 4
  %call17 = call i8* @dequote_string(i8* %20)
  store i8* %call17, i8** %temp_string, align 4
  %21 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word18 = getelementptr inbounds %struct.word_list, %struct.word_list* %21, i32 0, i32 1
  %22 = load %struct.word_desc*, %struct.word_desc** %word18, align 4
  %word19 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %22, i32 0, i32 0
  %23 = load i8*, i8** %word19, align 4
  call void @sh_xfree(i8* %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 10296)
  %24 = load i8*, i8** %temp_string, align 4
  %25 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word20 = getelementptr inbounds %struct.word_list, %struct.word_list* %25, i32 0, i32 1
  %26 = load %struct.word_desc*, %struct.word_desc** %word20, align 4
  %word21 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %26, i32 0, i32 0
  store i8* %24, i8** %word21, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then14, %if.end
  store %struct.word_list* null, %struct.word_list** %glob_list, align 4
  store i32 0, i32* %glob_index, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end22
  %27 = load i8**, i8*** %glob_array, align 4
  %28 = load i32, i32* %glob_index, align 4
  %arrayidx23 = getelementptr inbounds i8*, i8** %27, i32 %28
  %29 = load i8*, i8** %arrayidx23, align 4
  %tobool24 = icmp ne i8* %29, null
  br i1 %tobool24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i8**, i8*** %glob_array, align 4
  %31 = load i32, i32* %glob_index, align 4
  %arrayidx25 = getelementptr inbounds i8*, i8** %30, i32 %31
  %32 = load i8*, i8** %arrayidx25, align 4
  %call26 = call %struct.word_desc* @make_bare_word(i8* %32)
  store %struct.word_desc* %call26, %struct.word_desc** %tword, align 4
  %33 = load %struct.word_desc*, %struct.word_desc** %tword, align 4
  %34 = load %struct.word_list*, %struct.word_list** %glob_list, align 4
  %call27 = call %struct.word_list* @make_word_list(%struct.word_desc* %33, %struct.word_list* %34)
  store %struct.word_list* %call27, %struct.word_list** %glob_list, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %glob_index, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %glob_index, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %36 = load %struct.word_list*, %struct.word_list** %glob_list, align 4
  %tobool28 = icmp ne %struct.word_list* %36, null
  br i1 %tobool28, label %if.then29, label %if.else

if.then29:                                        ; preds = %for.end
  %37 = load %struct.word_list*, %struct.word_list** %glob_list, align 4
  %38 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %call30 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_append to %struct.g_list* (%struct.word_list*, %struct.word_list*)*)(%struct.word_list* %37, %struct.word_list* %38)
  %39 = bitcast %struct.g_list* %call30 to %struct.word_list*
  store %struct.word_list* %39, %struct.word_list** %output_list, align 4
  br label %do.body

do.body:                                          ; preds = %if.then29
  %40 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  %41 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next31 = getelementptr inbounds %struct.word_list, %struct.word_list* %41, i32 0, i32 0
  store %struct.word_list* %40, %struct.word_list** %next31, align 4
  %42 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %42, %struct.word_list** %disposables, align 4
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end49

if.else:                                          ; preds = %for.end
  %43 = load i32, i32* @fail_glob_expansion, align 4
  %cmp32 = icmp ne i32 %43, 0
  br i1 %cmp32, label %if.then33, label %if.else37

if.then33:                                        ; preds = %if.else
  store i32 1, i32* @last_command_exit_value, align 4
  %call34 = call i8* @libintl_gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i32 0, i32 0))
  %44 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word35 = getelementptr inbounds %struct.word_list, %struct.word_list* %44, i32 0, i32 1
  %45 = load %struct.word_desc*, %struct.word_desc** %word35, align 4
  %word36 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %45, i32 0, i32 0
  %46 = load i8*, i8** %word36, align 4
  call void (i8*, ...) @report_error(i8* %call34, i8* %46)
  call void @exp_jump_to_top_level(i32 2)
  br label %if.end48

if.else37:                                        ; preds = %if.else
  %47 = load i32, i32* @allow_null_glob_expansion, align 4
  %cmp38 = icmp eq i32 %47, 0
  br i1 %cmp38, label %if.then39, label %if.else43

if.then39:                                        ; preds = %if.else37
  br label %do.body40

do.body40:                                        ; preds = %if.then39
  %48 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %49 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next41 = getelementptr inbounds %struct.word_list, %struct.word_list* %49, i32 0, i32 0
  store %struct.word_list* %48, %struct.word_list** %next41, align 4
  %50 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %50, %struct.word_list** %output_list, align 4
  br label %do.end42

do.end42:                                         ; preds = %do.body40
  br label %if.end47

if.else43:                                        ; preds = %if.else37
  br label %do.body44

do.body44:                                        ; preds = %if.else43
  %51 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  %52 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next45 = getelementptr inbounds %struct.word_list, %struct.word_list* %52, i32 0, i32 0
  store %struct.word_list* %51, %struct.word_list** %next45, align 4
  %53 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %53, %struct.word_list** %disposables, align 4
  br label %do.end46

do.end46:                                         ; preds = %do.body44
  br label %if.end47

if.end47:                                         ; preds = %do.end46, %do.end42
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then33
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %do.end
  br label %if.end61

if.else50:                                        ; preds = %land.lhs.true, %while.body
  %54 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word51 = getelementptr inbounds %struct.word_list, %struct.word_list* %54, i32 0, i32 1
  %55 = load %struct.word_desc*, %struct.word_desc** %word51, align 4
  %word52 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %55, i32 0, i32 0
  %56 = load i8*, i8** %word52, align 4
  %call53 = call i8* @dequote_string(i8* %56)
  store i8* %call53, i8** %temp_string, align 4
  %57 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word54 = getelementptr inbounds %struct.word_list, %struct.word_list* %57, i32 0, i32 1
  %58 = load %struct.word_desc*, %struct.word_desc** %word54, align 4
  %word55 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %58, i32 0, i32 0
  %59 = load i8*, i8** %word55, align 4
  call void @sh_xfree(i8* %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 10334)
  %60 = load i8*, i8** %temp_string, align 4
  %61 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %word56 = getelementptr inbounds %struct.word_list, %struct.word_list* %61, i32 0, i32 1
  %62 = load %struct.word_desc*, %struct.word_desc** %word56, align 4
  %word57 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %62, i32 0, i32 0
  store i8* %60, i8** %word57, align 4
  br label %do.body58

do.body58:                                        ; preds = %if.else50
  %63 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %64 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  %next59 = getelementptr inbounds %struct.word_list, %struct.word_list* %64, i32 0, i32 0
  store %struct.word_list* %63, %struct.word_list** %next59, align 4
  %65 = load %struct.word_list*, %struct.word_list** %tlist.addr, align 4
  store %struct.word_list* %65, %struct.word_list** %output_list, align 4
  br label %do.end60

do.end60:                                         ; preds = %do.body58
  br label %if.end61

if.end61:                                         ; preds = %do.end60, %if.end49
  %66 = load i8**, i8*** %glob_array, align 4
  call void @strvec_dispose(i8** %66)
  store i8** null, i8*** %glob_array, align 4
  %67 = load %struct.word_list*, %struct.word_list** %next, align 4
  store %struct.word_list* %67, %struct.word_list** %tlist.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %68 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  %tobool62 = icmp ne %struct.word_list* %68, null
  br i1 %tobool62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %while.end
  %69 = load %struct.word_list*, %struct.word_list** %disposables, align 4
  call void @dispose_words(%struct.word_list* %69)
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %while.end
  %70 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %tobool65 = icmp ne %struct.word_list* %70, null
  br i1 %tobool65, label %if.then66, label %if.end72

if.then66:                                        ; preds = %if.end64
  %71 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %tobool67 = icmp ne %struct.word_list* %71, null
  br i1 %tobool67, label %land.lhs.true68, label %cond.false

land.lhs.true68:                                  ; preds = %if.then66
  %72 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %next69 = getelementptr inbounds %struct.word_list, %struct.word_list* %72, i32 0, i32 0
  %73 = load %struct.word_list*, %struct.word_list** %next69, align 4
  %tobool70 = icmp ne %struct.word_list* %73, null
  br i1 %tobool70, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true68
  %74 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  %75 = bitcast %struct.word_list* %74 to %struct.g_list*
  %call71 = call %struct.g_list* bitcast (%struct.g_list* (...)* @list_reverse to %struct.g_list* (%struct.g_list*)*)(%struct.g_list* %75)
  %76 = bitcast %struct.g_list* %call71 to %struct.word_list*
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true68, %if.then66
  %77 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.word_list* [ %76, %cond.true ], [ %77, %cond.false ]
  store %struct.word_list* %cond, %struct.word_list** %output_list, align 4
  br label %if.end72

if.end72:                                         ; preds = %cond.end, %if.end64
  %78 = load %struct.word_list*, %struct.word_list** %output_list, align 4
  ret %struct.word_list* %78
}

declare i32 @assign_in_env(%struct.word_desc*, i32) #1

declare i32 (%struct.word_list*)* @find_shell_builtin(i8*) #1

declare %struct.variable* @find_function(i8*) #1

declare i32 (%struct.word_list*)* @find_special_builtin(i8*) #1

declare i8** @brace_expand(i8*) #1

declare %struct.word_desc* @make_word_flags(%struct.word_desc*, i8*) #1

; Function Attrs: noinline nounwind
define internal i32 @make_internal_declare(i8* %word, i8* %option, i8* %cmd) #0 {
entry:
  %word.addr = alloca i8*, align 4
  %option.addr = alloca i8*, align 4
  %cmd.addr = alloca i8*, align 4
  %t = alloca i32, align 4
  %r = alloca i32, align 4
  %wl = alloca %struct.word_list*, align 4
  %w = alloca %struct.word_desc*, align 4
  store i8* %word, i8** %word.addr, align 4
  store i8* %option, i8** %option.addr, align 4
  store i8* %cmd, i8** %cmd.addr, align 4
  %0 = load i8*, i8** %word.addr, align 4
  %call = call %struct.word_desc* @make_word(i8* %0)
  store %struct.word_desc* %call, %struct.word_desc** %w, align 4
  %1 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word1 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %1, i32 0, i32 0
  %2 = load i8*, i8** %word1, align 4
  %call2 = call i32 @assignment(i8* %2, i32 0)
  store i32 %call2, i32* %t, align 4
  %3 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word3 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %3, i32 0, i32 0
  %4 = load i8*, i8** %word3, align 4
  %5 = load i32, i32* %t, align 4
  %arrayidx = getelementptr inbounds i8, i8* %4, i32 %5
  %6 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv, 61
  br i1 %cmp, label %if.then, label %if.end16

if.then:                                          ; preds = %entry
  %7 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word5 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %7, i32 0, i32 0
  %8 = load i8*, i8** %word5, align 4
  %9 = load i32, i32* %t, align 4
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i32 %9
  store i8 0, i8* %arrayidx6, align 1
  %10 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word7 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %10, i32 0, i32 0
  %11 = load i8*, i8** %word7, align 4
  %12 = load i32, i32* %t, align 4
  %sub = sub nsw i32 %12, 1
  %arrayidx8 = getelementptr inbounds i8, i8* %11, i32 %sub
  %13 = load i8, i8* %arrayidx8, align 1
  %conv9 = sext i8 %13 to i32
  %cmp10 = icmp eq i32 %conv9, 43
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.then
  %14 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %word13 = getelementptr inbounds %struct.word_desc, %struct.word_desc* %14, i32 0, i32 0
  %15 = load i8*, i8** %word13, align 4
  %16 = load i32, i32* %t, align 4
  %sub14 = sub nsw i32 %16, 1
  %arrayidx15 = getelementptr inbounds i8, i8* %15, i32 %sub14
  store i8 0, i8* %arrayidx15, align 1
  br label %if.end

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end16

if.end16:                                         ; preds = %if.end, %entry
  %17 = load %struct.word_desc*, %struct.word_desc** %w, align 4
  %call17 = call %struct.word_list* @make_word_list(%struct.word_desc* %17, %struct.word_list* null)
  store %struct.word_list* %call17, %struct.word_list** %wl, align 4
  %18 = load i8*, i8** %option.addr, align 4
  %call18 = call %struct.word_desc* @make_word(i8* %18)
  %19 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %call19 = call %struct.word_list* @make_word_list(%struct.word_desc* %call18, %struct.word_list* %19)
  store %struct.word_list* %call19, %struct.word_list** %wl, align 4
  %20 = load %struct.word_list*, %struct.word_list** %wl, align 4
  %call20 = call i32 @declare_builtin(%struct.word_list* %20)
  store i32 %call20, i32* %r, align 4
  %21 = load %struct.word_list*, %struct.word_list** %wl, align 4
  call void @dispose_words(%struct.word_list* %21)
  %22 = load i32, i32* %r, align 4
  ret i32 %22
}

declare %struct.g_list* @list_append(...) #1

declare i32 @declare_builtin(%struct.word_list*) #1

declare i32 @unquoted_glob_pattern_p(i8*) #1

declare i8** @shell_glob_filename(i8*) #1

declare void @strvec_dispose(i8**) #1

attributes #0 = { noinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }
attributes #8 = { returns_twice }
attributes #9 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0  (emscripten 1.37.22 : 1.37.22)"}
